

====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196582 in range [0.000000, 0.393163]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098291 in range [0.000000, 0.196583]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048976 in range [0.000000, 0.097952]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024489 in range [0.000000, 0.048977]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012245 in range [0.000000, 0.024490]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006123 in range [0.000000, 0.012246]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003062 in range [0.000000, 0.006124]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001417 in range [0.000000, 0.002833]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000709 in range [0.000000, 0.001418]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000355 in range [0.000000, 0.000710]...	no solution exists.
	Iteration #012: testing norm threshold 0.000532 in range [0.000355, 0.000710]...	no solution exists.
	Iteration #013: testing norm threshold 0.000621 in range [0.000532, 0.000710]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.5865403831303624, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.7292431086214964, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.5865403831303624, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.7343260538411537, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000621


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119307 in range [0.000000, 0.238615]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059654 in range [0.000000, 0.119308]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027116 in range [0.000000, 0.054231]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013558 in range [0.000000, 0.027117]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006778 in range [0.000000, 0.013557]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003148 in range [0.000000, 0.006295]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001551 in range [0.000000, 0.003103]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000773 in range [0.000000, 0.001546]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000387 in range [0.000000, 0.000774]...	no solution exists.
	Iteration #011: testing norm threshold 0.000581 in range [0.000387, 0.000774]...	no solution exists.
	Iteration #012: testing norm threshold 0.000677 in range [0.000581, 0.000774]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4838913906593598, x5 : 0.1964503698476368, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5172666155976989, x10 : 1.1720800175658752, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4844726636408939, x5 : -0.08538426086306572, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5261071026325226, x10 : 1.171498744584341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000773


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158617 in range [0.000000, 0.317235]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079309 in range [0.000000, 0.158618]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034916 in range [0.000000, 0.069831]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017187 in range [0.000000, 0.034373]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008419 in range [0.000000, 0.016838]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004210 in range [0.000000, 0.008420]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002013 in range [0.000000, 0.004026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	no solution exists.
	Iteration #011: testing norm threshold 0.000206 in range [0.000137, 0.000274]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.2598533202269404, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6963117080055254, x5 : -0.3180096745491028, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.056613135002421905, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000273


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087200 in range [0.000000, 0.174400]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043440 in range [0.000000, 0.086880]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016706 in range [0.000000, 0.033412]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007731 in range [0.000000, 0.015462]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003320 in range [0.000000, 0.006640]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001661 in range [0.000000, 0.003321]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000831 in range [0.000000, 0.001662]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000416 in range [0.000000, 0.000832]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000208 in range [0.000000, 0.000417]...	no solution exists.
	Iteration #011: testing norm threshold 0.000313 in range [0.000208, 0.000417]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000261 in range [0.000208, 0.000314]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.3381127444234054, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3183554893925082, x10 : -0.04326862126725737, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.33712573674203855, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.29084700670721036, x10 : -0.04277511878389891, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000261


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091095 in range [0.000000, 0.182190]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044956 in range [0.000000, 0.089912]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022479 in range [0.000000, 0.044957]...	solution exists & found.
	Iteration #005: testing norm threshold 0.004568 in range [0.000000, 0.009136]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002284 in range [0.000000, 0.004569]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001143 in range [0.000000, 0.002285]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000572 in range [0.000000, 0.001144]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000286 in range [0.000000, 0.000573]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000144 in range [0.000000, 0.000287]...	no solution exists.
	Iteration #011: testing norm threshold 0.000216 in range [0.000144, 0.000287]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1908554862042005, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.06178577402185635, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.19348506083748981, x5 : -0.15303476971257224, x6 : 0, x7 : 0, x8 : 0, x9 : 0.06205928583226958, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000286


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148246 in range [0.000000, 0.296493]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073602 in range [0.000000, 0.147203]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036801 in range [0.000000, 0.073603]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018355 in range [0.000000, 0.036711]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008988 in range [0.000000, 0.017976]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002294 in range [0.000000, 0.004589]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000924 in range [0.000000, 0.001848]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000295 in range [0.000000, 0.000589]...	no solution exists.
	Iteration #010: testing norm threshold 0.000442 in range [0.000295, 0.000589]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000362 in range [0.000295, 0.000430]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : -0.2512146383523941, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000318


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118923 in range [0.000000, 0.237846]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058834 in range [0.000000, 0.117668]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029316 in range [0.000000, 0.058632]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014333 in range [0.000000, 0.028667]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007161 in range [0.000000, 0.014322]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002197 in range [0.000000, 0.004394]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000423 in range [0.000000, 0.000846]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000212 in range [0.000000, 0.000424]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000107 in range [0.000000, 0.000213]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.4030074190738666, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7107191673842796, x5 : -0.4031777997528652, x6 : 0, x7 : 1, x8 : 0, x9 : -0.6253922871676811, x10 : -0.3086059776916667, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127435 in range [0.000000, 0.254869]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063500 in range [0.000000, 0.127000]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031750 in range [0.000000, 0.063501]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014587 in range [0.000000, 0.029174]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007294 in range [0.000000, 0.014588]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001169 in range [0.000000, 0.002339]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000585 in range [0.000000, 0.001170]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000293 in range [0.000000, 0.000586]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000147 in range [0.000000, 0.000294]...	no solution exists.
	Iteration #011: testing norm threshold 0.000221 in range [0.000147, 0.000294]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.35263009297023656, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7666752149422515, x5 : -0.29967216747597347, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6892130192716236, x10 : -0.3530733320074772, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000293


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152956 in range [0.000000, 0.305913]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070792 in range [0.000000, 0.141585]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035390 in range [0.000000, 0.070781]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015947 in range [0.000000, 0.031895]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007973 in range [0.000000, 0.015947]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001834 in range [0.000000, 0.003667]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000894 in range [0.000000, 0.001788]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000448 in range [0.000000, 0.000895]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000224 in range [0.000000, 0.000449]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000185]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3839288903832768, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.2874137586494785, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.37904029874905154, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 6, x9 : -0.2860107387687476, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135935 in range [0.000000, 0.271870]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067968 in range [0.000000, 0.135936]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033864 in range [0.000000, 0.067728]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016876 in range [0.000000, 0.033751]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008438 in range [0.000000, 0.016877]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000479 in range [0.000000, 0.000959]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000084 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7598295403710067, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.690825094102925, x10 : -0.37409254045387424, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145150 in range [0.000000, 0.290300]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071741 in range [0.000000, 0.143482]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034511 in range [0.000000, 0.069023]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017256 in range [0.000000, 0.034512]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008629 in range [0.000000, 0.017257]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004315 in range [0.000000, 0.008630]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001806 in range [0.000000, 0.003612]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000904 in range [0.000000, 0.001807]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000280 in range [0.000000, 0.000559]...	no solution exists.
	Iteration #011: testing norm threshold 0.000420 in range [0.000280, 0.000559]...	no solution exists.
	Iteration #012: testing norm threshold 0.000489 in range [0.000420, 0.000559]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 1.1946455931432007, x5 : -0.12564635255794712, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.2906145092450347, x10 : 0.376579090329643, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 1.190480475414145, x5 : -0.0320099227991224, x6 : 0, x7 : 0, x8 : 6, x9 : 1.3235112476233124, x10 : 0.34343321621418, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000558


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.068567 in range [0.000000, 0.137135]...	solution exists & found.
	Iteration #003: testing norm threshold 0.032762 in range [0.000000, 0.065524]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014063 in range [0.000000, 0.028125]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007023 in range [0.000000, 0.014047]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003512 in range [0.000000, 0.007024]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001597 in range [0.000000, 0.003194]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000799 in range [0.000000, 0.001598]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000150 in range [0.000000, 0.000299]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000071 in range [0.000000, 0.000143]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7739363723837325, x5 : -0.4231384671959224, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151334 in range [0.000000, 0.302668]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075667 in range [0.000000, 0.151335]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037834 in range [0.000000, 0.075668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018918 in range [0.000000, 0.037835]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008024 in range [0.000000, 0.016048]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004013 in range [0.000000, 0.008025]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002007 in range [0.000000, 0.004014]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000842 in range [0.000000, 0.001684]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000421 in range [0.000000, 0.000843]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000211 in range [0.000000, 0.000422]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000106 in range [0.000000, 0.000212]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000054 in range [0.000000, 0.000107]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7686857857071294, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6957713939510717, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149442 in range [0.000000, 0.298883]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058835 in range [0.000000, 0.117670]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029418 in range [0.000000, 0.058836]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014567 in range [0.000000, 0.029134]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006352 in range [0.000000, 0.012704]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002941 in range [0.000000, 0.005883]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001433 in range [0.000000, 0.002866]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000185 in range [0.000000, 0.000371]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7379627455277374, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7312203102068195, x5 : -0.3354091398672352, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6592093302835909, x10 : -0.36318390595476724, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000185


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146908 in range [0.000000, 0.293815]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073203 in range [0.000000, 0.146406]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036602 in range [0.000000, 0.073204]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018302 in range [0.000000, 0.036603]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009151 in range [0.000000, 0.018303]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002347 in range [0.000000, 0.004694]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001044 in range [0.000000, 0.002088]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000302 in range [0.000000, 0.000604]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000152 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000153]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : 1.2612872599939229, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.4630041519562, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : 1.2572016012959633, x5 : -0.24234697350991088, x6 : 0, x7 : 0, x8 : 3, x9 : 1.4589184932582404, x10 : 0.01197449880419299, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000152


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120551 in range [0.000000, 0.241101]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059065 in range [0.000000, 0.118130]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027964 in range [0.000000, 0.055928]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013867 in range [0.000000, 0.027734]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005085 in range [0.000000, 0.010170]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002543 in range [0.000000, 0.005086]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001272 in range [0.000000, 0.002544]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000636 in range [0.000000, 0.001273]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000244 in range [0.000000, 0.000488]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000122 in range [0.000000, 0.000245]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000062 in range [0.000000, 0.000123]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.2881314942853639, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4686438958586523, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.28854785687702217, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4690602584503106, x10 : -0.37472734094902077, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167340 in range [0.000000, 0.334679]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083670 in range [0.000000, 0.167341]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041826 in range [0.000000, 0.083652]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020786 in range [0.000000, 0.041572]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008720 in range [0.000000, 0.017440]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003699 in range [0.000000, 0.007399]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000864 in range [0.000000, 0.001727]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000332 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000166 in range [0.000000, 0.000333]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000084 in range [0.000000, 0.000167]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.2089945149001315, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.09734312694229624, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.20997121800663823, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.09579815328428962, x10 : -0.3094762346744108, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000166


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.049927 in range [0.000000, 0.099854]...	solution exists & found.
	Iteration #003: testing norm threshold 0.017177 in range [0.000000, 0.034353]...	solution exists & found.
	Iteration #004: testing norm threshold 0.008406 in range [0.000000, 0.016811]...	solution exists & found.
	Iteration #005: testing norm threshold 0.002085 in range [0.000000, 0.004170]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001043 in range [0.000000, 0.002086]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7733661234378815, x5 : -0.40154181531714006, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6948142802627778, x10 : -0.35263009297023656, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093476 in range [0.000000, 0.186952]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046738 in range [0.000000, 0.093477]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023118 in range [0.000000, 0.046236]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009373 in range [0.000000, 0.018746]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004017 in range [0.000000, 0.008034]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001559 in range [0.000000, 0.003119]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000720 in range [0.000000, 0.001440]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000338 in range [0.000000, 0.000676]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000145 in range [0.000000, 0.000289]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6754861828551855, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6744333181447237, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5913579541203092, x10 : -0.31054132643359167, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000145


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124517 in range [0.000000, 0.249035]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062259 in range [0.000000, 0.124518]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031130 in range [0.000000, 0.062260]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015566 in range [0.000000, 0.031131]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007783 in range [0.000000, 0.015567]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003892 in range [0.000000, 0.007784]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001906 in range [0.000000, 0.003813]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000846 in range [0.000000, 0.001692]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000424 in range [0.000000, 0.000847]...	no solution exists.
	Iteration #011: testing norm threshold 0.000635 in range [0.000424, 0.000847]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000530 in range [0.000424, 0.000636]...	no solution exists.
	Iteration #013: testing norm threshold 0.000583 in range [0.000530, 0.000636]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2131596190783016, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.24763153340844035, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2131596190783016, x5 : -0.36721889674663544, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2527774471592697, x10 : -0.17780667377415854, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000583


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.194485 in range [0.000000, 0.388970]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095087 in range [0.000000, 0.190173]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047260 in range [0.000000, 0.094521]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023249 in range [0.000000, 0.046498]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011625 in range [0.000000, 0.023250]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005813 in range [0.000000, 0.011626]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002907 in range [0.000000, 0.005814]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000883 in range [0.000000, 0.001766]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000442 in range [0.000000, 0.000884]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000203 in range [0.000000, 0.000407]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	no solution exists.
	Iteration #013: testing norm threshold 0.000153 in range [0.000102, 0.000204]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 4.0, x4 : 4.918248728427293, x5 : 0.017507746288979057, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 5.0964473906376835, x10 : 0.6859405620326221, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 4, x4 : 4.918248728427293, x5 : -0.04064860753715038, x6 : 0, x7 : 0, x8 : 6, x9 : 5.0964473906376835, x10 : 0.6845458007151514, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000153


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152952 in range [0.000000, 0.305905]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076477 in range [0.000000, 0.152953]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038218 in range [0.000000, 0.076435]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019108 in range [0.000000, 0.038215]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009554 in range [0.000000, 0.019109]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003277 in range [0.000000, 0.006553]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001639 in range [0.000000, 0.003278]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000569 in range [0.000000, 0.001138]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000176 in range [0.000000, 0.000352]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7337976413495673, x5 : 0.6080184040325496, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7284713317637754, x5 : 0.6068572091602014, x6 : 2, x7 : 6, x8 : 0, x9 : -0.681976958683204, x10 : -0.3625175138001753, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.208249 in range [0.000000, 0.416498]...	solution exists & found.
	Iteration #003: testing norm threshold 0.103854 in range [0.000000, 0.207707]...	solution exists & found.
	Iteration #004: testing norm threshold 0.051900 in range [0.000000, 0.103800]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025951 in range [0.000000, 0.051901]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012976 in range [0.000000, 0.025952]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006488 in range [0.000000, 0.012977]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003245 in range [0.000000, 0.006489]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001136 in range [0.000000, 0.002271]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000568 in range [0.000000, 0.001137]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000213 in range [0.000000, 0.000425]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000091 in range [0.000000, 0.000183]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7723391580257881, x5 : -0.4243482875500191, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6952596532974709, x10 : -0.36265174326043015, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159975 in range [0.000000, 0.319951]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079688 in range [0.000000, 0.159376]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039844 in range [0.000000, 0.079689]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019923 in range [0.000000, 0.039845]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007744 in range [0.000000, 0.015488]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003872 in range [0.000000, 0.007745]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001937 in range [0.000000, 0.003873]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000969 in range [0.000000, 0.001938]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000470 in range [0.000000, 0.000940]...	no solution exists.
	Iteration #011: testing norm threshold 0.000705 in range [0.000470, 0.000940]...	no solution exists.
	Iteration #012: testing norm threshold 0.000823 in range [0.000705, 0.000940]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5630283700445922, x5 : 0.026454877466911945, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5609458386898041, x5 : 0.09576850011944771, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6565043926239014, x10 : -0.33937132358551025, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000785


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154425 in range [0.000000, 0.308851]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076215 in range [0.000000, 0.152430]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038095 in range [0.000000, 0.076190]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019014 in range [0.000000, 0.038028]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009507 in range [0.000000, 0.019015]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004675 in range [0.000000, 0.009351]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001429 in range [0.000000, 0.002857]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000715 in range [0.000000, 0.001430]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.021564826882475862, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.10156799926289448, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.02157168150358809, x5 : -0.3403775095939636, x6 : 0, x7 : 0, x8 : 3, x9 : 0.10820522540563333, x10 : -0.20899112513905777, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146855 in range [0.000000, 0.293710]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066079 in range [0.000000, 0.132158]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032595 in range [0.000000, 0.065190]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015714 in range [0.000000, 0.031429]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007696 in range [0.000000, 0.015392]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003786 in range [0.000000, 0.007573]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001666 in range [0.000000, 0.003332]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000833 in range [0.000000, 0.001667]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000417 in range [0.000000, 0.000834]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000209 in range [0.000000, 0.000418]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000077 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5546981616882519, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.4863248848546693, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5557394437028982, x5 : -0.2990741244985678, x6 : 0, x7 : 0, x8 : 3, x9 : -0.48897106204418966, x10 : -0.053275961382589554, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129231 in range [0.000000, 0.258463]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063883 in range [0.000000, 0.127767]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031718 in range [0.000000, 0.063436]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015012 in range [0.000000, 0.030025]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007309 in range [0.000000, 0.014618]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002458 in range [0.000000, 0.004915]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000476 in range [0.000000, 0.000953]...	no solution exists.
	Iteration #009: testing norm threshold 0.000715 in range [0.000476, 0.000953]...	no solution exists.
	Iteration #010: testing norm threshold 0.000834 in range [0.000715, 0.000953]...	no solution exists.
	Iteration #011: testing norm threshold 0.000893 in range [0.000834, 0.000953]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5921840992917831, x5 : -0.0809106966682827, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5040058738506862, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5953079326624778, x5 : -0.08985782787203789, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000952


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127411 in range [0.000000, 0.254823]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063706 in range [0.000000, 0.127412]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026536 in range [0.000000, 0.053073]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013269 in range [0.000000, 0.026537]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006531 in range [0.000000, 0.013063]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003266 in range [0.000000, 0.006532]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001606 in range [0.000000, 0.003211]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000663 in range [0.000000, 0.001326]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000081 in range [0.000000, 0.000162]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4713960781248494, x5 : -0.24195905787107466, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.3758187036295633, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.4713960781248494, x5 : -0.23749350619083665, x6 : 1, x7 : 5, x8 : 0, x9 : -0.3758187036295633, x10 : -0.35474760531204746, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.052432 in range [0.000000, 0.104864]...	solution exists & found.
	Iteration #003: testing norm threshold 0.026010 in range [0.000000, 0.052021]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013006 in range [0.000000, 0.026011]...	solution exists & found.
	Iteration #005: testing norm threshold 0.003261 in range [0.000000, 0.006522]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001631 in range [0.000000, 0.003262]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000771 in range [0.000000, 0.001541]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000386 in range [0.000000, 0.000772]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000193 in range [0.000000, 0.000387]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4598034013606439, x10 : -0.2863383490338839, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.521709425587312, x5 : -0.3534661132964589, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4572611797723271, x10 : -0.2861723003716733, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122559 in range [0.000000, 0.245118]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061280 in range [0.000000, 0.122560]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025232 in range [0.000000, 0.050464]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012617 in range [0.000000, 0.025233]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004681 in range [0.000000, 0.009363]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002341 in range [0.000000, 0.004682]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001171 in range [0.000000, 0.002342]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000586 in range [0.000000, 0.001172]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000294 in range [0.000000, 0.000587]...	no solution exists.
	Iteration #011: testing norm threshold 0.000440 in range [0.000294, 0.000587]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000367 in range [0.000294, 0.000441]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7483755052089691, x5 : -0.2102142700766526, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6958567926501237, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000440


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.200510 in range [0.000000, 0.401021]...	solution exists & found.
	Iteration #003: testing norm threshold 0.100256 in range [0.000000, 0.200511]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049705 in range [0.000000, 0.099411]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024441 in range [0.000000, 0.048882]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011774 in range [0.000000, 0.023548]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005790 in range [0.000000, 0.011580]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002502 in range [0.000000, 0.005004]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000684 in range [0.000000, 0.001369]...	no solution exists.
	Iteration #010: testing norm threshold 0.001027 in range [0.000684, 0.001369]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000838 in range [0.000684, 0.000991]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000762 in range [0.000684, 0.000839]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 3.839486746281231, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 4.146094232101773, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 3.8332390785217285, x5 : -0.05244756403155217, x6 : 0, x7 : 0, x8 : 4, x9 : 4.139998928010867, x10 : 0.7914734621834051, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000838


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176072 in range [0.000000, 0.352143]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088036 in range [0.000000, 0.176073]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044019 in range [0.000000, 0.088037]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022010 in range [0.000000, 0.044020]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009300 in range [0.000000, 0.018599]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004650 in range [0.000000, 0.009301]...	no solution exists.
	Iteration #008: testing norm threshold 0.006975 in range [0.004650, 0.009301]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005813 in range [0.004650, 0.006976]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005232 in range [0.004650, 0.005814]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004942 in range [0.004650, 0.005233]...	no solution exists.
	Iteration #012: testing norm threshold 0.005088 in range [0.004942, 0.005233]...	no solution exists.
	Iteration #013: testing norm threshold 0.005160 in range [0.005088, 0.005233]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.7781351753261881, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8485897843446109, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.7771927701350396, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8476473791534623, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005232


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118241 in range [0.000000, 0.236483]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059121 in range [0.000000, 0.118242]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028163 in range [0.000000, 0.056325]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014082 in range [0.000000, 0.028164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007036 in range [0.000000, 0.014072]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003518 in range [0.000000, 0.007037]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001760 in range [0.000000, 0.003519]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000880 in range [0.000000, 0.001761]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000337 in range [0.000000, 0.000674]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	no solution exists.
	Iteration #012: testing norm threshold 0.000244 in range [0.000163, 0.000326]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7587882578372955, x5 : -0.3851131567180008, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6944467598035468, x10 : -0.3176443600490225, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000244


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085682 in range [0.000000, 0.171364]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042696 in range [0.000000, 0.085392]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021348 in range [0.000000, 0.042697]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010675 in range [0.000000, 0.021349]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005338 in range [0.000000, 0.010676]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002669 in range [0.000000, 0.005339]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001087 in range [0.000000, 0.002175]...	no solution exists.
	Iteration #009: testing norm threshold 0.001631 in range [0.001087, 0.002175]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001360 in range [0.001087, 0.001632]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001174 in range [0.001087, 0.001260]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4630658697685091, x5 : 0.04434913982277772, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.3669782091315548, x10 : 0.3986763383084272, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.46554765927582636, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.3676735159854434, x10 : 0.3979810314545386, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001174


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145312 in range [0.000000, 0.290623]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072429 in range [0.000000, 0.144858]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036215 in range [0.000000, 0.072430]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018046 in range [0.000000, 0.036092]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008631 in range [0.000000, 0.017262]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000700 in range [0.000000, 0.001401]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000327 in range [0.000000, 0.000654]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000140 in range [0.000000, 0.000280]...	no solution exists.
	Iteration #010: testing norm threshold 0.000210 in range [0.000140, 0.000280]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6838163912115257, x5 : -0.23301192669314175, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.683816397181042, x5 : -0.30906253456164207, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.11141211756899042, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000279


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136958 in range [0.000000, 0.273917]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067574 in range [0.000000, 0.135149]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033788 in range [0.000000, 0.067575]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015857 in range [0.000000, 0.031714]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007929 in range [0.000000, 0.015858]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003870 in range [0.000000, 0.007740]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001879 in range [0.000000, 0.003758]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000522 in range [0.000000, 0.001043]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000145 in range [0.000000, 0.000291]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.1756736814747705, x5 : -0.3851131567180008, x6 : 0.0, x7 : 4.0, x8 : 1.0, x9 : -0.06198114895026234, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.17547442176820563, x5 : -0.4119545519351959, x6 : 0, x7 : 4, x8 : 1, x9 : -0.062379668363392066, x10 : -0.26463962046822936, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103986 in range [0.000000, 0.207972]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051764 in range [0.000000, 0.103528]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025879 in range [0.000000, 0.051758]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012582 in range [0.000000, 0.025164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006291 in range [0.000000, 0.012583]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003146 in range [0.000000, 0.006292]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001574 in range [0.000000, 0.003147]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000787 in range [0.000000, 0.001575]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000270 in range [0.000000, 0.000541]...	no solution exists.
	Iteration #011: testing norm threshold 0.000406 in range [0.000270, 0.000541]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000339 in range [0.000270, 0.000407]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4130846196304676, x5 : -0.12564635255794712, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.41340543920480927, x5 : -0.06716918070341597, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6123019158840179, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000406


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170610 in range [0.000000, 0.341220]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085306 in range [0.000000, 0.170611]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042560 in range [0.000000, 0.085121]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018628 in range [0.000000, 0.037256]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009259 in range [0.000000, 0.018518]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004630 in range [0.000000, 0.009260]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002315 in range [0.000000, 0.004631]...	no solution exists.
	Iteration #009: testing norm threshold 0.003473 in range [0.002315, 0.004631]...	no solution exists.
	Iteration #010: testing norm threshold 0.004052 in range [0.003473, 0.004631]...	no solution exists.
	Iteration #011: testing norm threshold 0.004342 in range [0.004052, 0.004631]...	no solution exists.
	Iteration #012: testing norm threshold 0.004486 in range [0.004342, 0.004631]...	no solution exists.
	Iteration #013: testing norm threshold 0.004559 in range [0.004486, 0.004631]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6032007998430429, x5 : 2.8448011985157717, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 0.1369299772549284, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6008163068993707, x5 : 2.8424167055720995, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6962866187095642, x10 : -0.05431724339723587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004630


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143511 in range [0.000000, 0.287022]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069390 in range [0.000000, 0.138781]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034696 in range [0.000000, 0.069391]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015739 in range [0.000000, 0.031478]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007870 in range [0.000000, 0.015740]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003908 in range [0.000000, 0.007816]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001954 in range [0.000000, 0.003909]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000978 in range [0.000000, 0.001955]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000489 in range [0.000000, 0.000979]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000062 in range [0.000000, 0.000124]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7690111579124007, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6938866557303939, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144302 in range [0.000000, 0.288604]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071771 in range [0.000000, 0.143542]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035851 in range [0.000000, 0.071701]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017926 in range [0.000000, 0.035852]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008922 in range [0.000000, 0.017844]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004462 in range [0.000000, 0.008923]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001232 in range [0.000000, 0.002464]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000616 in range [0.000000, 0.001233]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000309 in range [0.000000, 0.000617]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3047919109980444, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.1990088136693937, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.30479191538085804, x5 : -0.34037750521115, x6 : 0, x7 : 0, x8 : 6, x9 : -0.19900881805220733, x10 : -0.27857817942911867, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000050


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106475 in range [0.000000, 0.212951]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053238 in range [0.000000, 0.106476]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026511 in range [0.000000, 0.053023]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012447 in range [0.000000, 0.024893]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006115 in range [0.000000, 0.012229]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002463 in range [0.000000, 0.004927]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001188 in range [0.000000, 0.002376]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000594 in range [0.000000, 0.001189]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000298 in range [0.000000, 0.000595]...	no solution exists.
	Iteration #011: testing norm threshold 0.000447 in range [0.000298, 0.000595]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000371 in range [0.000298, 0.000445]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.2866947137607391, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7098482821719123, x5 : -0.40748098492622375, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6775643800036384, x10 : -0.10189592947104098, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000371


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106248 in range [0.000000, 0.212495]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051159 in range [0.000000, 0.102318]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025580 in range [0.000000, 0.051160]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012790 in range [0.000000, 0.025581]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006055 in range [0.000000, 0.012111]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003028 in range [0.000000, 0.006056]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001515 in range [0.000000, 0.003029]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000741 in range [0.000000, 0.001481]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000344 in range [0.000000, 0.000688]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000172 in range [0.000000, 0.000345]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000087 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.050720556129666736, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.004322559784801243, x10 : -0.19794935711874695, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.04795212402796061, x5 : -0.29457854230980185, x6 : 0, x7 : 0, x8 : 1, x9 : 0.004322559784801243, x10 : -0.19145266138405323, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095234 in range [0.000000, 0.190468]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047618 in range [0.000000, 0.095235]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023809 in range [0.000000, 0.047619]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007563 in range [0.000000, 0.015126]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001633 in range [0.000000, 0.003267]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000772 in range [0.000000, 0.001545]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000387 in range [0.000000, 0.000773]...	no solution exists.
	Iteration #009: testing norm threshold 0.000580 in range [0.000387, 0.000773]...	no solution exists.
	Iteration #010: testing norm threshold 0.000677 in range [0.000580, 0.000773]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4797262864811897, x5 : 0.22329176338143544, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4021921086178308, x5 : 0.2571690303220267, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.31948421895504, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000677


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115505 in range [0.000000, 0.231010]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057753 in range [0.000000, 0.115506]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026433 in range [0.000000, 0.052866]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013217 in range [0.000000, 0.026434]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006609 in range [0.000000, 0.013218]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003301 in range [0.000000, 0.006601]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001651 in range [0.000000, 0.003302]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000826 in range [0.000000, 0.001652]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000413 in range [0.000000, 0.000827]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7682644411091752, x5 : -0.4110179825787492, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6820893271927781, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000179


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133981 in range [0.000000, 0.267963]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061396 in range [0.000000, 0.122792]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030699 in range [0.000000, 0.061397]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015064 in range [0.000000, 0.030129]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006104 in range [0.000000, 0.012209]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002329 in range [0.000000, 0.004657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001104 in range [0.000000, 0.002209]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000540 in range [0.000000, 0.001080]...	no solution exists.
	Iteration #010: testing norm threshold 0.000810 in range [0.000540, 0.001080]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000676 in range [0.000540, 0.000811]...	no solution exists.
	Iteration #012: testing norm threshold 0.000744 in range [0.000676, 0.000811]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3506080569579157, x5 : 0.5095999610752878, x6 : 1.0, x7 : 0.0, x8 : 6.0, x9 : -0.24763153340844035, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3524083757643294, x5 : 0.2411860227584839, x6 : 1, x7 : 0, x8 : 6, x9 : -0.24943185221485403, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000744


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.064207 in range [0.000000, 0.128413]...	solution exists & found.
	Iteration #003: testing norm threshold 0.031674 in range [0.000000, 0.063347]...	solution exists & found.
	Iteration #004: testing norm threshold 0.015837 in range [0.000000, 0.031675]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007342 in range [0.000000, 0.014684]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001236 in range [0.000000, 0.002473]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000619 in range [0.000000, 0.001237]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000310 in range [0.000000, 0.000620]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000140 in range [0.000000, 0.000281]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000071 in range [0.000000, 0.000141]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4713960781248494, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4509629068626354, x10 : -0.1537548611611785, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.47347863018512726, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4511520100873231, x10 : -0.1539439643858662, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150023 in range [0.000000, 0.300046]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074978 in range [0.000000, 0.149956]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037000 in range [0.000000, 0.074000]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018259 in range [0.000000, 0.036518]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009130 in range [0.000000, 0.018260]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004562 in range [0.000000, 0.009123]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002281 in range [0.000000, 0.004563]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001141 in range [0.000000, 0.002282]...	no solution exists.
	Iteration #010: testing norm threshold 0.001712 in range [0.001141, 0.002282]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001427 in range [0.001141, 0.001713]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001285 in range [0.001141, 0.001428]...	no solution exists.
	Iteration #013: testing norm threshold 0.001356 in range [0.001285, 0.001428]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 1.931869032679313, x5 : -0.17932913962554445, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.9624920910936792, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 1.9274876120611724, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 2.095060708528602, x10 : 0.18875247985124588, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001427


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148475 in range [0.000000, 0.296950]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073914 in range [0.000000, 0.147828]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028383 in range [0.000000, 0.056766]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014192 in range [0.000000, 0.028384]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006438 in range [0.000000, 0.012877]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003220 in range [0.000000, 0.006439]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001610 in range [0.000000, 0.003221]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000620 in range [0.000000, 0.001239]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000310 in range [0.000000, 0.000621]...	no solution exists.
	Iteration #011: testing norm threshold 0.000465 in range [0.000310, 0.000621]...	no solution exists.
	Iteration #012: testing norm threshold 0.000543 in range [0.000465, 0.000621]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.2777475825828062, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.38063958287239075, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.14687133232164204, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000620


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088209 in range [0.000000, 0.176418]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044105 in range [0.000000, 0.088210]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022053 in range [0.000000, 0.044106]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007130 in range [0.000000, 0.014260]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003565 in range [0.000000, 0.007131]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001716 in range [0.000000, 0.003432]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000727 in range [0.000000, 0.001454]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000293 in range [0.000000, 0.000585]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000147 in range [0.000000, 0.000294]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000148]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4657523619634288, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.6187369273963904, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.4656783673161542, x5 : -0.33582994793771687, x6 : 0, x7 : 0, x8 : 2, x9 : 0.6186289919240556, x10 : -0.3636787086725235, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160909 in range [0.000000, 0.321818]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080402 in range [0.000000, 0.160804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040202 in range [0.000000, 0.080403]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019507 in range [0.000000, 0.039014]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008877 in range [0.000000, 0.017754]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004308 in range [0.000000, 0.008617]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002125 in range [0.000000, 0.004249]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000936 in range [0.000000, 0.001872]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000433 in range [0.000000, 0.000866]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000217 in range [0.000000, 0.000434]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000109 in range [0.000000, 0.000218]...	no solution exists.
	Iteration #013: testing norm threshold 0.000164 in range [0.000109, 0.000218]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5630283700445922, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5651109241952316, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5171850093868172, x10 : -0.2511099227775947, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000164


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.052103 in range [0.000000, 0.104207]...	solution exists & found.
	Iteration #003: testing norm threshold 0.025469 in range [0.000000, 0.050938]...	solution exists & found.
	Iteration #004: testing norm threshold 0.009649 in range [0.000000, 0.019297]...	solution exists & found.
	Iteration #005: testing norm threshold 0.002082 in range [0.000000, 0.004164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000642 in range [0.000000, 0.001285]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000217 in range [0.000000, 0.000433]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000109 in range [0.000000, 0.000218]...	no solution exists.
	Iteration #009: testing norm threshold 0.000163 in range [0.000109, 0.000218]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.3464429527797456, x5 : 0.4917056987194221, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3818463385105133, x5 : 0.4898949261730265, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6516848056142217, x10 : -0.37472734094902077, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000217


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125108 in range [0.000000, 0.250216]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062555 in range [0.000000, 0.125109]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030968 in range [0.000000, 0.061935]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014194 in range [0.000000, 0.028388]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007097 in range [0.000000, 0.014195]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003549 in range [0.000000, 0.007098]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001775 in range [0.000000, 0.003550]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000652 in range [0.000000, 0.001303]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000326 in range [0.000000, 0.000653]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000164 in range [0.000000, 0.000327]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000082 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3627746836023052, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161110 in range [0.000000, 0.322220]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080505 in range [0.000000, 0.161010]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039777 in range [0.000000, 0.079555]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018656 in range [0.000000, 0.037311]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009328 in range [0.000000, 0.018657]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004253 in range [0.000000, 0.008506]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001470 in range [0.000000, 0.002939]...	no solution exists.
	Iteration #009: testing norm threshold 0.002204 in range [0.001470, 0.002939]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001837 in range [0.001470, 0.002205]...	no solution exists.
	Iteration #011: testing norm threshold 0.002021 in range [0.001837, 0.002205]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001930 in range [0.001837, 0.002022]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5005518073720403, x5 : 0.10697905806830793, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.40676043437259296, x10 : 0.6859405620326221, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5094989413899846, x5 : -0.21959123015403748, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5326308310031891, x10 : 0.5865029394626617, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001920


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114645 in range [0.000000, 0.229291]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057323 in range [0.000000, 0.114646]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027867 in range [0.000000, 0.055735]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012084 in range [0.000000, 0.024168]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006042 in range [0.000000, 0.012085]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002976 in range [0.000000, 0.005951]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001488 in range [0.000000, 0.002977]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000439 in range [0.000000, 0.000877]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000200 in range [0.000000, 0.000400]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.4089195154522975, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3095149948944997, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.4110020697116852, x5 : -0.3694823235273361, x6 : 0, x7 : 0, x8 : 6, x9 : -0.30951499938964844, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110150 in range [0.000000, 0.220299]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054981 in range [0.000000, 0.109962]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027199 in range [0.000000, 0.054398]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013519 in range [0.000000, 0.027038]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006760 in range [0.000000, 0.013520]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003380 in range [0.000000, 0.006761]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001516 in range [0.000000, 0.003032]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000633 in range [0.000000, 0.001265]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000317 in range [0.000000, 0.000634]...	no solution exists.
	Iteration #011: testing norm threshold 0.000475 in range [0.000317, 0.000634]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000397 in range [0.000317, 0.000476]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6796512870333556, x5 : -0.2240647955152089, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7567057311534882, x5 : -0.2223506742971926, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6928583762735316, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000475


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105689 in range [0.000000, 0.211378]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052845 in range [0.000000, 0.105690]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025183 in range [0.000000, 0.050366]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012403 in range [0.000000, 0.024806]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005964 in range [0.000000, 0.011929]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002146 in range [0.000000, 0.004291]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001068 in range [0.000000, 0.002136]...	no solution exists.
	Iteration #009: testing norm threshold 0.001602 in range [0.001068, 0.002136]...	no solution exists.
	Iteration #010: testing norm threshold 0.001869 in range [0.001602, 0.002136]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001736 in range [0.001602, 0.001870]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001669 in range [0.001602, 0.001737]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4797262864811897, x5 : 0.21434463220350256, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7650358974933624, x5 : 0.21144389317294715, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6801251575186694, x10 : 0.06866798814194147, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001669


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119872 in range [0.000000, 0.239743]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059898 in range [0.000000, 0.119796]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029465 in range [0.000000, 0.058931]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014733 in range [0.000000, 0.029466]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007326 in range [0.000000, 0.014652]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003508 in range [0.000000, 0.007016]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001383 in range [0.000000, 0.002766]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000621 in range [0.000000, 0.001241]...	no solution exists.
	Iteration #010: testing norm threshold 0.000931 in range [0.000621, 0.001241]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000776 in range [0.000621, 0.000932]...	no solution exists.
	Iteration #012: testing norm threshold 0.000854 in range [0.000776, 0.000932]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.20751590291688105, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.18997294424297928, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.23521000893362737, x5 : -0.3403775095939636, x6 : 0, x7 : 0, x8 : 0, x9 : 0.10377812385559082, x10 : -0.11998805774799609, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000854


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103566 in range [0.000000, 0.207133]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051784 in range [0.000000, 0.103567]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024835 in range [0.000000, 0.049671]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007513 in range [0.000000, 0.015026]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003757 in range [0.000000, 0.007514]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001879 in range [0.000000, 0.003758]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000940 in range [0.000000, 0.001880]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000471 in range [0.000000, 0.000941]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000236 in range [0.000000, 0.000472]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000237]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.525542432441061, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.5128463683486947, x10 : -0.2642411010550996, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.5276249945163727, x5 : -0.3504296932809881, x6 : 0, x7 : 0, x8 : 4, x9 : -0.5139514296234136, x10 : -0.27418466796283764, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155818 in range [0.000000, 0.311635]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074818 in range [0.000000, 0.149636]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037409 in range [0.000000, 0.074819]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018061 in range [0.000000, 0.036122]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009031 in range [0.000000, 0.018062]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004292 in range [0.000000, 0.008584]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002146 in range [0.000000, 0.004293]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001074 in range [0.000000, 0.002147]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000537 in range [0.000000, 0.001075]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000269 in range [0.000000, 0.000538]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.1131971188022186, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.004517934713207234, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.114090750018267, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 6, x9 : -0.005411565929255642, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098549 in range [0.000000, 0.197097]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049275 in range [0.000000, 0.098550]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024638 in range [0.000000, 0.049276]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012243 in range [0.000000, 0.024485]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003939 in range [0.000000, 0.007878]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001970 in range [0.000000, 0.003940]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000653 in range [0.000000, 0.001305]...	no solution exists.
	Iteration #009: testing norm threshold 0.000979 in range [0.000653, 0.001305]...	no solution exists.
	Iteration #010: testing norm threshold 0.001142 in range [0.000979, 0.001305]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001061 in range [0.000979, 0.001143]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.42974503634314815, x5 : 0.22329176338143544, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : 0.5091625782023483, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.608844518661499, x5 : 0.22338862486205494, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5810934532150357, x10 : 0.5090441507968373, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110156 in range [0.000000, 0.220311]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055065 in range [0.000000, 0.110131]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027533 in range [0.000000, 0.055066]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013707 in range [0.000000, 0.027414]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006854 in range [0.000000, 0.013708]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003392 in range [0.000000, 0.006783]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001605 in range [0.000000, 0.003210]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000782 in range [0.000000, 0.001565]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000332 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000166 in range [0.000000, 0.000333]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000084 in range [0.000000, 0.000167]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6130096201826336, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.623422384262085, x5 : -0.3001154065132141, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6383854782668392, x10 : -0.04238252779424444, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167415 in range [0.000000, 0.334829]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068211 in range [0.000000, 0.136421]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033721 in range [0.000000, 0.067443]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016861 in range [0.000000, 0.033722]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008100 in range [0.000000, 0.016200]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003058 in range [0.000000, 0.006117]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001016 in range [0.000000, 0.002031]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000485 in range [0.000000, 0.000970]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000157 in range [0.000000, 0.000314]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000158]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6421653494298245, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6442479193210602, x5 : -0.39348661891303904, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6189322769641876, x10 : -0.2746590154598547, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069032 in range [0.000000, 0.138064]...	solution exists & found.
	Iteration #003: testing norm threshold 0.033851 in range [0.000000, 0.067702]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016833 in range [0.000000, 0.033667]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008417 in range [0.000000, 0.016834]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004209 in range [0.000000, 0.008418]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001366 in range [0.000000, 0.002733]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000684 in range [0.000000, 0.001367]...	no solution exists.
	Iteration #009: testing norm threshold 0.001026 in range [0.000684, 0.001367]...	no solution exists.
	Iteration #010: testing norm threshold 0.001197 in range [0.001026, 0.001367]...	no solution exists.
	Iteration #011: testing norm threshold 0.001282 in range [0.001197, 0.001367]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5130471199065506, x5 : 0.1248733204241737, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : 0.9953020337356012, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6067619621753693, x5 : -0.07199792746065539, x6 : 2, x7 : 6, x8 : 0, x9 : -0.625543715391144, x10 : 0.9908628306258449, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001259


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080634 in range [0.000000, 0.161269]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040318 in range [0.000000, 0.080635]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019495 in range [0.000000, 0.038989]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008599 in range [0.000000, 0.017197]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004300 in range [0.000000, 0.008600]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002119 in range [0.000000, 0.004237]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001060 in range [0.000000, 0.002120]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000515 in range [0.000000, 0.001030]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	no solution exists.
	Iteration #011: testing norm threshold 0.000387 in range [0.000258, 0.000516]...	no solution exists.
	Iteration #012: testing norm threshold 0.000451 in range [0.000387, 0.000516]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.22417631962956155, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.2606969002270471, x10 : -0.1537548611611785, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 0.21741744045642747, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 6, x9 : 0.25704301714509703, x10 : -0.27528972923755646, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000515


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096809 in range [0.000000, 0.193619]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048246 in range [0.000000, 0.096492]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024123 in range [0.000000, 0.048247]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012062 in range [0.000000, 0.024124]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005860 in range [0.000000, 0.011720]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002709 in range [0.000000, 0.005418]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000994 in range [0.000000, 0.001988]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000352 in range [0.000000, 0.000705]...	no solution exists.
	Iteration #010: testing norm threshold 0.000529 in range [0.000352, 0.000705]...	no solution exists.
	Iteration #011: testing norm threshold 0.000617 in range [0.000529, 0.000705]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.10070180626770824, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.06198114895026234, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.10486691072583199, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.15038609504699707, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000704


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181801 in range [0.000000, 0.363601]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090901 in range [0.000000, 0.181802]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045256 in range [0.000000, 0.090511]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022593 in range [0.000000, 0.045186]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011129 in range [0.000000, 0.022258]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004776 in range [0.000000, 0.009551]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002388 in range [0.000000, 0.004777]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000324 in range [0.000000, 0.000649]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000133 in range [0.000000, 0.000265]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7254674329932271, x5 : -0.3224832384724706, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.726264212964698, x5 : -0.32274402823809056, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.33079363475707235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127741 in range [0.000000, 0.255482]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063871 in range [0.000000, 0.127742]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031819 in range [0.000000, 0.063639]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013972 in range [0.000000, 0.027945]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003852 in range [0.000000, 0.007704]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001268 in range [0.000000, 0.002535]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000389 in range [0.000000, 0.000779]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.3940602878959337, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7640717728001494, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6820617718560118, x10 : -0.3535942176634496, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098210 in range [0.000000, 0.196419]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048661 in range [0.000000, 0.097323]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024331 in range [0.000000, 0.048662]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012166 in range [0.000000, 0.024332]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006084 in range [0.000000, 0.012167]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002860 in range [0.000000, 0.005720]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001430 in range [0.000000, 0.002861]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000333 in range [0.000000, 0.000665]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000167 in range [0.000000, 0.000334]...	no solution exists.
	Iteration #011: testing norm threshold 0.000250 in range [0.000167, 0.000334]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.6615122583374247, x5 : 0.16960897631383814, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.8264885480995896, x10 : 0.08931486660544799, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.6615122480928763, x5 : 0.19248289191254592, x6 : 0, x7 : 0, x8 : 4, x9 : 0.8264885378550413, x10 : 0.14455799013376236, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000250


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103533 in range [0.000000, 0.207066]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051600 in range [0.000000, 0.103200]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025801 in range [0.000000, 0.051601]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012901 in range [0.000000, 0.025802]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006294 in range [0.000000, 0.012588]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002444 in range [0.000000, 0.004888]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001223 in range [0.000000, 0.002445]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000610 in range [0.000000, 0.001219]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000292 in range [0.000000, 0.000585]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000147 in range [0.000000, 0.000293]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000148]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4672309739466792, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4023401871235887, x10 : -0.3747273409490208, x11 : 2.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.49222157895565033, x5 : -0.37667067166444745, x6 : 0, x7 : 0, x8 : 0, x9 : -0.40284483324796816, x10 : -0.37472734094902077, x11 : 2, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000147


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153856 in range [0.000000, 0.307712]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076585 in range [0.000000, 0.153169]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038293 in range [0.000000, 0.076586]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018763 in range [0.000000, 0.037526]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009382 in range [0.000000, 0.018764]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004650 in range [0.000000, 0.009301]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002271 in range [0.000000, 0.004541]...	no solution exists.
	Iteration #009: testing norm threshold 0.003406 in range [0.002271, 0.004541]...	no solution exists.
	Iteration #010: testing norm threshold 0.003974 in range [0.003406, 0.004541]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003690 in range [0.003406, 0.003975]...	no solution exists.
	Iteration #012: testing norm threshold 0.003832 in range [0.003690, 0.003975]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003762 in range [0.003690, 0.003833]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.21168100709505114, x5 : 0.6617011911001469, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : -0.2520517806574446, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.20703584701778238, x5 : 0.10250549018383026, x6 : 1, x7 : 1, x8 : 0, x9 : -0.6697651445865631, x10 : 0.5708091620614323, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003762


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156948 in range [0.000000, 0.313896]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078474 in range [0.000000, 0.156949]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038384 in range [0.000000, 0.076768]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018306 in range [0.000000, 0.036611]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008737 in range [0.000000, 0.017473]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004369 in range [0.000000, 0.008738]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002185 in range [0.000000, 0.004370]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001093 in range [0.000000, 0.002186]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000485 in range [0.000000, 0.000969]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000243 in range [0.000000, 0.000486]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000122 in range [0.000000, 0.000244]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000061 in range [0.000000, 0.000123]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.12985753551489912, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.013358429211215713, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.12678044197332233, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.014352970882378845, x10 : -0.2301006903983292, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000122


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.205033 in range [0.000000, 0.410066]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099917 in range [0.000000, 0.199834]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047927 in range [0.000000, 0.095853]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023964 in range [0.000000, 0.047928]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011876 in range [0.000000, 0.023751]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005938 in range [0.000000, 0.011877]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002447 in range [0.000000, 0.004893]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000873 in range [0.000000, 0.001746]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	no solution exists.
	Iteration #011: testing norm threshold 0.000422 in range [0.000281, 0.000562]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000352 in range [0.000281, 0.000423]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.258975765038173, x5 : -0.3403775008283364, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.23157393943776397, x5 : -0.3985338509082794, x6 : 0, x7 : 5, x8 : 0, x9 : -0.17723622987074478, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000422


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125364 in range [0.000000, 0.250729]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043005 in range [0.000000, 0.086010]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021395 in range [0.000000, 0.042789]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010041 in range [0.000000, 0.020082]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004137 in range [0.000000, 0.008274]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002048 in range [0.000000, 0.004096]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001025 in range [0.000000, 0.002049]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000513 in range [0.000000, 0.001026]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000115 in range [0.000000, 0.000230]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3747273409490208, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7525406181812286, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.663806162636601, x10 : -0.36300732085076143, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000115


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117732 in range [0.000000, 0.235465]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058867 in range [0.000000, 0.117733]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028743 in range [0.000000, 0.057486]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014372 in range [0.000000, 0.028744]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007186 in range [0.000000, 0.014373]...	no solution exists.
	Iteration #007: testing norm threshold 0.010780 in range [0.007186, 0.014373]...	no solution exists.
	Iteration #008: testing norm threshold 0.012576 in range [0.010780, 0.014373]...	solution exists & found.
	Iteration #009: testing norm threshold 0.011637 in range [0.010780, 0.012494]...	no solution exists.
	Iteration #010: testing norm threshold 0.012065 in range [0.011637, 0.012494]...	no solution exists.
	Iteration #011: testing norm threshold 0.012280 in range [0.012065, 0.012494]...	solution exists & found.
	Iteration #012: testing norm threshold 0.012173 in range [0.012065, 0.012281]...	no solution exists.
	Iteration #013: testing norm threshold 0.012227 in range [0.012173, 0.012281]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : 1.6569721569200846, x5 : 4.356866367586428, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 1.882927640611603, x10 : 11.447300327700539, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 2, x4 : -0.11111456900835037, x5 : 4.3543492534662365, x6 : 0, x7 : 0, x8 : 5, x9 : 1.4873155355453491, x10 : 11.444783213580347, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.012280


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174335 in range [0.000000, 0.348671]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086415 in range [0.000000, 0.172831]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042940 in range [0.000000, 0.085880]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021360 in range [0.000000, 0.042721]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010623 in range [0.000000, 0.021246]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003541 in range [0.000000, 0.007082]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001316 in range [0.000000, 0.002631]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000658 in range [0.000000, 0.001317]...	no solution exists.
	Iteration #010: testing norm threshold 0.000987 in range [0.000658, 0.001317]...	no solution exists.
	Iteration #011: testing norm threshold 0.001152 in range [0.000987, 0.001317]...	no solution exists.
	Iteration #012: testing norm threshold 0.001234 in range [0.001152, 0.001317]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5130471199065506, x5 : 0.062243402178643485, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6817338168621063, x5 : 0.12272273985297068, x6 : 1, x7 : 5, x8 : 0, x9 : -0.4188596834403347, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001316


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.077443 in range [0.000000, 0.154886]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038286 in range [0.000000, 0.076572]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019143 in range [0.000000, 0.038287]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009445 in range [0.000000, 0.018890]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004663 in range [0.000000, 0.009325]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002322 in range [0.000000, 0.004644]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001162 in range [0.000000, 0.002323]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000581 in range [0.000000, 0.001163]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000291 in range [0.000000, 0.000582]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.09237159791136801, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.04430015995424538, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 3, x4 : -0.09594256596873173, x5 : -0.34128010854557206, x6 : 0, x7 : 0, x8 : 0, x9 : -0.048720408231019974, x10 : -0.26781206911246336, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000146


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126649 in range [0.000000, 0.253299]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063325 in range [0.000000, 0.126650]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031571 in range [0.000000, 0.063141]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015786 in range [0.000000, 0.031572]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007696 in range [0.000000, 0.015392]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003676 in range [0.000000, 0.007352]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000943 in range [0.000000, 0.001887]...	no solution exists.
	Iteration #009: testing norm threshold 0.001415 in range [0.000943, 0.001887]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001180 in range [0.000943, 0.001416]...	no solution exists.
	Iteration #011: testing norm threshold 0.001298 in range [0.001180, 0.001416]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001239 in range [0.001180, 0.001299]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5088820157283805, x5 : -0.17932913962554445, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.4156009288706015, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5317901074886322, x5 : -0.3314303755760193, x6 : 3, x7 : 6, x8 : 0, x9 : -0.48190462589263916, x10 : -0.1979493573307991, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001190


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116334 in range [0.000000, 0.232667]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054822 in range [0.000000, 0.109643]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026355 in range [0.000000, 0.052710]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012511 in range [0.000000, 0.025022]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003434 in range [0.000000, 0.006868]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001717 in range [0.000000, 0.003435]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000859 in range [0.000000, 0.001718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000311 in range [0.000000, 0.000622]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000157]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.2598533202269404, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7233848869800568, x5 : -0.2597969361430433, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6853667512187143, x10 : -0.06517461009565421, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000156


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124054 in range [0.000000, 0.248108]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062028 in range [0.000000, 0.124055]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030125 in range [0.000000, 0.060249]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014692 in range [0.000000, 0.029384]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007193 in range [0.000000, 0.014386]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003597 in range [0.000000, 0.007194]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001799 in range [0.000000, 0.003598]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000825 in range [0.000000, 0.001650]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000413 in range [0.000000, 0.000826]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000107 in range [0.000000, 0.000215]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.3784028042062294, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.2474244613383868, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000107


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147307 in range [0.000000, 0.294614]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073040 in range [0.000000, 0.146080]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036344 in range [0.000000, 0.072688]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018172 in range [0.000000, 0.036345]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008943 in range [0.000000, 0.017887]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002414 in range [0.000000, 0.004828]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001090 in range [0.000000, 0.002179]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000375 in range [0.000000, 0.000750]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000181 in range [0.000000, 0.000361]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.6754861828551855, x5 : -0.215117664337276, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6775687336921692, x5 : -0.22334373933993915, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.15971964804313224, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000181


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153793 in range [0.000000, 0.307586]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076897 in range [0.000000, 0.153794]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038116 in range [0.000000, 0.076231]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018482 in range [0.000000, 0.036963]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009192 in range [0.000000, 0.018384]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002952 in range [0.000000, 0.005905]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001477 in range [0.000000, 0.002953]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000739 in range [0.000000, 0.001478]...	no solution exists.
	Iteration #010: testing norm threshold 0.001108 in range [0.000739, 0.001478]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000897 in range [0.000739, 0.001055]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000818 in range [0.000739, 0.000898]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5005518073720403, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5614690880877413, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.22437328100204468, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5936794266104813, x10 : -0.0722494088113308, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000897


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162021 in range [0.000000, 0.324042]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077795 in range [0.000000, 0.155590]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037794 in range [0.000000, 0.075589]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018898 in range [0.000000, 0.037795]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009312 in range [0.000000, 0.018623]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004090 in range [0.000000, 0.008180]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002045 in range [0.000000, 0.004091]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001023 in range [0.000000, 0.002046]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000512 in range [0.000000, 0.001024]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000139]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.22417631962956155, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.3623625869541446, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.2308222707482044, x5 : -0.31761138326209143, x6 : 0, x7 : 0, x8 : 3, x9 : 0.36196429566713323, x10 : -0.14230794644635278, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000138


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143458 in range [0.000000, 0.286917]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069455 in range [0.000000, 0.138911]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033534 in range [0.000000, 0.067069]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016768 in range [0.000000, 0.033535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008384 in range [0.000000, 0.016769]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004193 in range [0.000000, 0.008385]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001674 in range [0.000000, 0.003348]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000533 in range [0.000000, 0.001066]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000267 in range [0.000000, 0.000534]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	no solution exists.
	Iteration #012: testing norm threshold 0.000201 in range [0.000134, 0.000268]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.01175600654288514, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.1369299772549284, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.01132578320331782, x5 : -0.21554788767684332, x6 : 0, x7 : 0, x8 : 4, x9 : 0.1081983707845211, x10 : -0.20856775642060266, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000201


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165990 in range [0.000000, 0.331979]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080077 in range [0.000000, 0.160153]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039865 in range [0.000000, 0.079730]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019575 in range [0.000000, 0.039151]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009386 in range [0.000000, 0.018772]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002457 in range [0.000000, 0.004913]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000633 in range [0.000000, 0.001266]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000317 in range [0.000000, 0.000634]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7721649122636, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6950854075352827, x10 : -0.36247749749824204, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131334 in range [0.000000, 0.262667]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062385 in range [0.000000, 0.124769]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031193 in range [0.000000, 0.062386]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014558 in range [0.000000, 0.029116]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006346 in range [0.000000, 0.012693]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000253 in range [0.000000, 0.000505]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7173198719030559, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6369330460819619, x10 : -0.24177157007423752, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182906 in range [0.000000, 0.365812]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091091 in range [0.000000, 0.182181]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045302 in range [0.000000, 0.090604]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022651 in range [0.000000, 0.045303]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011326 in range [0.000000, 0.022652]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005373 in range [0.000000, 0.010746]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002687 in range [0.000000, 0.005374]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000835 in range [0.000000, 0.001671]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000418 in range [0.000000, 0.000836]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000210 in range [0.000000, 0.000419]...	no solution exists.
	Iteration #012: testing norm threshold 0.000314 in range [0.000210, 0.000419]...	no solution exists.
	Iteration #013: testing norm threshold 0.000367 in range [0.000314, 0.000419]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.08672788174994739, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.2164944277370047, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.032581528066657484, x5 : -0.34193288986235465, x6 : 0, x7 : 0, x8 : 3, x9 : 0.21357624099642358, x10 : -0.19794935711874695, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000367


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178203 in range [0.000000, 0.356407]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085773 in range [0.000000, 0.171547]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042566 in range [0.000000, 0.085132]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020938 in range [0.000000, 0.041876]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010403 in range [0.000000, 0.020807]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002723 in range [0.000000, 0.005446]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001362 in range [0.000000, 0.002724]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000566 in range [0.000000, 0.001132]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000227 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000111 in range [0.000000, 0.000223]...	no solution exists.
	Iteration #012: testing norm threshold 0.000167 in range [0.000111, 0.000223]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.046555451951496615, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.07504651576886906, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.046693014284565675, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 0.07476558001292989, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000166


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094602 in range [0.000000, 0.189204]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046803 in range [0.000000, 0.093605]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020648 in range [0.000000, 0.041296]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009167 in range [0.000000, 0.018335]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004204 in range [0.000000, 0.008408]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001797 in range [0.000000, 0.003593]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000674 in range [0.000000, 0.001348]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000338 in range [0.000000, 0.000675]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000339]...	no solution exists.
	Iteration #011: testing norm threshold 0.000254 in range [0.000169, 0.000339]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4130846196304676, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.31393524214350393, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.41601603071396914, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 1, x9 : -0.3151055488112768, x10 : -0.24719424657426656, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000338


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118485 in range [0.000000, 0.236970]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058817 in range [0.000000, 0.117634]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027209 in range [0.000000, 0.054419]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012694 in range [0.000000, 0.025388]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006347 in range [0.000000, 0.012695]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002560 in range [0.000000, 0.005120]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001157 in range [0.000000, 0.002313]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000579 in range [0.000000, 0.001158]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000216 in range [0.000000, 0.000431]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000217]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.392259098739617, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3581377146335463, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.39178043559364784, x5 : -0.3125787812481923, x6 : 0, x7 : 0, x8 : 6, x9 : -0.35760375339819067, x10 : -0.28729567532582223, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000103


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133550 in range [0.000000, 0.267099]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066775 in range [0.000000, 0.133551]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033381 in range [0.000000, 0.066762]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015564 in range [0.000000, 0.031129]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007783 in range [0.000000, 0.015565]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003892 in range [0.000000, 0.007784]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001946 in range [0.000000, 0.003893]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000974 in range [0.000000, 0.001947]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000487 in range [0.000000, 0.000975]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000194 in range [0.000000, 0.000389]...	no solution exists.
	Iteration #012: testing norm threshold 0.000292 in range [0.000194, 0.000389]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1991856945605408, x5 : 0.16960897631383814, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.19881343874098772, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.19449995155263272, x5 : 0.17038993348182283, x6 : 0, x7 : 0, x8 : 0, x9 : 0.19725152440501836, x10 : -0.14114432339739474, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000388


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151155 in range [0.000000, 0.302311]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075578 in range [0.000000, 0.151156]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037790 in range [0.000000, 0.075579]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018508 in range [0.000000, 0.037017]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008348 in range [0.000000, 0.016696]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004078 in range [0.000000, 0.008157]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001941 in range [0.000000, 0.003883]...	no solution exists.
	Iteration #009: testing norm threshold 0.002912 in range [0.001941, 0.003883]...	no solution exists.
	Iteration #010: testing norm threshold 0.003398 in range [0.002912, 0.003883]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003104 in range [0.002912, 0.003296]...	no solution exists.
	Iteration #012: testing norm threshold 0.003200 in range [0.003104, 0.003296]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.009069514347965484, x5 : 0.11592618924624082, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : 0.1148287410099072, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.20274685323238373, x5 : 0.1314503736793995, x6 : 1, x7 : 0, x8 : 0, x9 : -0.13712535053491592, x10 : -0.2642391100525856, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003295


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.217848 in range [0.000000, 0.435696]...	solution exists & found.
	Iteration #003: testing norm threshold 0.108564 in range [0.000000, 0.217128]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054013 in range [0.000000, 0.108026]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026899 in range [0.000000, 0.053799]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013450 in range [0.000000, 0.026900]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006296 in range [0.000000, 0.012591]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003148 in range [0.000000, 0.006297]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001575 in range [0.000000, 0.003149]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000314 in range [0.000000, 0.000628]...	no solution exists.
	Iteration #011: testing norm threshold 0.000471 in range [0.000314, 0.000628]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000385 in range [0.000314, 0.000457]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6781726750501051, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8132278063525771, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6769140420251758, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8119691733276477, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000385


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.057533 in range [0.000000, 0.115065]...	solution exists & found.
	Iteration #003: testing norm threshold 0.026848 in range [0.000000, 0.053696]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013424 in range [0.000000, 0.026849]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006648 in range [0.000000, 0.013296]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001598 in range [0.000000, 0.003197]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000800 in range [0.000000, 0.001599]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000197 in range [0.000000, 0.000393]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4005893070959573, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.39349969262558027, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4005893137601465, x5 : -0.3269568085670471, x6 : 0, x7 : 0, x8 : 4, x9 : -0.39694601303958393, x10 : -0.17585211247205734, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000099


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115530 in range [0.000000, 0.231060]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057766 in range [0.000000, 0.115531]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025782 in range [0.000000, 0.051564]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012891 in range [0.000000, 0.025783]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006446 in range [0.000000, 0.012892]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003224 in range [0.000000, 0.006447]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001601 in range [0.000000, 0.003203]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000801 in range [0.000000, 0.001602]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000401 in range [0.000000, 0.000802]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000201 in range [0.000000, 0.000402]...	no solution exists.
	Iteration #012: testing norm threshold 0.000302 in range [0.000201, 0.000402]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000252 in range [0.000201, 0.000303]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.4880564948375299, x5 : -0.295641844938672, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.39349969262558027, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.4902215795301646, x5 : -0.40748098492622375, x6 : 1, x7 : 5, x8 : 0, x9 : -0.39349969262558027, x10 : -0.04218607892094002, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000302


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098075 in range [0.000000, 0.196151]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049038 in range [0.000000, 0.098076]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024520 in range [0.000000, 0.049039]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012109 in range [0.000000, 0.024219]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001496 in range [0.000000, 0.002992]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000697 in range [0.000000, 0.001393]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000349 in range [0.000000, 0.000698]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000175 in range [0.000000, 0.000350]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3907804867563665, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.5391724769143141, x10 : -0.3747273409490208, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.3875722242573345, x5 : -0.18954157305175307, x6 : 0, x7 : 0, x8 : 2, x9 : 0.5391724769143141, x10 : -0.37472734094902077, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000175


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160807 in range [0.000000, 0.321614]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080404 in range [0.000000, 0.160808]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040202 in range [0.000000, 0.080405]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020102 in range [0.000000, 0.040203]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010051 in range [0.000000, 0.020103]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005026 in range [0.000000, 0.010052]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002514 in range [0.000000, 0.005027]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001135 in range [0.000000, 0.002269]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000365 in range [0.000000, 0.000731]...	no solution exists.
	Iteration #011: testing norm threshold 0.000548 in range [0.000365, 0.000731]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000457 in range [0.000365, 0.000549]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.8531070505332504, x5 : -0.295641844938672, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 1.0298199215537849, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.8575806175422226, x5 : -0.3985338509082794, x6 : 0, x7 : 2, x8 : 0, x9 : 1.034293488562757, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000428


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138432 in range [0.000000, 0.276865]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068994 in range [0.000000, 0.137989]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034359 in range [0.000000, 0.068719]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017180 in range [0.000000, 0.034359]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006712 in range [0.000000, 0.013425]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003357 in range [0.000000, 0.006713]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001679 in range [0.000000, 0.003358]...	no solution exists.
	Iteration #009: testing norm threshold 0.002518 in range [0.001679, 0.003358]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002023 in range [0.001679, 0.002367]...	no solution exists.
	Iteration #011: testing norm threshold 0.002195 in range [0.002023, 0.002367]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002110 in range [0.002023, 0.002196]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.32145232771072485, x5 : 0.053296271000710604, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : -0.21668980266541069, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.3001154065132141, x6 : 1, x7 : 1, x8 : 0, x9 : -0.2175136882862916, x10 : -0.04261550156529727, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002110


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.183540 in range [0.000000, 0.367081]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091771 in range [0.000000, 0.183541]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044392 in range [0.000000, 0.088783]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022100 in range [0.000000, 0.044201]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011051 in range [0.000000, 0.022101]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005526 in range [0.000000, 0.011052]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002170 in range [0.000000, 0.004341]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001086 in range [0.000000, 0.002171]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000505 in range [0.000000, 0.001010]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000220 in range [0.000000, 0.000441]...	no solution exists.
	Iteration #012: testing norm threshold 0.000331 in range [0.000220, 0.000441]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000276 in range [0.000220, 0.000332]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.13254402770981874, x5 : 1.520625784181704, x6 : 1.0, x7 : 0.0, x8 : 6.0, x9 : 0.2164944277370047, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.12968327947810684, x5 : 1.5177650359499921, x6 : 1, x7 : 0, x8 : 6, x9 : 0.20544381439685822, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000276


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095334 in range [0.000000, 0.190669]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047668 in range [0.000000, 0.095335]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023834 in range [0.000000, 0.047669]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011138 in range [0.000000, 0.022277]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003675 in range [0.000000, 0.007350]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001838 in range [0.000000, 0.003676]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000189 in range [0.000000, 0.000377]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000092 in range [0.000000, 0.000185]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.2298200357909821, x5 : -0.3672188943621351, x6 : 2.0, x7 : 4.0, x8 : 2.0, x9 : -0.11944436318731745, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.2298200357909821, x5 : -0.36945567160829074, x6 : 2, x7 : 4, x8 : 2, x9 : -0.11944436318731745, x10 : -0.23109523206949234, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000044


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.248763 in range [0.000000, 0.497526]...	solution exists & found.
	Iteration #003: testing norm threshold 0.124382 in range [0.000000, 0.248764]...	solution exists & found.
	Iteration #004: testing norm threshold 0.062163 in range [0.000000, 0.124326]...	solution exists & found.
	Iteration #005: testing norm threshold 0.031082 in range [0.000000, 0.062164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.015370 in range [0.000000, 0.030740]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006972 in range [0.000000, 0.013944]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003096 in range [0.000000, 0.006191]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000987 in range [0.000000, 0.001974]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000491 in range [0.000000, 0.000982]...	no solution exists.
	Iteration #011: testing norm threshold 0.000736 in range [0.000491, 0.000982]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000614 in range [0.000491, 0.000737]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000551 in range [0.000491, 0.000611]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.8943830950757816, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.1348817338048445, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.8929318992722257, x5 : -0.40602978912266785, x6 : 0, x7 : 0, x8 : 3, x9 : 2.1334305380012886, x10 : 0.21084972470998764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000610


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111430 in range [0.000000, 0.222860]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055716 in range [0.000000, 0.111431]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027858 in range [0.000000, 0.055717]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013930 in range [0.000000, 0.027859]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006965 in range [0.000000, 0.013931]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003346 in range [0.000000, 0.006693]...	no solution exists.
	Iteration #008: testing norm threshold 0.005019 in range [0.003346, 0.006693]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004183 in range [0.003346, 0.005020]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003715 in range [0.003346, 0.004083]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003485 in range [0.003346, 0.003623]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003416 in range [0.003346, 0.003486]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 0.8322815296423998, x5 : -0.2688004514048733, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.9723567073167296, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : 0.32830391824245453, x5 : -0.2545444453943451, x6 : 0, x7 : 4, x8 : 0, x9 : 1.028445145965747, x10 : 0.07910156148784558, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003416


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140393 in range [0.000000, 0.280787]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069296 in range [0.000000, 0.138592]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031211 in range [0.000000, 0.062422]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015120 in range [0.000000, 0.030240]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007325 in range [0.000000, 0.014651]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003590 in range [0.000000, 0.007180]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001795 in range [0.000000, 0.003591]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000898 in range [0.000000, 0.001796]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000450 in range [0.000000, 0.000899]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000225 in range [0.000000, 0.000451]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.03822524359515636, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.044104785025839394, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.04133671343739282, x5 : -0.3551602928864546, x6 : 0, x7 : 0, x8 : 0, x9 : 0.04566051994695762, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.212529 in range [0.000000, 0.425058]...	solution exists & found.
	Iteration #003: testing norm threshold 0.106265 in range [0.000000, 0.212530]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052196 in range [0.000000, 0.104391]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026098 in range [0.000000, 0.052197]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012152 in range [0.000000, 0.024304]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005452 in range [0.000000, 0.010905]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002727 in range [0.000000, 0.005453]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000839 in range [0.000000, 0.001679]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000371 in range [0.000000, 0.000741]...	no solution exists.
	Iteration #011: testing norm threshold 0.000556 in range [0.000371, 0.000741]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7598295403710067, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6643036199799239, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000445


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089427 in range [0.000000, 0.178854]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042379 in range [0.000000, 0.084758]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020730 in range [0.000000, 0.041461]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009729 in range [0.000000, 0.019459]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002578 in range [0.000000, 0.005156]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001289 in range [0.000000, 0.002579]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000645 in range [0.000000, 0.001290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000209 in range [0.000000, 0.000418]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000099 in range [0.000000, 0.000197]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.43770216511562265, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.5172122120857239, x5 : -0.31579954975284535, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4399122899118801, x10 : -0.2776504330878228, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000196


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129768 in range [0.000000, 0.259536]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064884 in range [0.000000, 0.129769]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032443 in range [0.000000, 0.064885]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014368 in range [0.000000, 0.028736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007184 in range [0.000000, 0.014369]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003338 in range [0.000000, 0.006677]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001670 in range [0.000000, 0.003339]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000547 in range [0.000000, 0.001094]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000274 in range [0.000000, 0.000548]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000275]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000139]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5130471199065506, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.43770216511562265, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5130471251310624, x5 : -0.35379820539636836, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4377021625033668, x10 : -0.23864102405280907, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173337 in range [0.000000, 0.346674]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086669 in range [0.000000, 0.173338]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042103 in range [0.000000, 0.084206]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020972 in range [0.000000, 0.041944]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010487 in range [0.000000, 0.020973]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005244 in range [0.000000, 0.010488]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002043 in range [0.000000, 0.004086]...	no solution exists.
	Iteration #009: testing norm threshold 0.003065 in range [0.002043, 0.004086]...	no solution exists.
	Iteration #010: testing norm threshold 0.003575 in range [0.003065, 0.004086]...	no solution exists.
	Iteration #011: testing norm threshold 0.003831 in range [0.003575, 0.004086]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003703 in range [0.003575, 0.003832]...	no solution exists.
	Iteration #013: testing norm threshold 0.003768 in range [0.003703, 0.003832]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 3.3813252866825168, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 3.5493608534862013, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 3.333426594734192, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 3.5438687714230217, x10 : -0.07641449198126793, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003768


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090958 in range [0.000000, 0.181916]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045479 in range [0.000000, 0.090959]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021907 in range [0.000000, 0.043815]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010887 in range [0.000000, 0.021774]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005444 in range [0.000000, 0.010888]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002722 in range [0.000000, 0.005445]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001362 in range [0.000000, 0.002723]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000569 in range [0.000000, 0.001138]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	no solution exists.
	Iteration #011: testing norm threshold 0.000397 in range [0.000265, 0.000530]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000331 in range [0.000265, 0.000398]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5880189951136129, x5 : -0.045122171956551146, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5915912024783332, x5 : -0.19274983555078506, x6 : 1, x7 : 3, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000397


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134891 in range [0.000000, 0.269781]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067150 in range [0.000000, 0.134300]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031049 in range [0.000000, 0.062099]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015525 in range [0.000000, 0.031050]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007763 in range [0.000000, 0.015526]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002678 in range [0.000000, 0.005356]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001339 in range [0.000000, 0.002679]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000670 in range [0.000000, 0.001340]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000319 in range [0.000000, 0.000637]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000160 in range [0.000000, 0.000320]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000080 in range [0.000000, 0.000161]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.76878548345223, x5 : -0.4115390249218039, x6 : 0, x7 : 6, x8 : 0, x9 : -0.684820479961782, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000160


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097192 in range [0.000000, 0.194383]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048244 in range [0.000000, 0.096488]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024122 in range [0.000000, 0.048245]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012062 in range [0.000000, 0.024123]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006031 in range [0.000000, 0.012063]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002638 in range [0.000000, 0.005275]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001319 in range [0.000000, 0.002639]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000660 in range [0.000000, 0.001320]...	no solution exists.
	Iteration #010: testing norm threshold 0.000990 in range [0.000660, 0.001320]...	no solution exists.
	Iteration #011: testing norm threshold 0.001155 in range [0.000990, 0.001320]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001073 in range [0.000990, 0.001156]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.30747840319296404, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.4507675319342294, x10 : -0.3747273409490208, x11 : 1.0, x12 : 14.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.30788590888698264, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : 0.6438632978260255, x10 : -0.37472734094902077, x11 : 1, x12 : 14, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148445 in range [0.000000, 0.296891]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073728 in range [0.000000, 0.147456]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035526 in range [0.000000, 0.071052]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017742 in range [0.000000, 0.035484]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008872 in range [0.000000, 0.017743]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004220 in range [0.000000, 0.008440]...	no solution exists.
	Iteration #008: testing norm threshold 0.006330 in range [0.004220, 0.008440]...	no solution exists.
	Iteration #009: testing norm threshold 0.007385 in range [0.006330, 0.008440]...	no solution exists.
	Iteration #010: testing norm threshold 0.007912 in range [0.007385, 0.008440]...	solution exists & found.
	Iteration #011: testing norm threshold 0.007649 in range [0.007385, 0.007913]...	solution exists & found.
	Iteration #012: testing norm threshold 0.007517 in range [0.007385, 0.007650]...	no solution exists.
	Iteration #013: testing norm threshold 0.007584 in range [0.007517, 0.007650]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.1946455931432007, x5 : 3.80214423455459, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : -0.4730641431076565, x10 : 0.9069130418204644, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.04239034838974476, x5 : 3.797818071598854, x6 : 2, x7 : 4, x8 : 0, x9 : -0.47739030606339267, x10 : 1.0659199637388934, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.007649


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142845 in range [0.000000, 0.285690]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071423 in range [0.000000, 0.142846]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035404 in range [0.000000, 0.070808]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017702 in range [0.000000, 0.035405]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008319 in range [0.000000, 0.016639]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004160 in range [0.000000, 0.008320]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001834 in range [0.000000, 0.003667]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000681 in range [0.000000, 0.001363]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.3314303696504035, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.625504932717144, x5 : -0.3269568085670471, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5504184663295746, x10 : -0.2200466050975312, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090919 in range [0.000000, 0.181839]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045460 in range [0.000000, 0.090920]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021369 in range [0.000000, 0.042739]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010276 in range [0.000000, 0.020552]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002826 in range [0.000000, 0.005653]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000762 in range [0.000000, 0.001524]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000382 in range [0.000000, 0.000763]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000191 in range [0.000000, 0.000383]...	no solution exists.
	Iteration #010: testing norm threshold 0.000287 in range [0.000191, 0.000383]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.2598533202269404, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6929333988331579, x5 : -0.39527232125065354, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6167221665382385, x10 : 0.04382461370215249, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000382


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089354 in range [0.000000, 0.178707]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044677 in range [0.000000, 0.089355]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022208 in range [0.000000, 0.044416]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010907 in range [0.000000, 0.021814]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003264 in range [0.000000, 0.006529]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001011 in range [0.000000, 0.002023]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000506 in range [0.000000, 0.001012]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000220 in range [0.000000, 0.000441]...	no solution exists.
	Iteration #010: testing norm threshold 0.000331 in range [0.000220, 0.000441]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000276 in range [0.000220, 0.000332]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.2509061890490075, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7650358974933624, x5 : -0.24498650959055868, x6 : 3, x7 : 6, x8 : 0, x9 : -0.635940645526686, x10 : -0.1427062340080738, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000331


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121041 in range [0.000000, 0.242081]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060463 in range [0.000000, 0.120926]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029032 in range [0.000000, 0.058065]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014517 in range [0.000000, 0.029033]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007098 in range [0.000000, 0.014195]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001763 in range [0.000000, 0.003526]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000851 in range [0.000000, 0.001702]...	no solution exists.
	Iteration #009: testing norm threshold 0.001276 in range [0.000851, 0.001702]...	no solution exists.
	Iteration #010: testing norm threshold 0.001489 in range [0.001276, 0.001702]...	no solution exists.
	Iteration #011: testing norm threshold 0.001595 in range [0.001489, 0.001702]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001543 in range [0.001489, 0.001596]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.31728722353255473, x5 : 0.3932872557621603, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3194973637608262, x5 : 0.34731675513120963, x6 : 1, x7 : 5, x8 : 0, x9 : -0.6565043926239014, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001543


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185934 in range [0.000000, 0.371868]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092968 in range [0.000000, 0.185935]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040708 in range [0.000000, 0.081417]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018831 in range [0.000000, 0.037663]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008609 in range [0.000000, 0.017219]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004082 in range [0.000000, 0.008164]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001790 in range [0.000000, 0.003579]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000895 in range [0.000000, 0.001791]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000448 in range [0.000000, 0.000896]...	no solution exists.
	Iteration #011: testing norm threshold 0.000672 in range [0.000448, 0.000896]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000561 in range [0.000448, 0.000673]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000505 in range [0.000448, 0.000562]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.1571596555396697, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.3524979707310938, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.1563368022971965, x5 : -0.2858718522438244, x6 : 0, x7 : 0, x8 : 4, x9 : 1.3516751174886206, x10 : -0.021171373140532523, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000505


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.067991 in range [0.000000, 0.135982]...	solution exists & found.
	Iteration #003: testing norm threshold 0.033745 in range [0.000000, 0.067491]...	solution exists & found.
	Iteration #004: testing norm threshold 0.015274 in range [0.000000, 0.030549]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007638 in range [0.000000, 0.015275]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003807 in range [0.000000, 0.007615]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001893 in range [0.000000, 0.003785]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000408 in range [0.000000, 0.000816]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000204 in range [0.000000, 0.000409]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.3862403853390264, x5 : -0.11669922138001425, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.4674243992052045, x10 : 0.13350936256301646, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.3862403853390264, x5 : -0.12788313758743755, x6 : 0, x7 : 0, x8 : 6, x9 : 1.4730163573089161, x10 : 0.12246073782444, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163384 in range [0.000000, 0.326768]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081692 in range [0.000000, 0.163385]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039420 in range [0.000000, 0.078839]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019710 in range [0.000000, 0.039421]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009856 in range [0.000000, 0.019711]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004758 in range [0.000000, 0.009516]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002380 in range [0.000000, 0.004759]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000888 in range [0.000000, 0.001776]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000445 in range [0.000000, 0.000889]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000223 in range [0.000000, 0.000446]...	no solution exists.
	Iteration #012: testing norm threshold 0.000334 in range [0.000223, 0.000446]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000279 in range [0.000223, 0.000335]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.3158086115493043, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.4551877791832336, x10 : 0.4428708342659957, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.3149684619382483, x5 : 0.24202617236953988, x6 : 0, x7 : 0, x8 : 0, x9 : 0.4543476295721776, x10 : 0.4420306846549397, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000334


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144059 in range [0.000000, 0.288118]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071436 in range [0.000000, 0.142872]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030264 in range [0.000000, 0.060528]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013560 in range [0.000000, 0.027121]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006781 in range [0.000000, 0.013561]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003391 in range [0.000000, 0.006782]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001251 in range [0.000000, 0.002502]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000520 in range [0.000000, 0.001040]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000219 in range [0.000000, 0.000438]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000062 in range [0.000000, 0.000123]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.392259098739617, x5 : -0.376166025540068, x6 : 0.0, x7 : 1.0, x8 : 3.0, x9 : -0.3095149948944997, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.3928656621572031, x5 : -0.3985338509082794, x6 : 0, x7 : 1, x8 : 3, x9 : -0.3097198349614144, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127950 in range [0.000000, 0.255901]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060758 in range [0.000000, 0.121517]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030380 in range [0.000000, 0.060759]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015190 in range [0.000000, 0.030381]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007122 in range [0.000000, 0.014245]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000457 in range [0.000000, 0.000914]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000222 in range [0.000000, 0.000443]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.01777867646021995, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.1350446465882271, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 3, x9 : -0.017267673012641028, x10 : -0.23965587122083626, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116732 in range [0.000000, 0.233464]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055450 in range [0.000000, 0.110899]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027725 in range [0.000000, 0.055451]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013863 in range [0.000000, 0.027726]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006215 in range [0.000000, 0.012431]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002717 in range [0.000000, 0.005434]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001359 in range [0.000000, 0.002718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000680 in range [0.000000, 0.001360]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000341 in range [0.000000, 0.000681]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000171 in range [0.000000, 0.000342]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.5040058738506862, x10 : -0.17585210913996274, x11 : 1.0, x12 : 15.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5177971216783844, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 5, x9 : -0.5037134250538543, x10 : -0.1755596603431309, x11 : 1, x12 : 15, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.076488 in range [0.000000, 0.152976]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036933 in range [0.000000, 0.073867]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018289 in range [0.000000, 0.036577]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009145 in range [0.000000, 0.018290]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004573 in range [0.000000, 0.009146]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002271 in range [0.000000, 0.004542]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001136 in range [0.000000, 0.002272]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000125 in range [0.000000, 0.000251]...	no solution exists.
	Iteration #010: testing norm threshold 0.000188 in range [0.000125, 0.000251]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7733661234378815, x5 : -0.4164281189441681, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6720343821629239, x10 : -0.37472734094902077, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000188


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164569 in range [0.000000, 0.329137]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082285 in range [0.000000, 0.164570]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040243 in range [0.000000, 0.080485]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019059 in range [0.000000, 0.038118]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009530 in range [0.000000, 0.019060]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004321 in range [0.000000, 0.008641]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002047 in range [0.000000, 0.004093]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000346 in range [0.000000, 0.000691]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000164 in range [0.000000, 0.000329]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000083 in range [0.000000, 0.000165]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.8485669491159105, x5 : -0.11669922138001425, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.0862590140657984, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.8475256560974906, x5 : -0.11957692946585548, x6 : 0, x7 : 0, x8 : 3, x9 : 2.0921677327915913, x10 : 0.2339882700377297, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000164


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105775 in range [0.000000, 0.211550]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052352 in range [0.000000, 0.104704]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026177 in range [0.000000, 0.052353]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013089 in range [0.000000, 0.026178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006545 in range [0.000000, 0.013090]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003273 in range [0.000000, 0.006546]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001347 in range [0.000000, 0.002695]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000674 in range [0.000000, 0.001348]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000183 in range [0.000000, 0.000365]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000092 in range [0.000000, 0.000184]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.6448518416247442, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.7999670646055642, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.6443988551151105, x5 : -0.2951888529946083, x6 : 0, x7 : 0, x8 : 6, x9 : 0.7995140780959306, x10 : -0.09805875405566632, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107323 in range [0.000000, 0.214647]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052617 in range [0.000000, 0.105235]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025293 in range [0.000000, 0.050585]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012323 in range [0.000000, 0.024646]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006162 in range [0.000000, 0.012324]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003081 in range [0.000000, 0.006163]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000750 in range [0.000000, 0.001500]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000376 in range [0.000000, 0.000751]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000148 in range [0.000000, 0.000295]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4598034013606439, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5234598815441132, x5 : -0.39409378827328667, x6 : 0, x7 : 0, x8 : 0, x9 : -0.45983690173799685, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091433 in range [0.000000, 0.182866]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045717 in range [0.000000, 0.091434]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022428 in range [0.000000, 0.044855]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011005 in range [0.000000, 0.022010]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005503 in range [0.000000, 0.011006]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002752 in range [0.000000, 0.005504]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001377 in range [0.000000, 0.002753]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000689 in range [0.000000, 0.001378]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000311 in range [0.000000, 0.000621]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	no solution exists.
	Iteration #012: testing norm threshold 0.000234 in range [0.000156, 0.000312]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5338726407974013, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5614690880877413, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.538512922270469, x5 : -0.38063958287239075, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5637892288242752, x10 : -0.2706494477644888, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000311


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111632 in range [0.000000, 0.223263]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055816 in range [0.000000, 0.111633]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023413 in range [0.000000, 0.046826]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011707 in range [0.000000, 0.023414]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002715 in range [0.000000, 0.005430]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000669 in range [0.000000, 0.001339]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000335 in range [0.000000, 0.000670]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000168 in range [0.000000, 0.000336]...	no solution exists.
	Iteration #010: testing norm threshold 0.000252 in range [0.000168, 0.000336]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5546981616882519, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.499585626601682, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5339555872070352, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4953758848297159, x10 : -0.2290956286179582, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000335


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.072084 in range [0.000000, 0.144168]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036043 in range [0.000000, 0.072085]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018022 in range [0.000000, 0.036044]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006219 in range [0.000000, 0.012439]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003079 in range [0.000000, 0.006158]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001540 in range [0.000000, 0.003080]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000714 in range [0.000000, 0.001428]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000357 in range [0.000000, 0.000715]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	no solution exists.
	Iteration #011: testing norm threshold 0.000269 in range [0.000179, 0.000358]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.17983878565294062, x5 : -0.3672188943621351, x6 : 0.0, x7 : 3.0, x8 : 2.0, x9 : -0.08408238519528352, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.18013540029922473, x5 : -0.3448510766029358, x6 : 0, x7 : 3, x8 : 2, x9 : -0.05063391704920101, x10 : -0.2531924769282341, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000357


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116644 in range [0.000000, 0.233288]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056223 in range [0.000000, 0.112445]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026317 in range [0.000000, 0.052634]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010827 in range [0.000000, 0.021654]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005269 in range [0.000000, 0.010538]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002347 in range [0.000000, 0.004693]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000812 in range [0.000000, 0.001625]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000301 in range [0.000000, 0.000601]...	no solution exists.
	Iteration #010: testing norm threshold 0.000451 in range [0.000301, 0.000601]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.3025064196304751, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.05785279448715218, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000353


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105945 in range [0.000000, 0.211890]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052973 in range [0.000000, 0.105946]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026453 in range [0.000000, 0.052905]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012751 in range [0.000000, 0.025503]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006342 in range [0.000000, 0.012685]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002805 in range [0.000000, 0.005610]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001403 in range [0.000000, 0.002806]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000548 in range [0.000000, 0.001096]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000250 in range [0.000000, 0.000500]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000125 in range [0.000000, 0.000251]...	no solution exists.
	Iteration #012: testing norm threshold 0.000188 in range [0.000125, 0.000251]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.3493246320062693, x6 : 0.0, x7 : 4.0, x8 : 2.0, x9 : -0.04430015995424538, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.15276560932397842, x5 : -0.32640427782963105, x6 : 0, x7 : 4, x8 : 2, x9 : -0.04595775216649361, x10 : -0.1764046398773788, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091532 in range [0.000000, 0.183064]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045376 in range [0.000000, 0.090752]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022631 in range [0.000000, 0.045263]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011239 in range [0.000000, 0.022478]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005618 in range [0.000000, 0.011237]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001408 in range [0.000000, 0.002815]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000584 in range [0.000000, 0.001169]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000293 in range [0.000000, 0.000585]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000147 in range [0.000000, 0.000294]...	no solution exists.
	Iteration #011: testing norm threshold 0.000220 in range [0.000147, 0.000294]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.735734139066148, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.62110893119531, x10 : 0.3323845943720745, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.7348202934436583, x5 : 0.16157525208436396, x6 : 0, x7 : 0, x8 : 6, x9 : 2.6201955255102534, x10 : 0.28457403246483187, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000293


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113601 in range [0.000000, 0.227201]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050912 in range [0.000000, 0.101824]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024178 in range [0.000000, 0.048356]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012089 in range [0.000000, 0.024179]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006045 in range [0.000000, 0.012090]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003023 in range [0.000000, 0.006046]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000359 in range [0.000000, 0.000718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000079 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7400452792644501, x5 : -0.34875214477375904, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6565043926239014, x10 : -0.24895747618052214, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.068492 in range [0.000000, 0.136983]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034246 in range [0.000000, 0.068493]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016998 in range [0.000000, 0.033996]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007650 in range [0.000000, 0.015301]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001444 in range [0.000000, 0.002889]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000723 in range [0.000000, 0.001445]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000362 in range [0.000000, 0.000724]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000140 in range [0.000000, 0.000280]...	no solution exists.
	Iteration #010: testing norm threshold 0.000210 in range [0.000140, 0.000280]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.5505330575100817, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5349476045937159, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 3, x4 : -0.5776062309741974, x5 : -0.3850851760722308, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5394491454118202, x10 : -0.2619903306460475, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170903 in range [0.000000, 0.341806]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085387 in range [0.000000, 0.170774]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038157 in range [0.000000, 0.076314]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019079 in range [0.000000, 0.038158]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009246 in range [0.000000, 0.018492]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003867 in range [0.000000, 0.007733]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001549 in range [0.000000, 0.003097]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000775 in range [0.000000, 0.001550]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000388 in range [0.000000, 0.000776]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000277]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000070 in range [0.000000, 0.000139]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2381502441473224, x5 : -0.3582717631842022, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.1282848576853259, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2385780083658256, x5 : -0.38063958287239075, x6 : 0, x7 : 2, x8 : 0, x9 : -0.12925669499835393, x10 : -0.19932441762934, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100027 in range [0.000000, 0.200054]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050014 in range [0.000000, 0.100028]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024748 in range [0.000000, 0.049495]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012374 in range [0.000000, 0.024749]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006124 in range [0.000000, 0.012247]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003031 in range [0.000000, 0.006061]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001406 in range [0.000000, 0.002811]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000694 in range [0.000000, 0.001388]...	no solution exists.
	Iteration #010: testing norm threshold 0.001041 in range [0.000694, 0.001388]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000868 in range [0.000694, 0.001042]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000782 in range [0.000694, 0.000869]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5505330575100817, x5 : -0.09880495902414847, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.4598034013606439, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5324047903000089, x5 : -0.33590394258499146, x6 : 2, x7 : 6, x8 : 0, x9 : -0.48190462589263916, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000868


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155372 in range [0.000000, 0.310745]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077588 in range [0.000000, 0.155176]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038727 in range [0.000000, 0.077453]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019352 in range [0.000000, 0.038703]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009676 in range [0.000000, 0.019353]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004756 in range [0.000000, 0.009513]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001866 in range [0.000000, 0.003731]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000643 in range [0.000000, 0.001286]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000307 in range [0.000000, 0.000614]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000154 in range [0.000000, 0.000308]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.758788266418588, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6811763230942285, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171694 in range [0.000000, 0.343389]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083990 in range [0.000000, 0.167979]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041967 in range [0.000000, 0.083934]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020625 in range [0.000000, 0.041250]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009957 in range [0.000000, 0.019914]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003069 in range [0.000000, 0.006137]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001484 in range [0.000000, 0.002968]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000743 in range [0.000000, 0.001485]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7681597426202751, x5 : -0.4164281189441681, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3315741128367993, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000033


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.077455 in range [0.000000, 0.154910]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038728 in range [0.000000, 0.077456]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019186 in range [0.000000, 0.038371]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009593 in range [0.000000, 0.019187]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004541 in range [0.000000, 0.009083]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001814 in range [0.000000, 0.003628]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000875 in range [0.000000, 0.001750]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000352 in range [0.000000, 0.000705]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000164 in range [0.000000, 0.000327]...	no solution exists.
	Iteration #011: testing norm threshold 0.000246 in range [0.000164, 0.000327]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.769201010465622, x5 : -0.3437460217296961, x6 : 2, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : -0.2714525019557597, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000246


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150319 in range [0.000000, 0.300639]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070395 in range [0.000000, 0.140789]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034356 in range [0.000000, 0.068713]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016421 in range [0.000000, 0.032843]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007975 in range [0.000000, 0.015950]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002998 in range [0.000000, 0.005997]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000829 in range [0.000000, 0.001658]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000415 in range [0.000000, 0.000830]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000201 in range [0.000000, 0.000402]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000101 in range [0.000000, 0.000202]...	no solution exists.
	Iteration #012: testing norm threshold 0.000151 in range [0.000101, 0.000202]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6963117037460361, x5 : -0.2688004514048733, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7150546610355377, x5 : -0.2697088612600183, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5981327838685335, x10 : 0.023477327596667822, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000201


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120407 in range [0.000000, 0.240814]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058317 in range [0.000000, 0.116634]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019124 in range [0.000000, 0.038248]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009346 in range [0.000000, 0.018691]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004673 in range [0.000000, 0.009347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002337 in range [0.000000, 0.004674]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001165 in range [0.000000, 0.002330]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000583 in range [0.000000, 0.001166]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000292 in range [0.000000, 0.000584]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000147 in range [0.000000, 0.000293]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000148]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.3839288903832768, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3183554893925082, x10 : -0.2642411010550996, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.3855632924745257, x5 : -0.3716924637556076, x6 : 0, x7 : 0, x8 : 0, x9 : -0.31998989148375706, x10 : -0.2515580748369852, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.076016 in range [0.000000, 0.152032]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037575 in range [0.000000, 0.075150]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018788 in range [0.000000, 0.037576]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009210 in range [0.000000, 0.018420]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003112 in range [0.000000, 0.006223]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001556 in range [0.000000, 0.003113]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000712 in range [0.000000, 0.001423]...	no solution exists.
	Iteration #009: testing norm threshold 0.001067 in range [0.000712, 0.001423]...	no solution exists.
	Iteration #010: testing norm threshold 0.001245 in range [0.001067, 0.001423]...	no solution exists.
	Iteration #011: testing norm threshold 0.001334 in range [0.001245, 0.001423]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.5422028491537415, x5 : 0.20539750102556967, x6 : 1.0, x7 : 1.0, x8 : 2.0, x9 : -0.5172666155976989, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.5422028491537415, x5 : -0.30906254053115845, x6 : 1, x7 : 1, x8 : 2, x9 : -0.5211268213038232, x10 : 0.02302312266909531, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001334


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178143 in range [0.000000, 0.356285]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088989 in range [0.000000, 0.177978]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042271 in range [0.000000, 0.084541]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020060 in range [0.000000, 0.040119]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006783 in range [0.000000, 0.013566]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003392 in range [0.000000, 0.006784]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001347 in range [0.000000, 0.002694]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000333 in range [0.000000, 0.000665]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000167 in range [0.000000, 0.000334]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000084 in range [0.000000, 0.000168]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4553831541116396, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5159496998056133, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.45664629655008615, x10 : -0.25221377666306105, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000167


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088825 in range [0.000000, 0.177649]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044402 in range [0.000000, 0.088804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022201 in range [0.000000, 0.044403]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011101 in range [0.000000, 0.022202]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004828 in range [0.000000, 0.009657]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002415 in range [0.000000, 0.004829]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000871 in range [0.000000, 0.001742]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000436 in range [0.000000, 0.000872]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000187 in range [0.000000, 0.000375]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000087 in range [0.000000, 0.000175]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5338726407974013, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4907451321036735, x10 : -0.17585210913996274, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5345326325748813, x5 : -0.36416165138464923, x6 : 0, x7 : 0, x8 : 5, x9 : -0.4920929959031838, x10 : -0.18690072745084763, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111989 in range [0.000000, 0.223977]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055995 in range [0.000000, 0.111990]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027998 in range [0.000000, 0.055996]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012646 in range [0.000000, 0.025293]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006324 in range [0.000000, 0.012647]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003162 in range [0.000000, 0.006325]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001582 in range [0.000000, 0.003163]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000551 in range [0.000000, 0.001101]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000276 in range [0.000000, 0.000552]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000277]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000070 in range [0.000000, 0.000139]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.2699924655894329, x5 : -0.4298488126076653, x6 : 0.0, x7 : 5.0, x8 : 1.0, x9 : 0.4109853066931912, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.2690611189752252, x5 : -0.37970823625818306, x6 : 0, x7 : 5, x8 : 1, x9 : 0.41005396007898354, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000138


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097238 in range [0.000000, 0.194476]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048619 in range [0.000000, 0.097239]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024310 in range [0.000000, 0.048620]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012134 in range [0.000000, 0.024269]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006053 in range [0.000000, 0.012107]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003027 in range [0.000000, 0.006054]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000549 in range [0.000000, 0.001098]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000275 in range [0.000000, 0.000550]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000070 in range [0.000000, 0.000139]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.361413900018217, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119212 in range [0.000000, 0.238423]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059195 in range [0.000000, 0.118391]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029598 in range [0.000000, 0.059196]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014800 in range [0.000000, 0.029599]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007400 in range [0.000000, 0.014801]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002876 in range [0.000000, 0.005752]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001438 in range [0.000000, 0.002877]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000491 in range [0.000000, 0.000981]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000215 in range [0.000000, 0.000430]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000216]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000055 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.769201010465622, x5 : -0.38043328618177474, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.26444739774571563, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102838 in range [0.000000, 0.205677]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050307 in range [0.000000, 0.100614]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024039 in range [0.000000, 0.048079]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012020 in range [0.000000, 0.024040]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005873 in range [0.000000, 0.011746]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002801 in range [0.000000, 0.005601]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001364 in range [0.000000, 0.002727]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000682 in range [0.000000, 0.001365]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000324 in range [0.000000, 0.000648]...	no solution exists.
	Iteration #011: testing norm threshold 0.000486 in range [0.000324, 0.000648]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : -0.10775209020208136, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6231672465801239, x5 : -0.13906705379486084, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.22667501121759415, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000409


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109665 in range [0.000000, 0.219330]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054695 in range [0.000000, 0.109390]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026870 in range [0.000000, 0.053740]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012421 in range [0.000000, 0.024842]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006211 in range [0.000000, 0.012422]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002801 in range [0.000000, 0.005601]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000746 in range [0.000000, 0.001493]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000364 in range [0.000000, 0.000729]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000183 in range [0.000000, 0.000365]...	no solution exists.
	Iteration #011: testing norm threshold 0.000274 in range [0.000183, 0.000365]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5921840992917831, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6066384665757417, x5 : -0.3895867168903351, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6123019158840179, x10 : -0.2640380461164578, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000272


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.247058 in range [0.000000, 0.494117]...	solution exists & found.
	Iteration #003: testing norm threshold 0.122127 in range [0.000000, 0.244254]...	solution exists & found.
	Iteration #004: testing norm threshold 0.061064 in range [0.000000, 0.122128]...	solution exists & found.
	Iteration #005: testing norm threshold 0.030487 in range [0.000000, 0.060974]...	solution exists & found.
	Iteration #006: testing norm threshold 0.014247 in range [0.000000, 0.028494]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006557 in range [0.000000, 0.013114]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002942 in range [0.000000, 0.005885]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001341 in range [0.000000, 0.002681]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000650 in range [0.000000, 0.001299]...	no solution exists.
	Iteration #011: testing norm threshold 0.000974 in range [0.000650, 0.001299]...	no solution exists.
	Iteration #012: testing norm threshold 0.001137 in range [0.000974, 0.001299]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001056 in range [0.000974, 0.001138]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 1.2904429892411136, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.427642173964166, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 1.111343502998352, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 6, x9 : 1.4238107787842358, x10 : 0.0854834714255177, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001137


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140364 in range [0.000000, 0.280728]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069593 in range [0.000000, 0.139186]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034797 in range [0.000000, 0.069594]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015134 in range [0.000000, 0.030268]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004233 in range [0.000000, 0.008465]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002117 in range [0.000000, 0.004234]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001059 in range [0.000000, 0.002118]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000286 in range [0.000000, 0.000572]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000143 in range [0.000000, 0.000287]...	no solution exists.
	Iteration #011: testing norm threshold 0.000215 in range [0.000143, 0.000287]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.4528820521897483, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.6574950309123866, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.4524211675498744, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 3, x9 : 1.6577254732323234, x10 : 0.1892133644911198, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000215


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150613 in range [0.000000, 0.301227]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075307 in range [0.000000, 0.150614]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036426 in range [0.000000, 0.072851]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018014 in range [0.000000, 0.036029]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007165 in range [0.000000, 0.014330]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003583 in range [0.000000, 0.007166]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001792 in range [0.000000, 0.003584]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000897 in range [0.000000, 0.001793]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000449 in range [0.000000, 0.000898]...	no solution exists.
	Iteration #011: testing norm threshold 0.000673 in range [0.000449, 0.000898]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000561 in range [0.000449, 0.000674]...	no solution exists.
	Iteration #013: testing norm threshold 0.000618 in range [0.000561, 0.000674]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.681587784749936, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.8995845078825777, x10 : 0.26609285043572184, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 2.67974536717398, x5 : -0.40563856735026793, x6 : 0, x7 : 0, x8 : 4, x9 : 2.8977420903066218, x10 : 0.26793526933395906, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000673


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.191743 in range [0.000000, 0.383486]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091097 in range [0.000000, 0.182193]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045533 in range [0.000000, 0.091066]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022767 in range [0.000000, 0.045534]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011139 in range [0.000000, 0.022277]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004144 in range [0.000000, 0.008289]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002073 in range [0.000000, 0.004145]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001037 in range [0.000000, 0.002074]...	no solution exists.
	Iteration #010: testing norm threshold 0.001555 in range [0.001037, 0.002074]...	no solution exists.
	Iteration #011: testing norm threshold 0.001814 in range [0.001555, 0.002074]...	no solution exists.
	Iteration #012: testing norm threshold 0.001944 in range [0.001814, 0.002074]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001867 in range [0.001814, 0.001919]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.03406013941698623, x5 : 0.07119053335657638, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.08830725751588178, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.10486691072583199, x5 : -0.3851131498813629, x6 : 0, x7 : 0, x8 : 0, x9 : 0.05957564897835255, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001918


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117382 in range [0.000000, 0.234763]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058691 in range [0.000000, 0.117383]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029346 in range [0.000000, 0.058692]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014674 in range [0.000000, 0.029347]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006492 in range [0.000000, 0.012984]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003246 in range [0.000000, 0.006493]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001479 in range [0.000000, 0.002958]...	no solution exists.
	Iteration #009: testing norm threshold 0.002218 in range [0.001479, 0.002958]...	no solution exists.
	Iteration #010: testing norm threshold 0.002588 in range [0.002218, 0.002958]...	no solution exists.
	Iteration #011: testing norm threshold 0.002773 in range [0.002588, 0.002958]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002681 in range [0.002588, 0.002774]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.0238763218382256, x5 : 0.4022343869400932, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 1.2110500587629585, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.0204112801497935, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : 1.2075850170745264, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002681


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104387 in range [0.000000, 0.208774]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050919 in range [0.000000, 0.101837]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025335 in range [0.000000, 0.050670]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011795 in range [0.000000, 0.023590]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005898 in range [0.000000, 0.011796]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002949 in range [0.000000, 0.005899]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001441 in range [0.000000, 0.002883]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000721 in range [0.000000, 0.001442]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000722]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000357]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000090 in range [0.000000, 0.000179]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.6319815318510638, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.7503202231414756, x10 : 0.15560661054180067, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 1.6319815318510638, x5 : -0.008282902264217532, x6 : 0, x7 : 0, x8 : 0, x9 : 1.7530823782434852, x10 : 0.15008230033778153, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143764 in range [0.000000, 0.287528]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071883 in range [0.000000, 0.143765]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035942 in range [0.000000, 0.071884]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017944 in range [0.000000, 0.035889]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008571 in range [0.000000, 0.017143]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003111 in range [0.000000, 0.006223]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001556 in range [0.000000, 0.003112]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000779 in range [0.000000, 0.001557]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000266 in range [0.000000, 0.000532]...	no solution exists.
	Iteration #011: testing norm threshold 0.000399 in range [0.000266, 0.000532]...	no solution exists.
	Iteration #012: testing norm threshold 0.000466 in range [0.000399, 0.000532]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.5445143441094913, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.763580964888488, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 1.5425930901268274, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 3, x9 : 1.7563735036735144, x10 : 0.21084972470998764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000466


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143826 in range [0.000000, 0.287653]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071914 in range [0.000000, 0.143827]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035953 in range [0.000000, 0.071906]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017535 in range [0.000000, 0.035071]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006714 in range [0.000000, 0.013429]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003358 in range [0.000000, 0.006715]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000814 in range [0.000000, 0.001628]...	no solution exists.
	Iteration #009: testing norm threshold 0.001221 in range [0.000814, 0.001628]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000939 in range [0.000814, 0.001063]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000877 in range [0.000814, 0.000940]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 5.014046124525206, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 5.246735797103828, x10 : 0.8406212978841117, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : 5.011861409945542, x5 : -0.19722340255975723, x6 : 0, x7 : 0, x8 : 0, x9 : 5.244551082524165, x10 : 0.8074754178524017, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000939


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074905 in range [0.000000, 0.149809]...	solution exists & found.
	Iteration #003: testing norm threshold 0.031809 in range [0.000000, 0.063617]...	solution exists & found.
	Iteration #004: testing norm threshold 0.015780 in range [0.000000, 0.031561]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007890 in range [0.000000, 0.015780]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003379 in range [0.000000, 0.006758]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001004 in range [0.000000, 0.002007]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000502 in range [0.000000, 0.001005]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000252 in range [0.000000, 0.000503]...	no solution exists.
	Iteration #010: testing norm threshold 0.000377 in range [0.000252, 0.000503]...	no solution exists.
	Iteration #011: testing norm threshold 0.000440 in range [0.000377, 0.000503]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2533320488767524, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.3933043176971743, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2578056158857246, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 0.3797113257312866, x10 : -0.13375910371541977, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000440


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160576 in range [0.000000, 0.321152]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079113 in range [0.000000, 0.158227]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038269 in range [0.000000, 0.076538]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015939 in range [0.000000, 0.031879]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007543 in range [0.000000, 0.015086]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003772 in range [0.000000, 0.007544]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001537 in range [0.000000, 0.003073]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000743 in range [0.000000, 0.001486]...	no solution exists.
	Iteration #010: testing norm threshold 0.001114 in range [0.000743, 0.001486]...	no solution exists.
	Iteration #011: testing norm threshold 0.001300 in range [0.001114, 0.001486]...	no solution exists.
	Iteration #012: testing norm threshold 0.001393 in range [0.001300, 0.001486]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.42974503634314815, x5 : -0.02722790960068537, x6 : 2.0, x7 : 2.0, x8 : 0.0, x9 : -0.3316162311395209, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.39740624128682067, x5 : -0.3716924488544464, x6 : 2, x7 : 2, x8 : 0, x9 : -0.35592760145664215, x10 : -0.31838371454579284, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001393


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162528 in range [0.000000, 0.325055]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077474 in range [0.000000, 0.154949]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037768 in range [0.000000, 0.075537]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018535 in range [0.000000, 0.037069]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006129 in range [0.000000, 0.012257]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002075 in range [0.000000, 0.004150]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000170 in range [0.000000, 0.000340]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000079 in range [0.000000, 0.000158]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.7650358974933624, x5 : -0.4042280512937299, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6880297914926173, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.072752 in range [0.000000, 0.145504]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036370 in range [0.000000, 0.072740]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018123 in range [0.000000, 0.036246]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009062 in range [0.000000, 0.018124]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004532 in range [0.000000, 0.009063]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002263 in range [0.000000, 0.004527]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001132 in range [0.000000, 0.002264]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000567 in range [0.000000, 0.001133]...	no solution exists.
	Iteration #010: testing norm threshold 0.000850 in range [0.000567, 0.001133]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000698 in range [0.000567, 0.000830]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000628 in range [0.000567, 0.000690]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6504955577861647, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.6189323023247965, x10 : -0.3747273409490208, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5705556854820658, x5 : -0.38878381105427046, x6 : 0, x7 : 0, x8 : 3, x9 : -0.6520841419696808, x10 : -0.36287580283645887, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000689


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107674 in range [0.000000, 0.215348]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053826 in range [0.000000, 0.107653]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026880 in range [0.000000, 0.053760]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013403 in range [0.000000, 0.026807]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006494 in range [0.000000, 0.012987]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001296 in range [0.000000, 0.002592]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000649 in range [0.000000, 0.001297]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000325 in range [0.000000, 0.000650]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6463304536079947, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.5835703243327625, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6427474002565884, x5 : -0.3101132902078333, x6 : 0, x7 : 0, x8 : 5, x9 : -0.6034614443778992, x10 : -0.269765415146328, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185500 in range [0.000000, 0.371000]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092709 in range [0.000000, 0.185417]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042146 in range [0.000000, 0.084291]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021073 in range [0.000000, 0.042147]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010308 in range [0.000000, 0.020617]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005155 in range [0.000000, 0.010309]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001664 in range [0.000000, 0.003328]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000579 in range [0.000000, 0.001158]...	no solution exists.
	Iteration #010: testing norm threshold 0.000868 in range [0.000579, 0.001158]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000724 in range [0.000579, 0.000869]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000652 in range [0.000579, 0.000725]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : 1.50702840650596, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.5646698386832976, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 3, x4 : 1.488285481929779, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 1.638904398545123, x10 : 0.06370701843282864, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000652


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111105 in range [0.000000, 0.222210]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055139 in range [0.000000, 0.110278]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026999 in range [0.000000, 0.053998]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013298 in range [0.000000, 0.026596]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005422 in range [0.000000, 0.010845]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002187 in range [0.000000, 0.004374]...	no solution exists.
	Iteration #008: testing norm threshold 0.003280 in range [0.002187, 0.004374]...	solution exists & found.
	Iteration #009: testing norm threshold 0.002631 in range [0.002187, 0.003076]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002410 in range [0.002187, 0.002632]...	no solution exists.
	Iteration #011: testing norm threshold 0.002521 in range [0.002410, 0.002632]...	no solution exists.
	Iteration #012: testing norm threshold 0.002577 in range [0.002521, 0.002632]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.27415756976760297, x5 : 1.0553749629291942, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.11588361114263535, x5 : 1.5134006023279865, x6 : 2, x7 : 3, x8 : 0, x9 : -0.6962866187095642, x10 : -0.18070525379259994, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002577


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164754 in range [0.000000, 0.329509]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080880 in range [0.000000, 0.161760]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040153 in range [0.000000, 0.080307]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020065 in range [0.000000, 0.040131]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009392 in range [0.000000, 0.018785]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004511 in range [0.000000, 0.009022]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002203 in range [0.000000, 0.004406]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001102 in range [0.000000, 0.002204]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000552 in range [0.000000, 0.001103]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000260 in range [0.000000, 0.000519]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000130 in range [0.000000, 0.000261]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000066 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4963867031938701, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.464223648609648, x10 : -0.3747273409490208, x11 : 2.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.4991661438167965, x5 : -0.3537981313746088, x6 : 0, x7 : 6, x8 : 0, x9 : -0.46422366259978703, x10 : -0.36367869468238445, x11 : 2, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114454 in range [0.000000, 0.228907]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057227 in range [0.000000, 0.114455]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027245 in range [0.000000, 0.054490]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013623 in range [0.000000, 0.027246]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006542 in range [0.000000, 0.013085]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002974 in range [0.000000, 0.005948]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001457 in range [0.000000, 0.002914]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000543 in range [0.000000, 0.001086]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	no solution exists.
	Iteration #011: testing norm threshold 0.000387 in range [0.000258, 0.000516]...	no solution exists.
	Iteration #012: testing norm threshold 0.000451 in range [0.000387, 0.000516]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5338726407974013, x5 : -0.15248774609174578, x6 : 1.0, x7 : 0.0, x8 : 2.0, x9 : -0.5835703243327625, x10 : 0.0009258746903110836, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5376250178239971, x5 : -0.3180096745491028, x6 : 1, x7 : 0, x8 : 2, x9 : -0.5829629010415522, x10 : -0.0002889718921094102, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000451


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.193242 in range [0.000000, 0.386483]...	solution exists & found.
	Iteration #003: testing norm threshold 0.096621 in range [0.000000, 0.193243]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048311 in range [0.000000, 0.096622]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024156 in range [0.000000, 0.048312]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012078 in range [0.000000, 0.024155]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006021 in range [0.000000, 0.012042]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002897 in range [0.000000, 0.005794]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001280 in range [0.000000, 0.002559]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000477 in range [0.000000, 0.000954]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000239 in range [0.000000, 0.000478]...	no solution exists.
	Iteration #012: testing norm threshold 0.000359 in range [0.000239, 0.000478]...	no solution exists.
	Iteration #013: testing norm threshold 0.000418 in range [0.000359, 0.000478]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.0034257981865448896, x5 : -0.2688004514048733, x6 : 0.0, x7 : 1.0, x8 : 3.0, x9 : 0.11924898825891145, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.0028732672824124447, x5 : -0.3985338509082794, x6 : 0, x7 : 1, x8 : 3, x9 : 0.11834239555141093, x10 : -0.17516546973098354, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000418


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141881 in range [0.000000, 0.283762]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065312 in range [0.000000, 0.130624]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032586 in range [0.000000, 0.065171]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015323 in range [0.000000, 0.030645]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006954 in range [0.000000, 0.013907]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003477 in range [0.000000, 0.006955]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001423 in range [0.000000, 0.002846]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000670 in range [0.000000, 0.001340]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000336 in range [0.000000, 0.000671]...	no solution exists.
	Iteration #011: testing norm threshold 0.000503 in range [0.000336, 0.000671]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000420 in range [0.000336, 0.000504]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6338351410734843, x5 : -0.12564635255794712, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6275874674320221, x5 : -0.13906705379486084, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.1381554918616085, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000420


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.063544 in range [0.000000, 0.127087]...	solution exists & found.
	Iteration #003: testing norm threshold 0.031385 in range [0.000000, 0.062769]...	solution exists & found.
	Iteration #004: testing norm threshold 0.015520 in range [0.000000, 0.031040]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006994 in range [0.000000, 0.013988]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003498 in range [0.000000, 0.006995]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001706 in range [0.000000, 0.003413]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000788 in range [0.000000, 0.001576]...	no solution exists.
	Iteration #009: testing norm threshold 0.001182 in range [0.000788, 0.001576]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000985 in range [0.000788, 0.001183]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000887 in range [0.000788, 0.000986]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5505330575100817, x5 : -0.18827627080347734, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.608844518661499, x5 : 0.02822898142039776, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5283172428607941, x10 : -0.03898844171611716, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000985


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153837 in range [0.000000, 0.307674]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076034 in range [0.000000, 0.152068]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036653 in range [0.000000, 0.073306]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018327 in range [0.000000, 0.036654]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008665 in range [0.000000, 0.017329]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002589 in range [0.000000, 0.005178]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000359 in range [0.000000, 0.000719]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000109 in range [0.000000, 0.000219]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.998510699530035, x5 : 5.528940551895636, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 1.9984854566936405, x5 : 5.528915309059242, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6785804030586097, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000109


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074812 in range [0.000000, 0.149624]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037407 in range [0.000000, 0.074813]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018386 in range [0.000000, 0.036773]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008608 in range [0.000000, 0.017216]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003819 in range [0.000000, 0.007638]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001714 in range [0.000000, 0.003429]...	no solution exists.
	Iteration #008: testing norm threshold 0.002571 in range [0.001714, 0.003429]...	solution exists & found.
	Iteration #009: testing norm threshold 0.002102 in range [0.001714, 0.002489]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001908 in range [0.001714, 0.002103]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001812 in range [0.001714, 0.001909]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3839288903832768, x5 : -0.3851131567180008, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.2829935114004743, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5317901074886322, x5 : -0.38371511286394094, x6 : 1, x7 : 5, x8 : 0, x9 : -0.285789599108594, x10 : -0.07361840427314827, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001908


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196779 in range [0.000000, 0.393558]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098390 in range [0.000000, 0.196780]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049196 in range [0.000000, 0.098391]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021033 in range [0.000000, 0.042065]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010517 in range [0.000000, 0.021034]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005106 in range [0.000000, 0.010212]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001841 in range [0.000000, 0.003681]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000374 in range [0.000000, 0.000749]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000188 in range [0.000000, 0.000375]...	no solution exists.
	Iteration #011: testing norm threshold 0.000281 in range [0.000188, 0.000375]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6629908703206752, x5 : 1.4758901282920396, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.679651290178299, x5 : 1.4749664020652977, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6865223911743812, x10 : -0.3406577375870398, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000281


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122100 in range [0.000000, 0.244199]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060904 in range [0.000000, 0.121807]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029131 in range [0.000000, 0.058262]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014183 in range [0.000000, 0.028365]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007092 in range [0.000000, 0.014184]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003546 in range [0.000000, 0.007093]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001419 in range [0.000000, 0.002838]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000649 in range [0.000000, 0.001298]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000325 in range [0.000000, 0.000650]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	no solution exists.
	Iteration #012: testing norm threshold 0.000244 in range [0.000163, 0.000326]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.7448143419008272, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.9148934930796744, x10 : -0.04326862126725737, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.7444045682550665, x5 : -0.29272634106118234, x6 : 0, x7 : 0, x8 : 1, x9 : 0.9141130363768268, x10 : -0.03181022303008828, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000244


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131365 in range [0.000000, 0.262730]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060132 in range [0.000000, 0.120265]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030067 in range [0.000000, 0.060133]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015034 in range [0.000000, 0.030068]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007342 in range [0.000000, 0.014685]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003672 in range [0.000000, 0.007343]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001834 in range [0.000000, 0.003667]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000917 in range [0.000000, 0.001835]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000230 in range [0.000000, 0.000460]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000116 in range [0.000000, 0.000231]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.32277573664151243, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4226288530069587, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 5, x9 : -0.3239897616616632, x10 : -0.24441337599872212, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000101


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.217712 in range [0.000000, 0.435425]...	solution exists & found.
	Iteration #003: testing norm threshold 0.108857 in range [0.000000, 0.217713]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054160 in range [0.000000, 0.108320]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027080 in range [0.000000, 0.054161]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012573 in range [0.000000, 0.025146]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005998 in range [0.000000, 0.011997]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002738 in range [0.000000, 0.005477]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001370 in range [0.000000, 0.002739]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000661 in range [0.000000, 0.001321]...	no solution exists.
	Iteration #011: testing norm threshold 0.000991 in range [0.000661, 0.001321]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000826 in range [0.000661, 0.000992]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000715 in range [0.000661, 0.000769]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 1.2487919474594122, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.405540937719145, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 1.232131540775299, x5 : -0.26880045235157013, x6 : 0, x7 : 0, x8 : 4, x9 : 1.4042442721321202, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000715


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123484 in range [0.000000, 0.246969]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061448 in range [0.000000, 0.122896]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028932 in range [0.000000, 0.057864]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014466 in range [0.000000, 0.028933]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007122 in range [0.000000, 0.014243]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003561 in range [0.000000, 0.007123]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001781 in range [0.000000, 0.003562]...	no solution exists.
	Iteration #009: testing norm threshold 0.002672 in range [0.001781, 0.003562]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001859 in range [0.001781, 0.001937]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.83190653240323, x5 : 2.4958630825763892, x6 : 1.0, x7 : 0.0, x8 : 4.0, x9 : 2.0508970360737644, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.8256588578224182, x5 : 2.4833677334147657, x6 : 1, x7 : 0, x8 : 4, x9 : 1.9691224694252014, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001936


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108996 in range [0.000000, 0.217992]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054446 in range [0.000000, 0.108892]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027224 in range [0.000000, 0.054447]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012006 in range [0.000000, 0.024012]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002864 in range [0.000000, 0.005727]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001432 in range [0.000000, 0.002865]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000616 in range [0.000000, 0.001233]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000268 in range [0.000000, 0.000536]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000135 in range [0.000000, 0.000269]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.7947955920388686, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8441695370956066, x10 : -0.04326862126725737, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.7906304895877838, x5 : -0.29787862572594304, x6 : 0, x7 : 0, x8 : 0, x9 : 0.839749276638031, x10 : -0.04550540205452842, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106947 in range [0.000000, 0.213894]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053474 in range [0.000000, 0.106948]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025946 in range [0.000000, 0.051891]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012973 in range [0.000000, 0.025947]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003734 in range [0.000000, 0.007468]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001827 in range [0.000000, 0.003654]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000914 in range [0.000000, 0.001828]...	no solution exists.
	Iteration #009: testing norm threshold 0.001371 in range [0.000914, 0.001828]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001143 in range [0.000914, 0.001372]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001029 in range [0.000914, 0.001144]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000972 in range [0.000914, 0.001030]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.32978253606706515, x5 : -0.15248774609174578, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3269268920762906, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5166388726120393, x10 : 0.17223859646337428, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001029


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109016 in range [0.000000, 0.218033]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054219 in range [0.000000, 0.108438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027110 in range [0.000000, 0.054220]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013556 in range [0.000000, 0.027111]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006778 in range [0.000000, 0.013557]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001628 in range [0.000000, 0.003257]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000472 in range [0.000000, 0.000945]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000236 in range [0.000000, 0.000471]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000118 in range [0.000000, 0.000237]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.3880939945614469, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.2874137586494785, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.3901974177948647, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.2878633007359787, x10 : -0.26494001657373445, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157907 in range [0.000000, 0.315814]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077809 in range [0.000000, 0.155618]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038905 in range [0.000000, 0.077810]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019453 in range [0.000000, 0.038906]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009322 in range [0.000000, 0.018644]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003970 in range [0.000000, 0.007941]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001645 in range [0.000000, 0.003290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000673 in range [0.000000, 0.001347]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000337 in range [0.000000, 0.000674]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000169 in range [0.000000, 0.000338]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.28396639010719377, x5 : -0.376166025540068, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.28617651503240715, x5 : -0.3985338509082794, x6 : 0, x7 : 2, x8 : 0, x9 : -0.17911770234958596, x10 : -0.239102822042523, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000169


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117477 in range [0.000000, 0.234954]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058466 in range [0.000000, 0.116931]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027807 in range [0.000000, 0.055614]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012341 in range [0.000000, 0.024683]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006170 in range [0.000000, 0.012339]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002157 in range [0.000000, 0.004313]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000740 in range [0.000000, 0.001479]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000332 in range [0.000000, 0.000664]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000167 in range [0.000000, 0.000333]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000084 in range [0.000000, 0.000168]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.458900765590339, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.43770216511562265, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4594613073498052, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 0, x9 : -0.43742189423588956, x10 : -0.2868988907933501, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000167


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101179 in range [0.000000, 0.202358]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049695 in range [0.000000, 0.099390]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024848 in range [0.000000, 0.049696]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012424 in range [0.000000, 0.024849]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006205 in range [0.000000, 0.012410]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001170 in range [0.000000, 0.002339]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000387 in range [0.000000, 0.000773]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000194 in range [0.000000, 0.000388]...	no solution exists.
	Iteration #010: testing norm threshold 0.000291 in range [0.000194, 0.000388]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5213773282628908, x5 : 0.11592618924624082, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5191672029357806, x5 : 0.13824070803821087, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6255626678466797, x10 : -0.07066974167050859, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000387


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114264 in range [0.000000, 0.228528]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056722 in range [0.000000, 0.113443]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028122 in range [0.000000, 0.056244]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013999 in range [0.000000, 0.027998]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006965 in range [0.000000, 0.013931]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003483 in range [0.000000, 0.006966]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001742 in range [0.000000, 0.003484]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000789 in range [0.000000, 0.001578]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000340 in range [0.000000, 0.000681]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000171 in range [0.000000, 0.000341]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.1756736814747705, x5 : 0.9211679952602008, x6 : 1.0, x7 : 3.0, x8 : 1.0, x9 : -0.4156009288706015, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.1757534654160251, x5 : 0.9210882113189461, x6 : 1, x7 : 3, x8 : 1, x9 : -0.4001300632953644, x10 : -0.2201263890387858, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128273 in range [0.000000, 0.256545]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064070 in range [0.000000, 0.128141]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032036 in range [0.000000, 0.064071]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013937 in range [0.000000, 0.027874]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006969 in range [0.000000, 0.013938]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003485 in range [0.000000, 0.006970]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001591 in range [0.000000, 0.003182]...	no solution exists.
	Iteration #009: testing norm threshold 0.002386 in range [0.001591, 0.003182]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001989 in range [0.001591, 0.002387]...	no solution exists.
	Iteration #011: testing norm threshold 0.002188 in range [0.001989, 0.002387]...	no solution exists.
	Iteration #012: testing norm threshold 0.002288 in range [0.002188, 0.002387]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002238 in range [0.002188, 0.002289]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 2.3941955964561967, x5 : 5.967349979614348, x6 : 1.0, x7 : 2.0, x8 : 4.0, x9 : -0.5040058738506862, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 2.392094953708014, x5 : 5.965249336866166, x6 : 1, x7 : 2, x8 : 4, x9 : -0.5548387169837952, x10 : -0.2442444958244981, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002288


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155901 in range [0.000000, 0.311803]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077111 in range [0.000000, 0.154223]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038445 in range [0.000000, 0.076891]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018815 in range [0.000000, 0.037630]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005351 in range [0.000000, 0.010701]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002229 in range [0.000000, 0.004459]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000735 in range [0.000000, 0.001470]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000308 in range [0.000000, 0.000615]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000151 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5755236825791025, x5 : -0.0003865160668867154, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.57656495677665, x5 : -0.002078467916555864, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6243938237713482, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.051612 in range [0.000000, 0.103224]...	solution exists & found.
	Iteration #003: testing norm threshold 0.025235 in range [0.000000, 0.050469]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012581 in range [0.000000, 0.025162]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006291 in range [0.000000, 0.012582]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003146 in range [0.000000, 0.006292]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001139 in range [0.000000, 0.002278]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000547 in range [0.000000, 0.001094]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000274 in range [0.000000, 0.000548]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000137 in range [0.000000, 0.000275]...	no solution exists.
	Iteration #011: testing norm threshold 0.000206 in range [0.000137, 0.000275]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6088445160044635, x5 : 0.2501331569152341, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.592410818830771, x10 : 0.5091625782023483, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5770347248965975, x5 : 0.24956165083763418, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5902006924152374, x10 : 0.5318313408439879, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000274


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146137 in range [0.000000, 0.292275]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073069 in range [0.000000, 0.146138]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036317 in range [0.000000, 0.072634]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018159 in range [0.000000, 0.036318]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009080 in range [0.000000, 0.018160]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004346 in range [0.000000, 0.008693]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001251 in range [0.000000, 0.002501]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000066 in range [0.000000, 0.000131]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7650358974933624, x5 : -0.4164281189441681, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6832810342311859, x10 : -0.359513595700264, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000130


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138675 in range [0.000000, 0.277351]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069338 in range [0.000000, 0.138676]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034670 in range [0.000000, 0.069339]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016961 in range [0.000000, 0.033922]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008433 in range [0.000000, 0.016865]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004217 in range [0.000000, 0.008434]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002109 in range [0.000000, 0.004218]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001055 in range [0.000000, 0.002110]...	no solution exists.
	Iteration #010: testing norm threshold 0.001582 in range [0.001055, 0.002110]...	no solution exists.
	Iteration #011: testing norm threshold 0.001846 in range [0.001582, 0.002110]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001688 in range [0.001582, 0.001794]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001636 in range [0.001582, 0.001689]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.09653670208953813, x5 : -0.215117664337276, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : 0.0220035487808182, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.11944477632641792, x5 : -0.3895867168903351, x6 : 0, x7 : 5, x8 : 0, x9 : 0.06391289731305774, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001688


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151544 in range [0.000000, 0.303087]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075221 in range [0.000000, 0.150442]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036972 in range [0.000000, 0.073945]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018487 in range [0.000000, 0.036973]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006924 in range [0.000000, 0.013848]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001903 in range [0.000000, 0.003806]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000843 in range [0.000000, 0.001687]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000422 in range [0.000000, 0.000844]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000212 in range [0.000000, 0.000423]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000106 in range [0.000000, 0.000213]...	no solution exists.
	Iteration #012: testing norm threshold 0.000159 in range [0.000106, 0.000213]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.658825766142505, x5 : -0.17932913962554445, x6 : 2.0, x7 : 1.0, x8 : 1.0, x9 : -0.6542942803168303, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.659370312294512, x5 : -0.1798736857775515, x6 : 2, x7 : 1, x8 : 1, x9 : -0.6918663680553436, x10 : 0.11168438766023575, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000212


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115284 in range [0.000000, 0.230568]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056667 in range [0.000000, 0.113333]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028167 in range [0.000000, 0.056334]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013429 in range [0.000000, 0.026858]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006657 in range [0.000000, 0.013315]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003289 in range [0.000000, 0.006578]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001522 in range [0.000000, 0.003045]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000762 in range [0.000000, 0.001523]...	no solution exists.
	Iteration #010: testing norm threshold 0.001143 in range [0.000762, 0.001523]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000946 in range [0.000762, 0.001130]...	no solution exists.
	Iteration #012: testing norm threshold 0.001038 in range [0.000946, 0.001130]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.1700299653133499, x5 : 0.6080184040325496, x6 : 1.0, x7 : 0.0, x8 : 3.0, x9 : -0.06640139619926658, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.1696965414768706, x5 : 0.6081851159507893, x6 : 1, x7 : 0, x8 : 3, x9 : 0.11516216315175068, x10 : -0.25285905309175477, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001038


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153817 in range [0.000000, 0.307635]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076909 in range [0.000000, 0.153818]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035631 in range [0.000000, 0.071262]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017204 in range [0.000000, 0.034409]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008511 in range [0.000000, 0.017023]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004176 in range [0.000000, 0.008352]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001163 in range [0.000000, 0.002327]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000377 in range [0.000000, 0.000755]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.3851131567180008, x6 : 0.0, x7 : 5.0, x8 : 1.0, x9 : -0.42886167061761415, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5056943783781698, x5 : -0.4164281189441681, x6 : 0, x7 : 5, x8 : 1, x9 : -0.4299667367956807, x10 : -0.26816627318370545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000189


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115434 in range [0.000000, 0.230869]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057319 in range [0.000000, 0.114639]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023204 in range [0.000000, 0.046407]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010804 in range [0.000000, 0.021608]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002826 in range [0.000000, 0.005651]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000775 in range [0.000000, 0.001551]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000125 in range [0.000000, 0.000250]...	no solution exists.
	Iteration #009: testing norm threshold 0.000188 in range [0.000125, 0.000250]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.3851131567180008, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6421464732687725, x5 : -0.42823403420647205, x6 : 4, x7 : 6, x8 : 0, x9 : -0.5383171288165762, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112238 in range [0.000000, 0.224475]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053574 in range [0.000000, 0.107149]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026308 in range [0.000000, 0.052617]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013012 in range [0.000000, 0.026023]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006402 in range [0.000000, 0.012804]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003201 in range [0.000000, 0.006403]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001601 in range [0.000000, 0.003202]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000801 in range [0.000000, 0.001602]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000401 in range [0.000000, 0.000802]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000201 in range [0.000000, 0.000402]...	no solution exists.
	Iteration #012: testing norm threshold 0.000302 in range [0.000201, 0.000402]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000252 in range [0.000201, 0.000303]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.5297075366192311, x5 : -0.15248774609174578, x6 : 2.0, x7 : 3.0, x8 : 1.0, x9 : -0.43770216511562265, x10 : -0.10956036520361004, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.5297075366192311, x5 : -0.21064409613609314, x6 : 2, x7 : 3, x8 : 1, x9 : -0.45538315176963806, x10 : -0.11138586903774986, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000252


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109883 in range [0.000000, 0.219766]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052628 in range [0.000000, 0.105256]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025897 in range [0.000000, 0.051793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012937 in range [0.000000, 0.025875]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006426 in range [0.000000, 0.012851]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002409 in range [0.000000, 0.004819]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000977 in range [0.000000, 0.001955]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000315 in range [0.000000, 0.000630]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.4119545502517995, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7502938211001535, x5 : -0.4162638783492227, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6809800044058011, x10 : -0.33036859333888485, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125564 in range [0.000000, 0.251129]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060374 in range [0.000000, 0.120747]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029140 in range [0.000000, 0.058279]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014570 in range [0.000000, 0.029141]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007123 in range [0.000000, 0.014247]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003562 in range [0.000000, 0.007124]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001741 in range [0.000000, 0.003482]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000793 in range [0.000000, 0.001585]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000304 in range [0.000000, 0.000609]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000050 in range [0.000000, 0.000101]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 1.0, x12 : 16.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.769201010465622, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.68523601105986, x10 : -0.359513595700264, x11 : 1, x12 : 16, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000100


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163299 in range [0.000000, 0.326598]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081650 in range [0.000000, 0.163300]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038303 in range [0.000000, 0.076607]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018349 in range [0.000000, 0.036698]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009144 in range [0.000000, 0.018287]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003270 in range [0.000000, 0.006540]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001442 in range [0.000000, 0.002883]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000721 in range [0.000000, 0.001443]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000722]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000181 in range [0.000000, 0.000362]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.558863265866422, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4686438958586523, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5441096632680353, x5 : -0.3536224870881495, x6 : 0, x7 : 6, x8 : 0, x9 : -0.46881961939138295, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000181


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098777 in range [0.000000, 0.197553]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049192 in range [0.000000, 0.098383]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024239 in range [0.000000, 0.048479]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012120 in range [0.000000, 0.024240]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006023 in range [0.000000, 0.012046]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001514 in range [0.000000, 0.003028]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000729 in range [0.000000, 0.001457]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000253 in range [0.000000, 0.000505]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7723248511954899, x5 : -0.41538684670177656, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6971852186628229, x10 : -0.36263743643013197, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132322 in range [0.000000, 0.264644]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065879 in range [0.000000, 0.131757]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032914 in range [0.000000, 0.065828]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011955 in range [0.000000, 0.023911]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005978 in range [0.000000, 0.011956]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002104 in range [0.000000, 0.004208]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001045 in range [0.000000, 0.002090]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000453 in range [0.000000, 0.000906]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.734775139518665, x5 : -0.3537982106208801, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153515 in range [0.000000, 0.307031]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072695 in range [0.000000, 0.145389]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036348 in range [0.000000, 0.072696]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018092 in range [0.000000, 0.036185]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009047 in range [0.000000, 0.018093]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003214 in range [0.000000, 0.006427]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001607 in range [0.000000, 0.003215]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000236 in range [0.000000, 0.000473]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000119 in range [0.000000, 0.000237]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.769201010465622, x5 : -0.40245489078594265, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000019


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079453 in range [0.000000, 0.158906]...	solution exists & found.
	Iteration #003: testing norm threshold 0.035346 in range [0.000000, 0.070691]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013559 in range [0.000000, 0.027117]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006751 in range [0.000000, 0.013501]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003376 in range [0.000000, 0.006752]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001688 in range [0.000000, 0.003377]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000845 in range [0.000000, 0.001689]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000389 in range [0.000000, 0.000778]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 4, x4 : -0.7454201765364645, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000195


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098320 in range [0.000000, 0.196639]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048363 in range [0.000000, 0.096726]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024182 in range [0.000000, 0.048364]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012091 in range [0.000000, 0.024183]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003855 in range [0.000000, 0.007710]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001928 in range [0.000000, 0.003856]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000786 in range [0.000000, 0.001571]...	no solution exists.
	Iteration #009: testing norm threshold 0.001179 in range [0.000786, 0.001571]...	no solution exists.
	Iteration #010: testing norm threshold 0.001375 in range [0.001179, 0.001571]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001271 in range [0.001179, 0.001364]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.20066430654379125, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1945885664203895, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3755986839532852, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.20041177739381846, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001271


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120197 in range [0.000000, 0.240394]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054325 in range [0.000000, 0.108649]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026037 in range [0.000000, 0.052075]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012953 in range [0.000000, 0.025905]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006477 in range [0.000000, 0.012954]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003239 in range [0.000000, 0.006478]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001620 in range [0.000000, 0.003240]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000784 in range [0.000000, 0.001567]...	no solution exists.
	Iteration #010: testing norm threshold 0.001175 in range [0.000784, 0.001567]...	no solution exists.
	Iteration #011: testing norm threshold 0.001371 in range [0.001175, 0.001567]...	no solution exists.
	Iteration #012: testing norm threshold 0.001469 in range [0.001371, 0.001567]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.2381502441473224, x5 : 0.1248733204241737, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.3316162311395209, x10 : 0.9953020337356012, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.24257049480154297, x5 : 0.10250549018383026, x6 : 0, x7 : 2, x8 : 0, x9 : -0.5990411937236786, x10 : 1.0, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001566


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108559 in range [0.000000, 0.217119]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054213 in range [0.000000, 0.108427]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027086 in range [0.000000, 0.054172]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013265 in range [0.000000, 0.026530]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006392 in range [0.000000, 0.012784]...	no solution exists.
	Iteration #007: testing norm threshold 0.009588 in range [0.006392, 0.012784]...	no solution exists.
	Iteration #008: testing norm threshold 0.011186 in range [0.009588, 0.012784]...	solution exists & found.
	Iteration #009: testing norm threshold 0.010388 in range [0.009588, 0.011187]...	no solution exists.
	Iteration #010: testing norm threshold 0.010788 in range [0.010388, 0.011187]...	no solution exists.
	Iteration #011: testing norm threshold 0.010987 in range [0.010788, 0.011187]...	solution exists & found.
	Iteration #012: testing norm threshold 0.010888 in range [0.010788, 0.010988]...	no solution exists.
	Iteration #013: testing norm threshold 0.010938 in range [0.010888, 0.010988]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 5.934534147900803, x5 : 3.0147966908964965, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 3.8499376664184886, x10 : 2.586303888208066, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 5.932599761086072, x5 : 3.0128623040817657, x6 : 0, x7 : 0, x8 : 6, x9 : 3.8499376664184886, x10 : 0.01197449880419299, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.010938


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095984 in range [0.000000, 0.191968]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047993 in range [0.000000, 0.095985]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023997 in range [0.000000, 0.047994]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011868 in range [0.000000, 0.023736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005853 in range [0.000000, 0.011707]...	no solution exists.
	Iteration #007: testing norm threshold 0.008780 in range [0.005853, 0.011707]...	solution exists & found.
	Iteration #008: testing norm threshold 0.007125 in range [0.005853, 0.008396]...	no solution exists.
	Iteration #009: testing norm threshold 0.007760 in range [0.007125, 0.008396]...	no solution exists.
	Iteration #010: testing norm threshold 0.008078 in range [0.007760, 0.008396]...	no solution exists.
	Iteration #011: testing norm threshold 0.008237 in range [0.008078, 0.008396]...	no solution exists.
	Iteration #012: testing norm threshold 0.008316 in range [0.008237, 0.008396]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.6861278861672755, x5 : 3.945298333401517, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 0.6364179163924074, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.832289218902588, x5 : 3.938667972321347, x6 : 1, x7 : 1, x8 : 0, x9 : -0.685236006975174, x10 : -0.06978413090109825, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.008395


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163870 in range [0.000000, 0.327741]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078060 in range [0.000000, 0.156121]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038789 in range [0.000000, 0.077577]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018444 in range [0.000000, 0.036889]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009062 in range [0.000000, 0.018124]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002753 in range [0.000000, 0.005507]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001335 in range [0.000000, 0.002669]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000668 in range [0.000000, 0.001336]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000334 in range [0.000000, 0.000669]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000063 in range [0.000000, 0.000125]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4547356614121689, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3581377146335463, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.45740600322527014, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3591009254696393, x10 : -0.28730155986997685, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120862 in range [0.000000, 0.241725]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060432 in range [0.000000, 0.120863]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030216 in range [0.000000, 0.060433]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014553 in range [0.000000, 0.029106]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006106 in range [0.000000, 0.012212]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001995 in range [0.000000, 0.003990]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000624 in range [0.000000, 0.001247]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000310 in range [0.000000, 0.000620]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000116 in range [0.000000, 0.000232]...	no solution exists.
	Iteration #011: testing norm threshold 0.000174 in range [0.000116, 0.000232]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6130096201826336, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6275874674320221, x5 : -0.356497660279274, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5592589676380157, x10 : -0.22484756261110306, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000231


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140465 in range [0.000000, 0.280929]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067641 in range [0.000000, 0.135283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032555 in range [0.000000, 0.065110]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016084 in range [0.000000, 0.032168]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007582 in range [0.000000, 0.015163]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003791 in range [0.000000, 0.007583]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001835 in range [0.000000, 0.003671]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000881 in range [0.000000, 0.001762]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000374 in range [0.000000, 0.000749]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000188 in range [0.000000, 0.000375]...	no solution exists.
	Iteration #012: testing norm threshold 0.000281 in range [0.000188, 0.000375]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.392259098739617, x5 : 0.3932872557621603, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.392259098739617, x5 : 0.3082895055413246, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.1839658638153424, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000281


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131992 in range [0.000000, 0.263985]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061617 in range [0.000000, 0.123234]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030809 in range [0.000000, 0.061618]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013650 in range [0.000000, 0.027300]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001272 in range [0.000000, 0.002545]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000151 in range [0.000000, 0.000301]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7442103922367096, x5 : -0.3643067463052963, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6808157563209534, x10 : -0.37472734094902077, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088825 in range [0.000000, 0.177649]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041410 in range [0.000000, 0.082820]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020706 in range [0.000000, 0.041411]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010353 in range [0.000000, 0.020707]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004401 in range [0.000000, 0.008802]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002144 in range [0.000000, 0.004289]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001073 in range [0.000000, 0.002145]...	no solution exists.
	Iteration #009: testing norm threshold 0.001609 in range [0.001073, 0.002145]...	no solution exists.
	Iteration #010: testing norm threshold 0.001877 in range [0.001609, 0.002145]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001685 in range [0.001609, 0.001761]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : 0.4022343869400932, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : 1.6803167210779124, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.4838913828134537, x5 : 0.24262513713471676, x6 : 4, x7 : 6, x8 : 0, x9 : -0.5283172428607941, x10 : 1.6758964704236918, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001685


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113680 in range [0.000000, 0.227360]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056840 in range [0.000000, 0.113681]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028421 in range [0.000000, 0.056841]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013711 in range [0.000000, 0.027421]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006490 in range [0.000000, 0.012979]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003245 in range [0.000000, 0.006491]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001623 in range [0.000000, 0.003246]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000809 in range [0.000000, 0.001618]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000081 in range [0.000000, 0.000161]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.34496434079649513, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.4905497571752675, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.3406196062983454, x5 : -0.2397866906219998, x6 : 0, x7 : 0, x8 : 3, x9 : 0.4927221244243424, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107184 in range [0.000000, 0.214368]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053230 in range [0.000000, 0.106460]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026440 in range [0.000000, 0.052880]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013221 in range [0.000000, 0.026441]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006609 in range [0.000000, 0.013218]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003305 in range [0.000000, 0.006610]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001653 in range [0.000000, 0.003306]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000827 in range [0.000000, 0.001654]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000414 in range [0.000000, 0.000828]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000208 in range [0.000000, 0.000415]...	no solution exists.
	Iteration #012: testing norm threshold 0.000311 in range [0.000208, 0.000415]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000260 in range [0.000208, 0.000312]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.9822252800565244, x5 : -0.0809106966682827, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.0430806633007974, x10 : 0.4870653302235641, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.9808544810665721, x5 : -0.174855574965477, x6 : 0, x7 : 0, x8 : 4, x9 : 1.0417098643108451, x10 : 0.4856945312336117, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000260


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123178 in range [0.000000, 0.246356]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059761 in range [0.000000, 0.119521]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028152 in range [0.000000, 0.056304]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013533 in range [0.000000, 0.027066]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006691 in range [0.000000, 0.013381]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002216 in range [0.000000, 0.004431]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000758 in range [0.000000, 0.001516]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000379 in range [0.000000, 0.000759]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000180 in range [0.000000, 0.000361]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000181]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5463679533319117, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : -0.2863383490338839, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5505330562591553, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5227778919889362, x10 : -0.2874293781761169, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097708 in range [0.000000, 0.195416]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048854 in range [0.000000, 0.097709]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024428 in range [0.000000, 0.048855]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010060 in range [0.000000, 0.020121]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005031 in range [0.000000, 0.010061]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002448 in range [0.000000, 0.004896]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000426 in range [0.000000, 0.000852]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000213 in range [0.000000, 0.000427]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000103 in range [0.000000, 0.000205]...	no solution exists.
	Iteration #011: testing norm threshold 0.000154 in range [0.000103, 0.000205]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.2131596190783016, x5 : 0.7959081587691402, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.21419581648269137, x5 : 0.7951195958626247, x6 : 3, x7 : 6, x8 : 0, x9 : -0.4782729532631763, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000204


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151520 in range [0.000000, 0.303040]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075057 in range [0.000000, 0.150114]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037314 in range [0.000000, 0.074628]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018657 in range [0.000000, 0.037315]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009329 in range [0.000000, 0.018658]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004665 in range [0.000000, 0.009330]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002330 in range [0.000000, 0.004661]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001166 in range [0.000000, 0.002331]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000230 in range [0.000000, 0.000460]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000116 in range [0.000000, 0.000231]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000058 in range [0.000000, 0.000117]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5172122240847208, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4686438958586523, x10 : -0.17585210913996274, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5192947685718536, x5 : -0.34181406409419485, x6 : 0, x7 : 0, x8 : 6, x9 : -0.47168090836739324, x10 : -0.17888912164870371, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104673 in range [0.000000, 0.209345]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051839 in range [0.000000, 0.103678]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025920 in range [0.000000, 0.051840]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012951 in range [0.000000, 0.025902]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006374 in range [0.000000, 0.012747]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003174 in range [0.000000, 0.006348]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001126 in range [0.000000, 0.002252]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000529 in range [0.000000, 0.001058]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	no solution exists.
	Iteration #011: testing norm threshold 0.000397 in range [0.000265, 0.000530]...	no solution exists.
	Iteration #012: testing norm threshold 0.000464 in range [0.000397, 0.000530]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6338351410734843, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6484130024909973, x5 : -0.36262151827061634, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5483321578077756, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000464


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167516 in range [0.000000, 0.335032]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078747 in range [0.000000, 0.157494]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037491 in range [0.000000, 0.074982]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018746 in range [0.000000, 0.037492]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008988 in range [0.000000, 0.017976]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004267 in range [0.000000, 0.008534]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001884 in range [0.000000, 0.003769]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000943 in range [0.000000, 0.001885]...	no solution exists.
	Iteration #010: testing norm threshold 0.001414 in range [0.000943, 0.001885]...	no solution exists.
	Iteration #011: testing norm threshold 0.001650 in range [0.001414, 0.001885]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001532 in range [0.001414, 0.001651]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001474 in range [0.001414, 0.001533]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.03406013941698623, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.08830725751588178, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.03581193101395775, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 0, x9 : 0.05957564897835255, x10 : -0.24389564467328695, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001532


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133626 in range [0.000000, 0.267252]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066401 in range [0.000000, 0.132802]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031854 in range [0.000000, 0.063708]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015025 in range [0.000000, 0.030049]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007394 in range [0.000000, 0.014788]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003167 in range [0.000000, 0.006334]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001584 in range [0.000000, 0.003168]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000781 in range [0.000000, 0.001563]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000391 in range [0.000000, 0.000782]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4949080912106197, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.64967865813942, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.49287838453406446, x5 : -0.3187986279144534, x6 : 0, x7 : 0, x8 : 1, x9 : 0.6476489514628648, x10 : -0.16480348259210587, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109438 in range [0.000000, 0.218876]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054711 in range [0.000000, 0.109421]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016839 in range [0.000000, 0.033678]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008179 in range [0.000000, 0.016358]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004090 in range [0.000000, 0.008180]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002046 in range [0.000000, 0.004091]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001023 in range [0.000000, 0.002047]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000393 in range [0.000000, 0.000785]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2866528823021134, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.42866629568920817, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.28393930088039465, x5 : -0.3063489591094397, x6 : 0, x7 : 0, x8 : 6, x9 : 0.42595271426748943, x10 : -0.36096512725080476, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000197


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103732 in range [0.000000, 0.207465]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051867 in range [0.000000, 0.103733]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025934 in range [0.000000, 0.051868]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012092 in range [0.000000, 0.024184]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006031 in range [0.000000, 0.012063]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000154 in range [0.000000, 0.000307]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000077 in range [0.000000, 0.000155]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5630283700445922, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5437880990917243, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5652651472907478, x5 : -0.36945567160829074, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5504184663295746, x10 : -0.26647787830125524, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168368 in range [0.000000, 0.336737]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083831 in range [0.000000, 0.167662]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041856 in range [0.000000, 0.083713]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019484 in range [0.000000, 0.038968]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009412 in range [0.000000, 0.018824]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004706 in range [0.000000, 0.009413]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002304 in range [0.000000, 0.004609]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001135 in range [0.000000, 0.002270]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000515 in range [0.000000, 0.001031]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	no solution exists.
	Iteration #012: testing norm threshold 0.000387 in range [0.000258, 0.000516]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000323 in range [0.000258, 0.000388]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3047919109980444, x5 : -0.295641844938672, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.3581377146335463, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.30687445402145386, x5 : -0.4159425546103475, x6 : 0, x7 : 3, x8 : 0, x9 : -0.3586232789673669, x10 : -0.17633767347378335, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000323


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.208343 in range [0.000000, 0.416686]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099612 in range [0.000000, 0.199223]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047768 in range [0.000000, 0.095536]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022204 in range [0.000000, 0.044408]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010935 in range [0.000000, 0.021869]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003899 in range [0.000000, 0.007799]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001950 in range [0.000000, 0.003900]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000976 in range [0.000000, 0.001951]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000404 in range [0.000000, 0.000807]...	no solution exists.
	Iteration #011: testing norm threshold 0.000606 in range [0.000404, 0.000807]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000469 in range [0.000404, 0.000535]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.20066430654379125, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.2214898318052292, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.1449687905216916, x10 : -0.22788805287129715, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000469


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.046601 in range [0.000000, 0.093202]...	solution exists & found.
	Iteration #003: testing norm threshold 0.019875 in range [0.000000, 0.039749]...	solution exists & found.
	Iteration #004: testing norm threshold 0.009938 in range [0.000000, 0.019876]...	solution exists & found.
	Iteration #005: testing norm threshold 0.001845 in range [0.000000, 0.003689]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000908 in range [0.000000, 0.001815]...	no solution exists.
	Iteration #007: testing norm threshold 0.001361 in range [0.000908, 0.001815]...	no solution exists.
	Iteration #008: testing norm threshold 0.001588 in range [0.001361, 0.001815]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001475 in range [0.001361, 0.001589]...	no solution exists.
	Iteration #010: testing norm threshold 0.001532 in range [0.001475, 0.001589]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4838913906593598, x5 : -0.2061705331593431, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.38907944537657596, x10 : 0.06721761862666377, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.4870994922197636, x5 : -0.2084073146477181, x6 : 2, x7 : 6, x8 : 0, x9 : -0.391316226864951, x10 : -0.3636787086725235, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001532


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148352 in range [0.000000, 0.296705]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074177 in range [0.000000, 0.148353]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037023 in range [0.000000, 0.074046]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018506 in range [0.000000, 0.037012]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006598 in range [0.000000, 0.013195]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001849 in range [0.000000, 0.003697]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000925 in range [0.000000, 0.001850]...	no solution exists.
	Iteration #009: testing norm threshold 0.001387 in range [0.000925, 0.001850]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001061 in range [0.000925, 0.001197]...	no solution exists.
	Iteration #011: testing norm threshold 0.001129 in range [0.001061, 0.001197]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.19649920236562116, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1503860939303471, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3755986839532852, x5 : -0.3748720245041695, x6 : 0, x7 : 0, x8 : 0, x9 : -0.1455879676480898, x10 : -0.2642411068081856, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001129


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143041 in range [0.000000, 0.286082]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069103 in range [0.000000, 0.138206]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034552 in range [0.000000, 0.069104]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016790 in range [0.000000, 0.033580]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008077 in range [0.000000, 0.016155]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004039 in range [0.000000, 0.008078]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001627 in range [0.000000, 0.003254]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000493 in range [0.000000, 0.000987]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000247 in range [0.000000, 0.000494]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	no solution exists.
	Iteration #012: testing norm threshold 0.000179 in range [0.000120, 0.000239]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.8864278839586114, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.06178577402185635, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.8864278839586114, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 0, x9 : 0.05957564897835255, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000238


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089513 in range [0.000000, 0.179026]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043573 in range [0.000000, 0.087147]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020588 in range [0.000000, 0.041175]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010294 in range [0.000000, 0.020589]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003844 in range [0.000000, 0.007688]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001916 in range [0.000000, 0.003832]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000958 in range [0.000000, 0.001917]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000341 in range [0.000000, 0.000683]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000338]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.40475441127412737, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3316162311395209, x10 : -0.2642411010550996, x11 : 2.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.40610401571804144, x5 : -0.3435014721590217, x6 : 0, x7 : 0, x8 : 6, x9 : -0.33382634818553925, x10 : -0.2655907054990137, x11 : 2, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137260 in range [0.000000, 0.274520]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068631 in range [0.000000, 0.137261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033536 in range [0.000000, 0.067072]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016769 in range [0.000000, 0.033537]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008138 in range [0.000000, 0.016276]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004070 in range [0.000000, 0.008139]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002035 in range [0.000000, 0.004071]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000478 in range [0.000000, 0.000957]...	no solution exists.
	Iteration #010: testing norm threshold 0.000718 in range [0.000478, 0.000957]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000595 in range [0.000478, 0.000712]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000537 in range [0.000478, 0.000596]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6088445160044635, x5 : 4.177923744027772, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5987746816426225, x5 : 4.1798348278080155, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6012513339519501, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000537


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.247871 in range [0.000000, 0.495742]...	solution exists & found.
	Iteration #003: testing norm threshold 0.123936 in range [0.000000, 0.247872]...	solution exists & found.
	Iteration #004: testing norm threshold 0.060536 in range [0.000000, 0.121071]...	solution exists & found.
	Iteration #005: testing norm threshold 0.030129 in range [0.000000, 0.060258]...	solution exists & found.
	Iteration #006: testing norm threshold 0.014905 in range [0.000000, 0.029809]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006395 in range [0.000000, 0.012790]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003198 in range [0.000000, 0.006396]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000377 in range [0.000000, 0.000755]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	no solution exists.
	Iteration #011: testing norm threshold 0.000284 in range [0.000189, 0.000378]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.3158086115493043, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3933043176971743, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3164729831649954, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.4299950368524455, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000377


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180416 in range [0.000000, 0.360833]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086438 in range [0.000000, 0.172875]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043219 in range [0.000000, 0.086439]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021192 in range [0.000000, 0.042383]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009992 in range [0.000000, 0.019984]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004996 in range [0.000000, 0.009993]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002499 in range [0.000000, 0.004997]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001250 in range [0.000000, 0.002500]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000574 in range [0.000000, 0.001149]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000288 in range [0.000000, 0.000575]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	no solution exists.
	Iteration #013: testing norm threshold 0.000177 in range [0.000118, 0.000235]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.50740340374513, x5 : -0.3403775008283364, x6 : 0.0, x7 : 1.0, x8 : 5.0, x9 : 0.5524332186613269, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.5054849732548887, x5 : -0.3985338509082794, x6 : 0, x7 : 1, x8 : 5, x9 : 0.5505147881710856, x10 : -0.17777053963020403, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177132 in range [0.000000, 0.354264]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088567 in range [0.000000, 0.177133]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044284 in range [0.000000, 0.088568]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022142 in range [0.000000, 0.044285]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010283 in range [0.000000, 0.020565]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001958 in range [0.000000, 0.003917]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000980 in range [0.000000, 0.001959]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7690668651030992, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6917322226928209, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136102 in range [0.000000, 0.272205]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067638 in range [0.000000, 0.135277]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032491 in range [0.000000, 0.064982]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013735 in range [0.000000, 0.027469]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006868 in range [0.000000, 0.013736]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001595 in range [0.000000, 0.003189]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6046794118262934, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6046794056892395, x5 : -0.3895867168903351, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6123019158840179, x10 : -0.2664492279291153, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000179


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080749 in range [0.000000, 0.161499]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039260 in range [0.000000, 0.078521]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018053 in range [0.000000, 0.036107]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009027 in range [0.000000, 0.018054]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003443 in range [0.000000, 0.006887]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001412 in range [0.000000, 0.002823]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000706 in range [0.000000, 0.001413]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000322 in range [0.000000, 0.000645]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000162 in range [0.000000, 0.000323]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000081 in range [0.000000, 0.000163]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7727220070102314, x5 : -0.4247311365344624, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.36303459224487344, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094252 in range [0.000000, 0.188503]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047126 in range [0.000000, 0.094253]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023564 in range [0.000000, 0.047127]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011675 in range [0.000000, 0.023351]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004817 in range [0.000000, 0.009633]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001953 in range [0.000000, 0.003905]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000977 in range [0.000000, 0.001954]...	no solution exists.
	Iteration #009: testing norm threshold 0.001465 in range [0.000977, 0.001954]...	no solution exists.
	Iteration #010: testing norm threshold 0.001709 in range [0.001465, 0.001954]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001588 in range [0.001465, 0.001710]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001527 in range [0.001465, 0.001589]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 2.4691674716632592, x5 : 1.3595774229789122, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.3514738490060516, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 2.463118791253661, x5 : 1.353528742569314, x6 : 0, x7 : 0, x8 : 4, x9 : 2.1061501502990723, x10 : 0.25504422187805176, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001588


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133913 in range [0.000000, 0.267825]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066651 in range [0.000000, 0.133302]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033266 in range [0.000000, 0.066531]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016633 in range [0.000000, 0.033267]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007862 in range [0.000000, 0.015724]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003932 in range [0.000000, 0.007863]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001900 in range [0.000000, 0.003801]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000951 in range [0.000000, 0.001901]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000476 in range [0.000000, 0.000952]...	no solution exists.
	Iteration #011: testing norm threshold 0.000714 in range [0.000476, 0.000952]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000595 in range [0.000476, 0.000715]...	no solution exists.
	Iteration #013: testing norm threshold 0.000655 in range [0.000595, 0.000715]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.5630283700445922, x5 : 0.026454877466911945, x6 : 1.0, x7 : 3.0, x8 : 1.0, x9 : -0.6719752693128472, x10 : 0.7522323059689747, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.656743198633194, x5 : 0.018921187856890207, x6 : 1, x7 : 3, x8 : 1, x9 : -0.6962866187095642, x10 : 0.744698616358953, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000714


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164842 in range [0.000000, 0.329683]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081065 in range [0.000000, 0.162130]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040533 in range [0.000000, 0.081066]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020202 in range [0.000000, 0.040404]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010074 in range [0.000000, 0.020148]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005038 in range [0.000000, 0.010075]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001804 in range [0.000000, 0.003609]...	no solution exists.
	Iteration #009: testing norm threshold 0.002707 in range [0.001804, 0.003609]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002218 in range [0.001804, 0.002631]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001999 in range [0.001804, 0.002194]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001902 in range [0.001804, 0.002000]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 3.8769726838847616, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 4.238919424330861, x10 : 0.4649680822447799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 3.8165786266326904, x5 : -0.08538426086306572, x6 : 0, x7 : 0, x8 : 5, x9 : 4.238919424330861, x10 : 0.7934145079075655, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001999


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168716 in range [0.000000, 0.337431]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081354 in range [0.000000, 0.162708]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040648 in range [0.000000, 0.081297]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019712 in range [0.000000, 0.039425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009857 in range [0.000000, 0.019713]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003972 in range [0.000000, 0.007945]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001987 in range [0.000000, 0.003973]...	no solution exists.
	Iteration #009: testing norm threshold 0.002980 in range [0.001987, 0.003973]...	no solution exists.
	Iteration #010: testing norm threshold 0.003477 in range [0.002980, 0.003973]...	no solution exists.
	Iteration #011: testing norm threshold 0.003725 in range [0.003477, 0.003973]...	no solution exists.
	Iteration #012: testing norm threshold 0.003849 in range [0.003725, 0.003973]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003788 in range [0.003725, 0.003850]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.4116060076472172, x5 : 1.4848372594699726, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : 0.18997294424297928, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : 0.04541479115082975, x5 : 1.475996765612112, x6 : 1, x7 : 0, x8 : 0, x9 : 0.05957564897835255, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003788


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145598 in range [0.000000, 0.291196]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068786 in range [0.000000, 0.137572]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034394 in range [0.000000, 0.068787]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017105 in range [0.000000, 0.034210]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008553 in range [0.000000, 0.017106]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004274 in range [0.000000, 0.008548]...	no solution exists.
	Iteration #008: testing norm threshold 0.006411 in range [0.004274, 0.008548]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004672 in range [0.004274, 0.005071]...	no solution exists.
	Iteration #010: testing norm threshold 0.004872 in range [0.004672, 0.005071]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004772 in range [0.004672, 0.004873]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004723 in range [0.004672, 0.004773]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.3570846560918357, x5 : 1.6279913583168988, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : 1.5646698386832976, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 1.3569489200893412, x5 : 1.6275841503094153, x6 : 2, x7 : 4, x8 : 0, x9 : 1.564534102680803, x10 : -0.3636787086725235, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004700


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109675 in range [0.000000, 0.219350]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054559 in range [0.000000, 0.109118]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027280 in range [0.000000, 0.054560]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012681 in range [0.000000, 0.025363]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006341 in range [0.000000, 0.012682]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002920 in range [0.000000, 0.005840]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001090 in range [0.000000, 0.002179]...	no solution exists.
	Iteration #009: testing norm threshold 0.001634 in range [0.001090, 0.002179]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001362 in range [0.001090, 0.001635]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001227 in range [0.001090, 0.001363]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001159 in range [0.001090, 0.001228]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.21584611127322129, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.15019071900194111, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.26769949807514626, x5 : -0.20668941424499077, x6 : 0, x7 : 0, x8 : 0, x9 : 0.14623603711083874, x10 : -0.22004660218954086, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001159


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146123 in range [0.000000, 0.292246]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064722 in range [0.000000, 0.129444]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032361 in range [0.000000, 0.064723]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015990 in range [0.000000, 0.031980]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007995 in range [0.000000, 0.015991]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003234 in range [0.000000, 0.006469]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000446 in range [0.000000, 0.000891]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000223 in range [0.000000, 0.000447]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000111 in range [0.000000, 0.000223]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7137696080521636, x5 : -0.39789616979305725, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6332707992665276, x10 : -0.35326777408545873, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000049


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165835 in range [0.000000, 0.331670]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077588 in range [0.000000, 0.155175]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038103 in range [0.000000, 0.076206]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018288 in range [0.000000, 0.036576]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007306 in range [0.000000, 0.014611]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002865 in range [0.000000, 0.005730]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000852 in range [0.000000, 0.001705]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000179 in range [0.000000, 0.000359]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.6296700368953141, x5 : -0.3851131567180008, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.6293499768337324, x5 : -0.385308489427785, x6 : 0, x7 : 3, x8 : 0, x9 : -0.5965589262501274, x10 : -0.27509439652777223, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180245 in range [0.000000, 0.360490]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084311 in range [0.000000, 0.168621]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042156 in range [0.000000, 0.084312]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020378 in range [0.000000, 0.040756]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006785 in range [0.000000, 0.013571]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002472 in range [0.000000, 0.004945]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000774 in range [0.000000, 0.001548]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000385 in range [0.000000, 0.000771]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000193 in range [0.000000, 0.000386]...	no solution exists.
	Iteration #011: testing norm threshold 0.000290 in range [0.000193, 0.000386]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.6380002452516543, x5 : -0.13459348373588, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.6963117122650146, x5 : -0.12978658580050428, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6899895922852765, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000385


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093701 in range [0.000000, 0.187402]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046035 in range [0.000000, 0.092070]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019714 in range [0.000000, 0.039428]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009152 in range [0.000000, 0.018303]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001520 in range [0.000000, 0.003040]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000359 in range [0.000000, 0.000719]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.3135361072945377, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7234659238907087, x5 : -0.3537982106208801, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.2222102001731831, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000159


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162652 in range [0.000000, 0.325303]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080356 in range [0.000000, 0.160712]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040178 in range [0.000000, 0.080357]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020087 in range [0.000000, 0.040174]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009537 in range [0.000000, 0.019073]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004769 in range [0.000000, 0.009538]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002385 in range [0.000000, 0.004770]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001193 in range [0.000000, 0.002386]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000407 in range [0.000000, 0.000814]...	no solution exists.
	Iteration #011: testing norm threshold 0.000611 in range [0.000407, 0.000814]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000472 in range [0.000407, 0.000538]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.3483794504963256, x5 : -0.1435406149138129, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.6166886839463066, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 2.2942330837249756, x5 : -0.14801418036222458, x6 : 0, x7 : 0, x8 : 6, x9 : 2.6122684478759766, x10 : 0.25504422187805176, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000537


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122961 in range [0.000000, 0.245923]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061481 in range [0.000000, 0.122962]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025257 in range [0.000000, 0.050514]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012629 in range [0.000000, 0.025258]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006118 in range [0.000000, 0.012236]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002793 in range [0.000000, 0.005586]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001080 in range [0.000000, 0.002159]...	no solution exists.
	Iteration #009: testing norm threshold 0.001619 in range [0.001080, 0.002159]...	no solution exists.
	Iteration #010: testing norm threshold 0.001889 in range [0.001619, 0.002159]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001755 in range [0.001619, 0.001890]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001688 in range [0.001619, 0.001756]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3547731611360859, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2520517806574446, x10 : -0.3747273409490208, x11 : 1.0, x12 : 18.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6150921881198883, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2536942586595062, x10 : -0.3620362306704619, x11 : 1, x12 : 18, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001688


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184775 in range [0.000000, 0.369550]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091735 in range [0.000000, 0.183470]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038720 in range [0.000000, 0.077439]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019360 in range [0.000000, 0.038721]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007922 in range [0.000000, 0.015845]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003875 in range [0.000000, 0.007751]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001938 in range [0.000000, 0.003876]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000970 in range [0.000000, 0.001939]...	no solution exists.
	Iteration #010: testing norm threshold 0.001454 in range [0.000970, 0.001939]...	no solution exists.
	Iteration #011: testing norm threshold 0.001697 in range [0.001454, 0.001939]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001576 in range [0.001454, 0.001698]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001516 in range [0.001454, 0.001577]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.32145232771072485, x5 : 0.5722298793208179, x6 : 1.0, x7 : 2.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3251301651012207, x5 : 0.14724114537239075, x6 : 1, x7 : 2, x8 : 0, x9 : -0.6233525574207306, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001516


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.172001 in range [0.000000, 0.344001]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086001 in range [0.000000, 0.172002]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041920 in range [0.000000, 0.083840]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020961 in range [0.000000, 0.041921]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010481 in range [0.000000, 0.020962]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003493 in range [0.000000, 0.006986]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001549 in range [0.000000, 0.003098]...	no solution exists.
	Iteration #009: testing norm threshold 0.002323 in range [0.001549, 0.003098]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001889 in range [0.001549, 0.002229]...	no solution exists.
	Iteration #011: testing norm threshold 0.002059 in range [0.001889, 0.002229]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001975 in range [0.001889, 0.002060]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 5.667967480497914, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 6.139625741402685, x10 : 1.0394965296931695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 5.6637996330857225, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 6, x9 : 6.135457893990493, x10 : 1.0353286822809775, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114445 in range [0.000000, 0.228890]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053834 in range [0.000000, 0.107667]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025836 in range [0.000000, 0.051672]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012918 in range [0.000000, 0.025837]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006454 in range [0.000000, 0.012909]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001608 in range [0.000000, 0.003215]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000709 in range [0.000000, 0.001418]...	no solution exists.
	Iteration #009: testing norm threshold 0.001064 in range [0.000709, 0.001418]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000887 in range [0.000709, 0.001065]...	no solution exists.
	Iteration #011: testing norm threshold 0.000976 in range [0.000887, 0.001065]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5505330575100817, x5 : 0.062243402178643485, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6137241265069663, x5 : 0.0398755744099617, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5534706553708731, x10 : 0.17633579690766293, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000976


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139500 in range [0.000000, 0.279000]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069751 in range [0.000000, 0.139501]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034470 in range [0.000000, 0.068940]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016866 in range [0.000000, 0.033732]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008423 in range [0.000000, 0.016846]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003256 in range [0.000000, 0.006512]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001629 in range [0.000000, 0.003257]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000729 in range [0.000000, 0.001458]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000365 in range [0.000000, 0.000730]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000183 in range [0.000000, 0.000366]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000092 in range [0.000000, 0.000184]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6838163912115257, x5 : -0.23301192669314175, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.684448751098042, x5 : -0.23301192669314175, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6823935366627085, x10 : -0.37472734094902077, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133085 in range [0.000000, 0.266171]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066107 in range [0.000000, 0.132214]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032676 in range [0.000000, 0.065351]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015203 in range [0.000000, 0.030406]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007602 in range [0.000000, 0.015204]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003801 in range [0.000000, 0.007603]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001883 in range [0.000000, 0.003766]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000627 in range [0.000000, 0.001254]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000311 in range [0.000000, 0.000622]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	no solution exists.
	Iteration #012: testing norm threshold 0.000234 in range [0.000156, 0.000312]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4339101405213183, x5 : -0.3582717631842022, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.33603647838852513, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.39338334886522314, x5 : -0.36339516001504685, x6 : 3, x7 : 6, x8 : 0, x9 : -0.3411598752193698, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000311


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079560 in range [0.000000, 0.159120]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039781 in range [0.000000, 0.079561]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019891 in range [0.000000, 0.039782]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008684 in range [0.000000, 0.017368]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004089 in range [0.000000, 0.008177]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002045 in range [0.000000, 0.004090]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001023 in range [0.000000, 0.002046]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000512 in range [0.000000, 0.001024]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000513]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000122 in range [0.000000, 0.000244]...	no solution exists.
	Iteration #012: testing norm threshold 0.000183 in range [0.000122, 0.000244]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.0034257981865448896, x5 : 1.2432647176657845, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.029895035084336996, x5 : 1.2395268739164058, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6949159694923698, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000243


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184497 in range [0.000000, 0.368993]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090170 in range [0.000000, 0.180340]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039744 in range [0.000000, 0.079489]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019872 in range [0.000000, 0.039744]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009417 in range [0.000000, 0.018833]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004088 in range [0.000000, 0.008176]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000859 in range [0.000000, 0.001717]...	no solution exists.
	Iteration #009: testing norm threshold 0.001288 in range [0.000859, 0.001717]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001074 in range [0.000859, 0.001289]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000967 in range [0.000859, 0.001075]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000911 in range [0.000859, 0.000964]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5088820157283805, x5 : 0.14276758278003948, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : 1.0394965296931695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5099870765674283, x5 : 0.10250549018383026, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6288778576618526, x10 : 1.2836713102096227, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000963


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157624 in range [0.000000, 0.315248]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078812 in range [0.000000, 0.157625]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031015 in range [0.000000, 0.062029]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015508 in range [0.000000, 0.031016]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007285 in range [0.000000, 0.014570]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003643 in range [0.000000, 0.007286]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001734 in range [0.000000, 0.003468]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000868 in range [0.000000, 0.001735]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000364 in range [0.000000, 0.000728]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000182 in range [0.000000, 0.000365]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000092 in range [0.000000, 0.000183]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.09922319428445776, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.22975516948401745, x10 : -0.17585210913996274, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.09812150392411298, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 2, x9 : 0.22935342588210056, x10 : -0.17680018181522011, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139220 in range [0.000000, 0.278440]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069597 in range [0.000000, 0.139194]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034799 in range [0.000000, 0.069598]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017400 in range [0.000000, 0.034800]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008347 in range [0.000000, 0.016693]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004047 in range [0.000000, 0.008094]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002024 in range [0.000000, 0.004048]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000991 in range [0.000000, 0.001982]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000496 in range [0.000000, 0.000992]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000249 in range [0.000000, 0.000497]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000125 in range [0.000000, 0.000250]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000063 in range [0.000000, 0.000126]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6879814953896959, x5 : -0.30458897611660485, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.688478964441745, x5 : -0.2906551394396762, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5900378430904559, x10 : -0.10972321452839157, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000125


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123975 in range [0.000000, 0.247949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061988 in range [0.000000, 0.123976]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030884 in range [0.000000, 0.061767]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015297 in range [0.000000, 0.030594]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007162 in range [0.000000, 0.014325]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002925 in range [0.000000, 0.005850]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001176 in range [0.000000, 0.002351]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000588 in range [0.000000, 0.001177]...	no solution exists.
	Iteration #010: testing norm threshold 0.000882 in range [0.000588, 0.001177]...	no solution exists.
	Iteration #011: testing norm threshold 0.001030 in range [0.000882, 0.001177]...	no solution exists.
	Iteration #012: testing norm threshold 0.001103 in range [0.001030, 0.001177]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5546981616882519, x5 : -0.2688004514048733, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.608844518661499, x5 : 0.026522715111901518, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4951653778553009, x10 : 0.01848171951920227, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001176


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092743 in range [0.000000, 0.185486]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046372 in range [0.000000, 0.092744]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022029 in range [0.000000, 0.044058]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010319 in range [0.000000, 0.020637]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003417 in range [0.000000, 0.006833]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001709 in range [0.000000, 0.003418]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000551 in range [0.000000, 0.001102]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000276 in range [0.000000, 0.000552]...	no solution exists.
	Iteration #010: testing norm threshold 0.000414 in range [0.000276, 0.000552]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000346 in range [0.000276, 0.000415]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4172497238086377, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4111806816215972, x10 : -0.13165761318239427, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3960818884793252, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.40912811892703266, x10 : -0.13725061253240617, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000346


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135752 in range [0.000000, 0.271503]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067876 in range [0.000000, 0.135753]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033895 in range [0.000000, 0.067791]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016948 in range [0.000000, 0.033896]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008475 in range [0.000000, 0.016949]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003867 in range [0.000000, 0.007734]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001934 in range [0.000000, 0.003868]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000968 in range [0.000000, 0.001935]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000156 in range [0.000000, 0.000313]...	no solution exists.
	Iteration #011: testing norm threshold 0.000235 in range [0.000156, 0.000313]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5157336121014703, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.6717798943844413, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.5155458351276997, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : 0.6719156735717908, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000234


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088603 in range [0.000000, 0.177207]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040418 in range [0.000000, 0.080835]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019354 in range [0.000000, 0.038709]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008806 in range [0.000000, 0.017612]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004187 in range [0.000000, 0.008373]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000976 in range [0.000000, 0.001951]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000488 in range [0.000000, 0.000977]...	no solution exists.
	Iteration #009: testing norm threshold 0.000732 in range [0.000488, 0.000977]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000611 in range [0.000488, 0.000733]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000550 in range [0.000488, 0.000612]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6421653494298245, x5 : -0.13459348373588, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6805467412325817, x5 : -0.28412491542057167, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5806409094979985, x10 : -0.02172390179423263, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000611


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080859 in range [0.000000, 0.161718]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040430 in range [0.000000, 0.080860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020216 in range [0.000000, 0.040431]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007015 in range [0.000000, 0.014030]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002433 in range [0.000000, 0.004867]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000928 in range [0.000000, 0.001857]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000435 in range [0.000000, 0.000870]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000109 in range [0.000000, 0.000219]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.750458058423996, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3526300933319849, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126655 in range [0.000000, 0.253309]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062139 in range [0.000000, 0.124279]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028627 in range [0.000000, 0.057254]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013630 in range [0.000000, 0.027260]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006741 in range [0.000000, 0.013482]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003371 in range [0.000000, 0.006742]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001686 in range [0.000000, 0.003372]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000620 in range [0.000000, 0.001240]...	no solution exists.
	Iteration #010: testing norm threshold 0.000930 in range [0.000620, 0.001240]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000718 in range [0.000620, 0.000817]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.525542432441061, x5 : 0.08908479571244217, x6 : 1.0, x7 : 0.0, x8 : 4.0, x9 : -0.4509629068626354, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5286662550636854, x5 : 0.021981311962008476, x6 : 1, x7 : 0, x8 : 4, x9 : -0.48632487654685974, x10 : -0.1395824151107397, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000816


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176376 in range [0.000000, 0.352752]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086891 in range [0.000000, 0.173782]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043445 in range [0.000000, 0.086889]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021216 in range [0.000000, 0.042433]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009161 in range [0.000000, 0.018323]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001921 in range [0.000000, 0.003842]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000961 in range [0.000000, 0.001922]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000481 in range [0.000000, 0.000962]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000233 in range [0.000000, 0.000467]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000117 in range [0.000000, 0.000234]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5463679533319117, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5484504997730255, x5 : -0.36113128187254007, x6 : 0, x7 : 0, x8 : 0, x9 : -0.479098438221784, x10 : -0.37472734094902077, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143759 in range [0.000000, 0.287519]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071777 in range [0.000000, 0.143553]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035532 in range [0.000000, 0.071064]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017186 in range [0.000000, 0.034372]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008408 in range [0.000000, 0.016816]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002520 in range [0.000000, 0.005040]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001261 in range [0.000000, 0.002521]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000631 in range [0.000000, 0.001262]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000316 in range [0.000000, 0.000632]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000158 in range [0.000000, 0.000317]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000080 in range [0.000000, 0.000159]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.025729931060645986, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.08830725751588178, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.029415353134701044, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.08651395378290727, x10 : -0.23376682366761217, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000158


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132064 in range [0.000000, 0.264128]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066033 in range [0.000000, 0.132065]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032352 in range [0.000000, 0.064704]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015820 in range [0.000000, 0.031640]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007181 in range [0.000000, 0.014362]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003591 in range [0.000000, 0.007182]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001796 in range [0.000000, 0.003592]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000899 in range [0.000000, 0.001797]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000450 in range [0.000000, 0.000900]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000225 in range [0.000000, 0.000451]...	no solution exists.
	Iteration #012: testing norm threshold 0.000338 in range [0.000225, 0.000451]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000280 in range [0.000225, 0.000335]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5713585784009324, x5 : 0.008560615111046171, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5776062309741974, x5 : 0.00849398344067306, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6565043926239014, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000280


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142975 in range [0.000000, 0.285950]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066095 in range [0.000000, 0.132189]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032229 in range [0.000000, 0.064458]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016115 in range [0.000000, 0.032230]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004995 in range [0.000000, 0.009990]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002498 in range [0.000000, 0.004996]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000855 in range [0.000000, 0.001711]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000305 in range [0.000000, 0.000609]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000054 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7462929538840777, x5 : -0.3851131567180008, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7473980219558705, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6863410791316527, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136062 in range [0.000000, 0.272125]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067686 in range [0.000000, 0.135373]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033384 in range [0.000000, 0.066768]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015902 in range [0.000000, 0.031804]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007124 in range [0.000000, 0.014249]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002924 in range [0.000000, 0.005849]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001321 in range [0.000000, 0.002643]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000661 in range [0.000000, 0.001322]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000331 in range [0.000000, 0.000662]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000153 in range [0.000000, 0.000306]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000077 in range [0.000000, 0.000154]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.35745965333100554, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.4772890154282548, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.35745965138731595, x5 : -0.28420443122328953, x6 : 0, x7 : 0, x8 : 6, x9 : 0.47422044445497147, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000153


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097114 in range [0.000000, 0.194228]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048557 in range [0.000000, 0.097115]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023572 in range [0.000000, 0.047145]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011787 in range [0.000000, 0.023573]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005894 in range [0.000000, 0.011788]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002237 in range [0.000000, 0.004474]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001119 in range [0.000000, 0.002238]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000560 in range [0.000000, 0.001120]...	no solution exists.
	Iteration #010: testing norm threshold 0.000840 in range [0.000560, 0.001120]...	no solution exists.
	Iteration #011: testing norm threshold 0.000980 in range [0.000840, 0.001120]...	no solution exists.
	Iteration #012: testing norm threshold 0.001050 in range [0.000980, 0.001120]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.474082570319769, x5 : 2.272184803128067, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.5968310660797752, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.4680025615583659, x5 : 2.266104794366664, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6741853952407837, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001050


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159705 in range [0.000000, 0.319411]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079853 in range [0.000000, 0.159706]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039927 in range [0.000000, 0.079854]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019302 in range [0.000000, 0.038604]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007216 in range [0.000000, 0.014431]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003608 in range [0.000000, 0.007217]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001805 in range [0.000000, 0.003609]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000850 in range [0.000000, 0.001701]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000404 in range [0.000000, 0.000808]...	no solution exists.
	Iteration #011: testing norm threshold 0.000606 in range [0.000404, 0.000808]...	no solution exists.
	Iteration #012: testing norm threshold 0.000707 in range [0.000606, 0.000808]...	no solution exists.
	Iteration #013: testing norm threshold 0.000758 in range [0.000707, 0.000808]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.6819627819891054, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.9094491241056284, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 1.5820003151893616, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 1.9005020049888453, x10 : 0.023023122164886445, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000807


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146463 in range [0.000000, 0.292927]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073088 in range [0.000000, 0.146176]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036543 in range [0.000000, 0.073086]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018200 in range [0.000000, 0.036400]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008749 in range [0.000000, 0.017497]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004246 in range [0.000000, 0.008491]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001618 in range [0.000000, 0.003236]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000234 in range [0.000000, 0.000467]...	no solution exists.
	Iteration #010: testing norm threshold 0.000350 in range [0.000234, 0.000467]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000286 in range [0.000234, 0.000339]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.295641844938672, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6935206367862895, x5 : -0.36274532973766327, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6947850245504639, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000286


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180423 in range [0.000000, 0.360847]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085296 in range [0.000000, 0.170592]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042649 in range [0.000000, 0.085297]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021325 in range [0.000000, 0.042650]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010333 in range [0.000000, 0.020667]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005167 in range [0.000000, 0.010334]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002584 in range [0.000000, 0.005168]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001293 in range [0.000000, 0.002585]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000625 in range [0.000000, 0.001250]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000313 in range [0.000000, 0.000626]...	no solution exists.
	Iteration #012: testing norm threshold 0.000469 in range [0.000313, 0.000626]...	no solution exists.
	Iteration #013: testing norm threshold 0.000548 in range [0.000469, 0.000626]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 3.5271039329184712, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 3.867618655414506, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 3.5263546498307625, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 1, x9 : 3.8668693723267973, x10 : 0.22114907139044473, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000548


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141002 in range [0.000000, 0.282004]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070203 in range [0.000000, 0.140406]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035060 in range [0.000000, 0.070119]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017499 in range [0.000000, 0.034997]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008285 in range [0.000000, 0.016569]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004104 in range [0.000000, 0.008208]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002053 in range [0.000000, 0.004105]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001027 in range [0.000000, 0.002054]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000514 in range [0.000000, 0.001028]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000238 in range [0.000000, 0.000475]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.5032382995669599, x5 : 0.062243402178643485, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.6010559384003735, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.5006752719743021, x5 : 0.06927999660587195, x6 : 0, x7 : 0, x8 : 3, x9 : 0.5984929108077157, x10 : 0.01453752639685082, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122578 in range [0.000000, 0.245156]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061289 in range [0.000000, 0.122579]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030084 in range [0.000000, 0.060169]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014897 in range [0.000000, 0.029794]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007449 in range [0.000000, 0.014898]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001739 in range [0.000000, 0.003478]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000870 in range [0.000000, 0.001740]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000436 in range [0.000000, 0.000871]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000218 in range [0.000000, 0.000437]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000110 in range [0.000000, 0.000219]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000055 in range [0.000000, 0.000111]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7754486831312685, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.36208474252982126, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.065331 in range [0.000000, 0.130662]...	solution exists & found.
	Iteration #003: testing norm threshold 0.031020 in range [0.000000, 0.062039]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013262 in range [0.000000, 0.026525]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006511 in range [0.000000, 0.013021]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003256 in range [0.000000, 0.006512]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001628 in range [0.000000, 0.003257]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000766 in range [0.000000, 0.001532]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000383 in range [0.000000, 0.000767]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000192 in range [0.000000, 0.000384]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000193]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5047169115502104, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4598034013606439, x10 : -0.2642411010550996, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5050899423154451, x5 : -0.3265837778018123, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4596168859780265, x10 : -0.2528194461629993, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000192


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124969 in range [0.000000, 0.249939]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062485 in range [0.000000, 0.124970]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030905 in range [0.000000, 0.061810]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014659 in range [0.000000, 0.029319]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007330 in range [0.000000, 0.014660]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003666 in range [0.000000, 0.007331]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001833 in range [0.000000, 0.003667]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000917 in range [0.000000, 0.001834]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000230 in range [0.000000, 0.000460]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000099 in range [0.000000, 0.000197]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4505705572339988, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : -0.19794935711874695, x11 : 2.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4479809003728451, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4236154959127431, x10 : -0.20656032901635646, x11 : 2, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000099


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139964 in range [0.000000, 0.279929]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069983 in range [0.000000, 0.139965]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034992 in range [0.000000, 0.069984]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017410 in range [0.000000, 0.034819]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007329 in range [0.000000, 0.014657]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002976 in range [0.000000, 0.005952]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001489 in range [0.000000, 0.002977]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000745 in range [0.000000, 0.001490]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000373 in range [0.000000, 0.000746]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000187 in range [0.000000, 0.000374]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000083 in range [0.000000, 0.000166]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.5088820157283805, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.5349476045937159, x10 : -0.10956036520361004, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.5145424571039247, x5 : -0.29787862572594304, x6 : 0, x7 : 0, x8 : 5, x9 : -0.537184385380987, x10 : -0.1427062377333641, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000165


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091578 in range [0.000000, 0.183156]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045790 in range [0.000000, 0.091579]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021060 in range [0.000000, 0.042121]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010531 in range [0.000000, 0.021061]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004292 in range [0.000000, 0.008584]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002146 in range [0.000000, 0.004293]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001074 in range [0.000000, 0.002147]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000537 in range [0.000000, 0.001075]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000264 in range [0.000000, 0.000528]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000265]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.2631408692163431, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.15480634117935135, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.2640077126337233, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.15567318459673152, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130500 in range [0.000000, 0.261001]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063338 in range [0.000000, 0.126676]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031084 in range [0.000000, 0.062167]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015542 in range [0.000000, 0.031085]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007508 in range [0.000000, 0.015016]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003754 in range [0.000000, 0.007509]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001782 in range [0.000000, 0.003563]...	no solution exists.
	Iteration #009: testing norm threshold 0.002672 in range [0.001782, 0.003563]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002228 in range [0.001782, 0.002673]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001984 in range [0.001782, 0.002187]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001883 in range [0.001782, 0.001985]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001833 in range [0.001782, 0.001884]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.40744090346904704, x5 : -0.07196356549034981, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.5568534659103311, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.39911070466041565, x5 : -0.07453923751642438, x6 : 0, x7 : 4, x8 : 0, x9 : 0.5616392556385166, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001883


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091363 in range [0.000000, 0.182726]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045682 in range [0.000000, 0.091364]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022841 in range [0.000000, 0.045683]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011421 in range [0.000000, 0.022842]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005711 in range [0.000000, 0.011422]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002856 in range [0.000000, 0.005712]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001429 in range [0.000000, 0.002857]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000630 in range [0.000000, 0.001259]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000315 in range [0.000000, 0.000631]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7715637580142207, x5 : -0.4253752529621124, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6960064396484419, x10 : -0.3413012847526595, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126771 in range [0.000000, 0.253542]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062226 in range [0.000000, 0.124451]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031094 in range [0.000000, 0.062188]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015548 in range [0.000000, 0.031095]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007028 in range [0.000000, 0.014056]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002930 in range [0.000000, 0.005860]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001466 in range [0.000000, 0.002931]...	no solution exists.
	Iteration #009: testing norm threshold 0.002198 in range [0.001466, 0.002931]...	no solution exists.
	Iteration #010: testing norm threshold 0.002565 in range [0.002198, 0.002931]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002382 in range [0.002198, 0.002566]...	no solution exists.
	Iteration #012: testing norm threshold 0.002474 in range [0.002382, 0.002566]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 1.6902929903454456, x5 : 1.1001106188188583, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.1756880807709245, x10 : 0.08931486660544799, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 1.6817628673782472, x5 : 1.1043756803024576, x6 : 0, x7 : 0, x8 : 4, x9 : 0.9104732573032379, x10 : -0.18690072745084763, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002474


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.187594 in range [0.000000, 0.375187]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088067 in range [0.000000, 0.176134]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042291 in range [0.000000, 0.084582]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018677 in range [0.000000, 0.037353]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008497 in range [0.000000, 0.016995]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004249 in range [0.000000, 0.008498]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001297 in range [0.000000, 0.002594]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000534 in range [0.000000, 0.001069]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000268 in range [0.000000, 0.000535]...	no solution exists.
	Iteration #011: testing norm threshold 0.000401 in range [0.000268, 0.000535]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000335 in range [0.000268, 0.000402]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.18827627080347734, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7150546610355377, x5 : -0.17932913307687526, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6083215681763032, x10 : -0.3526300936937332, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000335


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168005 in range [0.000000, 0.336010]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078195 in range [0.000000, 0.156390]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037664 in range [0.000000, 0.075329]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018730 in range [0.000000, 0.037460]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009250 in range [0.000000, 0.018501]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003402 in range [0.000000, 0.006805]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001702 in range [0.000000, 0.003403]...	no solution exists.
	Iteration #009: testing norm threshold 0.002553 in range [0.001702, 0.003403]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002128 in range [0.001702, 0.002554]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001912 in range [0.001702, 0.002122]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001807 in range [0.001702, 0.001913]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001755 in range [0.001702, 0.001808]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7462929538840777, x5 : -0.4298488126076653, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 1.0, x12 : 32.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7503078919291518, x5 : -0.1261049780065521, x6 : 0, x7 : 0, x8 : 0, x9 : -0.6786056458950043, x10 : -0.11659405110425794, x11 : 1, x12 : 32, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001755


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.193889 in range [0.000000, 0.387777]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095281 in range [0.000000, 0.190562]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047641 in range [0.000000, 0.095282]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023603 in range [0.000000, 0.047206]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010113 in range [0.000000, 0.020226]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004195 in range [0.000000, 0.008390]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001609 in range [0.000000, 0.003218]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000430 in range [0.000000, 0.000860]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000201 in range [0.000000, 0.000401]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000101 in range [0.000000, 0.000202]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.2548106608600029, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.14596584668134288, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.2548106608600029, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.14566420911662034, x10 : -0.24769002223876851, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000101


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155377 in range [0.000000, 0.310754]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070786 in range [0.000000, 0.141573]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031000 in range [0.000000, 0.061999]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014425 in range [0.000000, 0.028850]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007213 in range [0.000000, 0.014426]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003607 in range [0.000000, 0.007214]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001804 in range [0.000000, 0.003608]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000776 in range [0.000000, 0.001552]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000388 in range [0.000000, 0.000777]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000188 in range [0.000000, 0.000376]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000095 in range [0.000000, 0.000189]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.13818774387123936, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.06640139619926658, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.12879281848068494, x5 : -0.20672306442798932, x6 : 0, x7 : 0, x8 : 6, x9 : -0.06789864543104406, x10 : -0.273041124945971, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000094


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080650 in range [0.000000, 0.161300]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040173 in range [0.000000, 0.080346]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019958 in range [0.000000, 0.039917]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009980 in range [0.000000, 0.019959]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004166 in range [0.000000, 0.008332]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001158 in range [0.000000, 0.002315]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000579 in range [0.000000, 0.001159]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000290 in range [0.000000, 0.000580]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000119 in range [0.000000, 0.000238]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.40480303657026845, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3083103744798884, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096286 in range [0.000000, 0.192571]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048115 in range [0.000000, 0.096230]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024058 in range [0.000000, 0.048116]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012029 in range [0.000000, 0.024059]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006015 in range [0.000000, 0.012030]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003008 in range [0.000000, 0.006016]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000880 in range [0.000000, 0.001761]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000287 in range [0.000000, 0.000573]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000144 in range [0.000000, 0.000288]...	no solution exists.
	Iteration #011: testing norm threshold 0.000216 in range [0.000144, 0.000288]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6713210786770154, x5 : -0.2061705331593431, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.686240325091937, x5 : -0.2084073146477181, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.1737319185527137, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087874 in range [0.000000, 0.175748]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043516 in range [0.000000, 0.087032]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021759 in range [0.000000, 0.043517]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010880 in range [0.000000, 0.021760]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005332 in range [0.000000, 0.010663]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002455 in range [0.000000, 0.004911]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001205 in range [0.000000, 0.002411]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000603 in range [0.000000, 0.001206]...	no solution exists.
	Iteration #010: testing norm threshold 0.000905 in range [0.000603, 0.001206]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000754 in range [0.000603, 0.000906]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000679 in range [0.000603, 0.000755]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6504955577861647, x5 : -0.16143487726967867, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7650358974933624, x5 : -0.16124002278929436, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6652579701702308, x10 : -0.14261931397125244, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000754


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108612 in range [0.000000, 0.217225]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054307 in range [0.000000, 0.108613]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026093 in range [0.000000, 0.052187]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013047 in range [0.000000, 0.026094]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006524 in range [0.000000, 0.013048]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001894 in range [0.000000, 0.003788]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000836 in range [0.000000, 0.001672]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000418 in range [0.000000, 0.000837]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000419]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5463679533319117, x5 : 0.062243402178643485, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.546524246634378, x5 : 0.06208710887617708, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6961303254070978, x10 : -0.3635224153700571, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.055893 in range [0.000000, 0.111786]...	solution exists & found.
	Iteration #003: testing norm threshold 0.027947 in range [0.000000, 0.055894]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013974 in range [0.000000, 0.027948]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006864 in range [0.000000, 0.013728]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003433 in range [0.000000, 0.006865]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001399 in range [0.000000, 0.002798]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000596 in range [0.000000, 0.001192]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000298 in range [0.000000, 0.000597]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000150 in range [0.000000, 0.000299]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.14235284804940948, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.026619170958228428, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.13610519468784332, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 4, x9 : -0.030784269029326756, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100037 in range [0.000000, 0.200074]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050019 in range [0.000000, 0.100038]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025010 in range [0.000000, 0.050020]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012505 in range [0.000000, 0.025011]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006253 in range [0.000000, 0.012506]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002859 in range [0.000000, 0.005718]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001430 in range [0.000000, 0.002860]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000519 in range [0.000000, 0.001039]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000260 in range [0.000000, 0.000520]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000131 in range [0.000000, 0.000261]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.42974503634314815, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.499585626601682, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.4300453808293259, x5 : -0.21064409613609314, x6 : 0, x7 : 0, x8 : 3, x9 : -0.4901757925176625, x10 : -0.24244419756249322, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141481 in range [0.000000, 0.282963]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067486 in range [0.000000, 0.134973]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033744 in range [0.000000, 0.067487]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016385 in range [0.000000, 0.032770]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008193 in range [0.000000, 0.016386]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003244 in range [0.000000, 0.006489]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001330 in range [0.000000, 0.002659]...	no solution exists.
	Iteration #009: testing norm threshold 0.001994 in range [0.001330, 0.002659]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001662 in range [0.001330, 0.001995]...	no solution exists.
	Iteration #011: testing norm threshold 0.001829 in range [0.001662, 0.001995]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001746 in range [0.001662, 0.001830]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.292296598463534, x5 : 0.08013766453450928, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.18574807192238105, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.23069896385273916, x5 : 0.3184402601400854, x6 : 1, x7 : 5, x8 : 0, x9 : -0.14697234168848974, x10 : -0.1856970994194506, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001829


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132929 in range [0.000000, 0.265858]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066465 in range [0.000000, 0.132930]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032957 in range [0.000000, 0.065914]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016479 in range [0.000000, 0.032958]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007906 in range [0.000000, 0.015812]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003953 in range [0.000000, 0.007907]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001977 in range [0.000000, 0.003954]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000333 in range [0.000000, 0.000665]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3758187036295633, x10 : -0.1537548611611785, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4216907138558467, x5 : -0.37250463133062794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3762797343169662, x10 : -0.17585210502147675, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139348 in range [0.000000, 0.278695]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066281 in range [0.000000, 0.132562]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032394 in range [0.000000, 0.064788]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014066 in range [0.000000, 0.028132]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007034 in range [0.000000, 0.014067]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003516 in range [0.000000, 0.007032]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001759 in range [0.000000, 0.003517]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000880 in range [0.000000, 0.001760]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000440 in range [0.000000, 0.000881]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000221 in range [0.000000, 0.000441]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000111 in range [0.000000, 0.000222]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.15068305640574975, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.07524189069727505, x10 : -0.3747273409490208, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.1525810843585667, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 5, x9 : -0.07445515655351051, x10 : -0.37284987311439033, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.227380 in range [0.000000, 0.454759]...	solution exists & found.
	Iteration #003: testing norm threshold 0.113690 in range [0.000000, 0.227381]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054594 in range [0.000000, 0.109187]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027147 in range [0.000000, 0.054293]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013574 in range [0.000000, 0.027148]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006044 in range [0.000000, 0.012088]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001974 in range [0.000000, 0.003949]...	no solution exists.
	Iteration #009: testing norm threshold 0.002962 in range [0.001974, 0.003949]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002468 in range [0.001974, 0.002963]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002222 in range [0.001974, 0.002469]...	no solution exists.
	Iteration #012: testing norm threshold 0.002346 in range [0.002222, 0.002469]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002284 in range [0.002222, 0.002347]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3324690282619848, x5 : 0.33960446869456296, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.4772890154282548, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.33072651100548045, x5 : -0.19722340255975723, x6 : 0, x7 : 4, x8 : 0, x9 : 0.5232340150115551, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002284


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089541 in range [0.000000, 0.179082]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044771 in range [0.000000, 0.089542]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022055 in range [0.000000, 0.044109]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007980 in range [0.000000, 0.015960]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003724 in range [0.000000, 0.007449]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001862 in range [0.000000, 0.003724]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000932 in range [0.000000, 0.001863]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000338 in range [0.000000, 0.000675]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000339]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000073 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5505330575100817, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.548441168944434, x5 : -0.3851224875465923, x6 : 0, x7 : 0, x8 : 0, x9 : -0.501786408106879, x10 : -0.26425043188369113, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086313 in range [0.000000, 0.172626]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042361 in range [0.000000, 0.084722]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021129 in range [0.000000, 0.042258]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010106 in range [0.000000, 0.020211]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005053 in range [0.000000, 0.010107]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001994 in range [0.000000, 0.003988]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000997 in range [0.000000, 0.001995]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000499 in range [0.000000, 0.000998]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000250 in range [0.000000, 0.000500]...	no solution exists.
	Iteration #011: testing norm threshold 0.000375 in range [0.000250, 0.000500]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000313 in range [0.000250, 0.000376]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.02008621489922539, x5 : 1.1895819305981872, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : -0.19794935711874695, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.017408218189423875, x5 : 1.153793454170227, x6 : 1, x7 : 3, x8 : 0, x9 : -0.5906685682915682, x10 : -0.2531924769282341, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000313


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116842 in range [0.000000, 0.233683]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058421 in range [0.000000, 0.116843]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029198 in range [0.000000, 0.058396]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014584 in range [0.000000, 0.029169]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006602 in range [0.000000, 0.013204]...	no solution exists.
	Iteration #007: testing norm threshold 0.009903 in range [0.006602, 0.013204]...	no solution exists.
	Iteration #008: testing norm threshold 0.011554 in range [0.009903, 0.013204]...	solution exists & found.
	Iteration #009: testing norm threshold 0.010607 in range [0.009903, 0.011310]...	no solution exists.
	Iteration #010: testing norm threshold 0.010958 in range [0.010607, 0.011310]...	no solution exists.
	Iteration #011: testing norm threshold 0.011134 in range [0.010958, 0.011310]...	no solution exists.
	Iteration #012: testing norm threshold 0.011222 in range [0.011134, 0.011310]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.16965496807418, x5 : 2.299026196661865, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : 0.3181601144641022, x10 : 6.36493329258017, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 1.834791368839422, x5 : 1.5072051286697388, x6 : 1, x7 : 0, x8 : 0, x9 : -0.660924643278122, x10 : 6.355800781563166, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.011222


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149584 in range [0.000000, 0.299169]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073924 in range [0.000000, 0.147848]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036962 in range [0.000000, 0.073925]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018482 in range [0.000000, 0.036963]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009241 in range [0.000000, 0.018483]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001220 in range [0.000000, 0.002440]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000427 in range [0.000000, 0.000854]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000214 in range [0.000000, 0.000428]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000108 in range [0.000000, 0.000215]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 1.0, x4 : -0.6463304536079947, x5 : -0.3224832384724706, x6 : 0.0, x7 : 2.0, x8 : 4.0, x9 : -0.5614690880877413, x10 : -0.3747273409490208, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 1, x4 : -0.6463304543793957, x5 : -0.3224832407866739, x6 : 0, x7 : 2, x8 : 4, x9 : -0.5548387162123941, x10 : -0.36367870790112244, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152157 in range [0.000000, 0.304314]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073524 in range [0.000000, 0.147047]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036280 in range [0.000000, 0.072561]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017975 in range [0.000000, 0.035949]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008819 in range [0.000000, 0.017637]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003528 in range [0.000000, 0.007055]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001764 in range [0.000000, 0.003529]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000883 in range [0.000000, 0.001765]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000442 in range [0.000000, 0.000884]...	no solution exists.
	Iteration #011: testing norm threshold 0.000663 in range [0.000442, 0.000884]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000553 in range [0.000442, 0.000664]...	no solution exists.
	Iteration #013: testing norm threshold 0.000608 in range [0.000553, 0.000664]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.03822524359515636, x5 : 1.1627405370643886, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.03951570691351899, x5 : 1.1622199056824638, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6201182609449953, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000663


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165436 in range [0.000000, 0.330873]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082719 in range [0.000000, 0.165437]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041360 in range [0.000000, 0.082720]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019312 in range [0.000000, 0.038623]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009656 in range [0.000000, 0.019313]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004829 in range [0.000000, 0.009657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002042 in range [0.000000, 0.004083]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000710 in range [0.000000, 0.001419]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000355 in range [0.000000, 0.000711]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	no solution exists.
	Iteration #012: testing norm threshold 0.000205 in range [0.000137, 0.000274]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7639946340450603, x5 : -0.4253752529621124, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6952453552612621, x10 : -0.3636787086725235, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000273


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.215243 in range [0.000000, 0.430486]...	solution exists & found.
	Iteration #003: testing norm threshold 0.106689 in range [0.000000, 0.213377]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052329 in range [0.000000, 0.104658]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024857 in range [0.000000, 0.049714]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012409 in range [0.000000, 0.024818]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004946 in range [0.000000, 0.009892]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002143 in range [0.000000, 0.004287]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000999 in range [0.000000, 0.001997]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000496 in range [0.000000, 0.000993]...	no solution exists.
	Iteration #011: testing norm threshold 0.000745 in range [0.000496, 0.000993]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.11171850681896814, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2430159112310301, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.11171850621996228, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.2164944251999259, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000562


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180104 in range [0.000000, 0.360207]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086140 in range [0.000000, 0.172280]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041590 in range [0.000000, 0.083181]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020749 in range [0.000000, 0.041499]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008707 in range [0.000000, 0.017414]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004354 in range [0.000000, 0.008708]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001217 in range [0.000000, 0.002434]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000609 in range [0.000000, 0.001218]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000305 in range [0.000000, 0.000610]...	no solution exists.
	Iteration #011: testing norm threshold 0.000458 in range [0.000305, 0.000610]...	no solution exists.
	Iteration #012: testing norm threshold 0.000534 in range [0.000458, 0.000610]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4547356614121689, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.499585626601682, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.45702313815632195, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 1, x9 : -0.49844188822960545, x10 : -0.1625160058479528, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000534


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.209339 in range [0.000000, 0.418678]...	solution exists & found.
	Iteration #003: testing norm threshold 0.104554 in range [0.000000, 0.209108]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052111 in range [0.000000, 0.104223]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025293 in range [0.000000, 0.050587]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012358 in range [0.000000, 0.024717]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006180 in range [0.000000, 0.012359]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002858 in range [0.000000, 0.005717]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001430 in range [0.000000, 0.002859]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000073 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.31728722353255473, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.31989735861344737, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2148796904972991, x10 : -0.26685123613599226, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093133 in range [0.000000, 0.186266]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046567 in range [0.000000, 0.093134]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020117 in range [0.000000, 0.040234]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010000 in range [0.000000, 0.020000]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001995 in range [0.000000, 0.003989]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000512 in range [0.000000, 0.001025]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000257 in range [0.000000, 0.000513]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000057 in range [0.000000, 0.000115]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5047169115502104, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4465426596136311, x10 : -0.1537548611611785, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5053507929834635, x5 : -0.29948152507996095, x6 : 0, x7 : 0, x8 : 6, x9 : -0.44717654104688426, x10 : -0.15438874259443167, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000114


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144700 in range [0.000000, 0.289400]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072286 in range [0.000000, 0.144572]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036143 in range [0.000000, 0.072287]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018072 in range [0.000000, 0.036144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009037 in range [0.000000, 0.018073]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002907 in range [0.000000, 0.005814]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001454 in range [0.000000, 0.002908]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000728 in range [0.000000, 0.001455]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000349 in range [0.000000, 0.000697]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000175 in range [0.000000, 0.000350]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4922215990157, x5 : -0.3851131567180008, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.40676043437259296, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.4931373684533838, x5 : -0.4164281189441681, x6 : 0, x7 : 1, x8 : 0, x9 : -0.40642327879359846, x10 : -0.26397205201552504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101786 in range [0.000000, 0.203573]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050519 in range [0.000000, 0.101037]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024907 in range [0.000000, 0.049813]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012384 in range [0.000000, 0.024769]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005859 in range [0.000000, 0.011718]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000827 in range [0.000000, 0.001655]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000414 in range [0.000000, 0.000828]...	no solution exists.
	Iteration #009: testing norm threshold 0.000621 in range [0.000414, 0.000828]...	no solution exists.
	Iteration #010: testing norm threshold 0.000725 in range [0.000621, 0.000828]...	no solution exists.
	Iteration #011: testing norm threshold 0.000777 in range [0.000725, 0.000828]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : -0.4713960781248494, x5 : 0.22329176338143544, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 1, x4 : -0.4716780201317225, x5 : 0.223432734384872, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.1669371769993772, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000777


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134512 in range [0.000000, 0.269025]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067257 in range [0.000000, 0.134513]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032859 in range [0.000000, 0.065718]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016430 in range [0.000000, 0.032860]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008197 in range [0.000000, 0.016395]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002188 in range [0.000000, 0.004376]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001068 in range [0.000000, 0.002135]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000534 in range [0.000000, 0.001069]...	no solution exists.
	Iteration #010: testing norm threshold 0.000801 in range [0.000534, 0.001069]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000668 in range [0.000534, 0.000802]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000602 in range [0.000534, 0.000669]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2381502441473224, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.22111004991441494, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.23171913429021906, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.22129350750833207, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000668


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148051 in range [0.000000, 0.296101]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074026 in range [0.000000, 0.148052]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036068 in range [0.000000, 0.072136]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018035 in range [0.000000, 0.036069]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008297 in range [0.000000, 0.016593]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003639 in range [0.000000, 0.007278]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001131 in range [0.000000, 0.002262]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000566 in range [0.000000, 0.001132]...	no solution exists.
	Iteration #010: testing norm threshold 0.000849 in range [0.000566, 0.001132]...	no solution exists.
	Iteration #011: testing norm threshold 0.000991 in range [0.000849, 0.001132]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000920 in range [0.000849, 0.000992]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.7732200766696784, x5 : -0.1435406149138129, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 3.0675539033447388, x10 : 0.3323845943720745, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 2.7955608556507427, x5 : -0.09728967002646154, x6 : 0, x7 : 0, x8 : 6, x9 : 2.932736396789551, x10 : 0.33086930623384414, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000991


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150213 in range [0.000000, 0.300426]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073379 in range [0.000000, 0.146758]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036406 in range [0.000000, 0.072811]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018080 in range [0.000000, 0.036161]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008574 in range [0.000000, 0.017148]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003795 in range [0.000000, 0.007590]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001528 in range [0.000000, 0.003057]...	no solution exists.
	Iteration #009: testing norm threshold 0.002293 in range [0.001528, 0.003057]...	no solution exists.
	Iteration #010: testing norm threshold 0.002675 in range [0.002293, 0.003057]...	no solution exists.
	Iteration #011: testing norm threshold 0.002866 in range [0.002675, 0.003057]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002771 in range [0.002675, 0.002867]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.6365216332684039, x5 : 1.118004881174724, x6 : 1.0, x7 : 3.0, x8 : 1.0, x9 : -0.5482083463407286, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.6327210216590358, x5 : 0.36197228729724884, x6 : 1, x7 : 3, x8 : 1, x9 : -0.6962866187095642, x10 : -0.29358636248693, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002866


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.070201 in range [0.000000, 0.140401]...	solution exists & found.
	Iteration #003: testing norm threshold 0.035018 in range [0.000000, 0.070035]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017509 in range [0.000000, 0.035019]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008755 in range [0.000000, 0.017510]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004378 in range [0.000000, 0.008756]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002096 in range [0.000000, 0.004191]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000671 in range [0.000000, 0.001342]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000336 in range [0.000000, 0.000672]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000168 in range [0.000000, 0.000337]...	no solution exists.
	Iteration #011: testing norm threshold 0.000253 in range [0.000168, 0.000337]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.6906679875846156, x5 : 2.7195413620247106, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.6875354592351719, x5 : 2.7211076261994323, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6962866187095642, x10 : -0.2894708773833275, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000336


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116652 in range [0.000000, 0.233304]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055651 in range [0.000000, 0.111302]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023898 in range [0.000000, 0.047797]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011950 in range [0.000000, 0.023899]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005975 in range [0.000000, 0.011951]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001671 in range [0.000000, 0.003342]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000836 in range [0.000000, 0.001672]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000419 in range [0.000000, 0.000837]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7697394376712761, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6947424894290886, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137708 in range [0.000000, 0.275416]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068855 in range [0.000000, 0.137709]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034407 in range [0.000000, 0.068813]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015997 in range [0.000000, 0.031994]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007999 in range [0.000000, 0.015998]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001379 in range [0.000000, 0.002759]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000486 in range [0.000000, 0.000972]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000105 in range [0.000000, 0.000209]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 1.311268510131964, x5 : 3.3905762003696776, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.4939458826992298, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 1.306848289280066, x5 : 3.3861559795177794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.4873154759407043, x10 : -0.04801991117072384, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.083319 in range [0.000000, 0.166638]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041660 in range [0.000000, 0.083320]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020169 in range [0.000000, 0.040338]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009081 in range [0.000000, 0.018163]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002633 in range [0.000000, 0.005265]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001309 in range [0.000000, 0.002619]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000642 in range [0.000000, 0.001284]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000321 in range [0.000000, 0.000643]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000161 in range [0.000000, 0.000322]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000073 in range [0.000000, 0.000147]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.760584658256498, x5 : -0.4253752529621124, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.35291624903716384, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110705 in range [0.000000, 0.221410]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054340 in range [0.000000, 0.108679]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027147 in range [0.000000, 0.054295]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013574 in range [0.000000, 0.027148]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006466 in range [0.000000, 0.012932]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002878 in range [0.000000, 0.005756]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001440 in range [0.000000, 0.002879]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000709 in range [0.000000, 0.001417]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000355 in range [0.000000, 0.000710]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	no solution exists.
	Iteration #012: testing norm threshold 0.000267 in range [0.000178, 0.000356]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3672684736705962, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3492972201355379, x10 : -0.24214385307631545, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.377681240439415, x5 : -0.34350642865509207, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3506418680833816, x10 : -0.1634588346442621, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000355


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126166 in range [0.000000, 0.252333]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063084 in range [0.000000, 0.126167]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031178 in range [0.000000, 0.062355]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015589 in range [0.000000, 0.031179]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007655 in range [0.000000, 0.015310]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003195 in range [0.000000, 0.006390]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001575 in range [0.000000, 0.003150]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000788 in range [0.000000, 0.001576]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000395 in range [0.000000, 0.000789]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000198 in range [0.000000, 0.000396]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000099 in range [0.000000, 0.000199]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.40475441127412737, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.31393524214350393, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4057956914573571, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 2, x9 : -0.3149765223267337, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.057597 in range [0.000000, 0.115194]...	solution exists & found.
	Iteration #003: testing norm threshold 0.027043 in range [0.000000, 0.054087]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013084 in range [0.000000, 0.026168]...	solution exists & found.
	Iteration #005: testing norm threshold 0.005974 in range [0.000000, 0.011949]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002092 in range [0.000000, 0.004185]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001047 in range [0.000000, 0.002093]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000524 in range [0.000000, 0.001048]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000262 in range [0.000000, 0.000525]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000132 in range [0.000000, 0.000263]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000133]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.3940602878959337, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7567057311534882, x5 : -0.39629706940210657, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6719752693128472, x10 : -0.3675326938752961, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149950 in range [0.000000, 0.299899]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074975 in range [0.000000, 0.149951]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036236 in range [0.000000, 0.072471]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018118 in range [0.000000, 0.036237]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008759 in range [0.000000, 0.017518]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004356 in range [0.000000, 0.008712]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002179 in range [0.000000, 0.004357]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001090 in range [0.000000, 0.002180]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000545 in range [0.000000, 0.001091]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000201 in range [0.000000, 0.000401]...	no solution exists.
	Iteration #012: testing norm threshold 0.000301 in range [0.000201, 0.000401]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000251 in range [0.000201, 0.000302]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.374120070043686, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.4551877791832336, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.37279095608284807, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 0.46756750834045374, x10 : -0.15242574620189703, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000251


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131870 in range [0.000000, 0.263740]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065936 in range [0.000000, 0.131871]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032847 in range [0.000000, 0.065693]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015470 in range [0.000000, 0.030939]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007735 in range [0.000000, 0.015471]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003868 in range [0.000000, 0.007736]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001935 in range [0.000000, 0.003869]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000968 in range [0.000000, 0.001936]...	no solution exists.
	Iteration #010: testing norm threshold 0.001452 in range [0.000968, 0.001936]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001210 in range [0.000968, 0.001453]...	no solution exists.
	Iteration #012: testing norm threshold 0.001331 in range [0.001210, 0.001453]...	no solution exists.
	Iteration #013: testing norm threshold 0.001392 in range [0.001331, 0.001453]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.40475441127412737, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.42886167061761415, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.40475441127412737, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4316238257196237, x10 : 0.14732014523577194, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001380


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150098 in range [0.000000, 0.300196]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075045 in range [0.000000, 0.150091]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037443 in range [0.000000, 0.074885]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018697 in range [0.000000, 0.037394]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009067 in range [0.000000, 0.018134]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004534 in range [0.000000, 0.009068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002267 in range [0.000000, 0.004535]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001127 in range [0.000000, 0.002254]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000564 in range [0.000000, 0.001128]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000283 in range [0.000000, 0.000565]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000142 in range [0.000000, 0.000284]...	no solution exists.
	Iteration #013: testing norm threshold 0.000213 in range [0.000142, 0.000284]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.09653670208953813, x5 : 0.3932872557621603, x6 : 1.0, x7 : 0.0, x8 : 5.0, x9 : 0.0220035487808182, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.09729528252699328, x5 : 0.28592168539762497, x6 : 1, x7 : 0, x8 : 5, x9 : 0.021244968343363056, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000283


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101745 in range [0.000000, 0.203491]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047085 in range [0.000000, 0.094169]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022828 in range [0.000000, 0.045656]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009470 in range [0.000000, 0.018939]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004336 in range [0.000000, 0.008673]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002169 in range [0.000000, 0.004337]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001085 in range [0.000000, 0.002170]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000543 in range [0.000000, 0.001086]...	no solution exists.
	Iteration #010: testing norm threshold 0.000814 in range [0.000543, 0.001086]...	no solution exists.
	Iteration #011: testing norm threshold 0.000950 in range [0.000814, 0.001086]...	no solution exists.
	Iteration #012: testing norm threshold 0.001018 in range [0.000950, 0.001086]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.0655273636199267, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.2552525312530007, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 1.055944488516396, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 0, x9 : 1.255804514756667, x10 : 0.18875247985124588, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177581 in range [0.000000, 0.355162]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080822 in range [0.000000, 0.161643]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038493 in range [0.000000, 0.076986]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019247 in range [0.000000, 0.038494]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008013 in range [0.000000, 0.016027]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002163 in range [0.000000, 0.004325]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001082 in range [0.000000, 0.002164]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000541 in range [0.000000, 0.001083]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000185]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : 0.7959081587691402, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7319685561397664, x5 : 0.7912361208324016, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6740594975934822, x10 : -0.2927149361595596, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165530 in range [0.000000, 0.331061]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082766 in range [0.000000, 0.165531]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036578 in range [0.000000, 0.073156]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018290 in range [0.000000, 0.036579]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009145 in range [0.000000, 0.018291]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004020 in range [0.000000, 0.008040]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002010 in range [0.000000, 0.004021]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000566 in range [0.000000, 0.001131]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000201 in range [0.000000, 0.000403]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.12421381935347853, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.2253349222350132, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.12213126942515373, x5 : -0.34963311076423054, x6 : 0, x7 : 0, x8 : 6, x9 : 0.2211698223783636, x10 : -0.18001720899661233, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.194315 in range [0.000000, 0.388631]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097158 in range [0.000000, 0.194316]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048379 in range [0.000000, 0.096758]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021307 in range [0.000000, 0.042615]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010654 in range [0.000000, 0.021308]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004560 in range [0.000000, 0.009120]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002280 in range [0.000000, 0.004561]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001141 in range [0.000000, 0.002281]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000571 in range [0.000000, 0.001142]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000286 in range [0.000000, 0.000572]...	no solution exists.
	Iteration #012: testing norm threshold 0.000429 in range [0.000286, 0.000572]...	no solution exists.
	Iteration #013: testing norm threshold 0.000500 in range [0.000429, 0.000572]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.558863265866422, x5 : 0.03540200864484483, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5796887874603271, x5 : 0.03574590644683943, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.0886270710014588, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000571


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137706 in range [0.000000, 0.275413]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068176 in range [0.000000, 0.136352]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034089 in range [0.000000, 0.068177]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015627 in range [0.000000, 0.031254]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007714 in range [0.000000, 0.015427]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003857 in range [0.000000, 0.007715]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001929 in range [0.000000, 0.003858]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000965 in range [0.000000, 0.001930]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000483 in range [0.000000, 0.000966]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000242 in range [0.000000, 0.000484]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000119 in range [0.000000, 0.000238]...	no solution exists.
	Iteration #013: testing norm threshold 0.000179 in range [0.000119, 0.000238]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.8780976756022711, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.0386604160517932, x10 : 0.08931486660544799, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.8772604431707426, x5 : -0.24643263220787048, x6 : 0, x7 : 0, x8 : 6, x9 : 1.0386707817621466, x10 : 0.07826624065637589, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000237


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196230 in range [0.000000, 0.392461]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089370 in range [0.000000, 0.178740]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044685 in range [0.000000, 0.089371]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022054 in range [0.000000, 0.044108]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010806 in range [0.000000, 0.021612]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002682 in range [0.000000, 0.005365]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001342 in range [0.000000, 0.002683]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000522 in range [0.000000, 0.001044]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000253 in range [0.000000, 0.000506]...	no solution exists.
	Iteration #011: testing norm threshold 0.000379 in range [0.000253, 0.000506]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000317 in range [0.000253, 0.000380]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7296325266361237, x5 : -0.3851131498813629, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6438121974886578, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000379


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.193407 in range [0.000000, 0.386814]...	solution exists & found.
	Iteration #003: testing norm threshold 0.096704 in range [0.000000, 0.193408]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048353 in range [0.000000, 0.096705]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024149 in range [0.000000, 0.048298]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011470 in range [0.000000, 0.022941]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005317 in range [0.000000, 0.010634]...	no solution exists.
	Iteration #008: testing norm threshold 0.007975 in range [0.005317, 0.010634]...	solution exists & found.
	Iteration #009: testing norm threshold 0.006646 in range [0.005317, 0.007976]...	no solution exists.
	Iteration #010: testing norm threshold 0.007311 in range [0.006646, 0.007976]...	solution exists & found.
	Iteration #011: testing norm threshold 0.006917 in range [0.006646, 0.007188]...	no solution exists.
	Iteration #012: testing norm threshold 0.007053 in range [0.006917, 0.007188]...	solution exists & found.
	Iteration #013: testing norm threshold 0.006985 in range [0.006917, 0.007054]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.3529195519136654, x5 : 1.4848372594699726, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 1.560249591434293, x10 : 4.3540837265108046, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.9968031644821167, x5 : -0.31905633258197547, x6 : 0, x7 : 0, x8 : 2, x9 : 1.4873155355453491, x10 : 4.349663446054262, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.007053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144467 in range [0.000000, 0.288933]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072234 in range [0.000000, 0.144468]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035846 in range [0.000000, 0.071692]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017923 in range [0.000000, 0.035847]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008962 in range [0.000000, 0.017924]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004371 in range [0.000000, 0.008743]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002186 in range [0.000000, 0.004372]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000731 in range [0.000000, 0.001463]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000355 in range [0.000000, 0.000711]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000090 in range [0.000000, 0.000179]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.01777867646021995, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.14027030020952225, x5 : -0.15384035698138507, x6 : 0, x7 : 0, x8 : 3, x9 : -0.01913128734985922, x10 : -0.22974262117985306, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168007 in range [0.000000, 0.336013]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079720 in range [0.000000, 0.159439]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039593 in range [0.000000, 0.079185]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019720 in range [0.000000, 0.039440]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009860 in range [0.000000, 0.019721]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004931 in range [0.000000, 0.009861]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001378 in range [0.000000, 0.002756]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000489 in range [0.000000, 0.000977]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.3964242029177871, x5 : -0.3851131567180008, x6 : 0.0, x7 : 2.0, x8 : 4.0, x9 : -0.3050947476454955, x10 : -0.3084355970126681, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.3964242035144432, x5 : -0.35379821002422407, x6 : 0, x7 : 2, x8 : 4, x9 : -0.30509474824215155, x10 : -0.30843559760932415, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131313 in range [0.000000, 0.262625]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065657 in range [0.000000, 0.131314]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032829 in range [0.000000, 0.065658]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016011 in range [0.000000, 0.032022]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007498 in range [0.000000, 0.014996]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003174 in range [0.000000, 0.006348]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000921 in range [0.000000, 0.001842]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000185 in range [0.000000, 0.000371]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7639946340450603, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.29975525599096464, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102413 in range [0.000000, 0.204827]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050949 in range [0.000000, 0.101898]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025475 in range [0.000000, 0.050950]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012738 in range [0.000000, 0.025476]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006234 in range [0.000000, 0.012468]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003011 in range [0.000000, 0.006023]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001499 in range [0.000000, 0.002998]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000166 in range [0.000000, 0.000332]...	no solution exists.
	Iteration #011: testing norm threshold 0.000249 in range [0.000166, 0.000332]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.31728722353255473, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3065555657922621, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.2121101113018106, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086499 in range [0.000000, 0.172998]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042728 in range [0.000000, 0.085455]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021137 in range [0.000000, 0.042274]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010569 in range [0.000000, 0.021138]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005285 in range [0.000000, 0.010570]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001588 in range [0.000000, 0.003175]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000573 in range [0.000000, 0.001146]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000287 in range [0.000000, 0.000574]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000080 in range [0.000000, 0.000159]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5713585784009324, x5 : -0.3493246320062693, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.481904637605665, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5700064944659654, x5 : -0.3716924488544464, x6 : 0, x7 : 4, x8 : 0, x9 : -0.484608805475599, x10 : -0.2642411010550996, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102276 in range [0.000000, 0.204552]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051139 in range [0.000000, 0.102277]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025533 in range [0.000000, 0.051065]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012766 in range [0.000000, 0.025531]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006383 in range [0.000000, 0.012767]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002510 in range [0.000000, 0.005019]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001167 in range [0.000000, 0.002334]...	no solution exists.
	Iteration #009: testing norm threshold 0.001750 in range [0.001167, 0.002334]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001459 in range [0.001167, 0.001751]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001263 in range [0.001167, 0.001360]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4922215990157, x5 : -0.1435406149138129, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.3979199398745845, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.49258459388118936, x5 : 0.022344306827497808, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5504184663295746, x10 : 0.000562879824821752, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001263


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110469 in range [0.000000, 0.220938]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053535 in range [0.000000, 0.107070]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026552 in range [0.000000, 0.053104]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012952 in range [0.000000, 0.025905]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006270 in range [0.000000, 0.012540]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003088 in range [0.000000, 0.006177]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001096 in range [0.000000, 0.002193]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000549 in range [0.000000, 0.001097]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000275 in range [0.000000, 0.000550]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000062 in range [0.000000, 0.000123]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.5213773282628908, x5 : -0.3672188943621351, x6 : 0.0, x7 : 1.0, x8 : 4.0, x9 : -0.4863248848546693, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.5212102286601585, x5 : -0.41068013730623915, x6 : 0, x7 : 1, x8 : 4, x9 : -0.4848211190245954, x10 : -0.24150664576183706, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000122


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178946 in range [0.000000, 0.357893]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089005 in range [0.000000, 0.178011]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044327 in range [0.000000, 0.088655]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022164 in range [0.000000, 0.044328]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010451 in range [0.000000, 0.020901]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005009 in range [0.000000, 0.010018]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002505 in range [0.000000, 0.005010]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001162 in range [0.000000, 0.002323]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000515 in range [0.000000, 0.001029]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	no solution exists.
	Iteration #012: testing norm threshold 0.000387 in range [0.000258, 0.000516]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000310 in range [0.000258, 0.000363]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.625504932717144, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5614690880877413, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.625461349788197, x5 : -0.3895867168903351, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000362


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159271 in range [0.000000, 0.318542]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078024 in range [0.000000, 0.156047]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038689 in range [0.000000, 0.077378]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019244 in range [0.000000, 0.038487]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005846 in range [0.000000, 0.011692]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002065 in range [0.000000, 0.004129]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001033 in range [0.000000, 0.002066]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000369 in range [0.000000, 0.000738]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6265462000745831, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5835703313350677, x10 : -0.2963457067388592, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139831 in range [0.000000, 0.279663]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069250 in range [0.000000, 0.138501]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030803 in range [0.000000, 0.061607]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014281 in range [0.000000, 0.028562]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006377 in range [0.000000, 0.012753]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001478 in range [0.000000, 0.002957]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000740 in range [0.000000, 0.001479]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000172 in range [0.000000, 0.000344]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000086 in range [0.000000, 0.000173]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.558863265866422, x5 : -0.4119545502517995, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.4686438958586523, x10 : -0.3747273409490208, x11 : 1.0, x12 : 33.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5469004305960786, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 4, x9 : -0.4774843901395798, x10 : -0.3621286394955766, x11 : 1, x12 : 33, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096275 in range [0.000000, 0.192550]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044665 in range [0.000000, 0.089331]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020787 in range [0.000000, 0.041575]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010392 in range [0.000000, 0.020784]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004215 in range [0.000000, 0.008430]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002108 in range [0.000000, 0.004216]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001054 in range [0.000000, 0.002109]...	no solution exists.
	Iteration #009: testing norm threshold 0.001582 in range [0.001054, 0.002109]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001319 in range [0.001054, 0.001583]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001184 in range [0.001054, 0.001314]...	no solution exists.
	Iteration #012: testing norm threshold 0.001249 in range [0.001184, 0.001314]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3089570151762145, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3095149948944997, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4651484191417694, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.3249858617782593, x10 : -0.17296033455008814, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121466 in range [0.000000, 0.242931]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059950 in range [0.000000, 0.119899]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029975 in range [0.000000, 0.059951]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013627 in range [0.000000, 0.027255]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006814 in range [0.000000, 0.013628]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002407 in range [0.000000, 0.004815]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001204 in range [0.000000, 0.002408]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000603 in range [0.000000, 0.001205]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000302 in range [0.000000, 0.000604]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000151 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.5213773282628908, x5 : 0.1338204516021066, x6 : 3.0, x7 : 5.0, x8 : 1.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.5276249945163727, x5 : 0.13368562515055837, x6 : 3, x7 : 5, x8 : 1, x9 : -0.6944066588535499, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092762 in range [0.000000, 0.185525]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046382 in range [0.000000, 0.092763]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022627 in range [0.000000, 0.045254]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011081 in range [0.000000, 0.022163]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005400 in range [0.000000, 0.010801]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002503 in range [0.000000, 0.005007]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001252 in range [0.000000, 0.002504]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000186 in range [0.000000, 0.000371]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000093 in range [0.000000, 0.000187]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.09505809010628764, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.2253349222350132, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.09562695886621002, x5 : -0.3711235809730577, x6 : 0, x7 : 0, x8 : 4, x9 : 0.20544381439685822, x10 : -0.2084291118787813, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000186


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104815 in range [0.000000, 0.209630]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052408 in range [0.000000, 0.104816]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026205 in range [0.000000, 0.052409]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013103 in range [0.000000, 0.026206]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006504 in range [0.000000, 0.013008]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003252 in range [0.000000, 0.006505]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001627 in range [0.000000, 0.003253]...	no solution exists.
	Iteration #009: testing norm threshold 0.002440 in range [0.001627, 0.003253]...	no solution exists.
	Iteration #010: testing norm threshold 0.002847 in range [0.002440, 0.003253]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002644 in range [0.002440, 0.002848]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002542 in range [0.002440, 0.002645]...	no solution exists.
	Iteration #013: testing norm threshold 0.002594 in range [0.002542, 0.002645]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.024251319077395517, x5 : 0.6617011911001469, x6 : 3.0, x7 : 3.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.01841575766783574, x5 : -0.11669921875, x6 : 3, x7 : 3, x8 : 0, x9 : -0.6719752848148346, x10 : -0.23109523206949234, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002644


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135489 in range [0.000000, 0.270977]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065300 in range [0.000000, 0.130599]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032520 in range [0.000000, 0.065040]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016261 in range [0.000000, 0.032521]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006660 in range [0.000000, 0.013320]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002831 in range [0.000000, 0.005663]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001350 in range [0.000000, 0.002700]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000675 in range [0.000000, 0.001351]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000338 in range [0.000000, 0.000676]...	no solution exists.
	Iteration #011: testing norm threshold 0.000507 in range [0.000338, 0.000676]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000393 in range [0.000338, 0.000447]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.2366716321640719, x5 : 2.1558720978149397, x6 : 1.0, x7 : 1.0, x8 : 4.0, x9 : 0.3756233287011573, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.23585637068755091, x5 : 2.1550568363384186, x6 : 1, x7 : 1, x8 : 4, x9 : 0.38306895303059046, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000393


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150315 in range [0.000000, 0.300630]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070858 in range [0.000000, 0.141716]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034630 in range [0.000000, 0.069259]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014262 in range [0.000000, 0.028525]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007132 in range [0.000000, 0.014263]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003566 in range [0.000000, 0.007133]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001784 in range [0.000000, 0.003567]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000892 in range [0.000000, 0.001785]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000171 in range [0.000000, 0.000342]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000077 in range [0.000000, 0.000154]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.3403775008283364, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.1537548611611785, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6941866089711085, x5 : -0.3001154065132141, x6 : 0, x7 : 1, x8 : 0, x9 : -0.6542942812573913, x10 : -0.16480348259210587, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000153


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103357 in range [0.000000, 0.206714]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051659 in range [0.000000, 0.103318]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024741 in range [0.000000, 0.049482]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012181 in range [0.000000, 0.024361]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003254 in range [0.000000, 0.006508]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001475 in range [0.000000, 0.002949]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000686 in range [0.000000, 0.001373]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000344 in range [0.000000, 0.000687]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000172 in range [0.000000, 0.000345]...	no solution exists.
	Iteration #011: testing norm threshold 0.000259 in range [0.000172, 0.000345]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.5573846538831715, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.6717798943844413, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.556654303125843, x5 : -0.4029109313512094, x6 : 0, x7 : 0, x8 : 4, x9 : 0.6692635540297602, x10 : -0.12983940244458997, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000344


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131176 in range [0.000000, 0.262353]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065589 in range [0.000000, 0.131177]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032795 in range [0.000000, 0.065590]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015965 in range [0.000000, 0.031931]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007971 in range [0.000000, 0.015941]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003881 in range [0.000000, 0.007761]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001941 in range [0.000000, 0.003882]...	no solution exists.
	Iteration #009: testing norm threshold 0.002911 in range [0.001941, 0.003882]...	no solution exists.
	Iteration #010: testing norm threshold 0.003396 in range [0.002911, 0.003882]...	no solution exists.
	Iteration #011: testing norm threshold 0.003639 in range [0.003396, 0.003882]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003518 in range [0.003396, 0.003640]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003458 in range [0.003396, 0.003519]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1367091318879889, x5 : 0.9480093887939992, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : 1.3046635054385805, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.13839896238562904, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5748364693546899, x10 : 1.3046635054385805, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003518


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181732 in range [0.000000, 0.363463]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090866 in range [0.000000, 0.181733]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043486 in range [0.000000, 0.086972]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021370 in range [0.000000, 0.042741]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009603 in range [0.000000, 0.019206]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004524 in range [0.000000, 0.009048]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002115 in range [0.000000, 0.004230]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000611 in range [0.000000, 0.001223]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000306 in range [0.000000, 0.000612]...	no solution exists.
	Iteration #011: testing norm threshold 0.000459 in range [0.000306, 0.000612]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000383 in range [0.000306, 0.000459]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2714710775726833, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.16364683567735985, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.27357544805701917, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.16779012534178384, x10 : -0.27114643957313245, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000458


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103847 in range [0.000000, 0.207694]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050984 in range [0.000000, 0.101968]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024738 in range [0.000000, 0.049475]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012369 in range [0.000000, 0.024739]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006161 in range [0.000000, 0.012322]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002293 in range [0.000000, 0.004585]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001034 in range [0.000000, 0.002067]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000496 in range [0.000000, 0.000992]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000248 in range [0.000000, 0.000497]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000125 in range [0.000000, 0.000249]...	no solution exists.
	Iteration #012: testing norm threshold 0.000187 in range [0.000125, 0.000249]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.22565493161281197, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.1150241159383132, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.22432235286059993, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : -0.11369153718610116, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000187


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105878 in range [0.000000, 0.211756]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052940 in range [0.000000, 0.105879]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026470 in range [0.000000, 0.052941]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013236 in range [0.000000, 0.026471]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006249 in range [0.000000, 0.012499]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003125 in range [0.000000, 0.006250]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001563 in range [0.000000, 0.003126]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000750 in range [0.000000, 0.001500]...	no solution exists.
	Iteration #010: testing norm threshold 0.001125 in range [0.000750, 0.001500]...	no solution exists.
	Iteration #011: testing norm threshold 0.001312 in range [0.001125, 0.001500]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001219 in range [0.001125, 0.001313]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 5.847066960159231, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 6.325276125860863, x10 : 0.8627185458628959, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 5.8488912717389505, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : 6.321627502701425, x10 : 0.8590699227034578, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001219


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.199767 in range [0.000000, 0.399535]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099884 in range [0.000000, 0.199768]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048341 in range [0.000000, 0.096683]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024171 in range [0.000000, 0.048342]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012086 in range [0.000000, 0.024172]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006025 in range [0.000000, 0.012051]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003013 in range [0.000000, 0.006026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001152 in range [0.000000, 0.002305]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000334 in range [0.000000, 0.000668]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000145 in range [0.000000, 0.000290]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.3135361072945377, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7275499999523163, x5 : -0.32938489555218065, x6 : 1, x7 : 6, x8 : 0, x9 : -0.689820888031505, x10 : -0.36163322864868486, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000145


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160320 in range [0.000000, 0.320641]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079234 in range [0.000000, 0.158468]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039617 in range [0.000000, 0.079235]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018998 in range [0.000000, 0.037996]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009266 in range [0.000000, 0.018533]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001850 in range [0.000000, 0.003700]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000925 in range [0.000000, 0.001851]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000331 in range [0.000000, 0.000662]...	no solution exists.
	Iteration #010: testing norm threshold 0.000497 in range [0.000331, 0.000662]...	no solution exists.
	Iteration #011: testing norm threshold 0.000579 in range [0.000497, 0.000662]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 6.376035190786838, x5 : 0.2501331569152341, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 6.891067773733405, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 6.373952735049485, x5 : 0.27458344010806046, x6 : 0, x7 : 0, x8 : 6, x9 : 6.8889853179960525, x10 : 0.8074754178524017, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000661


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159862 in range [0.000000, 0.319725]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079925 in range [0.000000, 0.159851]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039963 in range [0.000000, 0.079926]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019982 in range [0.000000, 0.039964]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009992 in range [0.000000, 0.019983]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004996 in range [0.000000, 0.009993]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002499 in range [0.000000, 0.004997]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001250 in range [0.000000, 0.002500]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000625 in range [0.000000, 0.001251]...	no solution exists.
	Iteration #011: testing norm threshold 0.000938 in range [0.000625, 0.001251]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000782 in range [0.000625, 0.000938]...	no solution exists.
	Iteration #013: testing norm threshold 0.000860 in range [0.000782, 0.000938]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.7735950739088482, x5 : -0.2240647955152089, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 2.006694563583721, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.85335281635436, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : 2.0046903514667327, x10 : 0.13288854894379434, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000937


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110557 in range [0.000000, 0.221114]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053663 in range [0.000000, 0.107327]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026819 in range [0.000000, 0.053639]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013291 in range [0.000000, 0.026583]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006497 in range [0.000000, 0.012994]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003249 in range [0.000000, 0.006498]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001216 in range [0.000000, 0.002432]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000609 in range [0.000000, 0.001217]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000305 in range [0.000000, 0.000610]...	no solution exists.
	Iteration #011: testing norm threshold 0.000457 in range [0.000305, 0.000610]...	no solution exists.
	Iteration #012: testing norm threshold 0.000533 in range [0.000457, 0.000610]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5630283700445922, x5 : 0.026454877466911945, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5317901074886322, x5 : 0.06193491816520691, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000513


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.179664 in range [0.000000, 0.359328]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087292 in range [0.000000, 0.174583]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043369 in range [0.000000, 0.086739]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021685 in range [0.000000, 0.043370]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010843 in range [0.000000, 0.021686]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005422 in range [0.000000, 0.010844]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000938 in range [0.000000, 0.001876]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000469 in range [0.000000, 0.000939]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	no solution exists.
	Iteration #012: testing norm threshold 0.000158 in range [0.000105, 0.000211]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.2946080934192836, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.4983661299482343, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 1.2923713168920297, x5 : -0.2710372279321272, x6 : 0, x7 : 0, x8 : 0, x9 : 1.4873155355453491, x10 : -0.014658163345844404, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096578 in range [0.000000, 0.193156]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048070 in range [0.000000, 0.096141]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022554 in range [0.000000, 0.045108]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011153 in range [0.000000, 0.022305]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005577 in range [0.000000, 0.011154]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002789 in range [0.000000, 0.005578]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001395 in range [0.000000, 0.002790]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000653 in range [0.000000, 0.001306]...	no solution exists.
	Iteration #010: testing norm threshold 0.000979 in range [0.000653, 0.001306]...	no solution exists.
	Iteration #011: testing norm threshold 0.001142 in range [0.000979, 0.001306]...	no solution exists.
	Iteration #012: testing norm threshold 0.001224 in range [0.001142, 0.001306]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.1367091318879889, x5 : 0.9390622576160664, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.4686438958586523, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.1331450435569404, x5 : 0.9354981692850179, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6520841419696808, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001305


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150672 in range [0.000000, 0.301344]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073364 in range [0.000000, 0.146728]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036376 in range [0.000000, 0.072752]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017208 in range [0.000000, 0.034416]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008254 in range [0.000000, 0.016508]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003671 in range [0.000000, 0.007342]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001769 in range [0.000000, 0.003538]...	no solution exists.
	Iteration #009: testing norm threshold 0.002653 in range [0.001769, 0.003538]...	no solution exists.
	Iteration #010: testing norm threshold 0.003096 in range [0.002653, 0.003538]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3755986820269365, x5 : -0.02722790960068537, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.2741530169024658, x10 : 0.4428708342659957, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4443228989839554, x5 : -0.30906254053115845, x6 : 2, x7 : 6, x8 : 0, x9 : -0.28310015092041013, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002734


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097630 in range [0.000000, 0.195260]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048444 in range [0.000000, 0.096888]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024222 in range [0.000000, 0.048444]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012112 in range [0.000000, 0.024223]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006046 in range [0.000000, 0.012091]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001079 in range [0.000000, 0.002157]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000502 in range [0.000000, 0.001004]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000217 in range [0.000000, 0.000434]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000109 in range [0.000000, 0.000217]...	no solution exists.
	Iteration #011: testing norm threshold 0.000163 in range [0.000109, 0.000217]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.7364841335444869, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.8088075591035727, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.7372167259227259, x5 : -0.18681108378533487, x6 : 0, x7 : 0, x8 : 6, x9 : 0.8089713836213651, x10 : 0.018070071121291758, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128894 in range [0.000000, 0.257789]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061633 in range [0.000000, 0.123267]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030076 in range [0.000000, 0.060153]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015039 in range [0.000000, 0.030077]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007128 in range [0.000000, 0.014256]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001658 in range [0.000000, 0.003315]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000829 in range [0.000000, 0.001659]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000415 in range [0.000000, 0.000830]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000208 in range [0.000000, 0.000416]...	no solution exists.
	Iteration #011: testing norm threshold 0.000312 in range [0.000208, 0.000416]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000259 in range [0.000208, 0.000311]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 3.4771226827804296, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 3.8145756884264554, x10 : 0.4428708342659957, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 3.4764526354942578, x5 : -0.19274983555078506, x6 : 0, x7 : 0, x8 : 6, x9 : 3.8139056411402836, x10 : 0.44071581552447936, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000255


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106236 in range [0.000000, 0.212473]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053119 in range [0.000000, 0.106237]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025938 in range [0.000000, 0.051877]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012703 in range [0.000000, 0.025406]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006350 in range [0.000000, 0.012701]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002525 in range [0.000000, 0.005049]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000743 in range [0.000000, 0.001486]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000337 in range [0.000000, 0.000673]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000338]...	no solution exists.
	Iteration #011: testing norm threshold 0.000253 in range [0.000169, 0.000338]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.677530884062331, x5 : -0.3001154065132141, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6255248182168415, x10 : -0.07641449198126793, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000337


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171106 in range [0.000000, 0.342213]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084879 in range [0.000000, 0.169758]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042208 in range [0.000000, 0.084415]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021104 in range [0.000000, 0.042209]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010486 in range [0.000000, 0.020972]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004658 in range [0.000000, 0.009317]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001940 in range [0.000000, 0.003880]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000658 in range [0.000000, 0.001316]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000313 in range [0.000000, 0.000627]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000157 in range [0.000000, 0.000314]...	no solution exists.
	Iteration #012: testing norm threshold 0.000236 in range [0.000157, 0.000314]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6921465995678661, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.610091807826788, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6983942687511444, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6123019158840179, x10 : -0.042437196177193284, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000313


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156521 in range [0.000000, 0.313042]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073437 in range [0.000000, 0.146875]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036526 in range [0.000000, 0.073053]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018264 in range [0.000000, 0.036527]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008966 in range [0.000000, 0.017931]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004483 in range [0.000000, 0.008967]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002211 in range [0.000000, 0.004422]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001106 in range [0.000000, 0.002212]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000554 in range [0.000000, 0.001107]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000277 in range [0.000000, 0.000555]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000139 in range [0.000000, 0.000278]...	no solution exists.
	Iteration #013: testing norm threshold 0.000209 in range [0.000139, 0.000278]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6671559744988452, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.3747273409490208, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6734036505222321, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5933217828700064, x10 : -0.329621884795756, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000209


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.190575 in range [0.000000, 0.381150]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094371 in range [0.000000, 0.188743]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047122 in range [0.000000, 0.094245]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023265 in range [0.000000, 0.046530]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011491 in range [0.000000, 0.022981]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005746 in range [0.000000, 0.011492]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000382 in range [0.000000, 0.000764]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7436175899554861, x5 : -0.3433613363533572, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6646245150644174, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122202 in range [0.000000, 0.244404]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060643 in range [0.000000, 0.121286]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030322 in range [0.000000, 0.060644]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015161 in range [0.000000, 0.030323]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007465 in range [0.000000, 0.014930]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003648 in range [0.000000, 0.007295]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001824 in range [0.000000, 0.003649]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000877 in range [0.000000, 0.001755]...	no solution exists.
	Iteration #010: testing norm threshold 0.001316 in range [0.000877, 0.001755]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001097 in range [0.000877, 0.001317]...	no solution exists.
	Iteration #012: testing norm threshold 0.001207 in range [0.001097, 0.001317]...	no solution exists.
	Iteration #013: testing norm threshold 0.001262 in range [0.001207, 0.001317]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5130471199065506, x5 : 0.11592618924624082, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : 0.30718702347454313, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6741853952407837, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001262


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137483 in range [0.000000, 0.274966]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068742 in range [0.000000, 0.137484]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034371 in range [0.000000, 0.068743]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016576 in range [0.000000, 0.033152]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007691 in range [0.000000, 0.015381]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003389 in range [0.000000, 0.006779]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001563 in range [0.000000, 0.003125]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000782 in range [0.000000, 0.001564]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000391 in range [0.000000, 0.000783]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000196 in range [0.000000, 0.000392]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000099 in range [0.000000, 0.000197]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.83190653240323, x5 : 5.171055304778322, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.3758187036295633, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.8291449621966915, x5 : 5.168293734571783, x6 : 1, x7 : 5, x8 : 0, x9 : -0.3620065027562225, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000099


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128043 in range [0.000000, 0.256085]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064022 in range [0.000000, 0.128044]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031936 in range [0.000000, 0.063871]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014227 in range [0.000000, 0.028455]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007114 in range [0.000000, 0.014228]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003558 in range [0.000000, 0.007115]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001661 in range [0.000000, 0.003322]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000509 in range [0.000000, 0.001019]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000214 in range [0.000000, 0.000429]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000215]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.5040058738506862, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.517856011532693, x5 : -0.3165709175099422, x6 : 0, x7 : 0, x8 : 5, x9 : -0.5032864953311059, x10 : -0.17585210913996274, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181627 in range [0.000000, 0.363255]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090776 in range [0.000000, 0.181552]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045388 in range [0.000000, 0.090777]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022674 in range [0.000000, 0.045347]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010558 in range [0.000000, 0.021117]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005280 in range [0.000000, 0.010559]...	no solution exists.
	Iteration #008: testing norm threshold 0.007920 in range [0.005280, 0.010559]...	no solution exists.
	Iteration #009: testing norm threshold 0.009240 in range [0.007920, 0.010559]...	no solution exists.
	Iteration #010: testing norm threshold 0.009899 in range [0.009240, 0.010559]...	no solution exists.
	Iteration #011: testing norm threshold 0.010229 in range [0.009899, 0.010559]...	solution exists & found.
	Iteration #012: testing norm threshold 0.010065 in range [0.009899, 0.010230]...	solution exists & found.
	Iteration #013: testing norm threshold 0.009983 in range [0.009899, 0.010066]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.9447393424529932, x5 : 2.8448011985157717, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 1.127065361031878, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7337976396083832, x5 : 2.840022019480274, x6 : 1, x7 : 4, x8 : 0, x9 : 1.1222861819963803, x10 : -0.027440817640351396, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.009983


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144524 in range [0.000000, 0.289048]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066434 in range [0.000000, 0.132868]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032482 in range [0.000000, 0.064965]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016211 in range [0.000000, 0.032423]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006724 in range [0.000000, 0.013449]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003217 in range [0.000000, 0.006434]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001609 in range [0.000000, 0.003218]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000805 in range [0.000000, 0.001610]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000403 in range [0.000000, 0.000806]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000202 in range [0.000000, 0.000404]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000102 in range [0.000000, 0.000203]...	no solution exists.
	Iteration #013: testing norm threshold 0.000152 in range [0.000102, 0.000203]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.08820649373319786, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.030844043278826675, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.08831071836950226, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 0, x9 : 0.050839379756796386, x10 : -0.264345325691404, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000202


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164006 in range [0.000000, 0.328012]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078154 in range [0.000000, 0.156309]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039078 in range [0.000000, 0.078155]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019539 in range [0.000000, 0.039078]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007519 in range [0.000000, 0.015039]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002835 in range [0.000000, 0.005669]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001345 in range [0.000000, 0.002690]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000673 in range [0.000000, 0.001346]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000337 in range [0.000000, 0.000674]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000161 in range [0.000000, 0.000322]...	no solution exists.
	Iteration #012: testing norm threshold 0.000242 in range [0.000161, 0.000322]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6421653494298245, x5 : 0.6617011911001469, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6484130024909973, x5 : 0.6527466699723584, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6520841419696808, x10 : -0.2269301488995552, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000321


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128484 in range [0.000000, 0.256968]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064243 in range [0.000000, 0.128485]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032110 in range [0.000000, 0.064220]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016032 in range [0.000000, 0.032064]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008016 in range [0.000000, 0.016033]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003518 in range [0.000000, 0.007037]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000977 in range [0.000000, 0.001954]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000489 in range [0.000000, 0.000978]...	no solution exists.
	Iteration #010: testing norm threshold 0.000734 in range [0.000489, 0.000978]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000612 in range [0.000489, 0.000735]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000551 in range [0.000489, 0.000613]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.125692431336729, x5 : 0.9390622576160664, x6 : 2.0, x7 : 2.0, x8 : 4.0, x9 : -0.008938181962211472, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.07868196199359136, x5 : 0.94070069552286, x6 : 2, x7 : 2, x8 : 4, x9 : 0.04075129014728828, x10 : -0.21840816719073763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000551


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143073 in range [0.000000, 0.286145]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068317 in range [0.000000, 0.136633]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033495 in range [0.000000, 0.066990]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016748 in range [0.000000, 0.033496]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008374 in range [0.000000, 0.016749]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002507 in range [0.000000, 0.005015]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001195 in range [0.000000, 0.002390]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000468 in range [0.000000, 0.000937]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000235 in range [0.000000, 0.000469]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000236]...	no solution exists.
	Iteration #012: testing norm threshold 0.000177 in range [0.000118, 0.000236]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3381127444234054, x5 : -0.3403775008283364, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.27857326415147005, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.34064265423894696, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.2811031739670116, x10 : -0.37472734094902077, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182873 in range [0.000000, 0.365745]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088092 in range [0.000000, 0.176183]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042508 in range [0.000000, 0.085017]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021000 in range [0.000000, 0.042000]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010501 in range [0.000000, 0.021001]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005251 in range [0.000000, 0.010502]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001240 in range [0.000000, 0.002480]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000621 in range [0.000000, 0.001241]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000311 in range [0.000000, 0.000622]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	no solution exists.
	Iteration #012: testing norm threshold 0.000234 in range [0.000156, 0.000312]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.722516935669271, x5 : -0.317141723238317, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6954186673987784, x10 : -0.3305328449914524, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000234


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178908 in range [0.000000, 0.357815]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089454 in range [0.000000, 0.178909]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044439 in range [0.000000, 0.088878]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020772 in range [0.000000, 0.041544]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010386 in range [0.000000, 0.020773]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004900 in range [0.000000, 0.009799]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002450 in range [0.000000, 0.004901]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000938 in range [0.000000, 0.001875]...	no solution exists.
	Iteration #010: testing norm threshold 0.001406 in range [0.000938, 0.001875]...	no solution exists.
	Iteration #011: testing norm threshold 0.001641 in range [0.001406, 0.001875]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001480 in range [0.001406, 0.001553]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5088820157283805, x5 : 0.15171471395797234, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : 0.4870653302235641, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5140972912758291, x5 : 0.286663401386682, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5902006924152374, x10 : 0.5364751103138365, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001480


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154531 in range [0.000000, 0.309061]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075651 in range [0.000000, 0.151301]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037826 in range [0.000000, 0.075652]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018913 in range [0.000000, 0.037827]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009457 in range [0.000000, 0.018914]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004729 in range [0.000000, 0.009458]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002365 in range [0.000000, 0.004730]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000984 in range [0.000000, 0.001968]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000428 in range [0.000000, 0.000856]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000215 in range [0.000000, 0.000429]...	no solution exists.
	Iteration #012: testing norm threshold 0.000322 in range [0.000215, 0.000429]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000269 in range [0.000215, 0.000323]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.7281539251881467, x5 : -0.23301192669314175, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 0.8972125040836575, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.7296946988939221, x5 : -0.3448510766029358, x6 : 0, x7 : 1, x8 : 0, x9 : 0.8941309566721066, x10 : -0.15683640857272937, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000322


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124491 in range [0.000000, 0.248982]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062246 in range [0.000000, 0.124492]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030897 in range [0.000000, 0.061794]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015449 in range [0.000000, 0.030898]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007725 in range [0.000000, 0.015450]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003863 in range [0.000000, 0.007726]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001293 in range [0.000000, 0.002586]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000647 in range [0.000000, 0.001294]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000324 in range [0.000000, 0.000648]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000141 in range [0.000000, 0.000281]...	no solution exists.
	Iteration #012: testing norm threshold 0.000211 in range [0.000141, 0.000281]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.2491669446985823, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.2827981364720683, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.24812566939795525, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 1, x9 : 0.2817568611714413, x10 : -0.19794935711874695, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000183


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.049280 in range [0.000000, 0.098560]...	solution exists & found.
	Iteration #003: testing norm threshold 0.021384 in range [0.000000, 0.042767]...	solution exists & found.
	Iteration #004: testing norm threshold 0.010692 in range [0.000000, 0.021385]...	solution exists & found.
	Iteration #005: testing norm threshold 0.005069 in range [0.000000, 0.010139]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002535 in range [0.000000, 0.005070]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001268 in range [0.000000, 0.002536]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000635 in range [0.000000, 0.001269]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000187 in range [0.000000, 0.000374]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000094 in range [0.000000, 0.000188]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7254674329932271, x5 : -0.3224832384724706, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7400452792644501, x5 : -0.34353496624763225, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6662388940029881, x10 : -0.36236259831721995, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000187


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157993 in range [0.000000, 0.315985]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078851 in range [0.000000, 0.157701]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039426 in range [0.000000, 0.078852]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019600 in range [0.000000, 0.039200]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009361 in range [0.000000, 0.018722]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004681 in range [0.000000, 0.009362]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002341 in range [0.000000, 0.004682]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001171 in range [0.000000, 0.002342]...	no solution exists.
	Iteration #010: testing norm threshold 0.001757 in range [0.001171, 0.002342]...	no solution exists.
	Iteration #011: testing norm threshold 0.002049 in range [0.001757, 0.002342]...	no solution exists.
	Iteration #012: testing norm threshold 0.002196 in range [0.002049, 0.002342]...	no solution exists.
	Iteration #013: testing norm threshold 0.002269 in range [0.002196, 0.002342]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1700299653133499, x5 : 1.046427831751261, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 0.3048993727170895, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.42853063352421156, x5 : 1.0440810776025071, x6 : 1, x7 : 4, x8 : 0, x9 : 0.3846004457028233, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002341


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120240 in range [0.000000, 0.240480]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059898 in range [0.000000, 0.119796]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029807 in range [0.000000, 0.059614]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014904 in range [0.000000, 0.029808]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007246 in range [0.000000, 0.014492]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002476 in range [0.000000, 0.004953]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001239 in range [0.000000, 0.002477]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000536 in range [0.000000, 0.001072]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000269 in range [0.000000, 0.000537]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000135 in range [0.000000, 0.000270]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3755986820269365, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2741530169024658, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.37670374449307154, x5 : -0.32585174610091205, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2752580793686008, x10 : -0.19554049190027806, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000103


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094605 in range [0.000000, 0.189211]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047303 in range [0.000000, 0.094606]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022305 in range [0.000000, 0.044609]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009812 in range [0.000000, 0.019624]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004907 in range [0.000000, 0.009813]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002266 in range [0.000000, 0.004532]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001134 in range [0.000000, 0.002267]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000567 in range [0.000000, 0.001135]...	no solution exists.
	Iteration #010: testing norm threshold 0.000851 in range [0.000567, 0.001135]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000710 in range [0.000567, 0.000852]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000639 in range [0.000567, 0.000711]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.1881689940092809, x5 : -0.15248774609174578, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.4465426596136311, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.1885065674334374, x5 : -0.3537982106208801, x6 : 0, x7 : 1, x8 : 0, x9 : -0.44637387290155284, x10 : 0.012312072228349524, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000710


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184944 in range [0.000000, 0.369888]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092229 in range [0.000000, 0.184458]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042161 in range [0.000000, 0.084321]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021081 in range [0.000000, 0.042162]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008859 in range [0.000000, 0.017717]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004430 in range [0.000000, 0.008860]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002215 in range [0.000000, 0.004431]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001090 in range [0.000000, 0.002179]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000545 in range [0.000000, 0.001091]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000143 in range [0.000000, 0.000286]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3880939945614469, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.296254253147487, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.39324672247341685, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.294624014420086, x10 : -0.26166473709911464, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196107 in range [0.000000, 0.392214]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094131 in range [0.000000, 0.188263]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047042 in range [0.000000, 0.094083]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023521 in range [0.000000, 0.047043]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011761 in range [0.000000, 0.023522]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005881 in range [0.000000, 0.011762]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002941 in range [0.000000, 0.005882]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001418 in range [0.000000, 0.002835]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000709 in range [0.000000, 0.001419]...	no solution exists.
	Iteration #011: testing norm threshold 0.001064 in range [0.000709, 0.001419]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000880 in range [0.000709, 0.001051]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000795 in range [0.000709, 0.000881]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 4.972395082743504, x5 : 0.04434913982277772, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 5.4014444508189765, x10 : 0.7964268019265432, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 4.968360192649696, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 6, x9 : 5.397409560725168, x10 : 0.7894130481863069, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000880


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143937 in range [0.000000, 0.287873]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069672 in range [0.000000, 0.139344]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034813 in range [0.000000, 0.069626]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014171 in range [0.000000, 0.028342]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005442 in range [0.000000, 0.010884]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002648 in range [0.000000, 0.005297]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001325 in range [0.000000, 0.002649]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000663 in range [0.000000, 0.001326]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000271 in range [0.000000, 0.000542]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	no solution exists.
	Iteration #012: testing norm threshold 0.000204 in range [0.000136, 0.000272]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4963867031938701, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4244414233686099, x10 : -0.3747273409490208, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.464813751082343, x5 : -0.3891622199590949, x6 : 0, x7 : 0, x8 : 0, x9 : -0.42685863301300486, x10 : -0.37472734094902077, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000204


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127885 in range [0.000000, 0.255770]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063878 in range [0.000000, 0.127755]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031939 in range [0.000000, 0.063879]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015358 in range [0.000000, 0.030717]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007422 in range [0.000000, 0.014844]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003712 in range [0.000000, 0.007423]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001856 in range [0.000000, 0.003713]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000735 in range [0.000000, 0.001470]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000368 in range [0.000000, 0.000736]...	no solution exists.
	Iteration #011: testing norm threshold 0.000552 in range [0.000368, 0.000736]...	no solution exists.
	Iteration #012: testing norm threshold 0.000644 in range [0.000552, 0.000736]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 1.0238763218382256, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.1801083280199287, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 1.0194027548292535, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 6, x9 : 1.1756347610109565, x10 : -0.1512934777910737, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000735


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118391 in range [0.000000, 0.236782]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054396 in range [0.000000, 0.108793]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027199 in range [0.000000, 0.054397]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013600 in range [0.000000, 0.027200]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006489 in range [0.000000, 0.012978]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001834 in range [0.000000, 0.003668]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000918 in range [0.000000, 0.001835]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000270 in range [0.000000, 0.000540]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000135 in range [0.000000, 0.000271]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7525405883789062, x5 : -0.42879811927099076, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6642398343735907, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119026 in range [0.000000, 0.238052]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059344 in range [0.000000, 0.118689]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029673 in range [0.000000, 0.059345]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010467 in range [0.000000, 0.020933]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002606 in range [0.000000, 0.005211]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000889 in range [0.000000, 0.001777]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000445 in range [0.000000, 0.000890]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.5047169115502104, x5 : 0.16066184513590526, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.5055218208406511, x5 : 0.16106429978112563, x6 : 3, x7 : 6, x8 : 0, x9 : -0.65127923267924, x10 : -0.340776554523341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000185


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120549 in range [0.000000, 0.241099]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060102 in range [0.000000, 0.120205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030052 in range [0.000000, 0.060103]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008952 in range [0.000000, 0.017904]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001461 in range [0.000000, 0.002922]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000542 in range [0.000000, 0.001083]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000271 in range [0.000000, 0.000543]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000100 in range [0.000000, 0.000200]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000051 in range [0.000000, 0.000101]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.2777475825828062, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6983942687511444, x5 : -0.27777275588009576, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6896814316061538, x10 : -0.3636535353752339, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173938 in range [0.000000, 0.347875]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086969 in range [0.000000, 0.173939]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043485 in range [0.000000, 0.086970]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018271 in range [0.000000, 0.036543]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003742 in range [0.000000, 0.007485]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001872 in range [0.000000, 0.003743]...	no solution exists.
	Iteration #008: testing norm threshold 0.002807 in range [0.001872, 0.003743]...	no solution exists.
	Iteration #009: testing norm threshold 0.003275 in range [0.002807, 0.003743]...	no solution exists.
	Iteration #010: testing norm threshold 0.003509 in range [0.003275, 0.003743]...	no solution exists.
	Iteration #011: testing norm threshold 0.003626 in range [0.003509, 0.003743]...	no solution exists.
	Iteration #012: testing norm threshold 0.003685 in range [0.003626, 0.003743]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.046555451951496615, x5 : 1.1358991435305898, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.19016831917138527, x10 : 3.4922910553382187, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6775687336921692, x5 : 1.1302678557455312, x6 : 3, x7 : 6, x8 : 0, x9 : -0.19900881499052048, x10 : 3.48665976755316, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003685


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151891 in range [0.000000, 0.303783]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075946 in range [0.000000, 0.151892]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037884 in range [0.000000, 0.075768]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018942 in range [0.000000, 0.037885]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004959 in range [0.000000, 0.009918]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002480 in range [0.000000, 0.004960]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001185 in range [0.000000, 0.002369]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000551 in range [0.000000, 0.001103]...	no solution exists.
	Iteration #010: testing norm threshold 0.000827 in range [0.000551, 0.001103]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000690 in range [0.000551, 0.000828]...	no solution exists.
	Iteration #012: testing norm threshold 0.000759 in range [0.000690, 0.000828]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : -0.17038200844761156, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5437880990917243, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6484130024909973, x5 : -0.40748098492622375, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5422709260726172, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000759


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148031 in range [0.000000, 0.296062]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072913 in range [0.000000, 0.145827]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036135 in range [0.000000, 0.072270]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015714 in range [0.000000, 0.031429]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006236 in range [0.000000, 0.012473]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001605 in range [0.000000, 0.003211]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000803 in range [0.000000, 0.001606]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000360 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6858989298343658, x5 : -0.41581826902504904, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5841801742518815, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000146


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144661 in range [0.000000, 0.289322]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072331 in range [0.000000, 0.144662]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036097 in range [0.000000, 0.072194]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018049 in range [0.000000, 0.036098]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008211 in range [0.000000, 0.016422]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004106 in range [0.000000, 0.008212]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002053 in range [0.000000, 0.004107]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001013 in range [0.000000, 0.002025]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000075 in range [0.000000, 0.000151]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4755611823030195, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.42886167061761415, x10 : -0.24214385307631545, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.47556118581753093, x5 : -0.3537982071063687, x6 : 0, x7 : 6, x8 : 0, x9 : -0.42886167413212556, x10 : -0.24661558398421232, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186256 in range [0.000000, 0.372512]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092918 in range [0.000000, 0.185835]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046177 in range [0.000000, 0.092355]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022966 in range [0.000000, 0.045931]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006029 in range [0.000000, 0.012058]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003015 in range [0.000000, 0.006030]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001508 in range [0.000000, 0.003016]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000726 in range [0.000000, 0.001452]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000170 in range [0.000000, 0.000340]...	no solution exists.
	Iteration #012: testing norm threshold 0.000255 in range [0.000170, 0.000340]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6629908703206752, x5 : -0.24195905787107466, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5968310660797752, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7150546610355377, x5 : -0.25427470240386313, x6 : 1, x7 : 6, x8 : 0, x9 : -0.597936129901727, x10 : -0.11066542902556173, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000339


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135047 in range [0.000000, 0.270094]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067524 in range [0.000000, 0.135048]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032680 in range [0.000000, 0.065360]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013643 in range [0.000000, 0.027286]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006822 in range [0.000000, 0.013644]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002282 in range [0.000000, 0.004564]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000979 in range [0.000000, 0.001957]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	no solution exists.
	Iteration #010: testing norm threshold 0.000422 in range [0.000281, 0.000562]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6484130024909973, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5526285935897328, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000331


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158280 in range [0.000000, 0.316560]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079127 in range [0.000000, 0.158254]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037375 in range [0.000000, 0.074751]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018688 in range [0.000000, 0.037376]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008916 in range [0.000000, 0.017832]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002829 in range [0.000000, 0.005658]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000462 in range [0.000000, 0.000923]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000191 in range [0.000000, 0.000382]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000096 in range [0.000000, 0.000192]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : -0.11669922138001425, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6130096016316068, x5 : -0.11669922157984364, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : 0.06721761842683438, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108230 in range [0.000000, 0.216460]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049394 in range [0.000000, 0.098788]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024698 in range [0.000000, 0.049395]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011997 in range [0.000000, 0.023993]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004825 in range [0.000000, 0.009649]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002054 in range [0.000000, 0.004108]...	no solution exists.
	Iteration #008: testing norm threshold 0.003081 in range [0.002054, 0.004108]...	no solution exists.
	Iteration #009: testing norm threshold 0.003594 in range [0.003081, 0.004108]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003312 in range [0.003081, 0.003543]...	no solution exists.
	Iteration #011: testing norm threshold 0.003427 in range [0.003312, 0.003543]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003370 in range [0.003312, 0.003428]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.11736222298038874, x5 : 0.9390622576160664, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : -9.768746420299527e-05, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.02920542403141547, x5 : -0.009333647074527107, x6 : 2, x7 : 3, x8 : 0, x9 : 0.060265260031274075, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003370


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090825 in range [0.000000, 0.181650]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045304 in range [0.000000, 0.090608]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022653 in range [0.000000, 0.045305]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011327 in range [0.000000, 0.022654]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005221 in range [0.000000, 0.010443]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002605 in range [0.000000, 0.005209]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001303 in range [0.000000, 0.002606]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000652 in range [0.000000, 0.001304]...	no solution exists.
	Iteration #010: testing norm threshold 0.000978 in range [0.000652, 0.001304]...	no solution exists.
	Iteration #011: testing norm threshold 0.001141 in range [0.000978, 0.001304]...	no solution exists.
	Iteration #012: testing norm threshold 0.001222 in range [0.001141, 0.001304]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.50740340374513, x5 : 0.2859216816269657, x6 : 1.0, x7 : 1.0, x8 : 4.0, x9 : 0.6629393998864328, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6328074401006528, x5 : 0.08908479660749435, x6 : 1, x7 : 1, x8 : 4, x9 : 0.6624884842532482, x10 : -0.13210852881557889, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001222


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178786 in range [0.000000, 0.357573]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084268 in range [0.000000, 0.168536]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041997 in range [0.000000, 0.083994]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020999 in range [0.000000, 0.041998]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010500 in range [0.000000, 0.021000]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005174 in range [0.000000, 0.010349]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002588 in range [0.000000, 0.005175]...	no solution exists.
	Iteration #009: testing norm threshold 0.003882 in range [0.002588, 0.005175]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003235 in range [0.002588, 0.003883]...	no solution exists.
	Iteration #011: testing norm threshold 0.003559 in range [0.003235, 0.003883]...	no solution exists.
	Iteration #012: testing norm threshold 0.003721 in range [0.003559, 0.003883]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003640 in range [0.003559, 0.003722]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.7323190293663168, x5 : 1.1537934058864556, x6 : 2.0, x7 : 2.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : 3.1829295836352403, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.4095234666019678, x5 : 0.587995934604766, x6 : 2, x7 : 2, x8 : 0, x9 : -0.6918663680553436, x10 : 3.2624800205230713, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003721


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148449 in range [0.000000, 0.296898]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062947 in range [0.000000, 0.125894]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031142 in range [0.000000, 0.062285]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011961 in range [0.000000, 0.023923]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005315 in range [0.000000, 0.010631]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002022 in range [0.000000, 0.004043]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000743 in range [0.000000, 0.001485]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104516 in range [0.000000, 0.209032]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052258 in range [0.000000, 0.104517]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025875 in range [0.000000, 0.051750]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012603 in range [0.000000, 0.025206]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005988 in range [0.000000, 0.011975]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001993 in range [0.000000, 0.003987]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000997 in range [0.000000, 0.001994]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000485 in range [0.000000, 0.000970]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000078 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6504955577861647, x5 : -0.3940602878959337, x6 : 0.0, x7 : 1.0, x8 : 5.0, x9 : -0.5791500770837583, x10 : -0.2863383490338839, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6525781148677756, x5 : -0.38750415980872416, x6 : 0, x7 : 1, x8 : 5, x9 : -0.5783856046101684, x10 : -0.27320717215594553, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147530 in range [0.000000, 0.295060]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069803 in range [0.000000, 0.139607]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032143 in range [0.000000, 0.064285]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016072 in range [0.000000, 0.032144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007433 in range [0.000000, 0.014866]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003583 in range [0.000000, 0.007167]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001792 in range [0.000000, 0.003584]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000895 in range [0.000000, 0.001791]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000448 in range [0.000000, 0.000896]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000174 in range [0.000000, 0.000349]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000088 in range [0.000000, 0.000175]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.4782476744979392, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5038104989222802, x10 : -0.10956036520361004, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.4738422637924023, x5 : -0.2509743555202779, x6 : 0, x7 : 0, x8 : 0, x9 : 0.49940508821674334, x10 : -0.10515495228913398, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.049223 in range [0.000000, 0.098446]...	solution exists & found.
	Iteration #003: testing norm threshold 0.024597 in range [0.000000, 0.049194]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012080 in range [0.000000, 0.024161]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006041 in range [0.000000, 0.012081]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003021 in range [0.000000, 0.006042]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001511 in range [0.000000, 0.003022]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.050720556129666736, x5 : -0.3582717631842022, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.06178577402185635, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.05943125464038512, x5 : -0.35124242384379495, x6 : 0, x7 : 3, x8 : 0, x9 : 0.05922998724477118, x10 : -0.23109523206949234, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000197


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133940 in range [0.000000, 0.267879]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060156 in range [0.000000, 0.120313]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030079 in range [0.000000, 0.060157]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015021 in range [0.000000, 0.030042]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007511 in range [0.000000, 0.015022]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003756 in range [0.000000, 0.007512]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000941 in range [0.000000, 0.001882]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000471 in range [0.000000, 0.000942]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000236 in range [0.000000, 0.000472]...	no solution exists.
	Iteration #011: testing norm threshold 0.000354 in range [0.000236, 0.000472]...	no solution exists.
	Iteration #012: testing norm threshold 0.000413 in range [0.000354, 0.000472]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5921840992917831, x5 : -0.036175040778618266, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6067619621753693, x5 : -0.1301199197769165, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.25336682685796813, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000471


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102000 in range [0.000000, 0.204001]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049886 in range [0.000000, 0.099772]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024778 in range [0.000000, 0.049557]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012390 in range [0.000000, 0.024779]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003116 in range [0.000000, 0.006232]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001474 in range [0.000000, 0.002947]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000683 in range [0.000000, 0.001366]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000325 in range [0.000000, 0.000650]...	no solution exists.
	Iteration #010: testing norm threshold 0.000487 in range [0.000325, 0.000650]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.392259098739617, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.39349969262558027, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3967326657485892, x5 : -0.4164281189441681, x6 : 0, x7 : 6, x8 : 0, x9 : -0.3912629091210942, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000409


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135670 in range [0.000000, 0.271340]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067836 in range [0.000000, 0.135671]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033673 in range [0.000000, 0.067347]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015949 in range [0.000000, 0.031899]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007353 in range [0.000000, 0.014706]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001863 in range [0.000000, 0.003725]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000408 in range [0.000000, 0.000816]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000204 in range [0.000000, 0.000409]...	no solution exists.
	Iteration #010: testing norm threshold 0.000307 in range [0.000204, 0.000409]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000255 in range [0.000204, 0.000305]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6130096201826336, x5 : -0.3940602878959337, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.5747298298347541, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6130096201826336, x5 : -0.34814135422301906, x6 : 0, x7 : 1, x8 : 0, x9 : -0.5536554424960675, x10 : -0.2875216235216116, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000237


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114589 in range [0.000000, 0.229178]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044724 in range [0.000000, 0.089448]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021844 in range [0.000000, 0.043688]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010614 in range [0.000000, 0.021227]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003464 in range [0.000000, 0.006929]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001733 in range [0.000000, 0.003465]...	no solution exists.
	Iteration #008: testing norm threshold 0.002599 in range [0.001733, 0.003465]...	no solution exists.
	Iteration #009: testing norm threshold 0.003032 in range [0.002599, 0.003465]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002816 in range [0.002599, 0.003033]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002708 in range [0.002599, 0.002817]...	no solution exists.
	Iteration #012: testing norm threshold 0.002763 in range [0.002708, 0.002817]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 1.7402742404834872, x5 : -0.07196356549034981, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.8077834373785304, x10 : -0.3747273409490208, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : 1.7378977146682204, x5 : 0.24356254857375076, x6 : 0, x7 : 0, x8 : 6, x9 : 1.8054069115632636, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002816


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145124 in range [0.000000, 0.290247]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072562 in range [0.000000, 0.145125]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035934 in range [0.000000, 0.071869]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017936 in range [0.000000, 0.035872]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008934 in range [0.000000, 0.017869]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004440 in range [0.000000, 0.008880]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002220 in range [0.000000, 0.004441]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001043 in range [0.000000, 0.002085]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000218 in range [0.000000, 0.000435]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4465426596136311, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5328313636389002, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4487527757883072, x10 : -0.289462176053553, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.191090 in range [0.000000, 0.382181]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094285 in range [0.000000, 0.188571]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047097 in range [0.000000, 0.094193]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023440 in range [0.000000, 0.046880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005850 in range [0.000000, 0.011701]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002866 in range [0.000000, 0.005732]...	no solution exists.
	Iteration #008: testing norm threshold 0.004299 in range [0.002866, 0.005732]...	no solution exists.
	Iteration #009: testing norm threshold 0.005015 in range [0.004299, 0.005732]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004658 in range [0.004299, 0.005016]...	no solution exists.
	Iteration #011: testing norm threshold 0.004837 in range [0.004658, 0.005016]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004748 in range [0.004658, 0.004838]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.3657898616873458, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.4640282736812421, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3624841741238211, x5 : -0.22406479716300964, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3866739422082901, x10 : -0.15375486016273499, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004748


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099977 in range [0.000000, 0.199955]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048163 in range [0.000000, 0.096327]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024082 in range [0.000000, 0.048164]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009656 in range [0.000000, 0.019312]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004739 in range [0.000000, 0.009478]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002370 in range [0.000000, 0.004740]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001186 in range [0.000000, 0.002371]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000593 in range [0.000000, 0.001187]...	no solution exists.
	Iteration #010: testing norm threshold 0.000890 in range [0.000593, 0.001187]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000742 in range [0.000593, 0.000891]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000668 in range [0.000593, 0.000743]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5880189951136129, x5 : 0.16960897631383814, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.499585626601682, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6942291557788849, x5 : 0.14724114537239075, x6 : 3, x7 : 6, x8 : 0, x9 : -0.49634336566092085, x10 : -0.13622171585184187, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000742


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092724 in range [0.000000, 0.185447]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046095 in range [0.000000, 0.092189]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022915 in range [0.000000, 0.045829]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007788 in range [0.000000, 0.015576]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003620 in range [0.000000, 0.007240]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001620 in range [0.000000, 0.003241]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000630 in range [0.000000, 0.001260]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000216 in range [0.000000, 0.000433]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000109 in range [0.000000, 0.000217]...	no solution exists.
	Iteration #011: testing norm threshold 0.000163 in range [0.000109, 0.000217]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5796887867572726, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5437880990917243, x10 : -0.2863383490338839, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5712707948520521, x5 : -0.4030074179172516, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5438758955578027, x10 : -0.2864261454999622, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.071398 in range [0.000000, 0.142796]...	solution exists & found.
	Iteration #003: testing norm threshold 0.035700 in range [0.000000, 0.071399]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016920 in range [0.000000, 0.033840]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008440 in range [0.000000, 0.016880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003585 in range [0.000000, 0.007170]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001031 in range [0.000000, 0.002063]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000516 in range [0.000000, 0.001032]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000259 in range [0.000000, 0.000517]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	no solution exists.
	Iteration #011: testing norm threshold 0.000194 in range [0.000129, 0.000258]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3506080569579157, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2653125224044573, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.35070362684876333, x5 : -0.19265426565993746, x6 : 0, x7 : 0, x8 : 0, x9 : -0.26548724349182606, x10 : -0.36358313878167586, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000257


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117615 in range [0.000000, 0.235230]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058808 in range [0.000000, 0.117616]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029404 in range [0.000000, 0.058809]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014532 in range [0.000000, 0.029064]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007222 in range [0.000000, 0.014444]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003611 in range [0.000000, 0.007223]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001406 in range [0.000000, 0.002812]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000703 in range [0.000000, 0.001407]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	no solution exists.
	Iteration #011: testing norm threshold 0.000528 in range [0.000352, 0.000704]...	no solution exists.
	Iteration #012: testing norm threshold 0.000616 in range [0.000528, 0.000704]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.08672788174994739, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.05314065445225386, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.08568590935595133, x5 : -0.15196675989474775, x6 : 0, x7 : 0, x8 : 3, x9 : -0.054182626846249915, x10 : -0.17585210502147675, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000703


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188570 in range [0.000000, 0.377141]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094286 in range [0.000000, 0.188571]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047143 in range [0.000000, 0.094287]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023572 in range [0.000000, 0.047144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011497 in range [0.000000, 0.022993]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005666 in range [0.000000, 0.011331]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002833 in range [0.000000, 0.005667]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001383 in range [0.000000, 0.002766]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000442 in range [0.000000, 0.000884]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000222 in range [0.000000, 0.000443]...	no solution exists.
	Iteration #012: testing norm threshold 0.000332 in range [0.000222, 0.000443]...	no solution exists.
	Iteration #013: testing norm threshold 0.000388 in range [0.000332, 0.000443]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.9863903842346944, x5 : -0.295641844938672, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 1.1712678335219202, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.9853491049000163, x5 : -0.1827614221981626, x6 : 0, x7 : 1, x8 : 0, x9 : 1.1580070853233337, x10 : -0.044309900601935494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000370


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128070 in range [0.000000, 0.256139]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063616 in range [0.000000, 0.127232]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031809 in range [0.000000, 0.063617]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015660 in range [0.000000, 0.031320]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007830 in range [0.000000, 0.015661]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003356 in range [0.000000, 0.006711]...	no solution exists.
	Iteration #008: testing norm threshold 0.005033 in range [0.003356, 0.006711]...	no solution exists.
	Iteration #009: testing norm threshold 0.005872 in range [0.005033, 0.006711]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005436 in range [0.005033, 0.005838]...	solution exists & found.
	Iteration #011: testing norm threshold 0.005235 in range [0.005033, 0.005437]...	solution exists & found.
	Iteration #012: testing norm threshold 0.005135 in range [0.005033, 0.005236]...	solution exists & found.
	Iteration #013: testing norm threshold 0.005085 in range [0.005033, 0.005136]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3532945491528354, x5 : -0.30458897611660485, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : 0.499390251673276, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.35080109643738877, x5 : 1.290493797945549, x6 : 1, x7 : 5, x8 : 0, x9 : 0.49689679895782934, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111260 in range [0.000000, 0.222519]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055562 in range [0.000000, 0.111124]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027423 in range [0.000000, 0.054845]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012521 in range [0.000000, 0.025042]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006261 in range [0.000000, 0.012522]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002973 in range [0.000000, 0.005946]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001205 in range [0.000000, 0.002411]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000603 in range [0.000000, 0.001206]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000251 in range [0.000000, 0.000502]...	no solution exists.
	Iteration #011: testing norm threshold 0.000376 in range [0.000251, 0.000502]...	no solution exists.
	Iteration #012: testing norm threshold 0.000439 in range [0.000376, 0.000502]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.6796512870333556, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7337976396083832, x5 : -0.2979343215675461, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.04438701166089289, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000501


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157724 in range [0.000000, 0.315447]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074887 in range [0.000000, 0.149774]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037444 in range [0.000000, 0.074888]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018722 in range [0.000000, 0.037445]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007715 in range [0.000000, 0.015431]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003858 in range [0.000000, 0.007715]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001276 in range [0.000000, 0.002552]...	no solution exists.
	Iteration #009: testing norm threshold 0.001914 in range [0.001276, 0.002552]...	no solution exists.
	Iteration #010: testing norm threshold 0.002233 in range [0.001914, 0.002552]...	no solution exists.
	Iteration #011: testing norm threshold 0.002393 in range [0.002233, 0.002552]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002299 in range [0.002233, 0.002366]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.27980128592902365, x5 : 0.6348597975663482, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.4553831541116396, x10 : 2.2548451685263022, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6817773860203667, x5 : 0.6346272959179131, x6 : 2, x7 : 6, x8 : 0, x9 : -0.4555960751689005, x10 : 2.2540123015408797, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002299


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132442 in range [0.000000, 0.264884]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065200 in range [0.000000, 0.130400]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032600 in range [0.000000, 0.065201]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014500 in range [0.000000, 0.029000]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007251 in range [0.000000, 0.014501]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003599 in range [0.000000, 0.007197]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001800 in range [0.000000, 0.003600]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000721 in range [0.000000, 0.001441]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000722]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000181 in range [0.000000, 0.000362]...	no solution exists.
	Iteration #012: testing norm threshold 0.000271 in range [0.000181, 0.000362]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7754486831312685, x5 : -0.28848191259669376, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000361


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.034014 in range [0.000000, 0.068027]...	solution exists & found.
	Iteration #003: testing norm threshold 0.015349 in range [0.000000, 0.030698]...	solution exists & found.
	Iteration #004: testing norm threshold 0.007190 in range [0.000000, 0.014381]...	solution exists & found.
	Iteration #005: testing norm threshold 0.003596 in range [0.000000, 0.007191]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001798 in range [0.000000, 0.003597]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000900 in range [0.000000, 0.001799]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000450 in range [0.000000, 0.000901]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000226 in range [0.000000, 0.000451]...	no solution exists.
	Iteration #010: testing norm threshold 0.000339 in range [0.000226, 0.000451]...	no solution exists.
	Iteration #011: testing norm threshold 0.000395 in range [0.000339, 0.000451]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4282664243598977, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.40656505944418697, x10 : -0.17585210913996274, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.42714502738106636, x5 : -0.2095226991572618, x6 : 0, x7 : 0, x8 : 0, x9 : 0.4054436624653556, x10 : -0.27528972923755646, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000395


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142652 in range [0.000000, 0.285304]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069128 in range [0.000000, 0.138257]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033969 in range [0.000000, 0.067939]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016985 in range [0.000000, 0.033970]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008469 in range [0.000000, 0.016938]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004235 in range [0.000000, 0.008470]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001271 in range [0.000000, 0.002542]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000476 in range [0.000000, 0.000952]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000238 in range [0.000000, 0.000477]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000121]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4547356614121689, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.40676043437259296, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4550903044084506, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.40676043437259296, x10 : -0.28669299203016557, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196909 in range [0.000000, 0.393818]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098450 in range [0.000000, 0.196901]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049226 in range [0.000000, 0.098451]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024613 in range [0.000000, 0.049227]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012307 in range [0.000000, 0.024614]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005885 in range [0.000000, 0.011769]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002943 in range [0.000000, 0.005886]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001331 in range [0.000000, 0.002661]...	no solution exists.
	Iteration #010: testing norm threshold 0.001996 in range [0.001331, 0.002661]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001664 in range [0.001331, 0.001997]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001498 in range [0.001331, 0.001665]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001415 in range [0.001331, 0.001499]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.6611372610982549, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.8873478878606071, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.6600192818135586, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.7260088324546814, x10 : 0.14455799013376236, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001498


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096163 in range [0.000000, 0.192327]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048082 in range [0.000000, 0.096164]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024042 in range [0.000000, 0.048083]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010566 in range [0.000000, 0.021132]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004877 in range [0.000000, 0.009755]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002439 in range [0.000000, 0.004878]...	no solution exists.
	Iteration #008: testing norm threshold 0.003659 in range [0.002439, 0.004878]...	no solution exists.
	Iteration #009: testing norm threshold 0.004269 in range [0.003659, 0.004878]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003964 in range [0.003659, 0.004270]...	no solution exists.
	Iteration #011: testing norm threshold 0.004117 in range [0.003964, 0.004270]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004041 in range [0.003964, 0.004118]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2200112154513914, x5 : 0.2501331569152341, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.25647202790644885, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.11736222356557846, x5 : -0.09229841595125185, x6 : 0, x7 : 4, x8 : 0, x9 : -0.4951653778553009, x10 : 0.9711222329959776, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004117


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166310 in range [0.000000, 0.332619]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083155 in range [0.000000, 0.166311]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041578 in range [0.000000, 0.083156]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020656 in range [0.000000, 0.041312]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010035 in range [0.000000, 0.020071]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004849 in range [0.000000, 0.009699]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002425 in range [0.000000, 0.004850]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001213 in range [0.000000, 0.002426]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000588 in range [0.000000, 0.001177]...	no solution exists.
	Iteration #011: testing norm threshold 0.000883 in range [0.000588, 0.001177]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000736 in range [0.000588, 0.000884]...	no solution exists.
	Iteration #013: testing norm threshold 0.000810 in range [0.000736, 0.000884]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5365591329923209, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6938811306294624, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.6262343728574621, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6937556127810793, x10 : -0.04339413911564051, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000810


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.219500 in range [0.000000, 0.439001]...	solution exists & found.
	Iteration #003: testing norm threshold 0.109669 in range [0.000000, 0.219339]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054835 in range [0.000000, 0.109670]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025536 in range [0.000000, 0.051072]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012449 in range [0.000000, 0.024897]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005848 in range [0.000000, 0.011696]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002924 in range [0.000000, 0.005849]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000976 in range [0.000000, 0.001952]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000438 in range [0.000000, 0.000875]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000229]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000058 in range [0.000000, 0.000115]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.04924194414641626, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.17671220249596656, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.04872372386292132, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.17530948068953423, x10 : -0.19767614094468652, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000114


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133422 in range [0.000000, 0.266845]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066712 in range [0.000000, 0.133423]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033147 in range [0.000000, 0.066293]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013180 in range [0.000000, 0.026359]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006117 in range [0.000000, 0.012234]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003059 in range [0.000000, 0.006118]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000865 in range [0.000000, 0.001731]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000428 in range [0.000000, 0.000855]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000192 in range [0.000000, 0.000383]...	no solution exists.
	Iteration #011: testing norm threshold 0.000287 in range [0.000192, 0.000383]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 4.0, x3 : 3.0, x4 : 1.0447018427290762, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.2331512950079797, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 4, x3 : 3, x4 : 1.0480200649423934, x5 : -0.23979618778123607, x6 : 0, x7 : 0, x8 : 6, x9 : 1.2265148505813452, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157792 in range [0.000000, 0.315584]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078896 in range [0.000000, 0.157793]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037824 in range [0.000000, 0.075648]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018623 in range [0.000000, 0.037246]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009312 in range [0.000000, 0.018624]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003160 in range [0.000000, 0.006320]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001427 in range [0.000000, 0.002854]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000541 in range [0.000000, 0.001081]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000196 in range [0.000000, 0.000391]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000197]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.3493246320062693, x6 : 0.0, x7 : 1.0, x8 : 5.0, x9 : -0.4332819178666184, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5484504997730255, x5 : -0.3491879525522575, x6 : 0, x7 : 1, x8 : 5, x9 : -0.433555276774642, x10 : -0.27501637032953286, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000196


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142749 in range [0.000000, 0.285498]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067073 in range [0.000000, 0.134147]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031276 in range [0.000000, 0.062552]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015638 in range [0.000000, 0.031277]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007814 in range [0.000000, 0.015627]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003907 in range [0.000000, 0.007815]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001508 in range [0.000000, 0.003016]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000078 in range [0.000000, 0.000156]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.625504932717144, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.2642411010550996, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6317525804042816, x5 : -0.377762299278879, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6012513133287795, x10 : -0.27528972923755646, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155876 in range [0.000000, 0.311751]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077600 in range [0.000000, 0.155200]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038414 in range [0.000000, 0.076828]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018368 in range [0.000000, 0.036736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004177 in range [0.000000, 0.008354]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000533 in range [0.000000, 0.001065]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000267 in range [0.000000, 0.000534]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	no solution exists.
	Iteration #010: testing norm threshold 0.000201 in range [0.000134, 0.000268]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.9905554884128646, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.0032984380597592, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 1.0084431137278222, x5 : -0.18784446903769267, x6 : 0, x7 : 0, x8 : 0, x9 : 1.0028666385556388, x10 : 0.06761958900651181, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000267


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117431 in range [0.000000, 0.234861]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058716 in range [0.000000, 0.117432]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029346 in range [0.000000, 0.058692]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014520 in range [0.000000, 0.029040]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007225 in range [0.000000, 0.014449]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003613 in range [0.000000, 0.007226]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001807 in range [0.000000, 0.003614]...	no solution exists.
	Iteration #009: testing norm threshold 0.002710 in range [0.001807, 0.003614]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002259 in range [0.001807, 0.002711]...	no solution exists.
	Iteration #011: testing norm threshold 0.002485 in range [0.002259, 0.002711]...	no solution exists.
	Iteration #012: testing norm threshold 0.002598 in range [0.002485, 0.002711]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002542 in range [0.002485, 0.002599]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.1200487151753084, x5 : -0.215117664337276, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.2518564057290386, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.11588361114263535, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : 0.07283639162778854, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002510


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093390 in range [0.000000, 0.186780]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046696 in range [0.000000, 0.093391]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020079 in range [0.000000, 0.040158]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010040 in range [0.000000, 0.020080]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004100 in range [0.000000, 0.008199]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002050 in range [0.000000, 0.004101]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001026 in range [0.000000, 0.002051]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000496 in range [0.000000, 0.000991]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	no solution exists.
	Iteration #012: testing norm threshold 0.000158 in range [0.000105, 0.000211]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.4838913906593598, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4553831541116396, x10 : -0.3084355970126681, x11 : 1.0, x12 : 19.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.48391321257451103, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4554049760267908, x10 : -0.31948421895504, x11 : 1, x12 : 19, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.062279 in range [0.000000, 0.124558]...	solution exists & found.
	Iteration #003: testing norm threshold 0.031117 in range [0.000000, 0.062234]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014385 in range [0.000000, 0.028770]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007179 in range [0.000000, 0.014358]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002806 in range [0.000000, 0.005613]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001404 in range [0.000000, 0.002807]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000702 in range [0.000000, 0.001405]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000337 in range [0.000000, 0.000674]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000338]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 3, x4 : -0.7733661234378815, x5 : -0.40319038153158726, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3348234483860889, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145976 in range [0.000000, 0.291952]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071041 in range [0.000000, 0.142082]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033264 in range [0.000000, 0.066528]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016632 in range [0.000000, 0.033265]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008308 in range [0.000000, 0.016617]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004093 in range [0.000000, 0.008185]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001713 in range [0.000000, 0.003426]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000857 in range [0.000000, 0.001714]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000406 in range [0.000000, 0.000813]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000161 in range [0.000000, 0.000321]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000081 in range [0.000000, 0.000162]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.125692431336729, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.09734312694229624, x10 : 0.15560661054180067, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.12610967367738768, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 3, x9 : -0.09884840713595969, x10 : 0.155189368201142, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000161


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118158 in range [0.000000, 0.236316]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059079 in range [0.000000, 0.118159]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029540 in range [0.000000, 0.059080]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014771 in range [0.000000, 0.029541]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007386 in range [0.000000, 0.014772]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003693 in range [0.000000, 0.007387]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001776 in range [0.000000, 0.003552]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000716 in range [0.000000, 0.001432]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000358 in range [0.000000, 0.000717]...	no solution exists.
	Iteration #011: testing norm threshold 0.000538 in range [0.000358, 0.000717]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000435 in range [0.000358, 0.000512]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.4574221536070885, x5 : -0.295641844938672, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 0.4905497571752675, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.4303489774465561, x5 : -0.25568822026252747, x6 : 0, x7 : 1, x8 : 0, x9 : 0.4905497571752675, x10 : -0.13854113966226578, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000511


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107283 in range [0.000000, 0.214566]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053597 in range [0.000000, 0.107194]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025819 in range [0.000000, 0.051639]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011515 in range [0.000000, 0.023030]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002274 in range [0.000000, 0.004548]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000904 in range [0.000000, 0.001808]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000377 in range [0.000000, 0.000754]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000168 in range [0.000000, 0.000336]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000080 in range [0.000000, 0.000159]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.7680739017188528, x5 : -0.4119545519351959, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663646885508, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110815 in range [0.000000, 0.221630]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055103 in range [0.000000, 0.110207]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027552 in range [0.000000, 0.055104]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013777 in range [0.000000, 0.027553]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006754 in range [0.000000, 0.013508]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001465 in range [0.000000, 0.002929]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000476 in range [0.000000, 0.000952]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000239 in range [0.000000, 0.000477]...	no solution exists.
	Iteration #010: testing norm threshold 0.000358 in range [0.000239, 0.000477]...	no solution exists.
	Iteration #011: testing norm threshold 0.000418 in range [0.000358, 0.000477]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.658825766142505, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.6012513133287795, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6582972796849539, x5 : -0.35274123770577803, x6 : 0, x7 : 0, x8 : 4, x9 : -0.6023082862438816, x10 : -0.27423275632245436, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000418


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196523 in range [0.000000, 0.393047]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097014 in range [0.000000, 0.194027]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047701 in range [0.000000, 0.095402]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022978 in range [0.000000, 0.045955]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010835 in range [0.000000, 0.021670]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005418 in range [0.000000, 0.010836]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001536 in range [0.000000, 0.003071]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000695 in range [0.000000, 0.001390]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000348 in range [0.000000, 0.000696]...	no solution exists.
	Iteration #011: testing norm threshold 0.000522 in range [0.000348, 0.000696]...	no solution exists.
	Iteration #012: testing norm threshold 0.000609 in range [0.000522, 0.000696]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.40475441127412737, x5 : 0.3664458622283616, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.32271002014849565, x5 : 0.36353844978255795, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.36077129622671983, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000609


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149751 in range [0.000000, 0.299502]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074438 in range [0.000000, 0.148876]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037219 in range [0.000000, 0.074439]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018593 in range [0.000000, 0.037185]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009189 in range [0.000000, 0.018378]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004530 in range [0.000000, 0.009059]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001573 in range [0.000000, 0.003145]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000642 in range [0.000000, 0.001285]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000322 in range [0.000000, 0.000643]...	no solution exists.
	Iteration #011: testing norm threshold 0.000483 in range [0.000322, 0.000643]...	no solution exists.
	Iteration #012: testing norm threshold 0.000563 in range [0.000483, 0.000643]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5005518073720403, x5 : -0.01828077842275249, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4880564957857132, x5 : -0.017239507630268207, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5283172428607941, x10 : 0.5865029394626617, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000545


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103484 in range [0.000000, 0.206969]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050317 in range [0.000000, 0.100633]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024407 in range [0.000000, 0.048815]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012204 in range [0.000000, 0.024408]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006068 in range [0.000000, 0.012135]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003034 in range [0.000000, 0.006069]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001518 in range [0.000000, 0.003035]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000662 in range [0.000000, 0.001325]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000332 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000166 in range [0.000000, 0.000333]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000084 in range [0.000000, 0.000167]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.9655648633438438, x5 : -0.17932913962554445, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.9811972018147379, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.9671654376767889, x5 : -0.23748549818992615, x6 : 0, x7 : 0, x8 : 6, x9 : 0.9827977761476829, x10 : -0.04326862126725737, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000166


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164284 in range [0.000000, 0.328568]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081349 in range [0.000000, 0.162699]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038939 in range [0.000000, 0.077878]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019470 in range [0.000000, 0.038940]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009735 in range [0.000000, 0.019471]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004715 in range [0.000000, 0.009430]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002358 in range [0.000000, 0.004716]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001023 in range [0.000000, 0.002047]...	no solution exists.
	Iteration #010: testing norm threshold 0.001535 in range [0.001023, 0.002047]...	no solution exists.
	Iteration #011: testing norm threshold 0.001791 in range [0.001535, 0.002047]...	no solution exists.
	Iteration #012: testing norm threshold 0.001919 in range [0.001791, 0.002047]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001855 in range [0.001791, 0.001920]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : 0.8489419463550802, x5 : -0.3314303696504035, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 1.0253996743047804, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 1, x4 : 1.0099085349185308, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : 1.030302442942365, x10 : 0.08095885846446352, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001855


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170437 in range [0.000000, 0.340875]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085219 in range [0.000000, 0.170438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042610 in range [0.000000, 0.085220]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020721 in range [0.000000, 0.041441]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009850 in range [0.000000, 0.019700]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004372 in range [0.000000, 0.008744]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001709 in range [0.000000, 0.003419]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000855 in range [0.000000, 0.001710]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7725841450117809, x5 : -0.4156461405180674, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6955046402834636, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133004 in range [0.000000, 0.266009]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066477 in range [0.000000, 0.132955]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032915 in range [0.000000, 0.065830]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013270 in range [0.000000, 0.026541]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006636 in range [0.000000, 0.013271]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003318 in range [0.000000, 0.006637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001660 in range [0.000000, 0.003319]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000830 in range [0.000000, 0.001661]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000345 in range [0.000000, 0.000689]...	no solution exists.
	Iteration #011: testing norm threshold 0.000517 in range [0.000345, 0.000689]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000423 in range [0.000345, 0.000501]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4797262864811897, x5 : 0.20539750102556967, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5609458088874817, x5 : 0.20539747122324728, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.021171403090795533, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000500


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162004 in range [0.000000, 0.324008]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080941 in range [0.000000, 0.161883]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040372 in range [0.000000, 0.080745]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018662 in range [0.000000, 0.037324]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008919 in range [0.000000, 0.017838]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002992 in range [0.000000, 0.005984]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001012 in range [0.000000, 0.002024]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	no solution exists.
	Iteration #010: testing norm threshold 0.000688 in range [0.000459, 0.000918]...	no solution exists.
	Iteration #011: testing norm threshold 0.000803 in range [0.000688, 0.000918]...	no solution exists.
	Iteration #012: testing norm threshold 0.000860 in range [0.000803, 0.000918]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.2908179864802835, x5 : -0.11669922138001425, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.15461096625094534, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.29752832954316116, x5 : -0.24643263220787048, x6 : 0, x7 : 3, x8 : 0, x9 : 0.14577047154307365, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000917


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.203893 in range [0.000000, 0.407786]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086876 in range [0.000000, 0.173753]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041911 in range [0.000000, 0.083822]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018578 in range [0.000000, 0.037156]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009290 in range [0.000000, 0.018579]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004465 in range [0.000000, 0.008931]...	no solution exists.
	Iteration #008: testing norm threshold 0.006698 in range [0.004465, 0.008931]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005301 in range [0.004465, 0.006137]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004768 in range [0.004465, 0.005070]...	no solution exists.
	Iteration #011: testing norm threshold 0.004919 in range [0.004768, 0.005070]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004840 in range [0.004768, 0.004913]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 1.9485294493919936, x5 : 2.4958630825763892, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 1.2552525312530007, x10 : 6.36493329258017, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 1.852732002735138, x5 : 1.3729981482028961, x6 : 1, x7 : 1, x8 : 0, x9 : 1.5245048999786377, x10 : 6.358685652924103, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004912


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.183678 in range [0.000000, 0.367356]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091185 in range [0.000000, 0.182371]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040438 in range [0.000000, 0.080876]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020176 in range [0.000000, 0.040352]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010088 in range [0.000000, 0.020177]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005045 in range [0.000000, 0.010089]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002296 in range [0.000000, 0.004591]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000531 in range [0.000000, 0.001061]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000266 in range [0.000000, 0.000532]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6713210786770154, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6744449061845923, x5 : -0.3685686213468695, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6622210664247656, x10 : -0.2500686494206572, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149647 in range [0.000000, 0.299293]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072765 in range [0.000000, 0.145531]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036383 in range [0.000000, 0.072766]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018183 in range [0.000000, 0.036366]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008018 in range [0.000000, 0.016037]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003502 in range [0.000000, 0.007004]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001752 in range [0.000000, 0.003503]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000505 in range [0.000000, 0.001010]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000180 in range [0.000000, 0.000360]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000063 in range [0.000000, 0.000126]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.14087423606615898, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.22091467498600892, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.141013850176282, x5 : -0.25081063387565944, x6 : 0, x7 : 0, x8 : 6, x9 : 0.22081912454598693, x10 : -0.3635831582325015, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122840 in range [0.000000, 0.245681]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061405 in range [0.000000, 0.122810]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030491 in range [0.000000, 0.060982]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013623 in range [0.000000, 0.027245]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006812 in range [0.000000, 0.013624]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003326 in range [0.000000, 0.006653]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001664 in range [0.000000, 0.003327]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000757 in range [0.000000, 0.001514]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000379 in range [0.000000, 0.000758]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000143 in range [0.000000, 0.000286]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000127]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3050947476454955, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.3886981497163586, x5 : -0.25964437081427766, x6 : 0, x7 : 0, x8 : 6, x9 : -0.30267567588896943, x10 : -0.2640635487884192, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.054096 in range [0.000000, 0.108192]...	solution exists & found.
	Iteration #003: testing norm threshold 0.026631 in range [0.000000, 0.053262]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012975 in range [0.000000, 0.025950]...	solution exists & found.
	Iteration #005: testing norm threshold 0.004240 in range [0.000000, 0.008481]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002121 in range [0.000000, 0.004241]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001004 in range [0.000000, 0.002008]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000503 in range [0.000000, 0.001005]...	no solution exists.
	Iteration #009: testing norm threshold 0.000754 in range [0.000503, 0.001005]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000629 in range [0.000503, 0.000755]...	no solution exists.
	Iteration #011: testing norm threshold 0.000692 in range [0.000629, 0.000755]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.30062680681987425, x5 : 0.008560615111046171, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.30582963134094815, x5 : 0.019633804384801595, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6368758144432548, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000692


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086804 in range [0.000000, 0.173607]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043402 in range [0.000000, 0.086805]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019321 in range [0.000000, 0.038643]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009566 in range [0.000000, 0.019132]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004783 in range [0.000000, 0.009567]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001635 in range [0.000000, 0.003271]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000698 in range [0.000000, 0.001396]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000151 in range [0.000000, 0.000301]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.7462929538840777, x5 : -0.3851131567180008, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.2642411010550996, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 3, x4 : -0.7477700063724624, x5 : -0.3895867168903351, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6824203977127181, x10 : -0.25258697809172737, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079210 in range [0.000000, 0.158419]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039269 in range [0.000000, 0.078538]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019113 in range [0.000000, 0.038226]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008161 in range [0.000000, 0.016321]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002515 in range [0.000000, 0.005030]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001125 in range [0.000000, 0.002251]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000446 in range [0.000000, 0.000891]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000065 in range [0.000000, 0.000130]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.747071260871259, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188025 in range [0.000000, 0.376050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092430 in range [0.000000, 0.184860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044334 in range [0.000000, 0.088667]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021322 in range [0.000000, 0.042644]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010661 in range [0.000000, 0.021323]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005331 in range [0.000000, 0.010662]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001733 in range [0.000000, 0.003466]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000656 in range [0.000000, 0.001312]...	no solution exists.
	Iteration #010: testing norm threshold 0.000984 in range [0.000656, 0.001312]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000816 in range [0.000656, 0.000977]...	no solution exists.
	Iteration #012: testing norm threshold 0.000897 in range [0.000816, 0.000977]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5755236825791025, x5 : -0.0003865160668867154, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5581804965904855, x5 : -0.30906255543231964, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.022276429864321007, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000897


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.179561 in range [0.000000, 0.359122]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087764 in range [0.000000, 0.175527]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043583 in range [0.000000, 0.087167]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020786 in range [0.000000, 0.041573]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010394 in range [0.000000, 0.020787]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004740 in range [0.000000, 0.009479]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002370 in range [0.000000, 0.004741]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001186 in range [0.000000, 0.002371]...	no solution exists.
	Iteration #010: testing norm threshold 0.001778 in range [0.001186, 0.002371]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001483 in range [0.001186, 0.001779]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001247 in range [0.001186, 0.001308]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.15484816058391987, x5 : 0.4469700428297576, x6 : 1.0, x7 : 0.0, x8 : 2.0, x9 : -0.4774843903566608, x10 : 1.7908029609718334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.15693071484565735, x5 : 0.0398755744099617, x6 : 1, x7 : 0, x8 : 2, x9 : -0.4921849296824784, x10 : 1.7576570808887482, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001247


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122928 in range [0.000000, 0.245856]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058142 in range [0.000000, 0.116284]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028560 in range [0.000000, 0.057120]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013561 in range [0.000000, 0.027123]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006744 in range [0.000000, 0.013488]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002683 in range [0.000000, 0.005366]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001212 in range [0.000000, 0.002423]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000327 in range [0.000000, 0.000653]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000164 in range [0.000000, 0.000328]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7723248511954899, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104087 in range [0.000000, 0.208174]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047398 in range [0.000000, 0.094797]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022779 in range [0.000000, 0.045558]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011390 in range [0.000000, 0.022780]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005657 in range [0.000000, 0.011314]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001972 in range [0.000000, 0.003944]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000986 in range [0.000000, 0.001973]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000494 in range [0.000000, 0.000987]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000247 in range [0.000000, 0.000495]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000248]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000063 in range [0.000000, 0.000125]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 2.0, x4 : -0.392259098739617, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.40676043437259296, x10 : -0.3747273409490208, x11 : 2.0, x12 : 11.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 2, x4 : -0.39536003659213276, x5 : -0.2672499824786154, x6 : 0, x7 : 0, x8 : 3, x9 : -0.39702912544284863, x10 : -0.36057777082000775, x11 : 2, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000124


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098719 in range [0.000000, 0.197438]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042399 in range [0.000000, 0.084799]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018935 in range [0.000000, 0.037871]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009421 in range [0.000000, 0.018842]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003191 in range [0.000000, 0.006382]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001596 in range [0.000000, 0.003192]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000799 in range [0.000000, 0.001597]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000397 in range [0.000000, 0.000794]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000199 in range [0.000000, 0.000398]...	no solution exists.
	Iteration #011: testing norm threshold 0.000298 in range [0.000199, 0.000398]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6546606619643349, x5 : -0.17038200844761156, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6553786261524861, x5 : -0.3180096745491028, x6 : 3, x7 : 6, x8 : 0, x9 : -0.695568654521413, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000397


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093025 in range [0.000000, 0.186050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046002 in range [0.000000, 0.092003]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022094 in range [0.000000, 0.044189]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010468 in range [0.000000, 0.020936]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005235 in range [0.000000, 0.010469]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002479 in range [0.000000, 0.004958]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001035 in range [0.000000, 0.002070]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000110 in range [0.000000, 0.000221]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000056 in range [0.000000, 0.000111]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.5505330575100817, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5040058738506862, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.5567807257175446, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5033180194607967, x10 : -0.2877140578136629, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124017 in range [0.000000, 0.248034]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056218 in range [0.000000, 0.112437]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027846 in range [0.000000, 0.055693]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013822 in range [0.000000, 0.027643]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006452 in range [0.000000, 0.012904]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002599 in range [0.000000, 0.005198]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001300 in range [0.000000, 0.002600]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000390 in range [0.000000, 0.000780]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000168 in range [0.000000, 0.000337]...	no solution exists.
	Iteration #011: testing norm threshold 0.000253 in range [0.000168, 0.000337]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6796512870333556, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5968310660797752, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7067244648933411, x5 : -0.41226303577423096, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5871157655049307, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000253


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.076133 in range [0.000000, 0.152266]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038067 in range [0.000000, 0.076134]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016960 in range [0.000000, 0.033919]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008159 in range [0.000000, 0.016317]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004067 in range [0.000000, 0.008134]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002034 in range [0.000000, 0.004068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000484 in range [0.000000, 0.000969]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000243 in range [0.000000, 0.000485]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000119 in range [0.000000, 0.000237]...	no solution exists.
	Iteration #011: testing norm threshold 0.000178 in range [0.000119, 0.000237]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6546606619643349, x5 : -0.17038200844761156, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6546939530604926, x5 : -0.21064409613609314, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6918330769591859, x10 : -0.34158146381378174, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000178


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152200 in range [0.000000, 0.304399]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075450 in range [0.000000, 0.150899]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037725 in range [0.000000, 0.075451]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018807 in range [0.000000, 0.037614]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009013 in range [0.000000, 0.018026]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003599 in range [0.000000, 0.007197]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001440 in range [0.000000, 0.002879]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000720 in range [0.000000, 0.001441]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000181 in range [0.000000, 0.000362]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7504580580622477, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6840094868105179, x10 : -0.30720907276332593, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107938 in range [0.000000, 0.215875]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053969 in range [0.000000, 0.107939]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026523 in range [0.000000, 0.053046]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013109 in range [0.000000, 0.026218]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006205 in range [0.000000, 0.012410]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002032 in range [0.000000, 0.004064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000754 in range [0.000000, 0.001508]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000378 in range [0.000000, 0.000755]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000379]...	no solution exists.
	Iteration #011: testing norm threshold 0.000284 in range [0.000189, 0.000379]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.2866947137607391, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7112049200765487, x5 : -0.2911682724952698, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.0199724213904721, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000284


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119324 in range [0.000000, 0.238647]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058390 in range [0.000000, 0.116781]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029196 in range [0.000000, 0.058391]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012457 in range [0.000000, 0.024914]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006229 in range [0.000000, 0.012458]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002152 in range [0.000000, 0.004305]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000973 in range [0.000000, 0.001947]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000215 in range [0.000000, 0.000430]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7400452792644501, x5 : -0.3515614213135747, x6 : 1, x7 : 5, x8 : 0, x9 : -0.6940498294022588, x10 : -0.31724742964773456, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120550 in range [0.000000, 0.241100]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060276 in range [0.000000, 0.120551]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028470 in range [0.000000, 0.056940]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008504 in range [0.000000, 0.017007]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001540 in range [0.000000, 0.003080]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000770 in range [0.000000, 0.001541]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000386 in range [0.000000, 0.000771]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000193 in range [0.000000, 0.000387]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7608862173955607, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6980170590701922, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175798 in range [0.000000, 0.351595]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087899 in range [0.000000, 0.175799]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043263 in range [0.000000, 0.086526]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021632 in range [0.000000, 0.043264]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009636 in range [0.000000, 0.019271]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004818 in range [0.000000, 0.009637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002309 in range [0.000000, 0.004618]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001155 in range [0.000000, 0.002310]...	no solution exists.
	Iteration #010: testing norm threshold 0.001733 in range [0.001155, 0.002310]...	no solution exists.
	Iteration #011: testing norm threshold 0.002021 in range [0.001733, 0.002310]...	no solution exists.
	Iteration #012: testing norm threshold 0.002166 in range [0.002021, 0.002310]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002094 in range [0.002021, 0.002167]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.24083673634224206, x5 : 0.42907578047389183, x6 : 1.0, x7 : 1.0, x8 : 3.0, x9 : 0.3756233287011573, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : 0.24717128088798507, x5 : -0.3001154065132141, x6 : 1, x7 : 1, x8 : 3, x9 : 0.3756233287011573, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002166


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112123 in range [0.000000, 0.224246]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055787 in range [0.000000, 0.111573]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027894 in range [0.000000, 0.055788]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013570 in range [0.000000, 0.027140]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006064 in range [0.000000, 0.012129]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001828 in range [0.000000, 0.003656]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000753 in range [0.000000, 0.001506]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000349 in range [0.000000, 0.000698]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000175 in range [0.000000, 0.000350]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.1631783689402601, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.04872040720324962, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.16502872998273102, x5 : -0.37431565482094764, x6 : 0, x7 : 0, x8 : 6, x9 : -0.06198115088045597, x10 : -0.2642411010550996, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096477 in range [0.000000, 0.192954]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047514 in range [0.000000, 0.095028]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023604 in range [0.000000, 0.047208]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007072 in range [0.000000, 0.014144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003536 in range [0.000000, 0.007073]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001691 in range [0.000000, 0.003381]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000688 in range [0.000000, 0.001377]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000345 in range [0.000000, 0.000689]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000173 in range [0.000000, 0.000346]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000087 in range [0.000000, 0.000174]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.392259098739617, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3537174673845421, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.39182047450019114, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3533665463930855, x10 : -0.2519166971435809, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000173


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.197826 in range [0.000000, 0.395652]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098428 in range [0.000000, 0.196856]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047765 in range [0.000000, 0.095531]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023883 in range [0.000000, 0.047766]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008737 in range [0.000000, 0.017473]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003688 in range [0.000000, 0.007377]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001632 in range [0.000000, 0.003264]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7733661234378815, x5 : -0.4164281189441681, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099661 in range [0.000000, 0.199321]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049427 in range [0.000000, 0.098855]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021903 in range [0.000000, 0.043805]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008263 in range [0.000000, 0.016525]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003391 in range [0.000000, 0.006782]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001323 in range [0.000000, 0.002646]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	no solution exists.
	Iteration #010: testing norm threshold 0.000184 in range [0.000123, 0.000246]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7088070162805465, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.24214385307631545, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.709517277335756, x5 : -0.35308794956567074, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.24214385307631545, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120071 in range [0.000000, 0.240141]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060036 in range [0.000000, 0.120072]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030015 in range [0.000000, 0.060029]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014763 in range [0.000000, 0.029526]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007283 in range [0.000000, 0.014567]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003226 in range [0.000000, 0.006452]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001383 in range [0.000000, 0.002766]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000357 in range [0.000000, 0.000714]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5088820157283805, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.43770216511562265, x10 : -0.3747273409490208, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5088820157283805, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4421874284120534, x10 : -0.35919344537609277, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090517 in range [0.000000, 0.181033]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045165 in range [0.000000, 0.090331]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020177 in range [0.000000, 0.040354]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010089 in range [0.000000, 0.020178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003259 in range [0.000000, 0.006518]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001621 in range [0.000000, 0.003242]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000811 in range [0.000000, 0.001622]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000406 in range [0.000000, 0.000812]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000204 in range [0.000000, 0.000407]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000102 in range [0.000000, 0.000205]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5713585784009324, x5 : -0.376166025540068, x6 : 0.0, x7 : 2.0, x8 : 1.0, x9 : -0.481904637605665, x10 : -0.3747273409490208, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5636952713847087, x5 : -0.36274532973766327, x6 : 0, x7 : 2, x8 : 1, x9 : -0.47969450056552887, x10 : -0.37472734094902077, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181548 in range [0.000000, 0.363096]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089165 in range [0.000000, 0.178330]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044024 in range [0.000000, 0.088047]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020237 in range [0.000000, 0.040474]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010063 in range [0.000000, 0.020126]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005032 in range [0.000000, 0.010064]...	no solution exists.
	Iteration #008: testing norm threshold 0.007548 in range [0.005032, 0.010064]...	solution exists & found.
	Iteration #009: testing norm threshold 0.006258 in range [0.005032, 0.007483]...	no solution exists.
	Iteration #010: testing norm threshold 0.006870 in range [0.006258, 0.007483]...	solution exists & found.
	Iteration #011: testing norm threshold 0.006564 in range [0.006258, 0.006871]...	solution exists & found.
	Iteration #012: testing norm threshold 0.006411 in range [0.006258, 0.006565]...	no solution exists.
	Iteration #013: testing norm threshold 0.006488 in range [0.006411, 0.006565]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 3.385490390860687, x5 : 4.043716776358779, x6 : 2.0, x7 : 4.0, x8 : 1.0, x9 : 0.08830725751588178, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 3.382019286150918, x5 : 4.040245671649011, x6 : 2, x7 : 4, x8 : 1, x9 : 0.5072815998479369, x10 : -0.3636787086725235, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.006564


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163554 in range [0.000000, 0.327108]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081777 in range [0.000000, 0.163555]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040705 in range [0.000000, 0.081410]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020205 in range [0.000000, 0.040410]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007402 in range [0.000000, 0.014804]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003605 in range [0.000000, 0.007210]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001579 in range [0.000000, 0.003157]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000274 in range [0.000000, 0.000548]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000138 in range [0.000000, 0.000275]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7650358974933624, x5 : -0.4212101991689039, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6874461472034454, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000109


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151212 in range [0.000000, 0.302424]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069332 in range [0.000000, 0.138663]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034666 in range [0.000000, 0.069333]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015705 in range [0.000000, 0.031411]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007582 in range [0.000000, 0.015164]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003630 in range [0.000000, 0.007261]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001816 in range [0.000000, 0.003631]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000772 in range [0.000000, 0.001544]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000360 in range [0.000000, 0.000719]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000180 in range [0.000000, 0.000361]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 2.365039867209006, x5 : -0.15248774609174578, x6 : 0.0, x7 : 2.0, x8 : 3.0, x9 : 2.576906458705269, x10 : 0.31028734639329025, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 2.361958057312901, x5 : -0.16763067149723435, x6 : 0, x7 : 2, x8 : 3, x9 : 2.5784473636533214, x10 : 0.3044642305504165, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128423 in range [0.000000, 0.256845]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064051 in range [0.000000, 0.128103]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031812 in range [0.000000, 0.063625]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013009 in range [0.000000, 0.026019]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001434 in range [0.000000, 0.002867]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000234 in range [0.000000, 0.000468]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000059 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7296325371713971, x5 : -0.3314303696504035, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7317151129245758, x5 : -0.32895693772741574, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6819208301800403, x10 : -0.2507601811629075, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130023 in range [0.000000, 0.260045]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064542 in range [0.000000, 0.129084]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031932 in range [0.000000, 0.063865]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015967 in range [0.000000, 0.031933]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007984 in range [0.000000, 0.015968]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003249 in range [0.000000, 0.006497]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001625 in range [0.000000, 0.003250]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000803 in range [0.000000, 0.001605]...	no solution exists.
	Iteration #010: testing norm threshold 0.001204 in range [0.000803, 0.001605]...	no solution exists.
	Iteration #011: testing norm threshold 0.001405 in range [0.001204, 0.001605]...	no solution exists.
	Iteration #012: testing norm threshold 0.001505 in range [0.001405, 0.001605]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001455 in range [0.001405, 0.001506]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : -0.04239034777332649, x5 : 1.1716876682423214, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 1, x4 : -0.028210704890405357, x5 : 1.1700033380483899, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6697651445865631, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001505


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144312 in range [0.000000, 0.288625]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071591 in range [0.000000, 0.143182]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035796 in range [0.000000, 0.071592]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017898 in range [0.000000, 0.035797]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008950 in range [0.000000, 0.017899]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004412 in range [0.000000, 0.008823]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000636 in range [0.000000, 0.001272]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000306 in range [0.000000, 0.000613]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000154 in range [0.000000, 0.000307]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000077 in range [0.000000, 0.000155]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.6796512870333556, x5 : -0.4030074190738666, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6817338168621063, x5 : -0.38063958287239075, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6414766585136165, x10 : -0.30672554860588064, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094585 in range [0.000000, 0.189169]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047293 in range [0.000000, 0.094586]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023354 in range [0.000000, 0.046708]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010169 in range [0.000000, 0.020338]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003705 in range [0.000000, 0.007410]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001748 in range [0.000000, 0.003495]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000874 in range [0.000000, 0.001748]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000438 in range [0.000000, 0.000875]...	no solution exists.
	Iteration #010: testing norm threshold 0.000656 in range [0.000438, 0.000875]...	no solution exists.
	Iteration #011: testing norm threshold 0.000766 in range [0.000656, 0.000875]...	no solution exists.
	Iteration #012: testing norm threshold 0.000821 in range [0.000766, 0.000875]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6130096201826336, x5 : -0.07196356549034981, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7650358974933624, x5 : -0.07196356549034981, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6625591238597679, x10 : 0.001835610391558754, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000874


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167230 in range [0.000000, 0.334461]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083616 in range [0.000000, 0.167231]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041808 in range [0.000000, 0.083617]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020905 in range [0.000000, 0.041809]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010104 in range [0.000000, 0.020209]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004312 in range [0.000000, 0.008623]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002156 in range [0.000000, 0.004313]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001079 in range [0.000000, 0.002157]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000437 in range [0.000000, 0.000873]...	no solution exists.
	Iteration #011: testing norm threshold 0.000655 in range [0.000437, 0.000873]...	no solution exists.
	Iteration #012: testing norm threshold 0.000764 in range [0.000655, 0.000873]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000710 in range [0.000655, 0.000765]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.0034257981865448896, x5 : -0.295641844938672, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 0.12808948275691992, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.021198318398044293, x5 : -0.3985338509082794, x6 : 0, x7 : 1, x8 : 0, x9 : 0.06841614469885826, x10 : -0.1811293165522064, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000710


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161933 in range [0.000000, 0.323867]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080941 in range [0.000000, 0.161883]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039810 in range [0.000000, 0.079621]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019906 in range [0.000000, 0.039811]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009856 in range [0.000000, 0.019711]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002842 in range [0.000000, 0.005684]...	no solution exists.
	Iteration #008: testing norm threshold 0.004263 in range [0.002842, 0.005684]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003553 in range [0.002842, 0.004264]...	no solution exists.
	Iteration #010: testing norm threshold 0.003909 in range [0.003553, 0.004264]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003731 in range [0.003553, 0.003910]...	no solution exists.
	Iteration #012: testing norm threshold 0.003821 in range [0.003731, 0.003910]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.4116060076472172, x5 : -0.10775209020208136, x6 : 0.0, x7 : 5.0, x8 : 1.0, x9 : 0.5612737131593353, x10 : 0.4207735862872114, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : 0.5663318037986755, x5 : -0.3269568085670471, x6 : 0, x7 : 5, x8 : 1, x9 : 0.4684285682406917, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003909


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099295 in range [0.000000, 0.198590]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046981 in range [0.000000, 0.093961]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023491 in range [0.000000, 0.046982]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007981 in range [0.000000, 0.015962]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003667 in range [0.000000, 0.007335]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001036 in range [0.000000, 0.002072]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000309 in range [0.000000, 0.000619]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000098 in range [0.000000, 0.000197]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.15068305640574975, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.07082164344827081, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.15327438230431123, x5 : -0.40650005243143983, x6 : 0, x7 : 0, x8 : 4, x9 : -0.07033117720087885, x10 : -0.26522203354988355, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131921 in range [0.000000, 0.263841]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065957 in range [0.000000, 0.131914]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028485 in range [0.000000, 0.056969]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014165 in range [0.000000, 0.028331]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007083 in range [0.000000, 0.014166]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003542 in range [0.000000, 0.007084]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001749 in range [0.000000, 0.003499]...	no solution exists.
	Iteration #009: testing norm threshold 0.002624 in range [0.001749, 0.003499]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001913 in range [0.001749, 0.002077]...	no solution exists.
	Iteration #011: testing norm threshold 0.001995 in range [0.001913, 0.002077]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.1131971188022186, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.013358429211215713, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.22773748636245728, x5 : -0.2243732586503029, x6 : 0, x7 : 6, x8 : 0, x9 : -0.13712535053491592, x10 : -0.20483287423849106, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163088 in range [0.000000, 0.326176]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081383 in range [0.000000, 0.162766]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040688 in range [0.000000, 0.081376]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018645 in range [0.000000, 0.037290]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008968 in range [0.000000, 0.017936]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002791 in range [0.000000, 0.005583]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001396 in range [0.000000, 0.002792]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000271 in range [0.000000, 0.000541]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.747331692192616, x5 : -0.36825763267067335, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6908276297468053, x10 : -0.36263997036398526, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.199746 in range [0.000000, 0.399492]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099700 in range [0.000000, 0.199400]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045147 in range [0.000000, 0.090294]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022574 in range [0.000000, 0.045148]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011192 in range [0.000000, 0.022383]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004548 in range [0.000000, 0.009095]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002146 in range [0.000000, 0.004292]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001011 in range [0.000000, 0.002022]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000506 in range [0.000000, 0.001012]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000253 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000127 in range [0.000000, 0.000253]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.2548106608600029, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.22111004991441494, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.25704652475966916, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 0, x9 : -0.22334591381408114, x10 : -0.26647696495476586, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000113


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088029 in range [0.000000, 0.176057]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044015 in range [0.000000, 0.088030]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019660 in range [0.000000, 0.039320]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008992 in range [0.000000, 0.017984]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004496 in range [0.000000, 0.008993]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002249 in range [0.000000, 0.004497]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001111 in range [0.000000, 0.002222]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000556 in range [0.000000, 0.001112]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000279 in range [0.000000, 0.000557]...	no solution exists.
	Iteration #011: testing norm threshold 0.000418 in range [0.000279, 0.000557]...	no solution exists.
	Iteration #012: testing norm threshold 0.000487 in range [0.000418, 0.000557]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : 0.062243402178643485, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4951653793526778, x10 : -0.24214385307631545, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4414539417223854, x5 : 0.08461122959852219, x6 : 0, x7 : 0, x8 : 5, x9 : -0.495951780128118, x10 : -0.2531924769282341, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000556


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.235111 in range [0.000000, 0.470221]...	solution exists & found.
	Iteration #003: testing norm threshold 0.117549 in range [0.000000, 0.235099]...	solution exists & found.
	Iteration #004: testing norm threshold 0.058764 in range [0.000000, 0.117528]...	solution exists & found.
	Iteration #005: testing norm threshold 0.028135 in range [0.000000, 0.056271]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008888 in range [0.000000, 0.017776]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004337 in range [0.000000, 0.008675]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002169 in range [0.000000, 0.004338]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000152 in range [0.000000, 0.000305]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000077 in range [0.000000, 0.000153]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.13818774387123936, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.022198923709224192, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.1342134402478345, x5 : -0.34982390714532213, x6 : 0, x7 : 0, x8 : 6, x9 : -0.03324954118579626, x10 : -0.2492181734526761, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000152


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156964 in range [0.000000, 0.313928]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078340 in range [0.000000, 0.156679]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036090 in range [0.000000, 0.072179]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017898 in range [0.000000, 0.035797]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007526 in range [0.000000, 0.015052]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002043 in range [0.000000, 0.004086]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000558 in range [0.000000, 0.001116]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000145 in range [0.000000, 0.000290]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7723248511954899, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3710883725906548, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000042


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126444 in range [0.000000, 0.252889]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063054 in range [0.000000, 0.126109]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030848 in range [0.000000, 0.061696]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015399 in range [0.000000, 0.030799]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006771 in range [0.000000, 0.013542]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002687 in range [0.000000, 0.005374]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001155 in range [0.000000, 0.002310]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000358 in range [0.000000, 0.000715]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000179 in range [0.000000, 0.000359]...	no solution exists.
	Iteration #011: testing norm threshold 0.000269 in range [0.000179, 0.000359]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.3991106951127068, x5 : 0.25908028809316697, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.5480129714123226, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.3866153806447983, x5 : 0.2583466094339825, x6 : 0, x7 : 0, x8 : 2, x9 : 0.5472792927531381, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000269


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116839 in range [0.000000, 0.233677]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058371 in range [0.000000, 0.116743]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029186 in range [0.000000, 0.058372]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014099 in range [0.000000, 0.028197]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007050 in range [0.000000, 0.014100]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003166 in range [0.000000, 0.006333]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001584 in range [0.000000, 0.003167]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000792 in range [0.000000, 0.001585]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000397 in range [0.000000, 0.000793]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000052 in range [0.000000, 0.000103]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7724205780259679, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134910 in range [0.000000, 0.269820]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066902 in range [0.000000, 0.133804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033452 in range [0.000000, 0.066903]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015882 in range [0.000000, 0.031763]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007941 in range [0.000000, 0.015883]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003971 in range [0.000000, 0.007942]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001986 in range [0.000000, 0.003972]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000994 in range [0.000000, 0.001987]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000460 in range [0.000000, 0.000920]...	no solution exists.
	Iteration #011: testing norm threshold 0.000690 in range [0.000460, 0.000920]...	no solution exists.
	Iteration #012: testing norm threshold 0.000805 in range [0.000690, 0.000920]...	no solution exists.
	Iteration #013: testing norm threshold 0.000863 in range [0.000805, 0.000920]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.3195987184883045, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 1.312715745490056, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 1.3151251514793323, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 2, x9 : 1.3082421784810838, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000919


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133242 in range [0.000000, 0.266484]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066622 in range [0.000000, 0.133243]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033311 in range [0.000000, 0.066623]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016627 in range [0.000000, 0.033254]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008250 in range [0.000000, 0.016500]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004125 in range [0.000000, 0.008251]...	no solution exists.
	Iteration #008: testing norm threshold 0.006188 in range [0.004125, 0.008251]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005157 in range [0.004125, 0.006189]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004638 in range [0.004125, 0.005150]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004382 in range [0.004125, 0.004639]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004254 in range [0.004125, 0.004383]...	no solution exists.
	Iteration #013: testing norm threshold 0.004319 in range [0.004254, 0.004383]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.223426325151222, x5 : 2.460074557864657, x6 : 1.0, x7 : 0.0, x8 : 1.0, x9 : 2.48408126647618, x10 : -0.3747273409490208, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.2178911925236093, x5 : 2.4628421241784633, x6 : 1, x7 : 0, x8 : 1, x9 : 2.48408126647618, x10 : 0.3047738591243091, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004382


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.201112 in range [0.000000, 0.402223]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099299 in range [0.000000, 0.198598]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049650 in range [0.000000, 0.099300]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024563 in range [0.000000, 0.049125]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012197 in range [0.000000, 0.024393]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006092 in range [0.000000, 0.012184]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003046 in range [0.000000, 0.006093]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001017 in range [0.000000, 0.002034]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000509 in range [0.000000, 0.001018]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000125 in range [0.000000, 0.000250]...	no solution exists.
	Iteration #013: testing norm threshold 0.000188 in range [0.000125, 0.000250]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.15484816058391987, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1503860939303471, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.15693071484565735, x5 : -0.30906254053115845, x6 : 0, x7 : 0, x8 : 0, x9 : -0.14830353966860962, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157104 in range [0.000000, 0.314207]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077526 in range [0.000000, 0.155052]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038109 in range [0.000000, 0.076217]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018024 in range [0.000000, 0.036049]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008730 in range [0.000000, 0.017459]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004014 in range [0.000000, 0.008029]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001124 in range [0.000000, 0.002247]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000562 in range [0.000000, 0.001125]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000282 in range [0.000000, 0.000563]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000141 in range [0.000000, 0.000283]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7442103922367096, x5 : -0.36274532973766327, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6781260045652319, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106787 in range [0.000000, 0.213573]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053394 in range [0.000000, 0.106788]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025447 in range [0.000000, 0.050893]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012724 in range [0.000000, 0.025448]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006305 in range [0.000000, 0.012610]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003124 in range [0.000000, 0.006248]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001562 in range [0.000000, 0.003125]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000782 in range [0.000000, 0.001563]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000391 in range [0.000000, 0.000783]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5963492034699531, x5 : -0.045122171956551146, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5975217871678362, x5 : -0.08091069757938385, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080500 in range [0.000000, 0.160999]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039333 in range [0.000000, 0.078665]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018554 in range [0.000000, 0.037109]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008709 in range [0.000000, 0.017417]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004355 in range [0.000000, 0.008710]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001750 in range [0.000000, 0.003500]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000625 in range [0.000000, 0.001249]...	no solution exists.
	Iteration #009: testing norm threshold 0.000937 in range [0.000625, 0.001249]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000781 in range [0.000625, 0.000938]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000703 in range [0.000625, 0.000782]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4755611823030195, x5 : -0.3851131567180008, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.38907944537657596, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.544285386800766, x5 : -0.3433237332548803, x6 : 1, x7 : 6, x8 : 0, x9 : -0.39060678872463145, x10 : -0.29585963074824273, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000781


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099993 in range [0.000000, 0.199986]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049997 in range [0.000000, 0.099994]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024086 in range [0.000000, 0.048172]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010757 in range [0.000000, 0.021515]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005379 in range [0.000000, 0.010758]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002650 in range [0.000000, 0.005300]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001325 in range [0.000000, 0.002651]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000427 in range [0.000000, 0.000853]...	no solution exists.
	Iteration #010: testing norm threshold 0.000640 in range [0.000427, 0.000853]...	no solution exists.
	Iteration #011: testing norm threshold 0.000747 in range [0.000640, 0.000853]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000694 in range [0.000640, 0.000748]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.5111935106841299, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.6972772561534246, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.510884105730458, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.6969678511997528, x10 : 0.2771414667367935, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000747


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.220803 in range [0.000000, 0.441605]...	solution exists & found.
	Iteration #003: testing norm threshold 0.110402 in range [0.000000, 0.220804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.055201 in range [0.000000, 0.110403]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026683 in range [0.000000, 0.053366]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013120 in range [0.000000, 0.026240]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006560 in range [0.000000, 0.013121]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002709 in range [0.000000, 0.005418]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001355 in range [0.000000, 0.002710]...	no solution exists.
	Iteration #010: testing norm threshold 0.002032 in range [0.001355, 0.002710]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001694 in range [0.001355, 0.002033]...	no solution exists.
	Iteration #012: testing norm threshold 0.001864 in range [0.001694, 0.002033]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.6153211151383833, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.4851053882012213, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.6109008204501276, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 0, x9 : 1.4873155355453491, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001779


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.187371 in range [0.000000, 0.374743]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093686 in range [0.000000, 0.187372]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046844 in range [0.000000, 0.093687]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023422 in range [0.000000, 0.046845]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009331 in range [0.000000, 0.018662]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004614 in range [0.000000, 0.009228]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001184 in range [0.000000, 0.002369]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000593 in range [0.000000, 0.001185]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000279 in range [0.000000, 0.000557]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000140 in range [0.000000, 0.000280]...	no solution exists.
	Iteration #012: testing norm threshold 0.000210 in range [0.000140, 0.000280]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4464054530558286, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3492972201355379, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.44641681043214476, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3492915414473798, x10 : -0.2752783718612403, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121831 in range [0.000000, 0.243663]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060916 in range [0.000000, 0.121832]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019291 in range [0.000000, 0.038582]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009646 in range [0.000000, 0.019292]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001029 in range [0.000000, 0.002057]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7608708143234253, x5 : -0.4052442020000452, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.33934468088760317, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.076946 in range [0.000000, 0.153892]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037617 in range [0.000000, 0.075235]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018281 in range [0.000000, 0.036562]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007171 in range [0.000000, 0.014341]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003586 in range [0.000000, 0.007172]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000631 in range [0.000000, 0.001262]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000316 in range [0.000000, 0.000632]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000157 in range [0.000000, 0.000314]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000070 in range [0.000000, 0.000141]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7525406014636419, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6632623505309484, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000140


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177867 in range [0.000000, 0.355734]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088408 in range [0.000000, 0.176816]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043063 in range [0.000000, 0.086125]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021491 in range [0.000000, 0.042982]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008435 in range [0.000000, 0.016869]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003313 in range [0.000000, 0.006626]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000660 in range [0.000000, 0.001320]...	no solution exists.
	Iteration #009: testing norm threshold 0.000990 in range [0.000660, 0.001320]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000826 in range [0.000660, 0.000991]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4797262864811897, x5 : -0.3493246320062693, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.4421224123646269, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.3675273656845093, x6 : 0, x7 : 1, x8 : 0, x9 : -0.4774843901395798, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000730


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074619 in range [0.000000, 0.149238]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037270 in range [0.000000, 0.074541]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018636 in range [0.000000, 0.037271]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008789 in range [0.000000, 0.017578]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003812 in range [0.000000, 0.007624]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001720 in range [0.000000, 0.003439]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000740 in range [0.000000, 0.001481]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000089 in range [0.000000, 0.000179]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5130471199065506, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4686438958586523, x10 : -0.3084355970126681, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5052957073142638, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 6, x9 : -0.470147648001786, x10 : -0.30768372094110125, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093279 in range [0.000000, 0.186557]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046401 in range [0.000000, 0.092802]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023201 in range [0.000000, 0.046402]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011438 in range [0.000000, 0.022875]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005719 in range [0.000000, 0.011439]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002647 in range [0.000000, 0.005293]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001285 in range [0.000000, 0.002570]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000511 in range [0.000000, 0.001022]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000154 in range [0.000000, 0.000308]...	no solution exists.
	Iteration #011: testing norm threshold 0.000231 in range [0.000154, 0.000308]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.24500184052041216, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.3844638231991658, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : 0.24396056454803072, x5 : -0.20960282016371168, x6 : 0, x7 : 0, x8 : 2, x9 : 0.37783345580101013, x10 : -0.09747046459291854, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000307


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115419 in range [0.000000, 0.230838]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057710 in range [0.000000, 0.115420]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028603 in range [0.000000, 0.057205]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014258 in range [0.000000, 0.028516]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007130 in range [0.000000, 0.014259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003565 in range [0.000000, 0.007131]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001372 in range [0.000000, 0.002744]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000488 in range [0.000000, 0.000977]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000238 in range [0.000000, 0.000477]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000119 in range [0.000000, 0.000239]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000058 in range [0.000000, 0.000117]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.3851131567180008, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.722596619982089, x5 : -0.37877896719010395, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6494798995688422, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126722 in range [0.000000, 0.253444]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062667 in range [0.000000, 0.125335]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031334 in range [0.000000, 0.062668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014485 in range [0.000000, 0.028971]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007243 in range [0.000000, 0.014486]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001796 in range [0.000000, 0.003591]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000898 in range [0.000000, 0.001797]...	no solution exists.
	Iteration #009: testing norm threshold 0.001348 in range [0.000898, 0.001797]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001033 in range [0.000898, 0.001168]...	no solution exists.
	Iteration #011: testing norm threshold 0.001101 in range [0.001033, 0.001168]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 2.0, x4 : 0.09089298592811752, x5 : -0.295641844938672, x6 : 0.0, x7 : 2.0, x8 : 1.0, x9 : 0.22091467498600892, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 2, x4 : 0.09089298592811752, x5 : -0.3985338509082794, x6 : 0, x7 : 2, x8 : 1, x9 : 0.07283639162778854, x10 : -0.1493346132338047, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001167


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093014 in range [0.000000, 0.186028]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043087 in range [0.000000, 0.086174]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021544 in range [0.000000, 0.043088]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010772 in range [0.000000, 0.021545]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004828 in range [0.000000, 0.009656]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002415 in range [0.000000, 0.004829]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001208 in range [0.000000, 0.002416]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000290 in range [0.000000, 0.000580]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000146 in range [0.000000, 0.000291]...	no solution exists.
	Iteration #011: testing norm threshold 0.000218 in range [0.000146, 0.000291]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.2131596190783016, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.11944436318731745, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.21213470655255898, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 0, x9 : -0.09529330312305813, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000218


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.073190 in range [0.000000, 0.146380]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036595 in range [0.000000, 0.073191]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018298 in range [0.000000, 0.036596]...	solution exists & found.
	Iteration #005: testing norm threshold 0.001376 in range [0.000000, 0.002752]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000688 in range [0.000000, 0.001377]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000295 in range [0.000000, 0.000589]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000148 in range [0.000000, 0.000296]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.045122171956551146, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7685058848015012, x5 : -0.04650958198312407, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6948992086829913, x10 : -0.36229129864595055, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123405 in range [0.000000, 0.246810]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061319 in range [0.000000, 0.122638]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025342 in range [0.000000, 0.050684]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012452 in range [0.000000, 0.024904]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002479 in range [0.000000, 0.004958]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001240 in range [0.000000, 0.002480]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000531 in range [0.000000, 0.001061]...	no solution exists.
	Iteration #009: testing norm threshold 0.000796 in range [0.000531, 0.001061]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000664 in range [0.000531, 0.000797]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.42974503634314815, x5 : 0.32171020633869724, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.481904637605665, x10 : 1.4814414892688543, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4857187867164612, x5 : 0.3239203316658075, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5283172428607941, x10 : 1.4770212386146337, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000595


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087381 in range [0.000000, 0.174762]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043203 in range [0.000000, 0.086407]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021602 in range [0.000000, 0.043204]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010802 in range [0.000000, 0.021603]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004949 in range [0.000000, 0.009898]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002475 in range [0.000000, 0.004950]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000884 in range [0.000000, 0.001768]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000176 in range [0.000000, 0.000353]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000089 in range [0.000000, 0.000177]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7732238659371227, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6917241105545848, x10 : -0.3635364511717647, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132136 in range [0.000000, 0.264271]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066068 in range [0.000000, 0.132137]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032388 in range [0.000000, 0.064775]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016173 in range [0.000000, 0.032346]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007739 in range [0.000000, 0.015479]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002878 in range [0.000000, 0.005757]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001360 in range [0.000000, 0.002720]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000681 in range [0.000000, 0.001361]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000206 in range [0.000000, 0.000413]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000207]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.07571118119868749, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.06640139619926658, x10 : -0.19794935711874695, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.0778272852848112, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 0, x9 : -0.06851750028539029, x10 : -0.18322910785027588, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108238 in range [0.000000, 0.216475]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043089 in range [0.000000, 0.086177]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019742 in range [0.000000, 0.039484]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009872 in range [0.000000, 0.019743]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004936 in range [0.000000, 0.009873]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002469 in range [0.000000, 0.004937]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000715 in range [0.000000, 0.001429]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000308 in range [0.000000, 0.000616]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000154 in range [0.000000, 0.000309]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000078 in range [0.000000, 0.000155]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4598034013606439, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5309069243754124, x5 : -0.36154594198148193, x6 : 0, x7 : 0, x8 : 6, x9 : -0.46100278911682524, x10 : -0.26544048881128096, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155112 in range [0.000000, 0.310224]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077556 in range [0.000000, 0.155113]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038692 in range [0.000000, 0.077384]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019264 in range [0.000000, 0.038528]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009118 in range [0.000000, 0.018237]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001986 in range [0.000000, 0.003973]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000993 in range [0.000000, 0.001985]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000312 in range [0.000000, 0.000624]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.1756736814747705, x5 : -0.3403775008283364, x6 : 0.0, x7 : 1.0, x8 : 2.0, x9 : -0.06198114895026234, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.17567368533515776, x5 : -0.3537982106208801, x6 : 0, x7 : 1, x8 : 2, x9 : -0.06198115088045597, x10 : -0.3696506799136907, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144325 in range [0.000000, 0.288650]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071227 in range [0.000000, 0.142454]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035315 in range [0.000000, 0.070629]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014001 in range [0.000000, 0.028003]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006993 in range [0.000000, 0.013986]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003497 in range [0.000000, 0.006994]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001749 in range [0.000000, 0.003498]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000875 in range [0.000000, 0.001750]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000373 in range [0.000000, 0.000747]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000177 in range [0.000000, 0.000353]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000089 in range [0.000000, 0.000178]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6421653494298245, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3084355970126681, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6464408536020024, x5 : -0.3784028042062294, x6 : 0, x7 : 4, x8 : 0, x9 : -0.6344809393341739, x10 : -0.2951501954301369, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170361 in range [0.000000, 0.340723]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085168 in range [0.000000, 0.170335]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042493 in range [0.000000, 0.084985]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020987 in range [0.000000, 0.041975]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008456 in range [0.000000, 0.016913]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004185 in range [0.000000, 0.008371]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001978 in range [0.000000, 0.003956]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000842 in range [0.000000, 0.001685]...	no solution exists.
	Iteration #010: testing norm threshold 0.001263 in range [0.000842, 0.001685]...	no solution exists.
	Iteration #011: testing norm threshold 0.001474 in range [0.001263, 0.001685]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001369 in range [0.001263, 0.001474]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001317 in range [0.001263, 0.001370]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.30062680681987425, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2343707916614277, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.3067194256403707, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2367139065522155, x10 : -0.045611736158045146, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001369


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102031 in range [0.000000, 0.204062]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051016 in range [0.000000, 0.102032]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025509 in range [0.000000, 0.051017]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012450 in range [0.000000, 0.024900]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006225 in range [0.000000, 0.012451]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003113 in range [0.000000, 0.006226]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001557 in range [0.000000, 0.003114]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000779 in range [0.000000, 0.001558]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000390 in range [0.000000, 0.000780]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000196 in range [0.000000, 0.000391]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000063 in range [0.000000, 0.000126]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.5047169115502104, x5 : -0.4298488126076653, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4111806816215972, x10 : -0.3747273409490208, x11 : 1.0, x12 : 16.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.5063266407203103, x5 : -0.4148183897740682, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4127904107916971, x10 : -0.37472734094902077, x11 : 1, x12 : 16, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115696 in range [0.000000, 0.231393]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054206 in range [0.000000, 0.108411]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027103 in range [0.000000, 0.054207]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013313 in range [0.000000, 0.026626]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006657 in range [0.000000, 0.013314]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002508 in range [0.000000, 0.005015]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000377 in range [0.000000, 0.000755]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	no solution exists.
	Iteration #010: testing norm threshold 0.000284 in range [0.000189, 0.000378]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5671934742227622, x5 : -0.3851131567180008, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4951653793526778, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5492564892248986, x5 : -0.4164281189441681, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5128463804721832, x10 : -0.26551766808935634, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000284


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124754 in range [0.000000, 0.249507]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061469 in range [0.000000, 0.122939]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030729 in range [0.000000, 0.061458]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014904 in range [0.000000, 0.029809]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006957 in range [0.000000, 0.013914]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003136 in range [0.000000, 0.006272]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001568 in range [0.000000, 0.003137]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000618 in range [0.000000, 0.001235]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000309 in range [0.000000, 0.000619]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	no solution exists.
	Iteration #012: testing norm threshold 0.000233 in range [0.000155, 0.000310]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5088820157283805, x5 : 0.16066184513590526, x6 : 1.0, x7 : 1.0, x8 : 3.0, x9 : -0.4774843903566608, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5038170814602579, x5 : 0.1576794671387657, x6 : 1, x7 : 1, x8 : 3, x9 : -0.5062160044908524, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000309


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.073624 in range [0.000000, 0.147248]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036797 in range [0.000000, 0.073594]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017150 in range [0.000000, 0.034301]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008576 in range [0.000000, 0.017151]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004288 in range [0.000000, 0.008577]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002145 in range [0.000000, 0.004289]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001073 in range [0.000000, 0.002146]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000537 in range [0.000000, 0.001074]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000259 in range [0.000000, 0.000519]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000130 in range [0.000000, 0.000260]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000066 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.40475441127412737, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3050947476454955, x10 : -0.10956036520361004, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.40541193904620076, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3057522754175689, x10 : -0.10923160131757334, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097425 in range [0.000000, 0.194849]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048246 in range [0.000000, 0.096493]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024071 in range [0.000000, 0.048143]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012013 in range [0.000000, 0.024026]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006007 in range [0.000000, 0.012014]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002163 in range [0.000000, 0.004326]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001082 in range [0.000000, 0.002164]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000293 in range [0.000000, 0.000585]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000147 in range [0.000000, 0.000293]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000148]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7505672793189839, x5 : -0.3895867168903351, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6765047378185877, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178364 in range [0.000000, 0.356727]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078360 in range [0.000000, 0.156720]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038840 in range [0.000000, 0.077681]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019407 in range [0.000000, 0.038815]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008983 in range [0.000000, 0.017965]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004158 in range [0.000000, 0.008317]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002080 in range [0.000000, 0.004159]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001040 in range [0.000000, 0.002081]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000298 in range [0.000000, 0.000595]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000149 in range [0.000000, 0.000299]...	no solution exists.
	Iteration #012: testing norm threshold 0.000224 in range [0.000149, 0.000299]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.5865403831303624, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 0.7248228613724922, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.5845056026962981, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 5, x9 : 0.722788080938428, x10 : -0.11159514563767428, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000224


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157221 in range [0.000000, 0.314443]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072891 in range [0.000000, 0.145782]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035841 in range [0.000000, 0.071683]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017921 in range [0.000000, 0.035842]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008961 in range [0.000000, 0.017922]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004112 in range [0.000000, 0.008223]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002056 in range [0.000000, 0.004113]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001029 in range [0.000000, 0.002057]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000515 in range [0.000000, 0.001030]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	no solution exists.
	Iteration #012: testing norm threshold 0.000387 in range [0.000258, 0.000516]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000318 in range [0.000258, 0.000379]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.08820649373319786, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.030844043278826675, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.10486691072583199, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.05281790464154519, x10 : -0.2511097274071809, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000318


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139100 in range [0.000000, 0.278201]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069551 in range [0.000000, 0.139101]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027560 in range [0.000000, 0.055121]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013781 in range [0.000000, 0.027561]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006188 in range [0.000000, 0.012377]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002829 in range [0.000000, 0.005657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000653 in range [0.000000, 0.001306]...	no solution exists.
	Iteration #009: testing norm threshold 0.000980 in range [0.000653, 0.001306]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000817 in range [0.000653, 0.000981]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000735 in range [0.000653, 0.000818]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.22565493161281197, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1813278246733768, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.35060806572437286, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.18251697501477063, x10 : -0.26543025139649346, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000735


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159138 in range [0.000000, 0.318276]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078318 in range [0.000000, 0.156636]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039159 in range [0.000000, 0.078319]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019521 in range [0.000000, 0.039041]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008463 in range [0.000000, 0.016926]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004232 in range [0.000000, 0.008464]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002113 in range [0.000000, 0.004226]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001057 in range [0.000000, 0.002114]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000529 in range [0.000000, 0.001058]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.15068305640574975, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.035459665456236904, x10 : -0.2863383490338839, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.15068305614158234, x5 : -0.3499164879257602, x6 : 0, x7 : 0, x8 : 3, x9 : -0.03545966598457173, x10 : -0.2863383490338839, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.205234 in range [0.000000, 0.410467]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095813 in range [0.000000, 0.191627]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047798 in range [0.000000, 0.095596]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023312 in range [0.000000, 0.046624]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010912 in range [0.000000, 0.021824]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005456 in range [0.000000, 0.010913]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002729 in range [0.000000, 0.005457]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001361 in range [0.000000, 0.002722]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000681 in range [0.000000, 0.001362]...	no solution exists.
	Iteration #011: testing norm threshold 0.001021 in range [0.000681, 0.001362]...	no solution exists.
	Iteration #012: testing norm threshold 0.001192 in range [0.001021, 0.001362]...	no solution exists.
	Iteration #013: testing norm threshold 0.001277 in range [0.001192, 0.001362]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 1.1363341346488192, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.2287310477589757, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : 1.1319800810127263, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 1.2243769941228828, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001277


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158362 in range [0.000000, 0.316724]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078907 in range [0.000000, 0.157814]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039338 in range [0.000000, 0.078676]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019454 in range [0.000000, 0.038909]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009662 in range [0.000000, 0.019323]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004541 in range [0.000000, 0.009081]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002271 in range [0.000000, 0.004542]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000556 in range [0.000000, 0.001111]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000278 in range [0.000000, 0.000557]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000140 in range [0.000000, 0.000279]...	no solution exists.
	Iteration #012: testing norm threshold 0.000210 in range [0.000140, 0.000279]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.3339476402452353, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2299505444124234, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.3298779538616526, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.22588085802884064, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.217937 in range [0.000000, 0.435874]...	solution exists & found.
	Iteration #003: testing norm threshold 0.108969 in range [0.000000, 0.217938]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054485 in range [0.000000, 0.108970]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027243 in range [0.000000, 0.054486]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013622 in range [0.000000, 0.027244]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006509 in range [0.000000, 0.013018]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003255 in range [0.000000, 0.006510]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001210 in range [0.000000, 0.002420]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000399 in range [0.000000, 0.000798]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000200 in range [0.000000, 0.000400]...	no solution exists.
	Iteration #012: testing norm threshold 0.000300 in range [0.000200, 0.000400]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.07154607702051738, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.03968453777683515, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.10486691072583199, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.05614163434651412, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000399


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.054217 in range [0.000000, 0.108434]...	solution exists & found.
	Iteration #003: testing norm threshold 0.027109 in range [0.000000, 0.054218]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013555 in range [0.000000, 0.027110]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006631 in range [0.000000, 0.013262]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003316 in range [0.000000, 0.006632]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001558 in range [0.000000, 0.003116]...	no solution exists.
	Iteration #008: testing norm threshold 0.002337 in range [0.001558, 0.003116]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001948 in range [0.001558, 0.002338]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001754 in range [0.001558, 0.001949]...	no solution exists.
	Iteration #011: testing norm threshold 0.001851 in range [0.001754, 0.001949]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2574971530549225, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.3977245649461785, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3690704237114423, x5 : -0.20944607449660368, x6 : 0, x7 : 0, x8 : 1, x9 : 0.5226895193945401, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001948


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166178 in range [0.000000, 0.332357]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083090 in range [0.000000, 0.166179]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041298 in range [0.000000, 0.082596]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020367 in range [0.000000, 0.040734]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010184 in range [0.000000, 0.020368]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004664 in range [0.000000, 0.009328]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002333 in range [0.000000, 0.004665]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000671 in range [0.000000, 0.001341]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000336 in range [0.000000, 0.000672]...	no solution exists.
	Iteration #011: testing norm threshold 0.000504 in range [0.000336, 0.000672]...	no solution exists.
	Iteration #012: testing norm threshold 0.000588 in range [0.000504, 0.000672]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.27980128592902365, x5 : -0.2061705331593431, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.1724873301753683, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2789074364475333, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.19900881499052048, x10 : 0.02123542370611462, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000671


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.179263 in range [0.000000, 0.358527]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088312 in range [0.000000, 0.176623]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043007 in range [0.000000, 0.086014]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020767 in range [0.000000, 0.041534]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010264 in range [0.000000, 0.020528]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004418 in range [0.000000, 0.008836]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001987 in range [0.000000, 0.003973]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000958 in range [0.000000, 0.001916]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000437 in range [0.000000, 0.000874]...	no solution exists.
	Iteration #011: testing norm threshold 0.000656 in range [0.000437, 0.000874]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000545 in range [0.000437, 0.000652]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000491 in range [0.000437, 0.000546]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.458900765590339, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.39349969262558027, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.37913213836274295, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 0, x9 : -0.39349969262558027, x10 : -0.28905254918165424, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000545


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139451 in range [0.000000, 0.278902]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069726 in range [0.000000, 0.139452]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034027 in range [0.000000, 0.068053]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016511 in range [0.000000, 0.033021]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007762 in range [0.000000, 0.015523]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003716 in range [0.000000, 0.007433]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001859 in range [0.000000, 0.003717]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000930 in range [0.000000, 0.001860]...	no solution exists.
	Iteration #010: testing norm threshold 0.001395 in range [0.000930, 0.001860]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001163 in range [0.000930, 0.001396]...	no solution exists.
	Iteration #012: testing norm threshold 0.001279 in range [0.001163, 0.001396]...	no solution exists.
	Iteration #013: testing norm threshold 0.001338 in range [0.001279, 0.001396]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.5838538909354427, x5 : -0.01828077842275249, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.4871808760500419, x5 : -0.09792933842902063, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : 0.6757675684356225, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001395


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169270 in range [0.000000, 0.338540]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080553 in range [0.000000, 0.161105]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040110 in range [0.000000, 0.080221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019501 in range [0.000000, 0.039002]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009580 in range [0.000000, 0.019160]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004790 in range [0.000000, 0.009581]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001297 in range [0.000000, 0.002593]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000429 in range [0.000000, 0.000858]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000215 in range [0.000000, 0.000430]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000216]...	no solution exists.
	Iteration #012: testing norm threshold 0.000162 in range [0.000108, 0.000216]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.42974503634314815, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4421224123646269, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.4099577778503569, x5 : -0.09828281309348433, x6 : 0, x7 : 0, x8 : 6, x9 : -0.44316670422595517, x10 : -0.25214818506690584, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000162


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110018 in range [0.000000, 0.220036]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055009 in range [0.000000, 0.110019]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027505 in range [0.000000, 0.055010]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013735 in range [0.000000, 0.027471]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006735 in range [0.000000, 0.013469]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002706 in range [0.000000, 0.005411]...	no solution exists.
	Iteration #008: testing norm threshold 0.004058 in range [0.002706, 0.005411]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003382 in range [0.002706, 0.004059]...	no solution exists.
	Iteration #010: testing norm threshold 0.003721 in range [0.003382, 0.004059]...	no solution exists.
	Iteration #011: testing norm threshold 0.003890 in range [0.003721, 0.004059]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003806 in range [0.003721, 0.003891]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.08672788174994739, x5 : -0.07196356549034981, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : 0.2164944277370047, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.0787891262242846, x5 : -0.07456195684929653, x6 : 0, x7 : 5, x8 : 0, x9 : -0.43107180297374725, x10 : -0.1843023360919009, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003806


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136015 in range [0.000000, 0.272030]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058492 in range [0.000000, 0.116984]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029038 in range [0.000000, 0.058077]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014520 in range [0.000000, 0.029039]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006638 in range [0.000000, 0.013276]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003221 in range [0.000000, 0.006442]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001405 in range [0.000000, 0.002810]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000703 in range [0.000000, 0.001406]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000176 in range [0.000000, 0.000353]...	no solution exists.
	Iteration #012: testing norm threshold 0.000265 in range [0.000176, 0.000353]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.3135361072945377, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7181147178542617, x5 : -0.21848617400050196, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6553993364703659, x10 : -0.12084374019700993, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000352


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136415 in range [0.000000, 0.272830]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067863 in range [0.000000, 0.135725]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033654 in range [0.000000, 0.067308]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016657 in range [0.000000, 0.033314]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008329 in range [0.000000, 0.016658]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003671 in range [0.000000, 0.007342]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001692 in range [0.000000, 0.003384]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000846 in range [0.000000, 0.001693]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000424 in range [0.000000, 0.000847]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000212 in range [0.000000, 0.000425]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000107 in range [0.000000, 0.000213]...	no solution exists.
	Iteration #013: testing norm threshold 0.000160 in range [0.000107, 0.000213]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3547731611360859, x5 : -0.3582717631842022, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.2520517806574446, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.35743567436528195, x5 : -0.40748098492622375, x6 : 1, x7 : 5, x8 : 0, x9 : -0.25471429388664063, x10 : -0.24081259646171743, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000160


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108961 in range [0.000000, 0.217923]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054459 in range [0.000000, 0.108919]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024426 in range [0.000000, 0.048852]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012213 in range [0.000000, 0.024427]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005315 in range [0.000000, 0.010629]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002280 in range [0.000000, 0.004559]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001140 in range [0.000000, 0.002281]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000493 in range [0.000000, 0.000986]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000247 in range [0.000000, 0.000494]...	no solution exists.
	Iteration #011: testing norm threshold 0.000371 in range [0.000247, 0.000494]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000309 in range [0.000247, 0.000372]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.22148982743464188, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.22086468754076896, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 0, x9 : -0.16018643071893182, x10 : -0.36242842888477766, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000309


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097199 in range [0.000000, 0.194398]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047685 in range [0.000000, 0.095370]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023843 in range [0.000000, 0.047686]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011922 in range [0.000000, 0.023844]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005961 in range [0.000000, 0.011923]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002847 in range [0.000000, 0.005694]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001424 in range [0.000000, 0.002848]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000713 in range [0.000000, 0.001425]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000146 in range [0.000000, 0.000293]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.4005893070959573, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.3758187036295633, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.40058931186495794, x5 : -0.36721889674663544, x6 : 0, x7 : 0, x8 : 5, x9 : -0.37581870839856396, x10 : -0.27528972923755646, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000115


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120094 in range [0.000000, 0.240189]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059360 in range [0.000000, 0.118720]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029123 in range [0.000000, 0.058246]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014256 in range [0.000000, 0.028511]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007068 in range [0.000000, 0.014136]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003422 in range [0.000000, 0.006844]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001712 in range [0.000000, 0.003423]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000856 in range [0.000000, 0.001713]...	no solution exists.
	Iteration #010: testing norm threshold 0.001284 in range [0.000856, 0.001713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001071 in range [0.000856, 0.001285]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000964 in range [0.000856, 0.001072]...	no solution exists.
	Iteration #013: testing norm threshold 0.001018 in range [0.000964, 0.001072]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5297075366192311, x5 : -0.2688004514048733, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.43770216511562265, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.2268402041503549, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5902006924152374, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107122 in range [0.000000, 0.214244]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053562 in range [0.000000, 0.107123]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026209 in range [0.000000, 0.052418]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013105 in range [0.000000, 0.026210]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002541 in range [0.000000, 0.005082]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001271 in range [0.000000, 0.002542]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000529 in range [0.000000, 0.001059]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000056 in range [0.000000, 0.000111]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.625504932717144, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6270668337533025, x5 : -0.3532775769421606, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5575694745174566, x10 : -0.363158074993804, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000110


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079022 in range [0.000000, 0.158043]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039511 in range [0.000000, 0.079023]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019673 in range [0.000000, 0.039346]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009837 in range [0.000000, 0.019674]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004039 in range [0.000000, 0.008078]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001854 in range [0.000000, 0.003709]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000924 in range [0.000000, 0.001847]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000156 in range [0.000000, 0.000313]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.3314303696504035, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 3, x4 : -0.7358801960945129, x5 : -0.33590392768383026, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37158203533663703, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135601 in range [0.000000, 0.271201]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064525 in range [0.000000, 0.129050]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031540 in range [0.000000, 0.063081]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014967 in range [0.000000, 0.029934]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007341 in range [0.000000, 0.014682]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003671 in range [0.000000, 0.007342]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001836 in range [0.000000, 0.003672]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000874 in range [0.000000, 0.001748]...	no solution exists.
	Iteration #010: testing norm threshold 0.001311 in range [0.000874, 0.001748]...	no solution exists.
	Iteration #011: testing norm threshold 0.001530 in range [0.001311, 0.001748]...	no solution exists.
	Iteration #012: testing norm threshold 0.001639 in range [0.001530, 0.001748]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001585 in range [0.001530, 0.001640]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.18400388983111074, x5 : 0.8406438146588047, x6 : 2.0, x7 : 1.0, x8 : 1.0, x9 : -0.6984967528068727, x10 : 2.76308187203834, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.18924530739785048, x5 : 0.2411860227584839, x6 : 2, x7 : 1, x8 : 1, x9 : -0.695832490630293, x10 : 2.7600904507421404, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001585


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095027 in range [0.000000, 0.190053]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047347 in range [0.000000, 0.094693]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023674 in range [0.000000, 0.047348]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011837 in range [0.000000, 0.023675]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005919 in range [0.000000, 0.011838]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002960 in range [0.000000, 0.005920]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001481 in range [0.000000, 0.002961]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000741 in range [0.000000, 0.001482]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000371 in range [0.000000, 0.000742]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000186 in range [0.000000, 0.000372]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000093 in range [0.000000, 0.000187]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.24500184052041216, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.3756233287011573, x10 : 0.11141211458423222, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2409390675789429, x5 : -0.20976798135774616, x6 : 0, x7 : 0, x8 : 4, x9 : 0.3747472139228103, x10 : 0.11053599980588526, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.197082 in range [0.000000, 0.394164]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098542 in range [0.000000, 0.197083]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049073 in range [0.000000, 0.098147]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024537 in range [0.000000, 0.049074]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012269 in range [0.000000, 0.024538]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005306 in range [0.000000, 0.010612]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002653 in range [0.000000, 0.005307]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001327 in range [0.000000, 0.002654]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000664 in range [0.000000, 0.001328]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000289 in range [0.000000, 0.000578]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000145 in range [0.000000, 0.000290]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.24648045250366266, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.1371253521833344, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.2471058418403185, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 1, x9 : -0.13775074151999026, x10 : -0.24183115840798752, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000145


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142405 in range [0.000000, 0.284811]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070628 in range [0.000000, 0.141256]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035315 in range [0.000000, 0.070629]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015588 in range [0.000000, 0.031175]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007137 in range [0.000000, 0.014273]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000710 in range [0.000000, 0.001419]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000355 in range [0.000000, 0.000711]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000088 in range [0.000000, 0.000177]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6046794118262934, x5 : -0.06301643431241692, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6045152047477542, x5 : -0.06284508081155814, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6970633619707413, x10 : -0.13132920114691496, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154629 in range [0.000000, 0.309258]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077315 in range [0.000000, 0.154630]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038332 in range [0.000000, 0.076664]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018338 in range [0.000000, 0.036676]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006482 in range [0.000000, 0.012964]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002934 in range [0.000000, 0.005868]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001447 in range [0.000000, 0.002894]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000493 in range [0.000000, 0.000985]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000212 in range [0.000000, 0.000423]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000106 in range [0.000000, 0.000213]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000107]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7728838545174403, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6913840991349025, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087624 in range [0.000000, 0.175247]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042108 in range [0.000000, 0.084215]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020121 in range [0.000000, 0.040241]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007711 in range [0.000000, 0.015422]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002641 in range [0.000000, 0.005281]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001210 in range [0.000000, 0.002420]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000475 in range [0.000000, 0.000951]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000238 in range [0.000000, 0.000476]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	no solution exists.
	Iteration #011: testing norm threshold 0.000179 in range [0.000120, 0.000239]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7004768079242063, x5 : -0.2688004514048733, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7275499999523163, x5 : -0.26432688534259796, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6377183555650774, x10 : -0.3537351572145006, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000176


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090829 in range [0.000000, 0.181657]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044997 in range [0.000000, 0.089995]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016889 in range [0.000000, 0.033777]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008445 in range [0.000000, 0.016890]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003219 in range [0.000000, 0.006439]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001610 in range [0.000000, 0.003220]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000781 in range [0.000000, 0.001563]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000384 in range [0.000000, 0.000769]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000193 in range [0.000000, 0.000385]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.09880495902414847, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6338351368904114, x5 : -0.09965728258027716, x6 : 2, x7 : 6, x8 : 0, x9 : -0.679963462567147, x10 : -0.3628263851163948, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133758 in range [0.000000, 0.267515]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063480 in range [0.000000, 0.126960]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031419 in range [0.000000, 0.062837]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015710 in range [0.000000, 0.031420]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007855 in range [0.000000, 0.015711]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003928 in range [0.000000, 0.007856]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001965 in range [0.000000, 0.003929]...	no solution exists.
	Iteration #009: testing norm threshold 0.002947 in range [0.001965, 0.003929]...	no solution exists.
	Iteration #010: testing norm threshold 0.003438 in range [0.002947, 0.003929]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003193 in range [0.002947, 0.003439]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003070 in range [0.002947, 0.003194]...	no solution exists.
	Iteration #013: testing norm threshold 0.003132 in range [0.003070, 0.003194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.5573846538831715, x5 : 3.2295278391668862, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : 0.4198258011911997, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.5573846538831715, x5 : 2.639017105102539, x6 : 2, x7 : 5, x8 : 0, x9 : 0.4132055212138033, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175414 in range [0.000000, 0.350827]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086877 in range [0.000000, 0.173755]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043400 in range [0.000000, 0.086801]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020919 in range [0.000000, 0.041838]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008765 in range [0.000000, 0.017529]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003443 in range [0.000000, 0.006885]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000777 in range [0.000000, 0.001554]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000389 in range [0.000000, 0.000778]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.3131221193543846, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.25647202790644885, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3143561231981446, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.25770603175020884, x10 : -0.2433778569200754, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105829 in range [0.000000, 0.211658]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047369 in range [0.000000, 0.094738]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023546 in range [0.000000, 0.047091]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011033 in range [0.000000, 0.022067]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005517 in range [0.000000, 0.011034]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002759 in range [0.000000, 0.005518]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001282 in range [0.000000, 0.002564]...	no solution exists.
	Iteration #009: testing norm threshold 0.001923 in range [0.001282, 0.002564]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001428 in range [0.001282, 0.001575]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.6865028834064454, x5 : -0.2688004514048733, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : 0.7955468173565601, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.6932132339199036, x5 : -0.3269568085670471, x6 : 1, x7 : 3, x8 : 0, x9 : 0.6894608736038208, x10 : -0.15138278156518936, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001374


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127612 in range [0.000000, 0.255224]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056823 in range [0.000000, 0.113645]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028284 in range [0.000000, 0.056568]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014143 in range [0.000000, 0.028285]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007052 in range [0.000000, 0.014103]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003094 in range [0.000000, 0.006189]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001548 in range [0.000000, 0.003095]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000485 in range [0.000000, 0.000970]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000243 in range [0.000000, 0.000486]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000122 in range [0.000000, 0.000244]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.7463266905934817, x5 : -0.36271159302825934, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.2863383490338839, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095730 in range [0.000000, 0.191461]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047843 in range [0.000000, 0.095686]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023833 in range [0.000000, 0.047667]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011915 in range [0.000000, 0.023829]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005958 in range [0.000000, 0.011916]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002669 in range [0.000000, 0.005337]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000685 in range [0.000000, 0.001370]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000343 in range [0.000000, 0.000686]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000172 in range [0.000000, 0.000344]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000086 in range [0.000000, 0.000173]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4032757992908769, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5082307461712845, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.4032433648885128, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.5081983117689204, x10 : -0.1537339018088554, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105815 in range [0.000000, 0.211631]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052908 in range [0.000000, 0.105816]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025353 in range [0.000000, 0.050707]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012677 in range [0.000000, 0.025354]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005152 in range [0.000000, 0.010304]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002576 in range [0.000000, 0.005153]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001230 in range [0.000000, 0.002459]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000615 in range [0.000000, 0.001231]...	no solution exists.
	Iteration #010: testing norm threshold 0.000923 in range [0.000615, 0.001231]...	no solution exists.
	Iteration #011: testing norm threshold 0.001077 in range [0.000923, 0.001231]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001000 in range [0.000923, 0.001078]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5630283700445922, x5 : 0.026454877466911945, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6775687336921692, x5 : 0.06695868828044338, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.19508582022316773, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099732 in range [0.000000, 0.199465]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049867 in range [0.000000, 0.099733]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024934 in range [0.000000, 0.049868]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012467 in range [0.000000, 0.024935]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006154 in range [0.000000, 0.012308]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003078 in range [0.000000, 0.006155]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001539 in range [0.000000, 0.003079]...	no solution exists.
	Iteration #009: testing norm threshold 0.002309 in range [0.001539, 0.003079]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001694 in range [0.001539, 0.001849]...	no solution exists.
	Iteration #011: testing norm threshold 0.001772 in range [0.001694, 0.001849]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.978060175878354, x5 : 1.9142995560107512, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 1.1624273390239117, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.9732390699397708, x5 : 1.909478450072168, x6 : 0, x7 : 0, x8 : 5, x9 : 0.9546757340431213, x10 : -0.20417687382158675, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001772


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110294 in range [0.000000, 0.220587]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055147 in range [0.000000, 0.110295]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027459 in range [0.000000, 0.054918]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013730 in range [0.000000, 0.027460]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006560 in range [0.000000, 0.013120]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003280 in range [0.000000, 0.006561]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001306 in range [0.000000, 0.002612]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000654 in range [0.000000, 0.001307]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000327 in range [0.000000, 0.000655]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000094 in range [0.000000, 0.000188]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.029895035238816113, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.09272750476488603, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.029895035238816113, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.09272750500857227, x10 : -0.18690073255166118, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000187


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152754 in range [0.000000, 0.305508]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071070 in range [0.000000, 0.142141]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033665 in range [0.000000, 0.067329]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013446 in range [0.000000, 0.026892]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006620 in range [0.000000, 0.013241]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001571 in range [0.000000, 0.003143]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000728 in range [0.000000, 0.001455]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000330 in range [0.000000, 0.000660]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000165 in range [0.000000, 0.000331]...	no solution exists.
	Iteration #011: testing norm threshold 0.000248 in range [0.000165, 0.000331]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6421653494298245, x5 : -0.1435406149138129, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : 0.3323845943720745, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6754861772060394, x5 : -0.14442811884328002, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5990411937236786, x10 : 0.31028734147548676, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000330


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142997 in range [0.000000, 0.285995]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068240 in range [0.000000, 0.136479]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033860 in range [0.000000, 0.067721]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016919 in range [0.000000, 0.033838]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008455 in range [0.000000, 0.016910]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003157 in range [0.000000, 0.006315]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001579 in range [0.000000, 0.003158]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000576 in range [0.000000, 0.001152]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000068 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4089195154522975, x5 : 0.03540200864484483, x6 : 1.0, x7 : 0.0, x8 : 2.0, x9 : -0.4907451321036735, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4087205610680624, x5 : 0.03672959000705121, x6 : 1, x7 : 0, x8 : 2, x9 : -0.4791241286059328, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.070628 in range [0.000000, 0.141256]...	solution exists & found.
	Iteration #003: testing norm threshold 0.032936 in range [0.000000, 0.065871]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016468 in range [0.000000, 0.032937]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008235 in range [0.000000, 0.016469]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003314 in range [0.000000, 0.006628]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001560 in range [0.000000, 0.003120]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000780 in range [0.000000, 0.001561]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000391 in range [0.000000, 0.000781]...	no solution exists.
	Iteration #010: testing norm threshold 0.000586 in range [0.000391, 0.000781]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000489 in range [0.000391, 0.000587]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.18400388983111074, x5 : 0.6706483222780798, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.18529507938785475, x5 : 0.451443612575531, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6242714782899357, x10 : -0.37472734094902077, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000586


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124744 in range [0.000000, 0.249487]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062372 in range [0.000000, 0.124745]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030297 in range [0.000000, 0.060595]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015088 in range [0.000000, 0.030176]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006942 in range [0.000000, 0.013885]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003471 in range [0.000000, 0.006942]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000461 in range [0.000000, 0.000923]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000213 in range [0.000000, 0.000426]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000107 in range [0.000000, 0.000214]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7671184747749282, x5 : 2.3348147213735966, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7483642868515702, x5 : 2.3348035030161975, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3526244837915371, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000107


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104241 in range [0.000000, 0.208481]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042898 in range [0.000000, 0.085795]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021384 in range [0.000000, 0.042768]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010135 in range [0.000000, 0.020269]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005068 in range [0.000000, 0.010136]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002527 in range [0.000000, 0.005054]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001226 in range [0.000000, 0.002452]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000320 in range [0.000000, 0.000639]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000139]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7088070162805465, x5 : -0.2866947137607391, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7108895778656006, x5 : -0.2796389390824557, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.25061027753336435, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000138


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.084679 in range [0.000000, 0.169359]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042340 in range [0.000000, 0.084680]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020676 in range [0.000000, 0.041353]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006372 in range [0.000000, 0.012743]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002130 in range [0.000000, 0.004261]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001066 in range [0.000000, 0.002131]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000514 in range [0.000000, 0.001027]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000257 in range [0.000000, 0.000515]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000065 in range [0.000000, 0.000130]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.2658273614112628, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.40656505944418697, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.26582734388000834, x5 : -0.3403775095939636, x6 : 0, x7 : 0, x8 : 3, x9 : 0.41319544876370684, x10 : -0.16950459554768693, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144882 in range [0.000000, 0.289763]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072417 in range [0.000000, 0.144833]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036209 in range [0.000000, 0.072418]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018000 in range [0.000000, 0.036000]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007981 in range [0.000000, 0.015963]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003055 in range [0.000000, 0.006110]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001357 in range [0.000000, 0.002714]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000679 in range [0.000000, 0.001358]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000319 in range [0.000000, 0.000639]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000160 in range [0.000000, 0.000320]...	no solution exists.
	Iteration #012: testing norm threshold 0.000240 in range [0.000160, 0.000320]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.4755611823030195, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3802389508785675, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.48092797614901434, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3802389508785675, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000240


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.216162 in range [0.000000, 0.432325]...	solution exists & found.
	Iteration #003: testing norm threshold 0.107888 in range [0.000000, 0.215777]...	solution exists & found.
	Iteration #004: testing norm threshold 0.053945 in range [0.000000, 0.107889]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026610 in range [0.000000, 0.053219]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013305 in range [0.000000, 0.026611]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005777 in range [0.000000, 0.011554]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002889 in range [0.000000, 0.005778]...	no solution exists.
	Iteration #009: testing norm threshold 0.004334 in range [0.002889, 0.005778]...	no solution exists.
	Iteration #010: testing norm threshold 0.005056 in range [0.004334, 0.005778]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004592 in range [0.004334, 0.004850]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004463 in range [0.004334, 0.004593]...	no solution exists.
	Iteration #013: testing norm threshold 0.004528 in range [0.004463, 0.004593]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.06173725668092664, x5 : -0.15248774609174578, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.11040849376090298, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.0647834178216425, x5 : -0.11955402676122232, x6 : 0, x7 : 3, x8 : 0, x9 : -0.6962866187095642, x10 : 0.31028734639329025, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004528


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196294 in range [0.000000, 0.392589]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098148 in range [0.000000, 0.196295]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049074 in range [0.000000, 0.098149]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024522 in range [0.000000, 0.049043]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012192 in range [0.000000, 0.024384]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004435 in range [0.000000, 0.008870]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002218 in range [0.000000, 0.004436]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001109 in range [0.000000, 0.002219]...	no solution exists.
	Iteration #010: testing norm threshold 0.001664 in range [0.001109, 0.002219]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001196 in range [0.001109, 0.001283]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.8235763240468896, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 2.0597375305717724, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.8208121223010187, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 2.0569733288259013, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001282


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154008 in range [0.000000, 0.308016]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077005 in range [0.000000, 0.154009]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038503 in range [0.000000, 0.077006]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019252 in range [0.000000, 0.038504]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009626 in range [0.000000, 0.019253]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004004 in range [0.000000, 0.008008]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001470 in range [0.000000, 0.002941]...	no solution exists.
	Iteration #009: testing norm threshold 0.002205 in range [0.001470, 0.002941]...	no solution exists.
	Iteration #010: testing norm threshold 0.002573 in range [0.002205, 0.002941]...	no solution exists.
	Iteration #011: testing norm threshold 0.002757 in range [0.002573, 0.002941]...	no solution exists.
	Iteration #012: testing norm threshold 0.002849 in range [0.002757, 0.002941]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.8777226783631011, x5 : 2.299026196661865, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.1172007448088275, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 1.8733494903127774, x5 : 1.4177338033914566, x6 : 0, x7 : 0, x8 : 0, x9 : 2.1061501502990723, x10 : 0.325709159405762, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002849


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135879 in range [0.000000, 0.271757]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064702 in range [0.000000, 0.129404]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032351 in range [0.000000, 0.064703]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015905 in range [0.000000, 0.031809]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007215 in range [0.000000, 0.014430]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003608 in range [0.000000, 0.007216]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001805 in range [0.000000, 0.003609]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000700 in range [0.000000, 0.001400]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000351 in range [0.000000, 0.000701]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000176 in range [0.000000, 0.000352]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000088 in range [0.000000, 0.000177]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.3108935128927945, x5 : -0.12564635255794712, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.576906458705269, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 2.3096476097883247, x5 : -0.13906705379486084, x6 : 0, x7 : 0, x8 : 4, x9 : 2.593623327344582, x10 : 0.322581874459908, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000176


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.076379 in range [0.000000, 0.152757]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034358 in range [0.000000, 0.068716]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017179 in range [0.000000, 0.034359]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008590 in range [0.000000, 0.017180]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001297 in range [0.000000, 0.002594]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000419 in range [0.000000, 0.000839]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000202 in range [0.000000, 0.000404]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000102 in range [0.000000, 0.000203]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7296325371713971, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7288722919170809, x5 : -0.3503870646183426, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6937010253799809, x10 : -0.36261627606045016, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079761 in range [0.000000, 0.159522]...	solution exists & found.
	Iteration #003: testing norm threshold 0.035066 in range [0.000000, 0.070132]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013085 in range [0.000000, 0.026169]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006394 in range [0.000000, 0.012788]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002886 in range [0.000000, 0.005772]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000317 in range [0.000000, 0.000634]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000158 in range [0.000000, 0.000316]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000079 in range [0.000000, 0.000159]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7213023288150568, x5 : -0.3314303696504035, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7213109683825976, x5 : -0.3314390092179442, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6697693693611576, x10 : -0.3084217174441657, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000158


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093737 in range [0.000000, 0.187474]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046676 in range [0.000000, 0.093352]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022283 in range [0.000000, 0.044566]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008400 in range [0.000000, 0.016800]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003860 in range [0.000000, 0.007720]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000993 in range [0.000000, 0.001985]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000497 in range [0.000000, 0.000994]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000249 in range [0.000000, 0.000498]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000110 in range [0.000000, 0.000220]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000055 in range [0.000000, 0.000111]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.2509061890490075, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.3747273409490208, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6802964059387819, x5 : -0.2463697205979608, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6542942821979523, x10 : -0.37472734094902077, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182923 in range [0.000000, 0.365846]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091273 in range [0.000000, 0.182546]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045637 in range [0.000000, 0.091274]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021861 in range [0.000000, 0.043721]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010931 in range [0.000000, 0.021862]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005182 in range [0.000000, 0.010363]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002591 in range [0.000000, 0.005183]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001296 in range [0.000000, 0.002592]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000649 in range [0.000000, 0.001297]...	no solution exists.
	Iteration #011: testing norm threshold 0.000973 in range [0.000649, 0.001297]...	no solution exists.
	Iteration #012: testing norm threshold 0.001135 in range [0.000973, 0.001297]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001054 in range [0.000973, 0.001136]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.7569346571961677, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.688436761655416, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.754046044626234, x5 : 0.4140701220647152, x6 : 0, x7 : 0, x8 : 0, x9 : 1.6855481490854822, x10 : 0.32422458392537196, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147465 in range [0.000000, 0.294930]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073072 in range [0.000000, 0.146143]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036241 in range [0.000000, 0.072482]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018118 in range [0.000000, 0.036236]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008860 in range [0.000000, 0.017719]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003059 in range [0.000000, 0.006118]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001129 in range [0.000000, 0.002258]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000565 in range [0.000000, 0.001130]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000251 in range [0.000000, 0.000502]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000109 in range [0.000000, 0.000218]...	no solution exists.
	Iteration #012: testing norm threshold 0.000163 in range [0.000109, 0.000218]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.6088445160044635, x5 : -0.4119545502517995, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6400828063488007, x5 : -0.411954552173569, x6 : 4, x7 : 6, x8 : 0, x9 : -0.528720965684923, x10 : -0.33053284691322193, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000217


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138422 in range [0.000000, 0.276843]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068834 in range [0.000000, 0.137668]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030774 in range [0.000000, 0.061547]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015366 in range [0.000000, 0.030733]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007438 in range [0.000000, 0.014876]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003719 in range [0.000000, 0.007439]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001498 in range [0.000000, 0.002995]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000729 in range [0.000000, 0.001458]...	no solution exists.
	Iteration #010: testing norm threshold 0.001093 in range [0.000729, 0.001458]...	no solution exists.
	Iteration #011: testing norm threshold 0.001276 in range [0.001093, 0.001458]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001185 in range [0.001093, 0.001277]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.17836017366969015, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2253349222350132, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.19311007577735975, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.07283639162778854, x10 : -0.1425341991726677, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001185


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105845 in range [0.000000, 0.211690]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052626 in range [0.000000, 0.105252]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023276 in range [0.000000, 0.046552]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008124 in range [0.000000, 0.016249]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002826 in range [0.000000, 0.005652]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000834 in range [0.000000, 0.001668]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000275 in range [0.000000, 0.000549]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000069 in range [0.000000, 0.000139]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : -0.7671184747749282, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 1, x4 : -0.7667824986371954, x5 : -0.42079661788347195, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6903282105843299, x10 : -0.3630067563970578, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120689 in range [0.000000, 0.241379]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055990 in range [0.000000, 0.111980]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027996 in range [0.000000, 0.055991]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013998 in range [0.000000, 0.027997]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006957 in range [0.000000, 0.013915]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003479 in range [0.000000, 0.006958]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001740 in range [0.000000, 0.003480]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000823 in range [0.000000, 0.001645]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000412 in range [0.000000, 0.000824]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000119 in range [0.000000, 0.000238]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000120]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.7156586126536363, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.8839517623366447, x10 : -0.17585210913996274, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.7156586050987244, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 4, x9 : 0.8839517472268209, x10 : -0.18984454507413875, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085823 in range [0.000000, 0.171646]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042912 in range [0.000000, 0.085824]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020469 in range [0.000000, 0.040938]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008512 in range [0.000000, 0.017023]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004256 in range [0.000000, 0.008513]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000768 in range [0.000000, 0.001536]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000385 in range [0.000000, 0.000769]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000193 in range [0.000000, 0.000386]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000064 in range [0.000000, 0.000127]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6130096201826336, x5 : -0.4030074190738666, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6115273750755257, x5 : -0.38808907738827186, x6 : 0, x7 : 5, x8 : 0, x9 : -0.624850189075864, x10 : -0.305907405428623, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140814 in range [0.000000, 0.281628]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067545 in range [0.000000, 0.135089]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029597 in range [0.000000, 0.059194]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014440 in range [0.000000, 0.028880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006363 in range [0.000000, 0.012726]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003182 in range [0.000000, 0.006364]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001592 in range [0.000000, 0.003183]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000436 in range [0.000000, 0.000871]...	no solution exists.
	Iteration #010: testing norm threshold 0.000653 in range [0.000436, 0.000871]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000517 in range [0.000436, 0.000598]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.4241013201817275, x5 : 2.442180295508792, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : 0.574534454906348, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : 0.4241013201817275, x5 : 2.5964703206036748, x6 : 2, x7 : 5, x8 : 0, x9 : 0.559063583612442, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000517


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112475 in range [0.000000, 0.224949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055628 in range [0.000000, 0.111256]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027815 in range [0.000000, 0.055629]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011102 in range [0.000000, 0.022204]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005271 in range [0.000000, 0.010542]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7650358974933624, x5 : -0.40622603718187333, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.353885040714587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124487 in range [0.000000, 0.248975]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061515 in range [0.000000, 0.123030]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030269 in range [0.000000, 0.060538]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013984 in range [0.000000, 0.027969]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006451 in range [0.000000, 0.012902]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003226 in range [0.000000, 0.006452]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000374 in range [0.000000, 0.000748]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000172 in range [0.000000, 0.000343]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000086 in range [0.000000, 0.000173]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6629908703206752, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.651936635315412, x5 : -0.3895867168903351, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6182908266186652, x10 : -0.17649355948548515, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.084531 in range [0.000000, 0.169063]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042167 in range [0.000000, 0.084334]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021084 in range [0.000000, 0.042168]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009130 in range [0.000000, 0.018261]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002670 in range [0.000000, 0.005341]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001336 in range [0.000000, 0.002671]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000644 in range [0.000000, 0.001288]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000319 in range [0.000000, 0.000639]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7650358974933624, x5 : -0.42090168595314026, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6821842232746635, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079190 in range [0.000000, 0.158380]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037669 in range [0.000000, 0.075337]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018835 in range [0.000000, 0.037670]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008923 in range [0.000000, 0.017846]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004419 in range [0.000000, 0.008837]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001285 in range [0.000000, 0.002569]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000286 in range [0.000000, 0.000573]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000144 in range [0.000000, 0.000287]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000072 in range [0.000000, 0.000145]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7483532932163474, x5 : -0.39406028389930725, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6609024312855002, x10 : -0.33055505698407417, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000144


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.065964 in range [0.000000, 0.131929]...	solution exists & found.
	Iteration #003: testing norm threshold 0.032197 in range [0.000000, 0.064394]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016099 in range [0.000000, 0.032198]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007273 in range [0.000000, 0.014547]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002711 in range [0.000000, 0.005422]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001356 in range [0.000000, 0.002712]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000679 in range [0.000000, 0.001357]...	no solution exists.
	Iteration #009: testing norm threshold 0.001018 in range [0.000679, 0.001357]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000835 in range [0.000679, 0.000992]...	no solution exists.
	Iteration #011: testing norm threshold 0.000913 in range [0.000835, 0.000992]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5463679533319117, x5 : 0.062243402178643485, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : 0.8406212978841117, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4880564957857132, x5 : -0.08330171927809715, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5283172428607941, x10 : 0.8385387562991431, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000991


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126468 in range [0.000000, 0.252935]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062505 in range [0.000000, 0.125011]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031253 in range [0.000000, 0.062506]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014859 in range [0.000000, 0.029718]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007346 in range [0.000000, 0.014693]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003668 in range [0.000000, 0.007335]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001794 in range [0.000000, 0.003589]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000534 in range [0.000000, 0.001069]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000268 in range [0.000000, 0.000535]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000269]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000068 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3532945491528354, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.499390251673276, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.35225550392285404, x5 : -0.3169706293191214, x6 : 0, x7 : 0, x8 : 4, x9 : 0.4983512064432946, x10 : -0.3626396634425421, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102059 in range [0.000000, 0.204118]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051030 in range [0.000000, 0.102060]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024250 in range [0.000000, 0.048501]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012075 in range [0.000000, 0.024150]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006038 in range [0.000000, 0.012076]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000319 in range [0.000000, 0.000637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000160 in range [0.000000, 0.000320]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000080 in range [0.000000, 0.000161]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7129721204587166, x5 : -0.3224832384724706, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7130504793788781, x5 : -0.3228771557580846, x6 : 1, x7 : 5, x8 : 0, x9 : -0.616643807618077, x10 : -0.30835728343279223, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000160


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087380 in range [0.000000, 0.174760]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043624 in range [0.000000, 0.087248]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021813 in range [0.000000, 0.043625]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008797 in range [0.000000, 0.017595]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002096 in range [0.000000, 0.004192]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001037 in range [0.000000, 0.002073]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000352 in range [0.000000, 0.000703]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000176 in range [0.000000, 0.000353]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000089 in range [0.000000, 0.000177]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7688235506439549, x5 : -0.42499779314044545, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6914889082336766, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182712 in range [0.000000, 0.365425]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091130 in range [0.000000, 0.182261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044734 in range [0.000000, 0.089468]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022198 in range [0.000000, 0.044395]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010965 in range [0.000000, 0.021930]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005483 in range [0.000000, 0.010966]...	no solution exists.
	Iteration #008: testing norm threshold 0.008225 in range [0.005483, 0.010966]...	no solution exists.
	Iteration #009: testing norm threshold 0.009595 in range [0.008225, 0.010966]...	no solution exists.
	Iteration #010: testing norm threshold 0.010281 in range [0.009595, 0.010966]...	solution exists & found.
	Iteration #011: testing norm threshold 0.009939 in range [0.009595, 0.010282]...	solution exists & found.
	Iteration #012: testing norm threshold 0.009767 in range [0.009595, 0.009940]...	solution exists & found.
	Iteration #013: testing norm threshold 0.009682 in range [0.009595, 0.009768]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4907429870324495, x5 : 1.9858766054342143, x6 : 2.0, x7 : 0.0, x8 : 3.0, x9 : 0.030844043278826675, x10 : 5.591529613322719, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.4872013865261974, x5 : -0.40748098492622375, x6 : 2, x7 : 0, x8 : 3, x9 : -0.6167221665382385, x10 : 5.591529613322719, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.009682


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145128 in range [0.000000, 0.290257]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070532 in range [0.000000, 0.141064]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035266 in range [0.000000, 0.070533]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013703 in range [0.000000, 0.027407]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006852 in range [0.000000, 0.013704]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002497 in range [0.000000, 0.004993]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001162 in range [0.000000, 0.002323]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000570 in range [0.000000, 0.001141]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000286 in range [0.000000, 0.000571]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000143 in range [0.000000, 0.000287]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000072 in range [0.000000, 0.000144]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3964242029177871, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.34487697288653363, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4047544151544571, x5 : -0.32960948868546175, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3485187348164172, x10 : -0.37472734094902077, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175744 in range [0.000000, 0.351487]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087470 in range [0.000000, 0.174940]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043735 in range [0.000000, 0.087471]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021784 in range [0.000000, 0.043568]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010676 in range [0.000000, 0.021353]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001702 in range [0.000000, 0.003404]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000851 in range [0.000000, 0.001703]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000426 in range [0.000000, 0.000852]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000214 in range [0.000000, 0.000427]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000106 in range [0.000000, 0.000211]...	no solution exists.
	Iteration #012: testing norm threshold 0.000158 in range [0.000106, 0.000211]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.14235284804940948, x5 : -0.376166025540068, x6 : 0.0, x7 : 3.0, x8 : 1.0, x9 : -0.026619170958228428, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.13942161453226984, x5 : -0.32248324155807495, x6 : 0, x7 : 3, x8 : 1, x9 : -0.027467856635480837, x10 : -0.24214385307631545, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000158


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.082419 in range [0.000000, 0.164838]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040818 in range [0.000000, 0.081636]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020395 in range [0.000000, 0.040790]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008079 in range [0.000000, 0.016157]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004005 in range [0.000000, 0.008010]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002003 in range [0.000000, 0.004006]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001002 in range [0.000000, 0.002004]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000483 in range [0.000000, 0.000965]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000242 in range [0.000000, 0.000484]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000121 in range [0.000000, 0.000241]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4464054530558286, x5 : -0.4119545502517995, x6 : 0.0, x7 : 2.0, x8 : 2.0, x9 : -0.3492972201355379, x10 : -0.3747273409490208, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4464054530558286, x5 : -0.4066160456010666, x6 : 0, x7 : 2, x8 : 2, x9 : -0.350162159460695, x10 : -0.36281376934736637, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153823 in range [0.000000, 0.307645]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073897 in range [0.000000, 0.147794]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036949 in range [0.000000, 0.073898]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018400 in range [0.000000, 0.036799]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008330 in range [0.000000, 0.016659]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000546 in range [0.000000, 0.001092]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000273 in range [0.000000, 0.000547]...	no solution exists.
	Iteration #009: testing norm threshold 0.000410 in range [0.000273, 0.000547]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000333 in range [0.000273, 0.000393]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7004768079242063, x5 : -0.2598533202269404, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6742637287480158, x5 : -0.3269568085670471, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6520841419696808, x10 : 0.02302312266909531, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000333


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113508 in range [0.000000, 0.227015]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055810 in range [0.000000, 0.111620]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027817 in range [0.000000, 0.055634]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012141 in range [0.000000, 0.024282]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006071 in range [0.000000, 0.012142]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002961 in range [0.000000, 0.005923]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001233 in range [0.000000, 0.002466]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000313 in range [0.000000, 0.000626]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000157 in range [0.000000, 0.000314]...	no solution exists.
	Iteration #011: testing norm threshold 0.000235 in range [0.000157, 0.000314]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7525406181812286, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.18026713662157384, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000235


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101285 in range [0.000000, 0.202569]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050469 in range [0.000000, 0.100937]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024991 in range [0.000000, 0.049983]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012496 in range [0.000000, 0.024992]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005672 in range [0.000000, 0.011343]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002460 in range [0.000000, 0.004920]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001230 in range [0.000000, 0.002461]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000616 in range [0.000000, 0.001231]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000308 in range [0.000000, 0.000617]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000265]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.37976378620510665, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3271959838905167, x10 : -0.13165761318239427, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.3818463385105133, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3300638440973881, x10 : -0.13022368307895857, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134739 in range [0.000000, 0.269477]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067192 in range [0.000000, 0.134383]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031595 in range [0.000000, 0.063189]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015509 in range [0.000000, 0.031018]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007150 in range [0.000000, 0.014299]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002392 in range [0.000000, 0.004785]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001197 in range [0.000000, 0.002393]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000599 in range [0.000000, 0.001198]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000109 in range [0.000000, 0.000218]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6713210786770154, x5 : 0.6706483222780798, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6817338168621063, x5 : 0.6692270360981306, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5894118577617159, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000109


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120475 in range [0.000000, 0.240950]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060201 in range [0.000000, 0.120403]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024082 in range [0.000000, 0.048163]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011939 in range [0.000000, 0.023879]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005337 in range [0.000000, 0.010674]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002669 in range [0.000000, 0.005338]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001335 in range [0.000000, 0.002670]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000668 in range [0.000000, 0.001336]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000334 in range [0.000000, 0.000669]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000065 in range [0.000000, 0.000130]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7723248511954899, x5 : -0.40613890604702063, x6 : 0, x7 : 6, x8 : 0, x9 : -0.690825095812952, x10 : -0.3536713652126281, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089455 in range [0.000000, 0.178909]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044728 in range [0.000000, 0.089456]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019026 in range [0.000000, 0.038053]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009514 in range [0.000000, 0.019027]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002938 in range [0.000000, 0.005875]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001469 in range [0.000000, 0.002939]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000735 in range [0.000000, 0.001470]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000368 in range [0.000000, 0.000736]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000185 in range [0.000000, 0.000369]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7754486831312685, x5 : -0.39844427968634727, x6 : 0, x7 : 6, x8 : 0, x9 : -0.696197047487632, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.081796 in range [0.000000, 0.163591]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040898 in range [0.000000, 0.081797]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020450 in range [0.000000, 0.040899]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010225 in range [0.000000, 0.020451]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005113 in range [0.000000, 0.010226]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002231 in range [0.000000, 0.004463]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001116 in range [0.000000, 0.002232]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000358 in range [0.000000, 0.000715]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000179 in range [0.000000, 0.000359]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.07154607702051738, x5 : -0.3851131567180008, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.04852503227484363, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.07219552698867376, x5 : -0.4119545519351959, x6 : 0, x7 : 4, x8 : 0, x9 : 0.05138460508864836, x10 : -0.264890551023256, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164071 in range [0.000000, 0.328142]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081983 in range [0.000000, 0.163965]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040259 in range [0.000000, 0.080517]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019780 in range [0.000000, 0.039559]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008036 in range [0.000000, 0.016072]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004018 in range [0.000000, 0.008037]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000767 in range [0.000000, 0.001535]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000384 in range [0.000000, 0.000768]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000175 in range [0.000000, 0.000349]...	no solution exists.
	Iteration #011: testing norm threshold 0.000262 in range [0.000175, 0.000349]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6171747243608038, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5305273573447117, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6400828063488007, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5680994376971412, x10 : -0.3526300936937332, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000348


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093263 in range [0.000000, 0.186526]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046408 in range [0.000000, 0.092815]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021964 in range [0.000000, 0.043929]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010095 in range [0.000000, 0.020189]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004088 in range [0.000000, 0.008175]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000428 in range [0.000000, 0.000856]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000167 in range [0.000000, 0.000334]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000084 in range [0.000000, 0.000168]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7535656510215171, x5 : -0.38063958287239075, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.31055061945046986, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119920 in range [0.000000, 0.239840]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059761 in range [0.000000, 0.119522]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029859 in range [0.000000, 0.059718]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014930 in range [0.000000, 0.029860]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006364 in range [0.000000, 0.012729]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000162 in range [0.000000, 0.000324]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000081 in range [0.000000, 0.000163]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.0905179886889476, x5 : -0.3314303696504035, x6 : 0.0, x7 : 2.0, x8 : 1.0, x9 : 1.2817740147470262, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.0885527709120346, x5 : -0.33268274101465295, x6 : 0, x7 : 2, x8 : 1, x9 : 1.2773329584545667, x10 : -0.14145386636911464, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139924 in range [0.000000, 0.279848]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069963 in range [0.000000, 0.139925]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034873 in range [0.000000, 0.069746]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017437 in range [0.000000, 0.034874]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006092 in range [0.000000, 0.012183]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002911 in range [0.000000, 0.005822]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000856 in range [0.000000, 0.001712]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000429 in range [0.000000, 0.000857]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000158 in range [0.000000, 0.000316]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000159]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 1.0, x4 : -0.7754486831312685, x5 : -0.3940602878959337, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 1, x4 : -0.7635390751793053, x5 : -0.3985338509082794, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092033 in range [0.000000, 0.184066]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046017 in range [0.000000, 0.092034]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022336 in range [0.000000, 0.044671]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008747 in range [0.000000, 0.017494]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001456 in range [0.000000, 0.002912]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000728 in range [0.000000, 0.001457]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000306 in range [0.000000, 0.000611]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000153 in range [0.000000, 0.000307]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000071 in range [0.000000, 0.000143]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7712835789530984, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 1.0, x12 : 28.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7692010050141287, x5 : -0.4074809794747305, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.37472734094902077, x11 : 1, x12 : 28, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.237465 in range [0.000000, 0.474929]...	solution exists & found.
	Iteration #003: testing norm threshold 0.118733 in range [0.000000, 0.237466]...	solution exists & found.
	Iteration #004: testing norm threshold 0.059367 in range [0.000000, 0.118734]...	solution exists & found.
	Iteration #005: testing norm threshold 0.029684 in range [0.000000, 0.059368]...	solution exists & found.
	Iteration #006: testing norm threshold 0.014842 in range [0.000000, 0.029685]...	solution exists & found.
	Iteration #007: testing norm threshold 0.007267 in range [0.000000, 0.014535]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003445 in range [0.000000, 0.006891]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001723 in range [0.000000, 0.003446]...	no solution exists.
	Iteration #010: testing norm threshold 0.002585 in range [0.001723, 0.003446]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002154 in range [0.001723, 0.002586]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001896 in range [0.001723, 0.002069]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001790 in range [0.001723, 0.001857]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.4820377814369394, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.6972772561534246, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.4814852443179483, x5 : -0.26842462001676787, x6 : 0, x7 : 0, x8 : 1, x9 : 1.6956196447964509, x10 : 0.02357565928387767, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001856


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.059761 in range [0.000000, 0.119521]...	solution exists & found.
	Iteration #003: testing norm threshold 0.029881 in range [0.000000, 0.059762]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012144 in range [0.000000, 0.024288]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006073 in range [0.000000, 0.012145]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002180 in range [0.000000, 0.004361]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001091 in range [0.000000, 0.002181]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000328 in range [0.000000, 0.000656]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000165 in range [0.000000, 0.000329]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000083 in range [0.000000, 0.000166]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.3880939945614469, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.32277573664151243, x10 : -0.2642411010550996, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.3882613378785659, x5 : -0.34468373328581675, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3229430799586315, x10 : -0.26440844437221867, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110551 in range [0.000000, 0.221102]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054947 in range [0.000000, 0.109893]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027284 in range [0.000000, 0.054568]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013617 in range [0.000000, 0.027234]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006523 in range [0.000000, 0.013046]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002704 in range [0.000000, 0.005408]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000934 in range [0.000000, 0.001869]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000096 in range [0.000000, 0.000193]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.2423153483254925, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 1.0, x9 : -0.13270510493433016, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.2342506589935718, x5 : -0.38063958287239075, x6 : 0, x7 : 4, x8 : 1, x9 : -0.1386690044701575, x10 : -0.26605813201676237, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164027 in range [0.000000, 0.328055]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082014 in range [0.000000, 0.164028]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041008 in range [0.000000, 0.082015]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019170 in range [0.000000, 0.038339]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008147 in range [0.000000, 0.016295]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001389 in range [0.000000, 0.002779]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000567 in range [0.000000, 0.001134]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000284 in range [0.000000, 0.000568]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000142 in range [0.000000, 0.000285]...	no solution exists.
	Iteration #011: testing norm threshold 0.000214 in range [0.000142, 0.000285]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5213773282628908, x5 : -0.15248774609174578, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.2863383490338839, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.513110679606007, x5 : -0.21064409613609314, x6 : 0, x7 : 2, x8 : 0, x9 : -0.5281260860892946, x10 : -0.2883573250274711, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000214


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.195847 in range [0.000000, 0.391693]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097924 in range [0.000000, 0.195848]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048847 in range [0.000000, 0.097694]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022553 in range [0.000000, 0.045105]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010985 in range [0.000000, 0.021969]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005167 in range [0.000000, 0.010334]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001971 in range [0.000000, 0.003943]...	no solution exists.
	Iteration #009: testing norm threshold 0.002957 in range [0.001971, 0.003943]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002465 in range [0.001971, 0.002958]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002087 in range [0.001971, 0.002202]...	no solution exists.
	Iteration #012: testing norm threshold 0.002145 in range [0.002087, 0.002202]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.1151336165187984, x5 : -0.16143487726967867, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.236547420531942, x10 : 0.28819009841450605, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 2.1151336165187984, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 2.244455109965459, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002145


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.066472 in range [0.000000, 0.132945]...	solution exists & found.
	Iteration #003: testing norm threshold 0.032311 in range [0.000000, 0.064623]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016156 in range [0.000000, 0.032312]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008050 in range [0.000000, 0.016101]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003125 in range [0.000000, 0.006249]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001487 in range [0.000000, 0.002974]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000744 in range [0.000000, 0.001488]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000372 in range [0.000000, 0.000745]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000187 in range [0.000000, 0.000373]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.758788266418588, x5 : -0.4253752529621124, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6762929618583191, x10 : -0.37472734094902077, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097100 in range [0.000000, 0.194200]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048551 in range [0.000000, 0.097101]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024020 in range [0.000000, 0.048041]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012011 in range [0.000000, 0.024021]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006006 in range [0.000000, 0.012012]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003003 in range [0.000000, 0.006006]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001310 in range [0.000000, 0.002620]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000655 in range [0.000000, 0.001311]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000328 in range [0.000000, 0.000656]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000135 in range [0.000000, 0.000271]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4863248848546693, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5172122120857239, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 5, x9 : -0.4885350167751312, x10 : -0.07821428800020058, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092459 in range [0.000000, 0.184917]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044774 in range [0.000000, 0.089549]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021749 in range [0.000000, 0.043497]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010875 in range [0.000000, 0.021750]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005438 in range [0.000000, 0.010876]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002719 in range [0.000000, 0.005439]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000635 in range [0.000000, 0.001271]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000318 in range [0.000000, 0.000636]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000160 in range [0.000000, 0.000319]...	no solution exists.
	Iteration #011: testing norm threshold 0.000239 in range [0.000160, 0.000319]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6963117037460361, x5 : -0.24195905787107466, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7150546610355377, x5 : -0.24643263220787048, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6625944779845082, x10 : -0.18604686399158854, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000239


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131568 in range [0.000000, 0.263136]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064926 in range [0.000000, 0.129853]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032079 in range [0.000000, 0.064158]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015597 in range [0.000000, 0.031193]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006970 in range [0.000000, 0.013941]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002670 in range [0.000000, 0.005341]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001105 in range [0.000000, 0.002210]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000553 in range [0.000000, 0.001106]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000277 in range [0.000000, 0.000554]...	no solution exists.
	Iteration #011: testing norm threshold 0.000415 in range [0.000277, 0.000554]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000332 in range [0.000277, 0.000387]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.009333647244819604, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.0040002287337841756, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000386


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167984 in range [0.000000, 0.335968]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083993 in range [0.000000, 0.167985]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041997 in range [0.000000, 0.083994]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020933 in range [0.000000, 0.041866]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008204 in range [0.000000, 0.016408]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004103 in range [0.000000, 0.008205]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001977 in range [0.000000, 0.003953]...	no solution exists.
	Iteration #009: testing norm threshold 0.002965 in range [0.001977, 0.003953]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002308 in range [0.001977, 0.002639]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002143 in range [0.001977, 0.002309]...	no solution exists.
	Iteration #012: testing norm threshold 0.002226 in range [0.002143, 0.002309]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.8981732020147817, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 3.2001613208148663, x10 : 0.4428708342659957, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 2.895713327888283, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 3.087445020675659, x10 : 0.21084972470998764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002226


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116193 in range [0.000000, 0.232385]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044488 in range [0.000000, 0.088975]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019634 in range [0.000000, 0.039269]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009352 in range [0.000000, 0.018704]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004677 in range [0.000000, 0.009353]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002339 in range [0.000000, 0.004678]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001158 in range [0.000000, 0.002316]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000565 in range [0.000000, 0.001130]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	no solution exists.
	Iteration #011: testing norm threshold 0.000422 in range [0.000281, 0.000562]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000352 in range [0.000281, 0.000423]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.2881314942853639, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3050947476454955, x10 : -0.04326862126725737, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.2881314942853639, x5 : -0.4164281189441681, x6 : 0, x7 : 6, x8 : 0, x9 : -0.31112872414718706, x10 : -0.04025163301641157, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000352


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139116 in range [0.000000, 0.278231]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069558 in range [0.000000, 0.139117]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034778 in range [0.000000, 0.069556]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015378 in range [0.000000, 0.030756]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006414 in range [0.000000, 0.012827]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001319 in range [0.000000, 0.002638]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000660 in range [0.000000, 0.001320]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000324 in range [0.000000, 0.000649]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	no solution exists.
	Iteration #011: testing norm threshold 0.000153 in range [0.000102, 0.000204]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7650358974933624, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6896562583088642, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000117


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120314 in range [0.000000, 0.240627]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059765 in range [0.000000, 0.119529]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029592 in range [0.000000, 0.059184]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014379 in range [0.000000, 0.028759]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007190 in range [0.000000, 0.014380]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002175 in range [0.000000, 0.004350]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001088 in range [0.000000, 0.002176]...	no solution exists.
	Iteration #009: testing norm threshold 0.001632 in range [0.001088, 0.002176]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001361 in range [0.001088, 0.001633]...	no solution exists.
	Iteration #011: testing norm threshold 0.001497 in range [0.001361, 0.001633]...	no solution exists.
	Iteration #012: testing norm threshold 0.001565 in range [0.001497, 0.001633]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.2699924655894329, x5 : 1.9142995560107512, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.2709665635730821, x5 : 1.5072051286697388, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6476639211177826, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001632


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153759 in range [0.000000, 0.307518]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075925 in range [0.000000, 0.151849]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037842 in range [0.000000, 0.075685]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018529 in range [0.000000, 0.037058]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009265 in range [0.000000, 0.018530]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004198 in range [0.000000, 0.008396]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002100 in range [0.000000, 0.004199]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000264 in range [0.000000, 0.000529]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000133 in range [0.000000, 0.000265]...	no solution exists.
	Iteration #011: testing norm threshold 0.000199 in range [0.000133, 0.000265]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7337976413495673, x5 : -0.3403775008283364, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7400452792644501, x5 : -0.29709510629680724, x6 : 2, x7 : 6, x8 : 0, x9 : -0.680005596332818, x10 : -0.33053283393383026, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000199


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149919 in range [0.000000, 0.299837]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074960 in range [0.000000, 0.149920]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037430 in range [0.000000, 0.074861]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018696 in range [0.000000, 0.037393]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008566 in range [0.000000, 0.017132]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003612 in range [0.000000, 0.007223]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001806 in range [0.000000, 0.003613]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000689 in range [0.000000, 0.001379]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000345 in range [0.000000, 0.000690]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000173 in range [0.000000, 0.000346]...	no solution exists.
	Iteration #012: testing norm threshold 0.000260 in range [0.000173, 0.000346]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5921840992917831, x5 : 2.3437618525515296, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5921840992917831, x5 : 2.391587775293876, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6246292478403553, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000345


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103975 in range [0.000000, 0.207949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051988 in range [0.000000, 0.103976]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025994 in range [0.000000, 0.051989]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008423 in range [0.000000, 0.016846]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002558 in range [0.000000, 0.005117]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001280 in range [0.000000, 0.002559]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000640 in range [0.000000, 0.001281]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000126 in range [0.000000, 0.000253]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000064 in range [0.000000, 0.000127]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6874073402825917, x5 : -0.26432688534259796, x6 : 4, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : -0.3132608416432161, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000126


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166514 in range [0.000000, 0.333028]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081076 in range [0.000000, 0.162152]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040536 in range [0.000000, 0.081073]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020255 in range [0.000000, 0.040510]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009212 in range [0.000000, 0.018424]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003249 in range [0.000000, 0.006498]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001211 in range [0.000000, 0.002422]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000473 in range [0.000000, 0.000947]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000161 in range [0.000000, 0.000323]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000081 in range [0.000000, 0.000162]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6963117037460361, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7004768252372742, x5 : -0.4073348796650012, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6145120555940409, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131801 in range [0.000000, 0.263603]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065286 in range [0.000000, 0.130572]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030134 in range [0.000000, 0.060268]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015068 in range [0.000000, 0.030135]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007521 in range [0.000000, 0.015041]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002967 in range [0.000000, 0.005935]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001484 in range [0.000000, 0.002968]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000743 in range [0.000000, 0.001485]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000372 in range [0.000000, 0.000744]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000186 in range [0.000000, 0.000373]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000094 in range [0.000000, 0.000187]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3631033694924261, x5 : -0.376166025540068, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.2608922751554531, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3656992269952112, x5 : -0.42277939545932736, x6 : 0, x7 : 2, x8 : 0, x9 : -0.26348813265823817, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000186


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139390 in range [0.000000, 0.278780]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069096 in range [0.000000, 0.138193]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032461 in range [0.000000, 0.064922]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016231 in range [0.000000, 0.032462]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008116 in range [0.000000, 0.016232]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004059 in range [0.000000, 0.008117]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002030 in range [0.000000, 0.004060]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001015 in range [0.000000, 0.002031]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000493 in range [0.000000, 0.000986]...	no solution exists.
	Iteration #011: testing norm threshold 0.000739 in range [0.000493, 0.000986]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000613 in range [0.000493, 0.000733]...	no solution exists.
	Iteration #013: testing norm threshold 0.000673 in range [0.000613, 0.000733]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : 2.3067284087146245, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.4708205247291666, x10 : 0.6417460660750536, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 2, x4 : 2.3067284087146245, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 0, x9 : 2.4726573739363795, x10 : 0.642498203028937, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000732


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112532 in range [0.000000, 0.225064]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052058 in range [0.000000, 0.104117]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025790 in range [0.000000, 0.051580]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012440 in range [0.000000, 0.024879]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006219 in range [0.000000, 0.012438]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003093 in range [0.000000, 0.006187]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001547 in range [0.000000, 0.003094]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000774 in range [0.000000, 0.001548]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000388 in range [0.000000, 0.000775]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000068 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6463304536079947, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.5747298298347541, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6485405640339438, x5 : -0.39843207456405977, x6 : 0, x7 : 0, x8 : 6, x9 : -0.5791500806808472, x10 : -0.3084355970126681, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000048


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134174 in range [0.000000, 0.268347]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067087 in range [0.000000, 0.134175]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033544 in range [0.000000, 0.067088]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016401 in range [0.000000, 0.032801]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008201 in range [0.000000, 0.016402]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002818 in range [0.000000, 0.005636]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001341 in range [0.000000, 0.002681]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000599 in range [0.000000, 0.001198]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000151 in range [0.000000, 0.000301]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7650358974933624, x5 : -0.4138879277992528, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6893261769104283, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000151


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157612 in range [0.000000, 0.315225]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077702 in range [0.000000, 0.155405]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038584 in range [0.000000, 0.077169]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019053 in range [0.000000, 0.038106]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007202 in range [0.000000, 0.014404]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003193 in range [0.000000, 0.006386]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001358 in range [0.000000, 0.002716]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000503 in range [0.000000, 0.001005]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000252 in range [0.000000, 0.000504]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000126 in range [0.000000, 0.000253]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6088445160044635, x5 : -0.215117664337276, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.0653658692460416, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6120961369500606, x5 : -0.23748549818992615, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.06836192041586935, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131588 in range [0.000000, 0.263176]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064805 in range [0.000000, 0.129611]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032241 in range [0.000000, 0.064482]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012772 in range [0.000000, 0.025544]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006386 in range [0.000000, 0.012773]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002665 in range [0.000000, 0.005330]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000723 in range [0.000000, 0.001446]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000362 in range [0.000000, 0.000724]...	no solution exists.
	Iteration #010: testing norm threshold 0.000543 in range [0.000362, 0.000724]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000453 in range [0.000362, 0.000544]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.4990731953887898, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6231571746453947, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.5003639272828247, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6205757108573247, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000453


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.195031 in range [0.000000, 0.390063]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097507 in range [0.000000, 0.195014]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048754 in range [0.000000, 0.097508]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024255 in range [0.000000, 0.048511]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012128 in range [0.000000, 0.024256]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005749 in range [0.000000, 0.011498]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002048 in range [0.000000, 0.004096]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001025 in range [0.000000, 0.002049]...	no solution exists.
	Iteration #010: testing norm threshold 0.001537 in range [0.001025, 0.002049]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001281 in range [0.001025, 0.001538]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001153 in range [0.001025, 0.001282]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001090 in range [0.001025, 0.001154]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.17344507501318, x5 : -0.0003865160668867154, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.431038299488129, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 2.1710105718125785, x5 : -0.07643713057041168, x6 : 0, x7 : 0, x8 : 6, x9 : 2.594811927440714, x10 : 0.3237704745560398, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001153


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169175 in range [0.000000, 0.338350]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083603 in range [0.000000, 0.167205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041802 in range [0.000000, 0.083604]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020882 in range [0.000000, 0.041764]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010441 in range [0.000000, 0.020883]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005221 in range [0.000000, 0.010442]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002611 in range [0.000000, 0.005222]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000955 in range [0.000000, 0.001911]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000478 in range [0.000000, 0.000956]...	no solution exists.
	Iteration #011: testing norm threshold 0.000717 in range [0.000478, 0.000956]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000598 in range [0.000478, 0.000718]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000538 in range [0.000478, 0.000598]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.311268510131964, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.5160471189442508, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.3104397484941104, x5 : -0.2611315202225392, x6 : 0, x7 : 0, x8 : 3, x9 : 1.5136273394174127, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000597


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.202541 in range [0.000000, 0.405082]...	solution exists & found.
	Iteration #003: testing norm threshold 0.101271 in range [0.000000, 0.202542]...	solution exists & found.
	Iteration #004: testing norm threshold 0.050636 in range [0.000000, 0.101272]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024885 in range [0.000000, 0.049771]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012443 in range [0.000000, 0.024886]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006166 in range [0.000000, 0.012331]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002821 in range [0.000000, 0.005642]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000829 in range [0.000000, 0.001658]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000415 in range [0.000000, 0.000830]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000208 in range [0.000000, 0.000416]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000105 in range [0.000000, 0.000209]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.07423256921543701, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.203233685989992, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.0734214137575681, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 1, x9 : 0.20242253053212309, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000105


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105055 in range [0.000000, 0.210109]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051499 in range [0.000000, 0.102999]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025014 in range [0.000000, 0.050028]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012490 in range [0.000000, 0.024981]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006200 in range [0.000000, 0.012400]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003101 in range [0.000000, 0.006201]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001549 in range [0.000000, 0.003099]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000775 in range [0.000000, 0.001550]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000388 in range [0.000000, 0.000776]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000195 in range [0.000000, 0.000389]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.25064555668183275, x5 : -0.3672188943621351, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.1503860939303471, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.2589757665991783, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 0, x9 : -0.1514544471036324, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000195


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104328 in range [0.000000, 0.208656]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050118 in range [0.000000, 0.100236]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023067 in range [0.000000, 0.046133]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009219 in range [0.000000, 0.018438]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004114 in range [0.000000, 0.008228]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002058 in range [0.000000, 0.004115]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000666 in range [0.000000, 0.001333]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000334 in range [0.000000, 0.000667]...	no solution exists.
	Iteration #010: testing norm threshold 0.000501 in range [0.000334, 0.000667]...	no solution exists.
	Iteration #011: testing norm threshold 0.000584 in range [0.000501, 0.000667]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 1.0, x4 : -0.392259098739617, x5 : -0.3851131567180008, x6 : 3.0, x7 : 5.0, x8 : 1.0, x9 : -0.29183400589848274, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 1, x4 : -0.39366797004339, x5 : -0.4119545519351959, x6 : 3, x7 : 5, x8 : 1, x9 : -0.29112957024659625, x10 : -0.22968636076571936, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000584


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086510 in range [0.000000, 0.173020]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043236 in range [0.000000, 0.086471]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021436 in range [0.000000, 0.042872]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008401 in range [0.000000, 0.016802]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003551 in range [0.000000, 0.007101]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001776 in range [0.000000, 0.003552]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000865 in range [0.000000, 0.001729]...	no solution exists.
	Iteration #009: testing norm threshold 0.001297 in range [0.000865, 0.001729]...	no solution exists.
	Iteration #010: testing norm threshold 0.001513 in range [0.001297, 0.001729]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001406 in range [0.001297, 0.001514]...	no solution exists.
	Iteration #012: testing norm threshold 0.001460 in range [0.001406, 0.001514]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3464429527797456, x5 : 0.4917056987194221, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : 0.26609285043572184, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3252493387691141, x5 : 0.3217101991176605, x6 : 2, x7 : 5, x8 : 0, x9 : -0.5902006924152374, x10 : 0.5316279285915732, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001513


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167833 in range [0.000000, 0.335666]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083726 in range [0.000000, 0.167452]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041859 in range [0.000000, 0.083719]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020930 in range [0.000000, 0.041860]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010466 in range [0.000000, 0.020931]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005233 in range [0.000000, 0.010467]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001622 in range [0.000000, 0.003245]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000812 in range [0.000000, 0.001623]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	no solution exists.
	Iteration #011: testing norm threshold 0.000245 in range [0.000163, 0.000326]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.540724237170491, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6762001416334456, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.540688303369287, x5 : -0.31355254839474533, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6760985352690309, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092260 in range [0.000000, 0.184520]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046130 in range [0.000000, 0.092261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019355 in range [0.000000, 0.038709]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009645 in range [0.000000, 0.019289]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001969 in range [0.000000, 0.003938]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000809 in range [0.000000, 0.001618]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000405 in range [0.000000, 0.000810]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000203 in range [0.000000, 0.000406]...	no solution exists.
	Iteration #010: testing norm threshold 0.000304 in range [0.000203, 0.000406]...	no solution exists.
	Iteration #011: testing norm threshold 0.000355 in range [0.000304, 0.000406]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3802389508785675, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.44104596672852453, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3800195138132498, x10 : -0.04507575802855992, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000405


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141378 in range [0.000000, 0.282755]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070642 in range [0.000000, 0.141284]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035303 in range [0.000000, 0.070606]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013593 in range [0.000000, 0.027185]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006797 in range [0.000000, 0.013594]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003229 in range [0.000000, 0.006458]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001430 in range [0.000000, 0.002861]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000092 in range [0.000000, 0.000185]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5047169115502104, x5 : -0.3851131567180008, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.4111806816215972, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5037091795667971, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : -0.4153228709365892, x10 : -0.26621265683494066, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157171 in range [0.000000, 0.314341]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070226 in range [0.000000, 0.140453]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035114 in range [0.000000, 0.070227]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017060 in range [0.000000, 0.034121]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008531 in range [0.000000, 0.017061]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004050 in range [0.000000, 0.008100]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002022 in range [0.000000, 0.004043]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001011 in range [0.000000, 0.002023]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000506 in range [0.000000, 0.001012]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000254 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	no solution exists.
	Iteration #013: testing norm threshold 0.000179 in range [0.000120, 0.000239]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.25064555668183275, x5 : -0.4298488126076653, x6 : 0.0, x7 : 5.0, x8 : 1.0, x9 : -0.14154559943233866, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.23741558970788487, x5 : -0.40674632819274437, x6 : 0, x7 : 5, x8 : 1, x9 : -0.14228025616581808, x10 : -0.3629440519390441, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000179


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118313 in range [0.000000, 0.236626]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057062 in range [0.000000, 0.114124]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028531 in range [0.000000, 0.057063]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013565 in range [0.000000, 0.027130]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006783 in range [0.000000, 0.013566]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003279 in range [0.000000, 0.006558]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001204 in range [0.000000, 0.002408]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000567 in range [0.000000, 0.001133]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.4157711118253873, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.5082307461712845, x10 : -0.08746311722482583, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.41353433033701226, x5 : -0.2084073146477181, x6 : 0, x7 : 0, x8 : 6, x9 : 0.5059939646829095, x10 : -0.09851174056529999, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129818 in range [0.000000, 0.259636]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064853 in range [0.000000, 0.129707]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032406 in range [0.000000, 0.064812]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015086 in range [0.000000, 0.030173]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007465 in range [0.000000, 0.014930]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003297 in range [0.000000, 0.006594]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000992 in range [0.000000, 0.001984]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	no solution exists.
	Iteration #010: testing norm threshold 0.000450 in range [0.000300, 0.000600]...	no solution exists.
	Iteration #011: testing norm threshold 0.000525 in range [0.000450, 0.000600]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.05905076448600699, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.06178577402185635, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.10486691072583199, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.05957564897835255, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000599


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.206739 in range [0.000000, 0.413478]...	solution exists & found.
	Iteration #003: testing norm threshold 0.103370 in range [0.000000, 0.206740]...	solution exists & found.
	Iteration #004: testing norm threshold 0.051620 in range [0.000000, 0.103240]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023839 in range [0.000000, 0.047677]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008815 in range [0.000000, 0.017631]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004408 in range [0.000000, 0.008816]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001633 in range [0.000000, 0.003266]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000544 in range [0.000000, 0.001089]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000194 in range [0.000000, 0.000389]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.15484816058391987, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.0796621379462793, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.14371058060274985, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : -0.08038695562415003, x10 : -0.19758694827981158, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.077512 in range [0.000000, 0.155024]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038379 in range [0.000000, 0.076758]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019105 in range [0.000000, 0.038210]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009264 in range [0.000000, 0.018528]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004581 in range [0.000000, 0.009162]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001598 in range [0.000000, 0.003196]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000545 in range [0.000000, 0.001090]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6629908703206752, x5 : -0.19722340198141025, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6624383428840553, x5 : -0.21064409613609314, x6 : 3, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : -0.37472734094902077, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000043


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181237 in range [0.000000, 0.362473]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090552 in range [0.000000, 0.181105]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045277 in range [0.000000, 0.090553]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022584 in range [0.000000, 0.045169]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011293 in range [0.000000, 0.022585]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005441 in range [0.000000, 0.010881]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002721 in range [0.000000, 0.005442]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001156 in range [0.000000, 0.002311]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000578 in range [0.000000, 0.001157]...	no solution exists.
	Iteration #011: testing norm threshold 0.000867 in range [0.000578, 0.001157]...	no solution exists.
	Iteration #012: testing norm threshold 0.001012 in range [0.000867, 0.001157]...	no solution exists.
	Iteration #013: testing norm threshold 0.001084 in range [0.001012, 0.001157]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.5198987162796405, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6717798943844413, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.6503697403386929, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6704271005999324, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175249 in range [0.000000, 0.350497]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087625 in range [0.000000, 0.175250]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039163 in range [0.000000, 0.078325]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019167 in range [0.000000, 0.038334]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009135 in range [0.000000, 0.018271]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001704 in range [0.000000, 0.003408]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000853 in range [0.000000, 0.001705]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000427 in range [0.000000, 0.000854]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000106 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000053 in range [0.000000, 0.000107]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4907451321036735, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5233404435224742, x5 : -0.3493246320062693, x6 : 0, x7 : 0, x8 : 5, x9 : -0.4927082473632569, x10 : -0.1517917449031516, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000106


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169542 in range [0.000000, 0.339085]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079743 in range [0.000000, 0.159487]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037519 in range [0.000000, 0.075038]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018732 in range [0.000000, 0.037465]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007956 in range [0.000000, 0.015912]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003978 in range [0.000000, 0.007957]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001990 in range [0.000000, 0.003979]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000587 in range [0.000000, 0.001174]...	no solution exists.
	Iteration #010: testing norm threshold 0.000881 in range [0.000587, 0.001174]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000712 in range [0.000587, 0.000837]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000650 in range [0.000587, 0.000713]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 2.15261955412233, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 2.4089370632431075, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 2.1520164532457575, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 5, x9 : 2.3846256732940674, x10 : 0.21084972470998764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000712


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176023 in range [0.000000, 0.352046]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088012 in range [0.000000, 0.176024]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044007 in range [0.000000, 0.088013]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022004 in range [0.000000, 0.044008]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007611 in range [0.000000, 0.015222]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002038 in range [0.000000, 0.004077]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000463 in range [0.000000, 0.000925]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000232 in range [0.000000, 0.000464]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000116 in range [0.000000, 0.000233]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000059 in range [0.000000, 0.000117]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7733340465953358, x5 : -0.4163960421016224, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962545418670185, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155579 in range [0.000000, 0.311157]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077421 in range [0.000000, 0.154843]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038617 in range [0.000000, 0.077234]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019309 in range [0.000000, 0.038618]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009325 in range [0.000000, 0.018651]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004651 in range [0.000000, 0.009302]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002273 in range [0.000000, 0.004545]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000937 in range [0.000000, 0.001874]...	no solution exists.
	Iteration #010: testing norm threshold 0.001405 in range [0.000937, 0.001874]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001024 in range [0.000937, 0.001112]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.6028258026038729, x5 : -0.12564635255794712, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 1.595611569426327, x10 : 0.28819009841450605, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.5975279788285066, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 1.5903137456509608, x10 : 0.21084972470998764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001024


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144829 in range [0.000000, 0.289658]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069222 in range [0.000000, 0.138444]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030789 in range [0.000000, 0.061578]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015395 in range [0.000000, 0.030790]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007148 in range [0.000000, 0.014295]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001646 in range [0.000000, 0.003291]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000732 in range [0.000000, 0.001464]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000367 in range [0.000000, 0.000733]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000184 in range [0.000000, 0.000368]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000092 in range [0.000000, 0.000185]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6671559744988452, x5 : -0.3672188943621351, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.2200466050975312, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6671559744988452, x5 : -0.3423407113998012, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6233005282983242, x10 : -0.21879142249596392, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178803 in range [0.000000, 0.357605]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089327 in range [0.000000, 0.178653]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044517 in range [0.000000, 0.089033]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021425 in range [0.000000, 0.042851]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010712 in range [0.000000, 0.021425]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005073 in range [0.000000, 0.010146]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002208 in range [0.000000, 0.004417]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001105 in range [0.000000, 0.002209]...	no solution exists.
	Iteration #010: testing norm threshold 0.001657 in range [0.001105, 0.002209]...	no solution exists.
	Iteration #011: testing norm threshold 0.001933 in range [0.001657, 0.002209]...	no solution exists.
	Iteration #012: testing norm threshold 0.002071 in range [0.001933, 0.002209]...	no solution exists.
	Iteration #013: testing norm threshold 0.002140 in range [0.002071, 0.002209]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.04239034777332649, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.24763153340844035, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.15693071484565735, x5 : -0.2216230887184903, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4973755031824112, x10 : -0.12944749530586458, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002208


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105011 in range [0.000000, 0.210023]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040251 in range [0.000000, 0.080501]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020126 in range [0.000000, 0.040252]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010063 in range [0.000000, 0.020127]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005032 in range [0.000000, 0.010064]...	no solution exists.
	Iteration #007: testing norm threshold 0.007548 in range [0.005032, 0.010064]...	no solution exists.
	Iteration #008: testing norm threshold 0.008806 in range [0.007548, 0.010064]...	no solution exists.
	Iteration #009: testing norm threshold 0.009435 in range [0.008806, 0.010064]...	no solution exists.
	Iteration #010: testing norm threshold 0.009750 in range [0.009435, 0.010064]...	no solution exists.
	Iteration #011: testing norm threshold 0.009907 in range [0.009750, 0.010064]...	no solution exists.
	Iteration #012: testing norm threshold 0.009986 in range [0.009907, 0.010064]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.09505809010628764, x5 : 1.440101603580308, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : 3.470193807359435, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.12690472580067022, x5 : -0.040648605674505234, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6874461472034454, x10 : 3.4654203398080474, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.010063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.205804 in range [0.000000, 0.411608]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085832 in range [0.000000, 0.171664]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042916 in range [0.000000, 0.085833]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020138 in range [0.000000, 0.040276]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010069 in range [0.000000, 0.020139]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002693 in range [0.000000, 0.005387]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001331 in range [0.000000, 0.002662]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000666 in range [0.000000, 0.001332]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000323 in range [0.000000, 0.000646]...	no solution exists.
	Iteration #011: testing norm threshold 0.000484 in range [0.000323, 0.000646]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000401 in range [0.000323, 0.000478]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3089570151762145, x5 : -0.295641844938672, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.21668980266541069, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3089657373436314, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : -0.21668980268582616, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000401


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170402 in range [0.000000, 0.340804]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085079 in range [0.000000, 0.170157]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042448 in range [0.000000, 0.084897]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021225 in range [0.000000, 0.042449]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010613 in range [0.000000, 0.021226]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004094 in range [0.000000, 0.008188]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001751 in range [0.000000, 0.003503]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000856 in range [0.000000, 0.001713]...	no solution exists.
	Iteration #010: testing norm threshold 0.001285 in range [0.000856, 0.001713]...	no solution exists.
	Iteration #011: testing norm threshold 0.001499 in range [0.001285, 0.001713]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001392 in range [0.001285, 0.001500]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001339 in range [0.001285, 0.001393]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 8.125378945618289, x5 : 0.1248733204241737, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 5.812527444976372, x10 : 0.8406212978841117, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : 8.125247782974444, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 5.812593026298295, x10 : 0.840039669194897, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001339


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147323 in range [0.000000, 0.294645]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072755 in range [0.000000, 0.145510]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036334 in range [0.000000, 0.072668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015659 in range [0.000000, 0.031319]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007818 in range [0.000000, 0.015636]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003665 in range [0.000000, 0.007330]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001833 in range [0.000000, 0.003666]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000917 in range [0.000000, 0.001834]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000406 in range [0.000000, 0.000812]...	no solution exists.
	Iteration #011: testing norm threshold 0.000609 in range [0.000406, 0.000812]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000508 in range [0.000406, 0.000610]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5880189951136129, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.24214385307631545, x11 : 2.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5785657297603496, x5 : -0.37056939115446885, x6 : 0, x7 : 0, x8 : 0, x9 : -0.527230167795685, x10 : -0.3636787086725235, x11 : 2, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000496


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151233 in range [0.000000, 0.302466]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075617 in range [0.000000, 0.151234]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037809 in range [0.000000, 0.075618]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018905 in range [0.000000, 0.037810]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009363 in range [0.000000, 0.018726]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004391 in range [0.000000, 0.008782]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001023 in range [0.000000, 0.002046]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000512 in range [0.000000, 0.001024]...	no solution exists.
	Iteration #010: testing norm threshold 0.000768 in range [0.000512, 0.001024]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000596 in range [0.000512, 0.000680]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6130096201826336, x5 : -0.0809106966682827, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : 0.4428708342659957, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.614050904151261, x5 : -0.08195198063691005, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5405366810525061, x10 : 0.4770579991375803, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000679


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.191499 in range [0.000000, 0.382998]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095750 in range [0.000000, 0.191500]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047760 in range [0.000000, 0.095521]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023875 in range [0.000000, 0.047751]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010394 in range [0.000000, 0.020788]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002300 in range [0.000000, 0.004600]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001150 in range [0.000000, 0.002301]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000576 in range [0.000000, 0.001151]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000234 in range [0.000000, 0.000469]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000059 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.4797262864811897, x5 : -0.3851131567180008, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.4797262864811897, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : -0.4200211761196057, x10 : -0.264890052826758, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.225421 in range [0.000000, 0.450842]...	solution exists & found.
	Iteration #003: testing norm threshold 0.112125 in range [0.000000, 0.224250]...	solution exists & found.
	Iteration #004: testing norm threshold 0.056063 in range [0.000000, 0.112126]...	solution exists & found.
	Iteration #005: testing norm threshold 0.028032 in range [0.000000, 0.056064]...	solution exists & found.
	Iteration #006: testing norm threshold 0.014010 in range [0.000000, 0.028020]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006241 in range [0.000000, 0.012481]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003121 in range [0.000000, 0.006242]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001483 in range [0.000000, 0.002966]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000713 in range [0.000000, 0.001425]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000306 in range [0.000000, 0.000612]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000114 in range [0.000000, 0.000229]...	no solution exists.
	Iteration #013: testing norm threshold 0.000172 in range [0.000114, 0.000229]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.969729967522014, x5 : -0.2866947137607391, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 1.1535868445259032, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.9872203877792171, x5 : -0.289607275974618, x6 : 0, x7 : 2, x8 : 0, x9 : 1.1506742823120242, x10 : -0.029307434461970018, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147053 in range [0.000000, 0.294105]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072767 in range [0.000000, 0.145535]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035897 in range [0.000000, 0.071793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017949 in range [0.000000, 0.035898]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008645 in range [0.000000, 0.017291]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003527 in range [0.000000, 0.007053]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001101 in range [0.000000, 0.002203]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000494 in range [0.000000, 0.000988]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000248 in range [0.000000, 0.000495]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000249]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000063 in range [0.000000, 0.000125]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 2.0, x4 : -0.5505330575100817, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.5172666155976989, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 2, x4 : -0.5469603800930857, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 2, x9 : -0.5183716785750259, x10 : -0.26368856956643616, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151596 in range [0.000000, 0.303193]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075799 in range [0.000000, 0.151597]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037900 in range [0.000000, 0.075800]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018950 in range [0.000000, 0.037901]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009476 in range [0.000000, 0.018951]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004738 in range [0.000000, 0.009477]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002091 in range [0.000000, 0.004182]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001046 in range [0.000000, 0.002092]...	no solution exists.
	Iteration #010: testing norm threshold 0.001569 in range [0.001046, 0.002092]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001308 in range [0.001046, 0.001570]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001135 in range [0.001046, 0.001223]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.83153153516406, x5 : 6.262605308486134, x6 : 1.0, x7 : 0.0, x8 : 3.0, x9 : 3.1294373648307983, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 2.8299090299381513, x5 : 6.260982803260225, x6 : 1, x7 : 0, x8 : 3, x9 : 3.1278148596048894, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132056 in range [0.000000, 0.264113]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066029 in range [0.000000, 0.132057]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032211 in range [0.000000, 0.064422]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015440 in range [0.000000, 0.030881]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007659 in range [0.000000, 0.015318]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003830 in range [0.000000, 0.007660]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001702 in range [0.000000, 0.003404]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000643 in range [0.000000, 0.001287]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000322 in range [0.000000, 0.000644]...	no solution exists.
	Iteration #011: testing norm threshold 0.000483 in range [0.000322, 0.000644]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000403 in range [0.000322, 0.000484]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6546606619643349, x5 : -0.17038200844761156, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : 0.26609285043572184, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6060233271603132, x5 : -0.21959123015403748, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6012513133287795, x10 : 0.26609285043572184, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000403


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120096 in range [0.000000, 0.240191]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059840 in range [0.000000, 0.119680]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029822 in range [0.000000, 0.059643]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014911 in range [0.000000, 0.029823]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006312 in range [0.000000, 0.012623]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002613 in range [0.000000, 0.005227]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000244 in range [0.000000, 0.000487]...	no solution exists.
	Iteration #009: testing norm threshold 0.000365 in range [0.000244, 0.000487]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000305 in range [0.000244, 0.000366]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6796512870333556, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5968310660797752, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7153115473396461, x5 : -0.3657016657001655, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6034614443778992, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000305


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098345 in range [0.000000, 0.196691]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048583 in range [0.000000, 0.097166]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023033 in range [0.000000, 0.046065]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010788 in range [0.000000, 0.021577]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004377 in range [0.000000, 0.008754]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001498 in range [0.000000, 0.002996]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000213 in range [0.000000, 0.000426]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000107 in range [0.000000, 0.000214]...	no solution exists.
	Iteration #010: testing norm threshold 0.000161 in range [0.000107, 0.000214]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.16734347311843026, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.05314065445225386, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.16740994152491886, x5 : -0.3134031707271534, x6 : 0, x7 : 0, x8 : 6, x9 : -0.05314065445225386, x10 : -0.2642411068081856, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000161


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174157 in range [0.000000, 0.348313]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086839 in range [0.000000, 0.173678]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043420 in range [0.000000, 0.086840]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021335 in range [0.000000, 0.042670]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010668 in range [0.000000, 0.021336]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003706 in range [0.000000, 0.007413]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001854 in range [0.000000, 0.003707]...	no solution exists.
	Iteration #009: testing norm threshold 0.002781 in range [0.001854, 0.003707]...	no solution exists.
	Iteration #010: testing norm threshold 0.003244 in range [0.002781, 0.003707]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002950 in range [0.002781, 0.003120]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002853 in range [0.002781, 0.002926]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.08404138955502774, x5 : 1.0553749629291942, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.610091807826788, x10 : 3.2934158235291613, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.11944477632641792, x5 : 0.004087049295776524, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6145120423954877, x10 : 3.2889955889604616, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002925


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131593 in range [0.000000, 0.263186]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065797 in range [0.000000, 0.131594]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031956 in range [0.000000, 0.063912]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015057 in range [0.000000, 0.030114]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007233 in range [0.000000, 0.014466]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001368 in range [0.000000, 0.002736]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000342 in range [0.000000, 0.000685]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000172 in range [0.000000, 0.000343]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000086 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.2881314942853639, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.31393524214350393, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.29045494577251796, x5 : -0.3067390890440044, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3127735163999269, x10 : -0.2531924769282341, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.051017 in range [0.000000, 0.102035]...	solution exists & found.
	Iteration #003: testing norm threshold 0.023665 in range [0.000000, 0.047329]...	solution exists & found.
	Iteration #004: testing norm threshold 0.007172 in range [0.000000, 0.014343]...	solution exists & found.
	Iteration #005: testing norm threshold 0.001660 in range [0.000000, 0.003321]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000831 in range [0.000000, 0.001661]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000416 in range [0.000000, 0.000832]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000208 in range [0.000000, 0.000417]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000105 in range [0.000000, 0.000209]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.40475441127412737, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3271959838905167, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.40475441127412737, x5 : -0.36721889674663544, x6 : 0, x7 : 0, x8 : 6, x9 : -0.33382634818553925, x10 : -0.22479099840378094, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106982 in range [0.000000, 0.213963]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053076 in range [0.000000, 0.106152]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026539 in range [0.000000, 0.053077]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013120 in range [0.000000, 0.026241]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006456 in range [0.000000, 0.012911]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002511 in range [0.000000, 0.005022]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001066 in range [0.000000, 0.002131]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000533 in range [0.000000, 0.001067]...	no solution exists.
	Iteration #010: testing norm threshold 0.000800 in range [0.000533, 0.001067]...	no solution exists.
	Iteration #011: testing norm threshold 0.000933 in range [0.000800, 0.001067]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000867 in range [0.000800, 0.000934]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.2279664265685617, x5 : -0.2688004514048733, x6 : 0.0, x7 : 2.0, x8 : 3.0, x9 : 1.427642173964166, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.2242247470683933, x5 : -0.2732740044593811, x6 : 0, x7 : 2, x8 : 3, x9 : 1.3524979948997498, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000867


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.192245 in range [0.000000, 0.384489]...	solution exists & found.
	Iteration #003: testing norm threshold 0.096123 in range [0.000000, 0.192246]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048062 in range [0.000000, 0.096124]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023990 in range [0.000000, 0.047979]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011995 in range [0.000000, 0.023991]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005998 in range [0.000000, 0.011996]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003000 in range [0.000000, 0.005999]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001500 in range [0.000000, 0.003001]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000718 in range [0.000000, 0.001436]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000359 in range [0.000000, 0.000719]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000180 in range [0.000000, 0.000360]...	no solution exists.
	Iteration #013: testing norm threshold 0.000270 in range [0.000180, 0.000360]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.8614372588895907, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.0386604160517932, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.8638963451800421, x5 : -0.3045889735221863, x6 : 0, x7 : 0, x8 : 4, x9 : 1.0337422434708903, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000270


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113280 in range [0.000000, 0.226560]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056640 in range [0.000000, 0.113281]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028195 in range [0.000000, 0.056390]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013999 in range [0.000000, 0.027998]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006566 in range [0.000000, 0.013131]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002862 in range [0.000000, 0.005723]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001325 in range [0.000000, 0.002650]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000663 in range [0.000000, 0.001326]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000297 in range [0.000000, 0.000594]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000147 in range [0.000000, 0.000293]...	no solution exists.
	Iteration #012: testing norm threshold 0.000220 in range [0.000147, 0.000293]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.029895035238816113, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.02642379602982244, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.03149285728183865, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 4, x9 : 0.025744729405148315, x10 : -0.25251341030355995, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000220


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125676 in range [0.000000, 0.251353]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062651 in range [0.000000, 0.125301]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031019 in range [0.000000, 0.062038]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015138 in range [0.000000, 0.030277]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007466 in range [0.000000, 0.014932]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003733 in range [0.000000, 0.007467]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001652 in range [0.000000, 0.003305]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000827 in range [0.000000, 0.001653]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000396 in range [0.000000, 0.000792]...	no solution exists.
	Iteration #011: testing norm threshold 0.000594 in range [0.000396, 0.000792]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000495 in range [0.000396, 0.000595]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.0568221580244166, x5 : 5.922614323724685, x6 : 1.0, x7 : 1.0, x8 : 2.0, x9 : -0.5040058738506862, x10 : 15.31431872398778, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 2.0506631420352344, x5 : 5.916455307735502, x6 : 1, x7 : 1, x8 : 2, x9 : -0.5990411937236786, x10 : 15.308159707998598, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000594


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.206598 in range [0.000000, 0.413195]...	solution exists & found.
	Iteration #003: testing norm threshold 0.103299 in range [0.000000, 0.206599]...	solution exists & found.
	Iteration #004: testing norm threshold 0.051650 in range [0.000000, 0.103300]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024893 in range [0.000000, 0.049785]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012447 in range [0.000000, 0.024894]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006224 in range [0.000000, 0.012448]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002905 in range [0.000000, 0.005810]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001424 in range [0.000000, 0.002848]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000687 in range [0.000000, 0.001374]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000326 in range [0.000000, 0.000652]...	no solution exists.
	Iteration #012: testing norm threshold 0.000489 in range [0.000326, 0.000652]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000408 in range [0.000326, 0.000490]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3839288903832768, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3802389508785675, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.38392889268995994, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.38023895318525064, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000402


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161502 in range [0.000000, 0.323003]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080693 in range [0.000000, 0.161386]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037808 in range [0.000000, 0.075615]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018629 in range [0.000000, 0.037257]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007773 in range [0.000000, 0.015547]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003328 in range [0.000000, 0.006655]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001664 in range [0.000000, 0.003329]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000833 in range [0.000000, 0.001665]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000417 in range [0.000000, 0.000834]...	no solution exists.
	Iteration #011: testing norm threshold 0.000625 in range [0.000417, 0.000834]...	no solution exists.
	Iteration #012: testing norm threshold 0.000729 in range [0.000625, 0.000834]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000678 in range [0.000625, 0.000730]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.258975765038173, x5 : -0.15248774609174578, x6 : 1.0, x7 : 1.0, x8 : 1.0, x9 : -0.2343707916614277, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.258975765038173, x5 : -0.4164281189441681, x6 : 1, x7 : 1, x8 : 1, x9 : -0.23513401035377315, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000678


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185863 in range [0.000000, 0.371725]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087424 in range [0.000000, 0.174847]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043565 in range [0.000000, 0.087130]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021783 in range [0.000000, 0.043566]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008615 in range [0.000000, 0.017229]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003714 in range [0.000000, 0.007428]...	no solution exists.
	Iteration #008: testing norm threshold 0.005571 in range [0.003714, 0.007428]...	no solution exists.
	Iteration #009: testing norm threshold 0.006500 in range [0.005571, 0.007428]...	solution exists & found.
	Iteration #010: testing norm threshold 0.006036 in range [0.005571, 0.006501]...	solution exists & found.
	Iteration #011: testing norm threshold 0.005804 in range [0.005571, 0.006037]...	no solution exists.
	Iteration #012: testing norm threshold 0.005920 in range [0.005804, 0.006037]...	solution exists & found.
	Iteration #013: testing norm threshold 0.005863 in range [0.005804, 0.005921]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 2.465002367485089, x5 : 5.018954074753463, x6 : 1.0, x7 : 1.0, x8 : 3.0, x9 : 2.709513876175396, x10 : 0.28819009841450605, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 2.463930175952299, x5 : 5.017881883220673, x6 : 1, x7 : 1, x8 : 3, x9 : 2.708441684642606, x10 : -0.2531924769282341, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005863


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138574 in range [0.000000, 0.277148]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069288 in range [0.000000, 0.138575]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031822 in range [0.000000, 0.063644]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015912 in range [0.000000, 0.031823]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007741 in range [0.000000, 0.015482]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003575 in range [0.000000, 0.007149]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001743 in range [0.000000, 0.003486]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000846 in range [0.000000, 0.001692]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000415 in range [0.000000, 0.000830]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000208 in range [0.000000, 0.000416]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000104 in range [0.000000, 0.000209]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000053 in range [0.000000, 0.000105]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.2714710775726833, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.16364683567735985, x10 : -0.3747273409490208, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.2715567249906324, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.1638647003396552, x10 : -0.36337722893283825, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133950 in range [0.000000, 0.267900]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063529 in range [0.000000, 0.127057]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031764 in range [0.000000, 0.063529]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015119 in range [0.000000, 0.030238]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006890 in range [0.000000, 0.013780]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002760 in range [0.000000, 0.005519]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000278 in range [0.000000, 0.000557]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000140 in range [0.000000, 0.000279]...	no solution exists.
	Iteration #010: testing norm threshold 0.000210 in range [0.000140, 0.000279]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.3314303696504035, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.729632556438446, x5 : -0.38063958287239075, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6795000784645476, x10 : -0.33053279539973235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154948 in range [0.000000, 0.309897]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075685 in range [0.000000, 0.151371]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037843 in range [0.000000, 0.075686]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018072 in range [0.000000, 0.036144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009036 in range [0.000000, 0.018073]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002967 in range [0.000000, 0.005934]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001484 in range [0.000000, 0.002968]...	no solution exists.
	Iteration #009: testing norm threshold 0.002226 in range [0.001484, 0.002968]...	no solution exists.
	Iteration #010: testing norm threshold 0.002597 in range [0.002226, 0.002968]...	no solution exists.
	Iteration #011: testing norm threshold 0.002782 in range [0.002597, 0.002968]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002690 in range [0.002597, 0.002783]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.27980128592902365, x5 : 0.11592618924624082, x6 : 2.0, x7 : 2.0, x8 : 0.0, x9 : -0.1724873301753683, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6817338466644287, x5 : 0.13117560933018566, x6 : 2, x7 : 2, x8 : 0, x9 : -0.17157296604117167, x10 : 0.2090254301565225, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002690


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163552 in range [0.000000, 0.327104]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080931 in range [0.000000, 0.161862]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040412 in range [0.000000, 0.080823]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020169 in range [0.000000, 0.040337]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010085 in range [0.000000, 0.020170]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004932 in range [0.000000, 0.009865]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002351 in range [0.000000, 0.004702]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001176 in range [0.000000, 0.002352]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000274 in range [0.000000, 0.000549]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000275]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000139]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.717211487027766, x5 : -0.3314303755760193, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6720029622571732, x10 : -0.33050514098950434, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158215 in range [0.000000, 0.316430]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077609 in range [0.000000, 0.155218]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038182 in range [0.000000, 0.076364]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019092 in range [0.000000, 0.038183]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009546 in range [0.000000, 0.019093]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004774 in range [0.000000, 0.009547]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002387 in range [0.000000, 0.004775]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001194 in range [0.000000, 0.002388]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000598 in range [0.000000, 0.001195]...	no solution exists.
	Iteration #011: testing norm threshold 0.000896 in range [0.000598, 0.001195]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000686 in range [0.000598, 0.000775]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5698799664176819, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.7027216251274709, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.6217423514927541, x5 : -0.2330119285944448, x6 : 0, x7 : 0, x8 : 6, x9 : 0.6386280357837677, x10 : -0.36367870677122044, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000686


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167391 in range [0.000000, 0.334783]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080409 in range [0.000000, 0.160819]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037741 in range [0.000000, 0.075482]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018713 in range [0.000000, 0.037425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009357 in range [0.000000, 0.018714]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004679 in range [0.000000, 0.009358]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002340 in range [0.000000, 0.004680]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001170 in range [0.000000, 0.002341]...	no solution exists.
	Iteration #010: testing norm threshold 0.001756 in range [0.001170, 0.002341]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001291 in range [0.001170, 0.001411]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001231 in range [0.001170, 0.001292]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.1200487151753084, x5 : 0.9659036511498652, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 0.22091467498600892, x10 : -0.10956036520361004, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.3295328480840685, x5 : 0.9639732681851311, x6 : 1, x7 : 1, x8 : 0, x9 : 0.21615531271760513, x10 : -0.11078928014406283, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001231


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196149 in range [0.000000, 0.392297]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098075 in range [0.000000, 0.196150]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048798 in range [0.000000, 0.097596]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023652 in range [0.000000, 0.047304]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009761 in range [0.000000, 0.019523]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004298 in range [0.000000, 0.008597]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002150 in range [0.000000, 0.004299]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000674 in range [0.000000, 0.001348]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000108 in range [0.000000, 0.000217]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000055 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.3880939945614469, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3095149948944997, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3889669528819546, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3103879532150074, x10 : -0.2523195186077264, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127282 in range [0.000000, 0.254564]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063642 in range [0.000000, 0.127283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031439 in range [0.000000, 0.062877]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015720 in range [0.000000, 0.031440]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007633 in range [0.000000, 0.015266]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002656 in range [0.000000, 0.005311]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001015 in range [0.000000, 0.002029]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000508 in range [0.000000, 0.001016]...	no solution exists.
	Iteration #010: testing norm threshold 0.000762 in range [0.000508, 0.001016]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000635 in range [0.000508, 0.000763]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.0007393059916252349, x5 : 0.2680274192710999, x6 : 1.0, x7 : 2.0, x8 : 3.0, x9 : 0.030844043278826675, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.0035395149056009763, x5 : 0.26522721035712415, x6 : 1, x7 : 2, x8 : 3, x9 : 0.028043834364850934, x10 : -0.1979493573307991, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000576


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089167 in range [0.000000, 0.178334]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044208 in range [0.000000, 0.088416]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022104 in range [0.000000, 0.044209]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010906 in range [0.000000, 0.021813]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002410 in range [0.000000, 0.004820]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001128 in range [0.000000, 0.002256]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000492 in range [0.000000, 0.000984]...	no solution exists.
	Iteration #009: testing norm threshold 0.000738 in range [0.000492, 0.000984]...	no solution exists.
	Iteration #010: testing norm threshold 0.000861 in range [0.000738, 0.000984]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000800 in range [0.000738, 0.000862]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : 0.23223889455936836, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : 0.23111074156636466, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6929083394542758, x10 : -0.3621667979589933, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000861


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174336 in range [0.000000, 0.348672]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087168 in range [0.000000, 0.174337]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043272 in range [0.000000, 0.086544]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021123 in range [0.000000, 0.042246]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010562 in range [0.000000, 0.021124]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004782 in range [0.000000, 0.009565]...	no solution exists.
	Iteration #008: testing norm threshold 0.007173 in range [0.004782, 0.009565]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005751 in range [0.004782, 0.006721]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005267 in range [0.004782, 0.005752]...	solution exists & found.
	Iteration #011: testing norm threshold 0.005025 in range [0.004782, 0.005268]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004901 in range [0.004782, 0.005019]...	no solution exists.
	Iteration #013: testing norm threshold 0.004960 in range [0.004901, 0.005019]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.4865778828542794, x5 : 2.2811319343059995, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : 6.320738796622599, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.4095234666019678, x5 : 0.48723213374614716, x6 : 1, x7 : 1, x8 : 0, x9 : -0.6940765069207417, x10 : 6.320738795259726, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005018


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104920 in range [0.000000, 0.209840]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052461 in range [0.000000, 0.104921]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023629 in range [0.000000, 0.047259]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010838 in range [0.000000, 0.021676]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001919 in range [0.000000, 0.003838]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000960 in range [0.000000, 0.001920]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000480 in range [0.000000, 0.000961]...	no solution exists.
	Iteration #009: testing norm threshold 0.000721 in range [0.000480, 0.000961]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000601 in range [0.000480, 0.000722]...	no solution exists.
	Iteration #011: testing norm threshold 0.000661 in range [0.000601, 0.000722]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.08672788174994739, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.1369299772549284, x10 : -0.17585210913996274, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.1666399002901246, x5 : -0.34407604253972274, x6 : 0, x7 : 0, x8 : 0, x9 : 0.1369299772549284, x10 : -0.23109523206949234, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000661


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143760 in range [0.000000, 0.287521]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069233 in range [0.000000, 0.138466]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033858 in range [0.000000, 0.067716]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016652 in range [0.000000, 0.033304]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008327 in range [0.000000, 0.016653]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004070 in range [0.000000, 0.008139]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001081 in range [0.000000, 0.002163]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000541 in range [0.000000, 0.001082]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000246 in range [0.000000, 0.000492]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000247]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000062 in range [0.000000, 0.000125]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6463304536079947, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.5614690880877413, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6484130024909973, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 3, x9 : -0.5476870875664017, x10 : -0.2868596173711076, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000124


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111893 in range [0.000000, 0.223786]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053438 in range [0.000000, 0.106875]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025133 in range [0.000000, 0.050267]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012567 in range [0.000000, 0.025134]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006284 in range [0.000000, 0.012568]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002931 in range [0.000000, 0.005862]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001031 in range [0.000000, 0.002062]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000478 in range [0.000000, 0.000957]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000240 in range [0.000000, 0.000479]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000120 in range [0.000000, 0.000241]...	no solution exists.
	Iteration #012: testing norm threshold 0.000180 in range [0.000120, 0.000241]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5796887867572726, x5 : -0.3851131567180008, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.5040058738506862, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.582465897679416, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 0, x9 : -0.4945983773591066, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000240


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186506 in range [0.000000, 0.373011]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089777 in range [0.000000, 0.179554]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044392 in range [0.000000, 0.088784]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020480 in range [0.000000, 0.040960]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010240 in range [0.000000, 0.020481]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003566 in range [0.000000, 0.007133]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000453 in range [0.000000, 0.000907]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000227 in range [0.000000, 0.000454]...	no solution exists.
	Iteration #010: testing norm threshold 0.000341 in range [0.000227, 0.000454]...	no solution exists.
	Iteration #011: testing norm threshold 0.000398 in range [0.000341, 0.000454]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5921840992917831, x5 : -0.23301192669314175, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6109270453453064, x5 : -0.23743214754503994, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6123019456863403, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000371


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141466 in range [0.000000, 0.282932]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070733 in range [0.000000, 0.141467]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035367 in range [0.000000, 0.070734]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017672 in range [0.000000, 0.035343]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008592 in range [0.000000, 0.017184]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004287 in range [0.000000, 0.008574]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001680 in range [0.000000, 0.003361]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000787 in range [0.000000, 0.001574]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000394 in range [0.000000, 0.000788]...	no solution exists.
	Iteration #011: testing norm threshold 0.000591 in range [0.000394, 0.000788]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000479 in range [0.000394, 0.000563]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.21584611127322129, x5 : -0.15248774609174578, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.3535220924561361, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.27037517726421356, x5 : -0.1882762685418129, x6 : 0, x7 : 3, x8 : 0, x9 : 0.37562333047389984, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000562


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115658 in range [0.000000, 0.231317]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057830 in range [0.000000, 0.115659]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028568 in range [0.000000, 0.057137]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012188 in range [0.000000, 0.024376]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006095 in range [0.000000, 0.012189]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002439 in range [0.000000, 0.004878]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000203 in range [0.000000, 0.000405]...	no solution exists.
	Iteration #009: testing norm threshold 0.000304 in range [0.000203, 0.000405]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000254 in range [0.000203, 0.000305]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7608708143234253, x5 : -0.2998978865708417, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6783881259526319, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000304


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.199798 in range [0.000000, 0.399596]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099684 in range [0.000000, 0.199368]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049843 in range [0.000000, 0.099685]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024881 in range [0.000000, 0.049762]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012441 in range [0.000000, 0.024882]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006221 in range [0.000000, 0.012442]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002288 in range [0.000000, 0.004577]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001027 in range [0.000000, 0.002054]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000514 in range [0.000000, 0.001028]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000258 in range [0.000000, 0.000515]...	no solution exists.
	Iteration #012: testing norm threshold 0.000386 in range [0.000258, 0.000515]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000322 in range [0.000258, 0.000387]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4922215990157, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.35268288841284007, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4984374825288998, x10 : -0.17585210913996274, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000386


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123654 in range [0.000000, 0.247307]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055733 in range [0.000000, 0.111467]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027278 in range [0.000000, 0.054556]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013541 in range [0.000000, 0.027081]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006771 in range [0.000000, 0.013542]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003386 in range [0.000000, 0.006772]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001693 in range [0.000000, 0.003387]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000847 in range [0.000000, 0.001694]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000424 in range [0.000000, 0.000848]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000213 in range [0.000000, 0.000425]...	no solution exists.
	Iteration #012: testing norm threshold 0.000319 in range [0.000213, 0.000425]...	no solution exists.
	Iteration #013: testing norm threshold 0.000372 in range [0.000319, 0.000425]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5463679533319117, x5 : 0.062243402178643485, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.608844518661499, x5 : 0.0398755744099617, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5721972483781905, x10 : 0.045120370647879535, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000424


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126409 in range [0.000000, 0.252818]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057734 in range [0.000000, 0.115468]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028867 in range [0.000000, 0.057735]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014374 in range [0.000000, 0.028747]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006805 in range [0.000000, 0.013609]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003403 in range [0.000000, 0.006806]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001643 in range [0.000000, 0.003286]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000822 in range [0.000000, 0.001644]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000411 in range [0.000000, 0.000823]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000206 in range [0.000000, 0.000412]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000104 in range [0.000000, 0.000207]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000052 in range [0.000000, 0.000105]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.21732472325647173, x5 : -0.376166025540068, x6 : 0.0, x7 : 3.0, x8 : 2.0, x9 : -0.11944436318731745, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.21788166632681427, x5 : -0.3985338509082794, x6 : 0, x7 : 3, x8 : 2, x9 : -0.12000130625765999, x10 : -0.2305382889991498, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000104


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.195487 in range [0.000000, 0.390974]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097744 in range [0.000000, 0.195488]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047529 in range [0.000000, 0.095057]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023765 in range [0.000000, 0.047530]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009802 in range [0.000000, 0.019603]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004831 in range [0.000000, 0.009662]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001767 in range [0.000000, 0.003534]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000394 in range [0.000000, 0.000787]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000395]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000193]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.3964242029177871, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3183554893925082, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.3980623524534955, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : -0.31892282564246355, x10 : -0.2433472899464407, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151707 in range [0.000000, 0.303414]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075817 in range [0.000000, 0.151635]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036825 in range [0.000000, 0.073649]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018308 in range [0.000000, 0.036616]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007408 in range [0.000000, 0.014817]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002295 in range [0.000000, 0.004590]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000633 in range [0.000000, 0.001267]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000317 in range [0.000000, 0.000634]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	no solution exists.
	Iteration #011: testing norm threshold 0.000239 in range [0.000159, 0.000318]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.4253752529621124, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6752904576039258, x10 : -0.3713712827092886, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000239


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.227293 in range [0.000000, 0.454585]...	solution exists & found.
	Iteration #003: testing norm threshold 0.109728 in range [0.000000, 0.219456]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054865 in range [0.000000, 0.109729]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027334 in range [0.000000, 0.054667]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013667 in range [0.000000, 0.027335]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006302 in range [0.000000, 0.012604]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002712 in range [0.000000, 0.005424]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000983 in range [0.000000, 0.001966]...	no solution exists.
	Iteration #010: testing norm threshold 0.001475 in range [0.000983, 0.001966]...	no solution exists.
	Iteration #011: testing norm threshold 0.001721 in range [0.001475, 0.001966]...	no solution exists.
	Iteration #012: testing norm threshold 0.001844 in range [0.001721, 0.001966]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001783 in range [0.001721, 0.001845]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 1.269617468350263, x5 : 3.873721283978053, x6 : 1.0, x7 : 2.0, x8 : 2.0, x9 : -0.4421224123646269, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 1.271006816539981, x5 : 3.873721283978053, x6 : 1, x7 : 2, x8 : 2, x9 : -0.6962866187095642, x10 : -0.2853135424720813, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001783


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161830 in range [0.000000, 0.323661]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080667 in range [0.000000, 0.161335]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038925 in range [0.000000, 0.077851]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018808 in range [0.000000, 0.037616]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009404 in range [0.000000, 0.018809]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004441 in range [0.000000, 0.008883]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002221 in range [0.000000, 0.004442]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001111 in range [0.000000, 0.002222]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000550 in range [0.000000, 0.001099]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000275 in range [0.000000, 0.000551]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000131 in range [0.000000, 0.000262]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7218130482171012, x5 : -0.4159173995421237, x6 : 0, x7 : 6, x8 : 0, x9 : -0.641544257971862, x10 : -0.3676389819035443, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145653 in range [0.000000, 0.291305]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066968 in range [0.000000, 0.133935]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033000 in range [0.000000, 0.065999]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016500 in range [0.000000, 0.033001]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008251 in range [0.000000, 0.016501]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004126 in range [0.000000, 0.008252]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002063 in range [0.000000, 0.004127]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001032 in range [0.000000, 0.002064]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000517 in range [0.000000, 0.001033]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000259 in range [0.000000, 0.000518]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000130 in range [0.000000, 0.000260]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.9197487173839723, x5 : -0.2688004514048733, x6 : 0.0, x7 : 4.0, x8 : 2.0, x9 : 1.069602146794823, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.9194681420085234, x5 : -0.2729934290839322, x6 : 0, x7 : 4, x8 : 2, x9 : 1.069321571419374, x10 : 0.05644956837911532, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000130


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.195366 in range [0.000000, 0.390733]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097684 in range [0.000000, 0.195367]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047639 in range [0.000000, 0.095278]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021995 in range [0.000000, 0.043990]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010998 in range [0.000000, 0.021996]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003932 in range [0.000000, 0.007864]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001967 in range [0.000000, 0.003933]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000984 in range [0.000000, 0.001968]...	no solution exists.
	Iteration #010: testing norm threshold 0.001476 in range [0.000984, 0.001968]...	no solution exists.
	Iteration #011: testing norm threshold 0.001722 in range [0.001476, 0.001968]...	no solution exists.
	Iteration #012: testing norm threshold 0.001845 in range [0.001722, 0.001968]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001784 in range [0.001722, 0.001846]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.6524320555027447, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.8244403046495057, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 2.5628823041915894, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 2.816026017908905, x10 : 0.14455799013376236, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001784


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124230 in range [0.000000, 0.248459]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061263 in range [0.000000, 0.122527]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030632 in range [0.000000, 0.061264]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014749 in range [0.000000, 0.029498]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006774 in range [0.000000, 0.013549]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002839 in range [0.000000, 0.005678]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001420 in range [0.000000, 0.002840]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000710 in range [0.000000, 0.001421]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000711]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000357]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.2381502441473224, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.15480634117935135, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.24023279547691345, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.15480634117935135, x10 : -0.25472332832824596, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121990 in range [0.000000, 0.243979]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051945 in range [0.000000, 0.103890]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025973 in range [0.000000, 0.051946]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012968 in range [0.000000, 0.025936]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006162 in range [0.000000, 0.012324]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003082 in range [0.000000, 0.006163]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001473 in range [0.000000, 0.002947]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000737 in range [0.000000, 0.001474]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000139 in range [0.000000, 0.000277]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.125692431336729, x5 : -0.376166025540068, x6 : 0.0, x7 : 1.0, x8 : 4.0, x9 : -0.008938181962211472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.13610518723726273, x5 : -0.3620048335099876, x6 : 0, x7 : 1, x8 : 4, x9 : -0.008567933848373632, x10 : -0.3629382124448478, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000139


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108296 in range [0.000000, 0.216592]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054149 in range [0.000000, 0.108297]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026033 in range [0.000000, 0.052067]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012968 in range [0.000000, 0.025936]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006474 in range [0.000000, 0.012947]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003237 in range [0.000000, 0.006475]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001020 in range [0.000000, 0.002040]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000511 in range [0.000000, 0.001021]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000512]...	no solution exists.
	Iteration #011: testing norm threshold 0.000384 in range [0.000256, 0.000512]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000320 in range [0.000256, 0.000385]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4838913906593598, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.38907944537657596, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5026343762874603, x5 : -0.3787117353441158, x6 : 0, x7 : 6, x8 : 0, x9 : -0.3539997539283672, x10 : -0.2733618817092815, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000384


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137185 in range [0.000000, 0.274369]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067914 in range [0.000000, 0.135827]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031466 in range [0.000000, 0.062932]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015734 in range [0.000000, 0.031467]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007781 in range [0.000000, 0.015563]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003891 in range [0.000000, 0.007782]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000938 in range [0.000000, 0.001877]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000470 in range [0.000000, 0.000939]...	no solution exists.
	Iteration #010: testing norm threshold 0.000705 in range [0.000470, 0.000939]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000588 in range [0.000470, 0.000706]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000529 in range [0.000470, 0.000589]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7254674329932271, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7317151129245758, x5 : -0.29569515585899353, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6741853952407837, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000522


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160058 in range [0.000000, 0.320115]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073278 in range [0.000000, 0.146556]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036302 in range [0.000000, 0.072605]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018152 in range [0.000000, 0.036303]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007766 in range [0.000000, 0.015532]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001237 in range [0.000000, 0.002473]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000474 in range [0.000000, 0.000948]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000237 in range [0.000000, 0.000475]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6921465995678661, x5 : -0.17932913962554445, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6931878776733755, x5 : -0.17880850057278974, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.13165761157870293, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106311 in range [0.000000, 0.212621]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051721 in range [0.000000, 0.103442]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025403 in range [0.000000, 0.050807]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009501 in range [0.000000, 0.019002]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001209 in range [0.000000, 0.002417]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000466 in range [0.000000, 0.000933]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000234 in range [0.000000, 0.000467]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000117 in range [0.000000, 0.000235]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.392259098739617, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.29183400589848274, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3900444887540199, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 5, x9 : -0.28959722239399666, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115893 in range [0.000000, 0.231786]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057728 in range [0.000000, 0.115456]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027924 in range [0.000000, 0.055848]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013962 in range [0.000000, 0.027925]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006735 in range [0.000000, 0.013470]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003076 in range [0.000000, 0.006153]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001539 in range [0.000000, 0.003077]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000687 in range [0.000000, 0.001374]...	no solution exists.
	Iteration #010: testing norm threshold 0.001030 in range [0.000687, 0.001374]...	no solution exists.
	Iteration #011: testing norm threshold 0.001202 in range [0.001030, 0.001374]...	no solution exists.
	Iteration #012: testing norm threshold 0.001288 in range [0.001202, 0.001374]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4214148279868079, x5 : 0.16960897631383814, x6 : 1.0, x7 : 2.0, x8 : 2.0, x9 : -0.32277573664151243, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.40683695673942566, x5 : 0.5095999836921692, x6 : 1, x7 : 2, x8 : 2, x9 : -0.32277575154267363, x10 : -0.2531924620270729, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001373


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163378 in range [0.000000, 0.326756]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080869 in range [0.000000, 0.161737]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036372 in range [0.000000, 0.072745]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018167 in range [0.000000, 0.036333]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008753 in range [0.000000, 0.017507]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003162 in range [0.000000, 0.006324]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000768 in range [0.000000, 0.001536]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000385 in range [0.000000, 0.000769]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.5213773282628908, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4951653793526778, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.520643999069779, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 5, x9 : -0.4966320377389016, x10 : -0.2878050074201077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109270 in range [0.000000, 0.218541]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054636 in range [0.000000, 0.109271]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026740 in range [0.000000, 0.053479]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013370 in range [0.000000, 0.026741]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001329 in range [0.000000, 0.002658]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000518 in range [0.000000, 0.001036]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000132 in range [0.000000, 0.000264]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000066 in range [0.000000, 0.000133]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5963492034699531, x5 : -0.045122171956551146, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5976285472861759, x5 : -0.044482500048439795, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6950072748933415, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120017 in range [0.000000, 0.240033]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058663 in range [0.000000, 0.117326]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028895 in range [0.000000, 0.057789]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014364 in range [0.000000, 0.028727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007147 in range [0.000000, 0.014295]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003245 in range [0.000000, 0.006490]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001202 in range [0.000000, 0.002403]...	no solution exists.
	Iteration #009: testing norm threshold 0.001803 in range [0.001202, 0.002403]...	no solution exists.
	Iteration #010: testing norm threshold 0.002103 in range [0.001803, 0.002403]...	no solution exists.
	Iteration #011: testing norm threshold 0.002253 in range [0.002103, 0.002403]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002179 in range [0.002103, 0.002254]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.0030508009473749, x5 : 3.3905762003696776, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 1.0030508009473749, x5 : 3.554020544901492, x6 : 2, x7 : 5, x8 : 0, x9 : -0.38005306719243365, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002179


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085091 in range [0.000000, 0.170182]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042546 in range [0.000000, 0.085092]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021274 in range [0.000000, 0.042547]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008909 in range [0.000000, 0.017819]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004455 in range [0.000000, 0.008910]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002218 in range [0.000000, 0.004436]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001110 in range [0.000000, 0.002219]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000555 in range [0.000000, 0.001111]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000278 in range [0.000000, 0.000556]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000136 in range [0.000000, 0.000273]...	no solution exists.
	Iteration #012: testing norm threshold 0.000205 in range [0.000136, 0.000273]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.295641844938672, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.27656029291387274, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6908435368633448, x10 : -0.36249143011804297, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000205


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.187413 in range [0.000000, 0.374826]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091550 in range [0.000000, 0.183101]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043615 in range [0.000000, 0.087229]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021808 in range [0.000000, 0.043616]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009816 in range [0.000000, 0.019633]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002843 in range [0.000000, 0.005686]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001422 in range [0.000000, 0.002844]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000712 in range [0.000000, 0.001423]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000165 in range [0.000000, 0.000330]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000083 in range [0.000000, 0.000166]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.4422403488776585, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.39349969262558027, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.44391066897048737, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3807787554868144, x10 : -0.2659114211479285, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000165


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.056918 in range [0.000000, 0.113836]...	solution exists & found.
	Iteration #003: testing norm threshold 0.025913 in range [0.000000, 0.051826]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012515 in range [0.000000, 0.025031]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006089 in range [0.000000, 0.012177]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002493 in range [0.000000, 0.004986]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001216 in range [0.000000, 0.002431]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000522 in range [0.000000, 0.001043]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000257 in range [0.000000, 0.000515]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.4005893070959573, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3316162311395209, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.3887369673736815, x5 : -0.3856717840195057, x6 : 0, x7 : 0, x8 : 6, x9 : -0.33603647351264954, x10 : -0.2652390139126534, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104240 in range [0.000000, 0.208479]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046545 in range [0.000000, 0.093089]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022846 in range [0.000000, 0.045693]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007685 in range [0.000000, 0.015370]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003843 in range [0.000000, 0.007686]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001738 in range [0.000000, 0.003476]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000870 in range [0.000000, 0.001739]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000413 in range [0.000000, 0.000826]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000204 in range [0.000000, 0.000409]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000060 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6898025002452176, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069612 in range [0.000000, 0.139224]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034499 in range [0.000000, 0.068998]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016177 in range [0.000000, 0.032355]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008089 in range [0.000000, 0.016178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003764 in range [0.000000, 0.007527]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001580 in range [0.000000, 0.003160]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000790 in range [0.000000, 0.001581]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000396 in range [0.000000, 0.000791]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000138 in range [0.000000, 0.000276]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000070 in range [0.000000, 0.000139]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.26730597339451323, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.24214385307631545, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.27045948044100737, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.21542306246290058, x10 : -0.24214385307631545, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000138


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087924 in range [0.000000, 0.175847]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043931 in range [0.000000, 0.087863]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021083 in range [0.000000, 0.042167]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008711 in range [0.000000, 0.017421]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004128 in range [0.000000, 0.008256]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002064 in range [0.000000, 0.004129]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001033 in range [0.000000, 0.002065]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000508 in range [0.000000, 0.001016]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000254 in range [0.000000, 0.000509]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3381127444234054, x5 : -0.4298488126076653, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.2343707916614277, x10 : -0.3747273409490208, x11 : 1.0, x12 : 33.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3401658672686052, x5 : -0.4143749960989683, x6 : 0, x7 : 0, x8 : 6, x9 : -0.2333442302388278, x10 : -0.37472734094902077, x11 : 1, x12 : 33, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086654 in range [0.000000, 0.173307]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042513 in range [0.000000, 0.085025]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018384 in range [0.000000, 0.036768]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009193 in range [0.000000, 0.018385]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003667 in range [0.000000, 0.007334]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000289 in range [0.000000, 0.000579]...	no solution exists.
	Iteration #008: testing norm threshold 0.000434 in range [0.000289, 0.000579]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000352 in range [0.000289, 0.000414]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : -0.4030074190738666, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6484130024909973, x5 : -0.3943687677383423, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6034614443778992, x10 : -0.2932218909263611, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000413


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140609 in range [0.000000, 0.281218]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069828 in range [0.000000, 0.139655]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030160 in range [0.000000, 0.060320]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013031 in range [0.000000, 0.026062]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006516 in range [0.000000, 0.013032]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003072 in range [0.000000, 0.006144]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001203 in range [0.000000, 0.002406]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000593 in range [0.000000, 0.001185]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000297 in range [0.000000, 0.000594]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000149 in range [0.000000, 0.000298]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000150]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.021564826882475862, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.10156799926289448, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.0197242040330125, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 1, x9 : 0.10156799926289448, x10 : -0.24582509877524217, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000149


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.204441 in range [0.000000, 0.408881]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085632 in range [0.000000, 0.171263]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040725 in range [0.000000, 0.081449]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020110 in range [0.000000, 0.040220]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008123 in range [0.000000, 0.016245]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004053 in range [0.000000, 0.008107]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001729 in range [0.000000, 0.003458]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000865 in range [0.000000, 0.001730]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000120 in range [0.000000, 0.000240]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000121]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7598295403710067, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6802951268346464, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000043


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180823 in range [0.000000, 0.361646]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084061 in range [0.000000, 0.168121]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038151 in range [0.000000, 0.076302]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018626 in range [0.000000, 0.037252]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008269 in range [0.000000, 0.016537]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004135 in range [0.000000, 0.008270]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001779 in range [0.000000, 0.003558]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000582 in range [0.000000, 0.001164]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000292 in range [0.000000, 0.000583]...	no solution exists.
	Iteration #011: testing norm threshold 0.000437 in range [0.000292, 0.000583]...	no solution exists.
	Iteration #012: testing norm threshold 0.000510 in range [0.000437, 0.000583]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6796512870333556, x5 : -0.19722340198141025, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6942291557788849, x5 : -0.21959123015403748, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6034492706360377, x10 : -0.1426940639915026, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000510


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.068599 in range [0.000000, 0.137197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.030470 in range [0.000000, 0.060940]...	solution exists & found.
	Iteration #004: testing norm threshold 0.011657 in range [0.000000, 0.023314]...	solution exists & found.
	Iteration #005: testing norm threshold 0.003897 in range [0.000000, 0.007794]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001276 in range [0.000000, 0.002553]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000579 in range [0.000000, 0.001159]...	no solution exists.
	Iteration #008: testing norm threshold 0.000869 in range [0.000579, 0.001159]...	no solution exists.
	Iteration #009: testing norm threshold 0.001014 in range [0.000869, 0.001159]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000942 in range [0.000869, 0.001015]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.32561743188889497, x5 : -0.2688004514048733, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.4332819178666184, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.22964708853272645, x5 : -0.22628286082057206, x6 : 0, x7 : 1, x8 : 0, x9 : -0.4355374212180282, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001014


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144166 in range [0.000000, 0.288333]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072084 in range [0.000000, 0.144167]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035645 in range [0.000000, 0.071290]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017823 in range [0.000000, 0.035646]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008912 in range [0.000000, 0.017824]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004456 in range [0.000000, 0.008913]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002229 in range [0.000000, 0.004457]...	no solution exists.
	Iteration #009: testing norm threshold 0.003343 in range [0.002229, 0.004457]...	no solution exists.
	Iteration #010: testing norm threshold 0.003900 in range [0.003343, 0.004457]...	no solution exists.
	Iteration #011: testing norm threshold 0.004179 in range [0.003900, 0.004457]...	no solution exists.
	Iteration #012: testing norm threshold 0.004318 in range [0.004179, 0.004457]...	no solution exists.
	Iteration #013: testing norm threshold 0.004388 in range [0.004318, 0.004457]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2574971530549225, x5 : 1.8069339818755563, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5172666155976989, x10 : 0.7964268019265432, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.17211252078413963, x5 : 1.7940343362488622, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.05431724339723587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004456


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138075 in range [0.000000, 0.276150]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069038 in range [0.000000, 0.138076]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034520 in range [0.000000, 0.069039]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015848 in range [0.000000, 0.031696]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007925 in range [0.000000, 0.015849]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002727 in range [0.000000, 0.005455]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001265 in range [0.000000, 0.002530]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000617 in range [0.000000, 0.001234]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000309 in range [0.000000, 0.000618]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.32145232771072485, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.32277573664151243, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.32587257798421854, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3249858617782593, x10 : -0.2487722266547404, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105929 in range [0.000000, 0.211858]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052965 in range [0.000000, 0.105930]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025167 in range [0.000000, 0.050334]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012531 in range [0.000000, 0.025062]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006266 in range [0.000000, 0.012532]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003133 in range [0.000000, 0.006267]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001567 in range [0.000000, 0.003134]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000784 in range [0.000000, 0.001568]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000393 in range [0.000000, 0.000785]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.5630283700445922, x5 : -0.07196356549034981, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.04326862126725737, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.5637304094964635, x5 : -0.1166992150247097, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6911643286034723, x10 : -0.05431724525988102, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000197


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105057 in range [0.000000, 0.210114]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049456 in range [0.000000, 0.098912]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017924 in range [0.000000, 0.035848]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008963 in range [0.000000, 0.017925]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004420 in range [0.000000, 0.008839]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002208 in range [0.000000, 0.004417]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001105 in range [0.000000, 0.002209]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000553 in range [0.000000, 0.001106]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000277 in range [0.000000, 0.000554]...	no solution exists.
	Iteration #011: testing norm threshold 0.000415 in range [0.000277, 0.000554]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000347 in range [0.000277, 0.000416]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.2908179864802835, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.4330865429382124, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.28979187877926116, x5 : -0.2275122564709595, x6 : 0, x7 : 0, x8 : 3, x9 : 0.43359959678872356, x10 : -0.3405553561127594, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000415


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121972 in range [0.000000, 0.243944]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060506 in range [0.000000, 0.121013]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026651 in range [0.000000, 0.053302]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010909 in range [0.000000, 0.021817]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004148 in range [0.000000, 0.008297]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002075 in range [0.000000, 0.004149]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001038 in range [0.000000, 0.002076]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000519 in range [0.000000, 0.001039]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000059 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.18252527784786027, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3181601144641022, x10 : -0.10956036520361004, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.18252527784786027, x5 : -0.32472002351975887, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3137398660182953, x10 : -0.10956036520361004, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000030


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139241 in range [0.000000, 0.278482]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069621 in range [0.000000, 0.139242]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034811 in range [0.000000, 0.069622]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017324 in range [0.000000, 0.034649]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007721 in range [0.000000, 0.015442]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003861 in range [0.000000, 0.007722]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001931 in range [0.000000, 0.003862]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000966 in range [0.000000, 0.001932]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000465 in range [0.000000, 0.000930]...	no solution exists.
	Iteration #011: testing norm threshold 0.000697 in range [0.000465, 0.000930]...	no solution exists.
	Iteration #012: testing norm threshold 0.000814 in range [0.000697, 0.000930]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000756 in range [0.000697, 0.000815]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 2.16094976247867, x5 : -0.19722340198141025, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.294010634768997, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 2.1583956132251734, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 2.2914564855155004, x10 : 0.023023122164886445, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000814


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074445 in range [0.000000, 0.148890]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037223 in range [0.000000, 0.074446]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018262 in range [0.000000, 0.036525]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008550 in range [0.000000, 0.017100]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003050 in range [0.000000, 0.006099]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001362 in range [0.000000, 0.002724]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000681 in range [0.000000, 0.001363]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000341 in range [0.000000, 0.000682]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000171 in range [0.000000, 0.000342]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.19233409818745095, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.092922879693292, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.19287725123282734, x5 : -0.3446278006472809, x6 : 0, x7 : 0, x8 : 3, x9 : -0.09314615564894689, x10 : -0.24178570428987298, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182359 in range [0.000000, 0.364719]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084470 in range [0.000000, 0.168940]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042235 in range [0.000000, 0.084471]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021037 in range [0.000000, 0.042074]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009979 in range [0.000000, 0.019957]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004703 in range [0.000000, 0.009406]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000674 in range [0.000000, 0.001347]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000331 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000164 in range [0.000000, 0.000328]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000083 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.21732472325647173, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.10618362144030473, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.21732472628355026, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 1, x9 : -0.106183622953844, x10 : -0.2494848374360732, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160889 in range [0.000000, 0.321777]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079849 in range [0.000000, 0.159697]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037367 in range [0.000000, 0.074734]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018684 in range [0.000000, 0.037368]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009342 in range [0.000000, 0.018685]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004672 in range [0.000000, 0.009343]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002336 in range [0.000000, 0.004673]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001155 in range [0.000000, 0.002311]...	no solution exists.
	Iteration #010: testing norm threshold 0.001733 in range [0.001155, 0.002311]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001445 in range [0.001155, 0.001734]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001301 in range [0.001155, 0.001446]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001228 in range [0.001155, 0.001302]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : 0.09803192689037504, x6 : 1.0, x7 : 2.0, x8 : 3.0, x9 : -0.43770216511562265, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5186022884380711, x5 : 0.1255657979118931, x6 : 1, x7 : 2, x8 : 3, x9 : -0.6454537808895111, x10 : -0.3091280771464507, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001228


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094855 in range [0.000000, 0.189710]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046710 in range [0.000000, 0.093420]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022521 in range [0.000000, 0.045041]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010193 in range [0.000000, 0.020386]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004301 in range [0.000000, 0.008601]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002081 in range [0.000000, 0.004162]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001041 in range [0.000000, 0.002082]...	no solution exists.
	Iteration #009: testing norm threshold 0.001561 in range [0.001041, 0.002082]...	no solution exists.
	Iteration #010: testing norm threshold 0.001822 in range [0.001561, 0.002082]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001692 in range [0.001561, 0.001823]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001627 in range [0.001561, 0.001693]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3089570151762145, x5 : -0.15248774609174578, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.3979199398745845, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3089570151762145, x5 : -0.12387902830705211, x6 : 0, x7 : 5, x8 : 0, x9 : -0.6918663680553436, x10 : 0.3085200256576883, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001692


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144009 in range [0.000000, 0.288018]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070897 in range [0.000000, 0.141795]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034786 in range [0.000000, 0.069572]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016251 in range [0.000000, 0.032502]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008116 in range [0.000000, 0.016233]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004059 in range [0.000000, 0.008117]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001434 in range [0.000000, 0.002869]...	no solution exists.
	Iteration #009: testing norm threshold 0.002152 in range [0.001434, 0.002869]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001794 in range [0.001434, 0.002153]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001569 in range [0.001434, 0.001703]...	no solution exists.
	Iteration #012: testing norm threshold 0.001636 in range [0.001569, 0.001703]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 3.9102935173101225, x5 : 9.367259827228844, x6 : 1.0, x7 : 2.0, x8 : 4.0, x9 : 0.01758330153181396, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 3.9125180118413327, x5 : 9.362839584025204, x6 : 1, x7 : 2, x8 : 4, x9 : -0.15259622037410736, x10 : -0.11618874594569206, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001702


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124930 in range [0.000000, 0.249861]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061921 in range [0.000000, 0.123843]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030776 in range [0.000000, 0.061551]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015388 in range [0.000000, 0.030777]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007695 in range [0.000000, 0.015389]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003810 in range [0.000000, 0.007621]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001906 in range [0.000000, 0.003811]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000953 in range [0.000000, 0.001907]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000477 in range [0.000000, 0.000954]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000209 in range [0.000000, 0.000419]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000105 in range [0.000000, 0.000210]...	no solution exists.
	Iteration #013: testing norm threshold 0.000158 in range [0.000105, 0.000210]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.32277573664151243, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.42463245863614363, x5 : -0.3403775095939636, x6 : 0, x7 : 0, x8 : 6, x9 : -0.32277573664151243, x10 : -0.1979493573307991, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000209


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.220142 in range [0.000000, 0.440284]...	solution exists & found.
	Iteration #003: testing norm threshold 0.109050 in range [0.000000, 0.218101]...	solution exists & found.
	Iteration #004: testing norm threshold 0.053968 in range [0.000000, 0.107935]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026498 in range [0.000000, 0.052997]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013250 in range [0.000000, 0.026499]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006578 in range [0.000000, 0.013157]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003159 in range [0.000000, 0.006317]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001580 in range [0.000000, 0.003160]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000788 in range [0.000000, 0.001576]...	no solution exists.
	Iteration #011: testing norm threshold 0.001182 in range [0.000788, 0.001576]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000951 in range [0.000788, 0.001113]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000870 in range [0.000788, 0.000952]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.3195987184883045, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.3480777234820898, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.3195987184883045, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 1.3468584870205882, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000951


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.228570 in range [0.000000, 0.457140]...	solution exists & found.
	Iteration #003: testing norm threshold 0.109239 in range [0.000000, 0.218479]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054044 in range [0.000000, 0.108088]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025802 in range [0.000000, 0.051605]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012513 in range [0.000000, 0.025026]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006241 in range [0.000000, 0.012482]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001043 in range [0.000000, 0.002085]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000509 in range [0.000000, 0.001017]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000135 in range [0.000000, 0.000269]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.28396639010719377, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.2922965884208679, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.1757820770258061, x10 : -0.2511259081730938, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000134


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097946 in range [0.000000, 0.195893]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046640 in range [0.000000, 0.093279]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023320 in range [0.000000, 0.046641]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011335 in range [0.000000, 0.022669]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005058 in range [0.000000, 0.010116]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002193 in range [0.000000, 0.004385]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001097 in range [0.000000, 0.002194]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000525 in range [0.000000, 0.001050]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000263 in range [0.000000, 0.000526]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000132 in range [0.000000, 0.000264]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4380752446994884, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.3979199398745845, x10 : -0.1537548611611785, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4389836455342519, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 4, x9 : -0.3979199398745845, x10 : -0.15284645932797147, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123193 in range [0.000000, 0.246386]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061484 in range [0.000000, 0.122968]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028200 in range [0.000000, 0.056401]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014101 in range [0.000000, 0.028201]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007051 in range [0.000000, 0.014102]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003526 in range [0.000000, 0.007052]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001763 in range [0.000000, 0.003527]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000882 in range [0.000000, 0.001764]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000154 in range [0.000000, 0.000307]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000077 in range [0.000000, 0.000155]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3657898616873458, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3800435759501615, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.3634277570903338, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3866739422082901, x10 : -0.1624413779950939, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000154


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097384 in range [0.000000, 0.194769]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048693 in range [0.000000, 0.097385]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024347 in range [0.000000, 0.048694]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012126 in range [0.000000, 0.024252]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006063 in range [0.000000, 0.012127]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003032 in range [0.000000, 0.006064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001378 in range [0.000000, 0.002755]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000167 in range [0.000000, 0.000334]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7681597426202751, x5 : -0.41538685109882123, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.36263744082717664, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132069 in range [0.000000, 0.264138]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063570 in range [0.000000, 0.127140]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030526 in range [0.000000, 0.061052]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015264 in range [0.000000, 0.030527]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007632 in range [0.000000, 0.015265]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003100 in range [0.000000, 0.006200]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001191 in range [0.000000, 0.002381]...	no solution exists.
	Iteration #009: testing norm threshold 0.001786 in range [0.001191, 0.002381]...	no solution exists.
	Iteration #010: testing norm threshold 0.002084 in range [0.001786, 0.002381]...	no solution exists.
	Iteration #011: testing norm threshold 0.002232 in range [0.002084, 0.002381]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002159 in range [0.002084, 0.002233]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.8069159073342091, x5 : 2.504810213754322, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : 4.862320430022841, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 1.8288609111999996, x5 : 2.5930099213814266, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6476639211177826, x10 : 5.351662012407733, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002159


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124310 in range [0.000000, 0.248620]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059084 in range [0.000000, 0.118169]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028943 in range [0.000000, 0.057886]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014319 in range [0.000000, 0.028639]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007160 in range [0.000000, 0.014320]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003178 in range [0.000000, 0.006356]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001589 in range [0.000000, 0.003179]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000795 in range [0.000000, 0.001590]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000357 in range [0.000000, 0.000714]...	no solution exists.
	Iteration #011: testing norm threshold 0.000536 in range [0.000357, 0.000714]...	no solution exists.
	Iteration #012: testing norm threshold 0.000625 in range [0.000536, 0.000714]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.0007393059916252349, x5 : 1.2432647176657845, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : 3.7574580310836296, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.04239034838974476, x5 : 1.2388444968138863, x6 : 1, x7 : 5, x8 : 0, x9 : -0.6476639211177826, x10 : 3.7530378102317314, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000713


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086000 in range [0.000000, 0.172000]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042742 in range [0.000000, 0.085484]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019373 in range [0.000000, 0.038747]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009569 in range [0.000000, 0.019138]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003691 in range [0.000000, 0.007383]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001815 in range [0.000000, 0.003629]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000482 in range [0.000000, 0.000965]...	no solution exists.
	Iteration #009: testing norm threshold 0.000724 in range [0.000482, 0.000965]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000579 in range [0.000482, 0.000676]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.6629908703206752, x5 : -0.18827627080347734, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.6634421259533682, x5 : -0.3985338509082794, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6835039083584511, x10 : -0.24249302252624508, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000579


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111489 in range [0.000000, 0.222978]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055745 in range [0.000000, 0.111490]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025100 in range [0.000000, 0.050201]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012551 in range [0.000000, 0.025101]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006182 in range [0.000000, 0.012364]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002285 in range [0.000000, 0.004569]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001097 in range [0.000000, 0.002195]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000236 in range [0.000000, 0.000472]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000119 in range [0.000000, 0.000237]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000060 in range [0.000000, 0.000120]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6380002452516543, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5968310660797752, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6442479193210602, x5 : -0.39301902455403004, x6 : 0, x7 : 0, x8 : 0, x9 : -0.6034614443778992, x10 : -0.3210850060559838, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000119


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122133 in range [0.000000, 0.244267]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061067 in range [0.000000, 0.122134]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030534 in range [0.000000, 0.061068]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015268 in range [0.000000, 0.030535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007408 in range [0.000000, 0.014816]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003652 in range [0.000000, 0.007304]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001548 in range [0.000000, 0.003096]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000775 in range [0.000000, 0.001549]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000388 in range [0.000000, 0.000776]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000194 in range [0.000000, 0.000389]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.37976378620510665, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3095149948944997, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3809536185144056, x5 : -0.32576697625774814, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3039049164261289, x10 : -0.37472734094902077, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143490 in range [0.000000, 0.286980]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071621 in range [0.000000, 0.143242]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035781 in range [0.000000, 0.071562]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017891 in range [0.000000, 0.035782]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008207 in range [0.000000, 0.016414]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003503 in range [0.000000, 0.007005]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001752 in range [0.000000, 0.003504]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000720 in range [0.000000, 0.001441]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000280 in range [0.000000, 0.000560]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000140 in range [0.000000, 0.000281]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000071 in range [0.000000, 0.000141]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7482225857046947, x5 : -0.38048666336811626, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6938917721450516, x10 : -0.3193312994507655, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000140


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120161 in range [0.000000, 0.240322]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060081 in range [0.000000, 0.120162]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029872 in range [0.000000, 0.059744]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014065 in range [0.000000, 0.028129]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006996 in range [0.000000, 0.013992]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003173 in range [0.000000, 0.006346]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001587 in range [0.000000, 0.003174]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000794 in range [0.000000, 0.001588]...	no solution exists.
	Iteration #010: testing norm threshold 0.001191 in range [0.000794, 0.001588]...	no solution exists.
	Iteration #011: testing norm threshold 0.001389 in range [0.001191, 0.001588]...	no solution exists.
	Iteration #012: testing norm threshold 0.001489 in range [0.001389, 0.001588]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001440 in range [0.001389, 0.001490]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.8614372588895907, x5 : -0.2688004514048733, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 1.0386604160517932, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.7489794492721558, x5 : -0.2541470278146589, x6 : 0, x7 : 4, x8 : 0, x9 : 1.0329541255328263, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001440


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130483 in range [0.000000, 0.260966]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064525 in range [0.000000, 0.129049]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032176 in range [0.000000, 0.064352]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012937 in range [0.000000, 0.025874]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006469 in range [0.000000, 0.012938]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002318 in range [0.000000, 0.004636]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000939 in range [0.000000, 0.001878]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000470 in range [0.000000, 0.000940]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000236 in range [0.000000, 0.000471]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000237]...	no solution exists.
	Iteration #012: testing norm threshold 0.000177 in range [0.000118, 0.000237]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7638203681257945, x5 : -0.4152125895766001, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6685496152189951, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000236


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111211 in range [0.000000, 0.222422]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055606 in range [0.000000, 0.111212]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025309 in range [0.000000, 0.050618]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012655 in range [0.000000, 0.025310]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006328 in range [0.000000, 0.012656]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003165 in range [0.000000, 0.006329]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001583 in range [0.000000, 0.003166]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000792 in range [0.000000, 0.001584]...	no solution exists.
	Iteration #010: testing norm threshold 0.001188 in range [0.000792, 0.001584]...	no solution exists.
	Iteration #011: testing norm threshold 0.001386 in range [0.001188, 0.001584]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001287 in range [0.001188, 0.001387]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001238 in range [0.001188, 0.001288]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : 0.1338204516021066, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.48985793505076136, x5 : -0.07643713057041168, x6 : 4, x7 : 6, x8 : 0, x9 : -0.5324563911950942, x10 : 0.36581156339284215, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168009 in range [0.000000, 0.336018]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083985 in range [0.000000, 0.167970]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041955 in range [0.000000, 0.083909]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020780 in range [0.000000, 0.041559]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010309 in range [0.000000, 0.020617]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005155 in range [0.000000, 0.010310]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002578 in range [0.000000, 0.005156]...	no solution exists.
	Iteration #009: testing norm threshold 0.003867 in range [0.002578, 0.005156]...	no solution exists.
	Iteration #010: testing norm threshold 0.004511 in range [0.003867, 0.005156]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004190 in range [0.003867, 0.004512]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004029 in range [0.003867, 0.004191]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003948 in range [0.003867, 0.004030]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.16965496807418, x5 : 0.2680274192710999, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 1.0121389325577677, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.1769176326696311, x5 : 0.25350209008019753, x6 : 0, x7 : 1, x8 : 0, x9 : 0.4949699938297272, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004029


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169992 in range [0.000000, 0.339985]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084604 in range [0.000000, 0.169208]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042302 in range [0.000000, 0.084605]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021152 in range [0.000000, 0.042303]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008938 in range [0.000000, 0.017876]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004469 in range [0.000000, 0.008939]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001807 in range [0.000000, 0.003615]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000817 in range [0.000000, 0.001633]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000397 in range [0.000000, 0.000794]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000199 in range [0.000000, 0.000398]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000100 in range [0.000000, 0.000200]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000051 in range [0.000000, 0.000101]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6963117122650146, x5 : -0.24229165911890063, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6942277690734873, x10 : -0.17577647738215332, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000049


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.192430 in range [0.000000, 0.384859]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082913 in range [0.000000, 0.165826]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040623 in range [0.000000, 0.081245]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020312 in range [0.000000, 0.040624]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009554 in range [0.000000, 0.019109]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004778 in range [0.000000, 0.009555]...	no solution exists.
	Iteration #008: testing norm threshold 0.007167 in range [0.004778, 0.009555]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005973 in range [0.004778, 0.007168]...	no solution exists.
	Iteration #010: testing norm threshold 0.006570 in range [0.005973, 0.007168]...	no solution exists.
	Iteration #011: testing norm threshold 0.006869 in range [0.006570, 0.007168]...	no solution exists.
	Iteration #012: testing norm threshold 0.007018 in range [0.006869, 0.007168]...	no solution exists.
	Iteration #013: testing norm threshold 0.007093 in range [0.007018, 0.007168]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.2571221558157526, x5 : 3.80214423455459, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.2556653198501315, x5 : 4.917518952588546, x6 : 2, x7 : 3, x8 : 0, x9 : -0.5445413797097329, x10 : 0.15560661256313324, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.007167


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166667 in range [0.000000, 0.333334]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083334 in range [0.000000, 0.166668]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041115 in range [0.000000, 0.082229]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020558 in range [0.000000, 0.041116]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010277 in range [0.000000, 0.020553]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003782 in range [0.000000, 0.007565]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001873 in range [0.000000, 0.003747]...	no solution exists.
	Iteration #009: testing norm threshold 0.002810 in range [0.001873, 0.003747]...	no solution exists.
	Iteration #010: testing norm threshold 0.003279 in range [0.002810, 0.003747]...	no solution exists.
	Iteration #011: testing norm threshold 0.003513 in range [0.003279, 0.003747]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003396 in range [0.003279, 0.003514]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003338 in range [0.003279, 0.003397]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.83153153516406, x5 : 0.5364413546090865, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 2.2630689040259675, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 2.8349943920629554, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 1, x9 : 2.181294322013855, x10 : 0.0009258752688765526, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003338


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117778 in range [0.000000, 0.235556]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048874 in range [0.000000, 0.097748]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024168 in range [0.000000, 0.048337]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012085 in range [0.000000, 0.024169]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006043 in range [0.000000, 0.012086]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002588 in range [0.000000, 0.005176]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001055 in range [0.000000, 0.002109]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000528 in range [0.000000, 0.001056]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000264 in range [0.000000, 0.000529]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000100 in range [0.000000, 0.000200]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000051 in range [0.000000, 0.000101]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.7593856500729527, x5 : -0.37556863220905384, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094664 in range [0.000000, 0.189327]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044160 in range [0.000000, 0.088320]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019176 in range [0.000000, 0.038352]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009589 in range [0.000000, 0.019177]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002932 in range [0.000000, 0.005864]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001466 in range [0.000000, 0.002933]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000734 in range [0.000000, 0.001467]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000367 in range [0.000000, 0.000735]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000184 in range [0.000000, 0.000368]...	no solution exists.
	Iteration #011: testing norm threshold 0.000276 in range [0.000184, 0.000368]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6421653494298245, x5 : 0.21434463220350256, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6432066343754423, x5 : 0.2105312809363676, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000367


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162406 in range [0.000000, 0.324812]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079935 in range [0.000000, 0.159870]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039968 in range [0.000000, 0.079936]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019951 in range [0.000000, 0.039901]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009976 in range [0.000000, 0.019952]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004988 in range [0.000000, 0.009977]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002495 in range [0.000000, 0.004989]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001027 in range [0.000000, 0.002054]...	no solution exists.
	Iteration #010: testing norm threshold 0.001541 in range [0.001027, 0.002054]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001284 in range [0.001027, 0.001542]...	no solution exists.
	Iteration #012: testing norm threshold 0.001413 in range [0.001284, 0.001542]...	no solution exists.
	Iteration #013: testing norm threshold 0.001477 in range [0.001413, 0.001542]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 5.568004980221832, x5 : 0.1964503698476368, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 5.746223736241308, x10 : 1.0394965296931695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 5.566503384479007, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 5, x9 : 5.744722140498483, x10 : 1.0379949339503445, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001541


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110216 in range [0.000000, 0.220431]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055108 in range [0.000000, 0.110217]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023855 in range [0.000000, 0.047710]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011928 in range [0.000000, 0.023856]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005964 in range [0.000000, 0.011929]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002075 in range [0.000000, 0.004151]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001038 in range [0.000000, 0.002076]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000520 in range [0.000000, 0.001039]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.769201010465622, x5 : -0.4220433972052091, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171351 in range [0.000000, 0.342703]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081079 in range [0.000000, 0.162158]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040540 in range [0.000000, 0.081080]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020270 in range [0.000000, 0.040541]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007819 in range [0.000000, 0.015639]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002794 in range [0.000000, 0.005589]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001356 in range [0.000000, 0.002713]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000651 in range [0.000000, 0.001301]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000326 in range [0.000000, 0.000652]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000327]...	no solution exists.
	Iteration #012: testing norm threshold 0.000245 in range [0.000163, 0.000327]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.3631033694924261, x5 : 0.2501331569152341, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : -0.2608922751554531, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.36385337767303294, x5 : 0.16066184639930725, x6 : 1, x7 : 0, x8 : 0, x9 : -0.2627701343139582, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000243


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124149 in range [0.000000, 0.248298]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056848 in range [0.000000, 0.113696]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024994 in range [0.000000, 0.049989]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012036 in range [0.000000, 0.024072]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005617 in range [0.000000, 0.011233]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002809 in range [0.000000, 0.005618]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000963 in range [0.000000, 0.001925]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000482 in range [0.000000, 0.000964]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000241 in range [0.000000, 0.000483]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000237]...	no solution exists.
	Iteration #012: testing norm threshold 0.000178 in range [0.000118, 0.000237]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.743391205539047, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.664081538099203, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000178


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101971 in range [0.000000, 0.203942]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050986 in range [0.000000, 0.101972]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025494 in range [0.000000, 0.050987]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012747 in range [0.000000, 0.025495]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006051 in range [0.000000, 0.012103]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002926 in range [0.000000, 0.005851]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001463 in range [0.000000, 0.002927]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000716 in range [0.000000, 0.001432]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000359 in range [0.000000, 0.000717]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000174 in range [0.000000, 0.000348]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000083 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5907054873085326, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.6452584108904159, x10 : -0.10956036520361004, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.5896004250823188, x5 : -0.2261374843252266, x6 : 0, x7 : 0, x8 : 2, x9 : 0.6441533486642022, x10 : -0.09740667833908617, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090093 in range [0.000000, 0.180186]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040279 in range [0.000000, 0.080557]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017694 in range [0.000000, 0.035389]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008600 in range [0.000000, 0.017200]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004300 in range [0.000000, 0.008601]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001706 in range [0.000000, 0.003412]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000692 in range [0.000000, 0.001384]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000318 in range [0.000000, 0.000635]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000078 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7596525064862097, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.285906229000073, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.053376 in range [0.000000, 0.106752]...	solution exists & found.
	Iteration #003: testing norm threshold 0.025310 in range [0.000000, 0.050620]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012656 in range [0.000000, 0.025311]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006328 in range [0.000000, 0.012657]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003058 in range [0.000000, 0.006117]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001290 in range [0.000000, 0.002581]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000646 in range [0.000000, 0.001291]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000323 in range [0.000000, 0.000647]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000162 in range [0.000000, 0.000324]...	no solution exists.
	Iteration #011: testing norm threshold 0.000243 in range [0.000162, 0.000324]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 1.0, x12 : 36.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4159753764950125, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.37472734094902077, x11 : 1, x12 : 36, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000323


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149300 in range [0.000000, 0.298599]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073320 in range [0.000000, 0.146640]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036660 in range [0.000000, 0.073319]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018330 in range [0.000000, 0.036661]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008783 in range [0.000000, 0.017566]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004392 in range [0.000000, 0.008784]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002197 in range [0.000000, 0.004393]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000614 in range [0.000000, 0.001228]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000308 in range [0.000000, 0.000615]...	no solution exists.
	Iteration #011: testing norm threshold 0.000461 in range [0.000308, 0.000615]...	no solution exists.
	Iteration #012: testing norm threshold 0.000538 in range [0.000461, 0.000615]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.16734347311843026, x5 : -0.295641844938672, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.4509629068626354, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.22773748636245728, x5 : -0.22660899222027264, x6 : 0, x7 : 5, x8 : 0, x9 : -0.4528922788143446, x10 : -0.04519799321896654, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000538


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109649 in range [0.000000, 0.219299]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049773 in range [0.000000, 0.099546]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024592 in range [0.000000, 0.049183]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012237 in range [0.000000, 0.024474]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006119 in range [0.000000, 0.012238]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002847 in range [0.000000, 0.005694]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000310 in range [0.000000, 0.000620]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000143 in range [0.000000, 0.000287]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000072 in range [0.000000, 0.000144]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.6504955577861647, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6516587690715304, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5691463680870403, x10 : -0.2415622474336326, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170822 in range [0.000000, 0.341643]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085411 in range [0.000000, 0.170823]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042706 in range [0.000000, 0.085412]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020891 in range [0.000000, 0.041782]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010297 in range [0.000000, 0.020593]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005081 in range [0.000000, 0.010162]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002541 in range [0.000000, 0.005082]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001271 in range [0.000000, 0.002542]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000636 in range [0.000000, 0.001272]...	no solution exists.
	Iteration #011: testing norm threshold 0.000954 in range [0.000636, 0.001272]...	no solution exists.
	Iteration #012: testing norm threshold 0.001113 in range [0.000954, 0.001272]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001034 in range [0.000954, 0.001114]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.004904410169795361, x5 : -0.0003865160668867154, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.10598824651189874, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.008084787556706158, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.10280786912498795, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001113


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114799 in range [0.000000, 0.229599]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057388 in range [0.000000, 0.114775]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028694 in range [0.000000, 0.057389]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014253 in range [0.000000, 0.028506]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006852 in range [0.000000, 0.013705]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003427 in range [0.000000, 0.006853]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001475 in range [0.000000, 0.002951]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000340 in range [0.000000, 0.000681]...	no solution exists.
	Iteration #010: testing norm threshold 0.000511 in range [0.000340, 0.000681]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000426 in range [0.000340, 0.000512]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.3422778486015755, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2387910389104319, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.3651859313249588, x5 : -0.22841679078818294, x6 : 0, x7 : 0, x8 : 0, x9 : -0.23873025221853247, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000426


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152448 in range [0.000000, 0.304896]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071593 in range [0.000000, 0.143187]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035797 in range [0.000000, 0.071594]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017897 in range [0.000000, 0.035794]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008949 in range [0.000000, 0.017898]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004475 in range [0.000000, 0.008950]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002066 in range [0.000000, 0.004132]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000915 in range [0.000000, 0.001830]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000387 in range [0.000000, 0.000774]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000194 in range [0.000000, 0.000388]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000097 in range [0.000000, 0.000195]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.14651795222757966, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.031039418207232668, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.13327062379689975, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 1, x9 : -0.031039418207232668, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139677 in range [0.000000, 0.279353]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069838 in range [0.000000, 0.139676]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034919 in range [0.000000, 0.069838]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015739 in range [0.000000, 0.031477]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006253 in range [0.000000, 0.012506]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002905 in range [0.000000, 0.005809]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001122 in range [0.000000, 0.002244]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000419 in range [0.000000, 0.000838]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	no solution exists.
	Iteration #011: testing norm threshold 0.000315 in range [0.000210, 0.000420]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000263 in range [0.000210, 0.000316]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6796512870333556, x5 : -0.2240647955152089, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7046419084072113, x5 : -0.22469772011994277, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6293499938961664, x10 : -0.22277795611557194, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000315


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143748 in range [0.000000, 0.287496]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071756 in range [0.000000, 0.143511]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035878 in range [0.000000, 0.071757]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017915 in range [0.000000, 0.035831]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008958 in range [0.000000, 0.017916]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004480 in range [0.000000, 0.008959]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001910 in range [0.000000, 0.003821]...	no solution exists.
	Iteration #009: testing norm threshold 0.002866 in range [0.001910, 0.003821]...	no solution exists.
	Iteration #010: testing norm threshold 0.003343 in range [0.002866, 0.003821]...	no solution exists.
	Iteration #011: testing norm threshold 0.003582 in range [0.003343, 0.003821]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003463 in range [0.003343, 0.003583]...	no solution exists.
	Iteration #013: testing norm threshold 0.003523 in range [0.003463, 0.003583]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.053407048324586384, x5 : 0.9390622576160664, x6 : 1.0, x7 : 0.0, x8 : 4.0, x9 : -0.4244414233686099, x10 : 3.0061515998049666, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.11111456900835037, x5 : 0.0398755744099617, x6 : 1, x7 : 0, x8 : 4, x9 : -0.48632487654685974, x10 : 3.0037864090851936, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003582


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149775 in range [0.000000, 0.299550]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070688 in range [0.000000, 0.141376]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035040 in range [0.000000, 0.070079]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017520 in range [0.000000, 0.035041]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008495 in range [0.000000, 0.016990]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004248 in range [0.000000, 0.008496]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002124 in range [0.000000, 0.004249]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001013 in range [0.000000, 0.002026]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000507 in range [0.000000, 0.001014]...	no solution exists.
	Iteration #011: testing norm threshold 0.000760 in range [0.000507, 0.001014]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000634 in range [0.000507, 0.000761]...	no solution exists.
	Iteration #013: testing norm threshold 0.000698 in range [0.000634, 0.000761]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5005518073720403, x5 : -0.30458897611660485, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.40676043437259296, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5008784975073552, x5 : -0.4119545519351959, x6 : 0, x7 : 6, x8 : 0, x9 : -0.40676043437259296, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000698


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165785 in range [0.000000, 0.331570]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082374 in range [0.000000, 0.164747]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041187 in range [0.000000, 0.082375]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020213 in range [0.000000, 0.040425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009203 in range [0.000000, 0.018405]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004389 in range [0.000000, 0.008778]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001745 in range [0.000000, 0.003490]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000501 in range [0.000000, 0.001002]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000090 in range [0.000000, 0.000179]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7379627455277374, x5 : -0.4119545502517995, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7383447006490543, x5 : -0.4164281189441681, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6653448939323425, x10 : -0.3632967535512066, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.212491 in range [0.000000, 0.424983]...	solution exists & found.
	Iteration #003: testing norm threshold 0.106246 in range [0.000000, 0.212492]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052982 in range [0.000000, 0.105964]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020490 in range [0.000000, 0.040981]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007560 in range [0.000000, 0.015119]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003269 in range [0.000000, 0.006539]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001635 in range [0.000000, 0.003270]...	no solution exists.
	Iteration #009: testing norm threshold 0.002453 in range [0.001635, 0.003270]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002033 in range [0.001635, 0.002431]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001835 in range [0.001635, 0.002034]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001735 in range [0.001635, 0.001836]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001686 in range [0.001635, 0.001736]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3839288903832768, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2829935114004743, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.567193478345871, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2851090713506481, x10 : -0.04326862126725737, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001686


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148816 in range [0.000000, 0.297631]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074408 in range [0.000000, 0.148817]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036896 in range [0.000000, 0.073793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018343 in range [0.000000, 0.036687]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009172 in range [0.000000, 0.018344]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004587 in range [0.000000, 0.009173]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001847 in range [0.000000, 0.003694]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000924 in range [0.000000, 0.001848]...	no solution exists.
	Iteration #010: testing norm threshold 0.001386 in range [0.000924, 0.001848]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001090 in range [0.000924, 0.001257]...	no solution exists.
	Iteration #012: testing norm threshold 0.001174 in range [0.001090, 0.001257]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.21584611127322129, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.1943931914919835, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.26880824364741174, x5 : -0.20558066867272531, x6 : 0, x7 : 0, x8 : 0, x9 : 0.18932976402861568, x10 : -0.22004660218954086, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001174


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096724 in range [0.000000, 0.193448]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048222 in range [0.000000, 0.096444]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022539 in range [0.000000, 0.045078]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011270 in range [0.000000, 0.022540]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005570 in range [0.000000, 0.011140]...	no solution exists.
	Iteration #007: testing norm threshold 0.008355 in range [0.005570, 0.011140]...	solution exists & found.
	Iteration #008: testing norm threshold 0.006963 in range [0.005570, 0.008356]...	solution exists & found.
	Iteration #009: testing norm threshold 0.006267 in range [0.005570, 0.006964]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.4282664243598977, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.40656505944418697, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3699549585580826, x5 : -0.22406479716300964, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3866739422082901, x10 : -0.15375486016273499, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005667


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189529 in range [0.000000, 0.379059]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094765 in range [0.000000, 0.189530]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041543 in range [0.000000, 0.083085]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020712 in range [0.000000, 0.041425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010193 in range [0.000000, 0.020385]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003707 in range [0.000000, 0.007415]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001854 in range [0.000000, 0.003708]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000682 in range [0.000000, 0.001364]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000341 in range [0.000000, 0.000683]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000171 in range [0.000000, 0.000342]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.7198237168318065, x5 : 0.008560615111046171, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.8883720095856491, x10 : 0.08931486660544799, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.717844765534583, x5 : -0.013807212468236685, x6 : 0, x7 : 0, x8 : 1, x9 : 0.8863930582884256, x10 : 0.0873359153082245, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097805 in range [0.000000, 0.195609]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048903 in range [0.000000, 0.097806]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024452 in range [0.000000, 0.048904]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012226 in range [0.000000, 0.024453]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003512 in range [0.000000, 0.007024]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001756 in range [0.000000, 0.003513]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000833 in range [0.000000, 0.001666]...	no solution exists.
	Iteration #009: testing norm threshold 0.001250 in range [0.000833, 0.001666]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001042 in range [0.000833, 0.001251]...	no solution exists.
	Iteration #011: testing norm threshold 0.001146 in range [0.001042, 0.001251]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001094 in range [0.001042, 0.001147]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.31728722353255473, x5 : 0.03540200864484483, x6 : 2.0, x7 : 2.0, x8 : 3.0, x9 : -0.4332819178666184, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.31728723645210266, x5 : -0.30906254053115845, x6 : 2, x7 : 2, x8 : 3, x9 : -0.43328194370571427, x10 : -0.20222766717302562, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001094


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141192 in range [0.000000, 0.282383]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060955 in range [0.000000, 0.121910]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030478 in range [0.000000, 0.060956]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014622 in range [0.000000, 0.029244]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007311 in range [0.000000, 0.014623]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003375 in range [0.000000, 0.006751]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001504 in range [0.000000, 0.003008]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000752 in range [0.000000, 0.001505]...	no solution exists.
	Iteration #010: testing norm threshold 0.001129 in range [0.000752, 0.001505]...	no solution exists.
	Iteration #011: testing norm threshold 0.001317 in range [0.001129, 0.001505]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001223 in range [0.001129, 0.001318]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.23398513996915224, x5 : 0.3932872557621603, x6 : 1.0, x7 : 2.0, x8 : 0.0, x9 : -0.4686438958586523, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.22667638950310975, x5 : 0.3932872557621603, x6 : 1, x7 : 2, x8 : 0, x9 : -0.6520841419696808, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001317


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131096 in range [0.000000, 0.262192]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064606 in range [0.000000, 0.129212]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031802 in range [0.000000, 0.063604]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015801 in range [0.000000, 0.031602]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007901 in range [0.000000, 0.015802]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003951 in range [0.000000, 0.007902]...	no solution exists.
	Iteration #008: testing norm threshold 0.005927 in range [0.003951, 0.007902]...	no solution exists.
	Iteration #009: testing norm threshold 0.006914 in range [0.005927, 0.007902]...	solution exists & found.
	Iteration #010: testing norm threshold 0.006421 in range [0.005927, 0.006915]...	solution exists & found.
	Iteration #011: testing norm threshold 0.006083 in range [0.005927, 0.006240]...	solution exists & found.
	Iteration #012: testing norm threshold 0.005992 in range [0.005927, 0.006057]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.5615497580613417, x5 : 1.9500880807224827, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : 0.7204026141234879, x10 : 5.503140621407582, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.20274686068296432, x5 : 2.593595977861478, x6 : 3, x7 : 5, x8 : 0, x9 : 0.716614504265855, x10 : 5.494731956825361, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.006056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151983 in range [0.000000, 0.303966]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075788 in range [0.000000, 0.151576]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037469 in range [0.000000, 0.074938]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018735 in range [0.000000, 0.037470]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008454 in range [0.000000, 0.016908]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004227 in range [0.000000, 0.008455]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002114 in range [0.000000, 0.004228]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001058 in range [0.000000, 0.002115]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000529 in range [0.000000, 0.001059]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	no solution exists.
	Iteration #012: testing norm threshold 0.000398 in range [0.000265, 0.000530]...	no solution exists.
	Iteration #013: testing norm threshold 0.000464 in range [0.000398, 0.000530]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.5653398650003418, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.5735103331813058, x10 : 0.15560661054180067, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.554927110671997, x5 : -0.21064409613609314, x6 : 0, x7 : 0, x8 : 6, x9 : 1.5647788350635297, x10 : 0.056168995797634125, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000464


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098936 in range [0.000000, 0.197872]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046850 in range [0.000000, 0.093701]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023426 in range [0.000000, 0.046851]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011713 in range [0.000000, 0.023427]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004240 in range [0.000000, 0.008481]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002118 in range [0.000000, 0.004236]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001060 in range [0.000000, 0.002119]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000465 in range [0.000000, 0.000931]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000222 in range [0.000000, 0.000444]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000111 in range [0.000000, 0.000223]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4464054530558286, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.40676043437259296, x10 : -0.1537548611611785, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4471805564375407, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 5, x9 : -0.407535537754305, x10 : -0.16150749995763844, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000047


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143834 in range [0.000000, 0.287668]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071478 in range [0.000000, 0.142955]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033567 in range [0.000000, 0.067135]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016459 in range [0.000000, 0.032918]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008230 in range [0.000000, 0.016460]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003752 in range [0.000000, 0.007505]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000205 in range [0.000000, 0.000410]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000103 in range [0.000000, 0.000206]...	no solution exists.
	Iteration #010: testing norm threshold 0.000155 in range [0.000103, 0.000206]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.3224832384724706, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7267387275333854, x5 : -0.33590394258499146, x6 : 2, x7 : 6, x8 : 0, x9 : -0.660924643278122, x10 : -0.3186729465361091, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000205


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154144 in range [0.000000, 0.308289]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077060 in range [0.000000, 0.154120]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036301 in range [0.000000, 0.072603]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018151 in range [0.000000, 0.036302]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009076 in range [0.000000, 0.018152]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004539 in range [0.000000, 0.009077]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002270 in range [0.000000, 0.004540]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001135 in range [0.000000, 0.002271]...	no solution exists.
	Iteration #010: testing norm threshold 0.001703 in range [0.001135, 0.002271]...	no solution exists.
	Iteration #011: testing norm threshold 0.001987 in range [0.001703, 0.002271]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001845 in range [0.001703, 0.001988]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001775 in range [0.001703, 0.001846]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.5736700733566817, x5 : -0.4298488126076653, x6 : 0.0, x7 : 5.0, x8 : 1.0, x9 : 1.7945226956315181, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 1.5746969984130483, x5 : -0.28911442238253676, x6 : 0, x7 : 5, x8 : 1, x9 : 1.546988844871521, x10 : -0.3395276137010487, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001845


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104877 in range [0.000000, 0.209753]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052439 in range [0.000000, 0.104878]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025175 in range [0.000000, 0.050349]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012392 in range [0.000000, 0.024785]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005512 in range [0.000000, 0.011025]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002437 in range [0.000000, 0.004874]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001219 in range [0.000000, 0.002438]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000581 in range [0.000000, 0.001163]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000291 in range [0.000000, 0.000582]...	no solution exists.
	Iteration #011: testing norm threshold 0.000437 in range [0.000291, 0.000582]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000364 in range [0.000291, 0.000438]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 2.7440643474224875, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 3.036612172601709, x10 : -0.04326862126725737, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 2.7421360262825765, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 0, x9 : 3.0346838514617978, x10 : -0.05431724339723587, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000437


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110607 in range [0.000000, 0.221215]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055304 in range [0.000000, 0.110608]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025585 in range [0.000000, 0.051169]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012700 in range [0.000000, 0.025401]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006351 in range [0.000000, 0.012701]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002538 in range [0.000000, 0.005075]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001254 in range [0.000000, 0.002508]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000490 in range [0.000000, 0.000980]...	no solution exists.
	Iteration #010: testing norm threshold 0.000735 in range [0.000490, 0.000980]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000613 in range [0.000490, 0.000736]...	no solution exists.
	Iteration #012: testing norm threshold 0.000674 in range [0.000613, 0.000736]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4963867031938701, x5 : 0.16960897631383814, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : 1.1057882736295224, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.608844518661499, x5 : 0.1711925221115703, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5425349434381843, x10 : 1.1026211820340581, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000674


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118525 in range [0.000000, 0.237051]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058803 in range [0.000000, 0.117605]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028301 in range [0.000000, 0.056602]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014082 in range [0.000000, 0.028164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006588 in range [0.000000, 0.013177]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002161 in range [0.000000, 0.004322]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001081 in range [0.000000, 0.002162]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000541 in range [0.000000, 0.001082]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000271 in range [0.000000, 0.000542]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	no solution exists.
	Iteration #012: testing norm threshold 0.000204 in range [0.000136, 0.000272]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.3033132990147939, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.4463472846852251, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.3025459319242894, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 1, x9 : 0.4455799175947206, x10 : -0.21966292155227896, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000204


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088999 in range [0.000000, 0.177998]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044500 in range [0.000000, 0.089000]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022250 in range [0.000000, 0.044501]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011126 in range [0.000000, 0.022251]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001139 in range [0.000000, 0.002278]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000388 in range [0.000000, 0.000776]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000173 in range [0.000000, 0.000347]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000087 in range [0.000000, 0.000174]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.392259098739617, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3095149948944997, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.39270723547763464, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3046466119974102, x10 : -0.26401703268609084, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156190 in range [0.000000, 0.312381]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078096 in range [0.000000, 0.156191]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039048 in range [0.000000, 0.078097]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019524 in range [0.000000, 0.039047]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009210 in range [0.000000, 0.018419]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003985 in range [0.000000, 0.007971]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001931 in range [0.000000, 0.003863]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000360 in range [0.000000, 0.000720]...	no solution exists.
	Iteration #010: testing norm threshold 0.000540 in range [0.000360, 0.000720]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000450 in range [0.000360, 0.000541]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.24214385307631545, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6900640428066254, x5 : -0.3001154065132141, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6469697432904198, x10 : -0.24006130565938597, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000450


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091730 in range [0.000000, 0.183461]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042439 in range [0.000000, 0.084878]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021102 in range [0.000000, 0.042204]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009845 in range [0.000000, 0.019691]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004917 in range [0.000000, 0.009834]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002459 in range [0.000000, 0.004918]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000362 in range [0.000000, 0.000724]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000182 in range [0.000000, 0.000363]...	no solution exists.
	Iteration #010: testing norm threshold 0.000272 in range [0.000182, 0.000363]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4963867031938701, x5 : 4.893694238262404, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.495577092888204, x5 : 4.892075017651071, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000362


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117720 in range [0.000000, 0.235439]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056823 in range [0.000000, 0.113646]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027036 in range [0.000000, 0.054072]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013385 in range [0.000000, 0.026770]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006541 in range [0.000000, 0.013081]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003271 in range [0.000000, 0.006542]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000647 in range [0.000000, 0.001293]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000324 in range [0.000000, 0.000648]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000162 in range [0.000000, 0.000325]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000163]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.32145232771072485, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.21668980266541069, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.3175879858017496, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2207103169524147, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000162


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189151 in range [0.000000, 0.378302]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094129 in range [0.000000, 0.188258]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047016 in range [0.000000, 0.094032]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021461 in range [0.000000, 0.042923]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010731 in range [0.000000, 0.021462]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002399 in range [0.000000, 0.004798]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001200 in range [0.000000, 0.002400]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000514 in range [0.000000, 0.001029]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000253 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	no solution exists.
	Iteration #012: testing norm threshold 0.000191 in range [0.000127, 0.000254]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7546231622404179, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.36401276029929064, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000253


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143185 in range [0.000000, 0.286370]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067209 in range [0.000000, 0.134419]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033549 in range [0.000000, 0.067099]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016070 in range [0.000000, 0.032140]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007950 in range [0.000000, 0.015900]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003749 in range [0.000000, 0.007498]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001875 in range [0.000000, 0.003750]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000672 in range [0.000000, 0.001344]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000336 in range [0.000000, 0.000673]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000169 in range [0.000000, 0.000337]...	no solution exists.
	Iteration #012: testing norm threshold 0.000253 in range [0.000169, 0.000337]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.2381502441473224, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.203429060918398, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.23886710702976824, x5 : -0.25913645545117997, x6 : 0, x7 : 0, x8 : 0, x9 : -0.20446988693397794, x10 : -0.24590414283719997, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000253


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142890 in range [0.000000, 0.285780]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068922 in range [0.000000, 0.137843]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034461 in range [0.000000, 0.068923]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017231 in range [0.000000, 0.034462]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008616 in range [0.000000, 0.017232]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004064 in range [0.000000, 0.008128]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001648 in range [0.000000, 0.003295]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000824 in range [0.000000, 0.001649]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000413 in range [0.000000, 0.000825]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000207 in range [0.000000, 0.000414]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000104 in range [0.000000, 0.000208]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000052 in range [0.000000, 0.000105]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5380377449755713, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.5040058738506862, x10 : -0.04326862126725737, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5377710950455176, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 5, x9 : -0.4995323122761441, x10 : -0.04326862126725737, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000037


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189489 in range [0.000000, 0.378978]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094168 in range [0.000000, 0.188337]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046348 in range [0.000000, 0.092696]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023103 in range [0.000000, 0.046207]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009877 in range [0.000000, 0.019754]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004332 in range [0.000000, 0.008665]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002155 in range [0.000000, 0.004311]...	no solution exists.
	Iteration #009: testing norm threshold 0.003233 in range [0.002155, 0.004311]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002695 in range [0.002155, 0.003234]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002425 in range [0.002155, 0.002696]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002291 in range [0.002155, 0.002426]...	no solution exists.
	Iteration #013: testing norm threshold 0.002359 in range [0.002291, 0.002426]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.01175600654288514, x5 : -0.15248774609174578, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : 0.057365526772852116, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.040950634163491303, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : 0.06377965269672113, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002425


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095495 in range [0.000000, 0.190991]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044333 in range [0.000000, 0.088666]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020342 in range [0.000000, 0.040685]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009642 in range [0.000000, 0.019284]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004292 in range [0.000000, 0.008583]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001324 in range [0.000000, 0.002648]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000361 in range [0.000000, 0.000722]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000181 in range [0.000000, 0.000362]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7254674329932271, x5 : -0.3135361072945377, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7409510475321714, x5 : -0.3448510766029358, x6 : 4, x7 : 6, x8 : 0, x9 : -0.662454045331074, x10 : -0.1121254524643825, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000181


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132080 in range [0.000000, 0.264160]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057921 in range [0.000000, 0.115842]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028728 in range [0.000000, 0.057456]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013526 in range [0.000000, 0.027052]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002663 in range [0.000000, 0.005325]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001332 in range [0.000000, 0.002664]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000641 in range [0.000000, 0.001282]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000321 in range [0.000000, 0.000642]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000161 in range [0.000000, 0.000322]...	no solution exists.
	Iteration #011: testing norm threshold 0.000241 in range [0.000161, 0.000322]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5921840992917831, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.3084355970126681, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5482596238569424, x5 : -0.4030074179172516, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5572397167548202, x10 : -0.3086264729287512, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000321


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133255 in range [0.000000, 0.266510]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063087 in range [0.000000, 0.126173]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031469 in range [0.000000, 0.062937]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015735 in range [0.000000, 0.031470]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007818 in range [0.000000, 0.015636]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003823 in range [0.000000, 0.007645]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001912 in range [0.000000, 0.003824]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000832 in range [0.000000, 0.001663]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000416 in range [0.000000, 0.000833]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000209 in range [0.000000, 0.000417]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000105 in range [0.000000, 0.000210]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 1.0, x4 : -0.625504932717144, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 1, x4 : -0.6232772701311667, x5 : -0.39390708061309604, x6 : 0, x7 : 0, x8 : 0, x9 : -0.539196312088522, x10 : -0.3635335945416053, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100373 in range [0.000000, 0.200746]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050187 in range [0.000000, 0.100374]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024959 in range [0.000000, 0.049919]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012480 in range [0.000000, 0.024960]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006241 in range [0.000000, 0.012481]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002627 in range [0.000000, 0.005254]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000968 in range [0.000000, 0.001936]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000410 in range [0.000000, 0.000819]...	no solution exists.
	Iteration #010: testing norm threshold 0.000614 in range [0.000410, 0.000819]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000512 in range [0.000410, 0.000615]...	no solution exists.
	Iteration #012: testing norm threshold 0.000564 in range [0.000512, 0.000615]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.19722340198141025, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7650358974933624, x5 : -0.19722340198141025, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6150745430122428, x10 : 0.19923861856291855, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000564


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128900 in range [0.000000, 0.257799]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061985 in range [0.000000, 0.123970]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030530 in range [0.000000, 0.061060]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014506 in range [0.000000, 0.029011]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007147 in range [0.000000, 0.014294]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003574 in range [0.000000, 0.007148]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001787 in range [0.000000, 0.003575]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000894 in range [0.000000, 0.001788]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000225 in range [0.000000, 0.000450]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7683618130547172, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6910271706444389, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069954 in range [0.000000, 0.139909]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034944 in range [0.000000, 0.069888]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017473 in range [0.000000, 0.034945]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008718 in range [0.000000, 0.017435]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001273 in range [0.000000, 0.002547]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000637 in range [0.000000, 0.001274]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000313 in range [0.000000, 0.000626]...	no solution exists.
	Iteration #009: testing norm threshold 0.000470 in range [0.000313, 0.000626]...	no solution exists.
	Iteration #010: testing norm threshold 0.000548 in range [0.000470, 0.000626]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.08672788174994739, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.2164944277370047, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 0.01592111063655466, x5 : -0.3403775095939636, x6 : 0, x7 : 0, x8 : 3, x9 : 0.2164944277370047, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000625


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094619 in range [0.000000, 0.189239]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047310 in range [0.000000, 0.094620]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023656 in range [0.000000, 0.047311]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011828 in range [0.000000, 0.023657]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005341 in range [0.000000, 0.010683]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002671 in range [0.000000, 0.005342]...	no solution exists.
	Iteration #008: testing norm threshold 0.004007 in range [0.002671, 0.005342]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003244 in range [0.002671, 0.003817]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002958 in range [0.002671, 0.003245]...	no solution exists.
	Iteration #011: testing norm threshold 0.003102 in range [0.002958, 0.003245]...	no solution exists.
	Iteration #012: testing norm threshold 0.003173 in range [0.003102, 0.003245]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.4907429870324495, x5 : 3.4711003809710737, x6 : 2.0, x7 : 1.0, x8 : 0.0, x9 : 0.2518564057290386, x10 : 0.3986763383084272, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.48780670699871487, x5 : 3.468164100937339, x6 : 2, x7 : 1, x8 : 0, x9 : -0.3139352425932884, x10 : 0.38851540704292387, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003164


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.207288 in range [0.000000, 0.414576]...	solution exists & found.
	Iteration #003: testing norm threshold 0.101261 in range [0.000000, 0.202522]...	solution exists & found.
	Iteration #004: testing norm threshold 0.050631 in range [0.000000, 0.101262]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025316 in range [0.000000, 0.050632]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012327 in range [0.000000, 0.024654]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006164 in range [0.000000, 0.012328]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002907 in range [0.000000, 0.005815]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001454 in range [0.000000, 0.002908]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000728 in range [0.000000, 0.001455]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000303 in range [0.000000, 0.000606]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.2714710775726833, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.25647202790644885, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.2723873856434982, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2586020420604614, x10 : -0.24501309282116923, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103180 in range [0.000000, 0.206360]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051212 in range [0.000000, 0.102425]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025350 in range [0.000000, 0.050700]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012374 in range [0.000000, 0.024748]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006187 in range [0.000000, 0.012375]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003094 in range [0.000000, 0.006188]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001548 in range [0.000000, 0.003095]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000718 in range [0.000000, 0.001436]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000360 in range [0.000000, 0.000719]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000157]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.37976378620510665, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3271959838905167, x10 : -0.2642411010550996, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.37976378620510665, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3382465988397598, x10 : -0.27528972923755646, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000156


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097482 in range [0.000000, 0.194964]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048473 in range [0.000000, 0.096946]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021290 in range [0.000000, 0.042580]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009647 in range [0.000000, 0.019294]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004816 in range [0.000000, 0.009632]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002167 in range [0.000000, 0.004334]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001069 in range [0.000000, 0.002137]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000535 in range [0.000000, 0.001070]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000268 in range [0.000000, 0.000536]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000050 in range [0.000000, 0.000100]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5963492034699531, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.04326862126725737, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5991133060443966, x5 : -0.30906254053115845, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.04326862126725737, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000050


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087615 in range [0.000000, 0.175231]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043808 in range [0.000000, 0.087616]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021905 in range [0.000000, 0.043809]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008257 in range [0.000000, 0.016515]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002165 in range [0.000000, 0.004331]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000596 in range [0.000000, 0.001193]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000246 in range [0.000000, 0.000492]...	no solution exists.
	Iteration #009: testing norm threshold 0.000369 in range [0.000246, 0.000492]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000308 in range [0.000246, 0.000370]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4547356614121689, x5 : -0.376166025540068, x6 : 0.0, x7 : 1.0, x8 : 1.0, x9 : -0.5526285935897328, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.45543748706057324, x5 : -0.4119545519351959, x6 : 0, x7 : 1, x8 : 1, x9 : -0.5143546652497281, x10 : -0.24284567872471974, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000308


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134982 in range [0.000000, 0.269964]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067491 in range [0.000000, 0.134983]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033728 in range [0.000000, 0.067456]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016427 in range [0.000000, 0.032854]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008214 in range [0.000000, 0.016428]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004108 in range [0.000000, 0.008215]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002009 in range [0.000000, 0.004017]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000569 in range [0.000000, 0.001138]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000285 in range [0.000000, 0.000570]...	no solution exists.
	Iteration #011: testing norm threshold 0.000427 in range [0.000285, 0.000570]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000357 in range [0.000285, 0.000428]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.13459348373588, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6238362097973729, x5 : -0.2911682724952698, x6 : 1, x7 : 4, x8 : 0, x9 : -0.5427052976822625, x10 : -0.37472734094902077, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000427


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118613 in range [0.000000, 0.237226]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059307 in range [0.000000, 0.118614]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027578 in range [0.000000, 0.055156]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013790 in range [0.000000, 0.027579]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006895 in range [0.000000, 0.013791]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003192 in range [0.000000, 0.006383]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001520 in range [0.000000, 0.003041]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000534 in range [0.000000, 0.001068]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000266 in range [0.000000, 0.000532]...	no solution exists.
	Iteration #011: testing norm threshold 0.000399 in range [0.000266, 0.000532]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000333 in range [0.000266, 0.000400]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6838163912115257, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6731454067387915, x5 : -0.3132778637566901, x6 : 0, x7 : 6, x8 : 0, x9 : -0.60150955711222, x10 : -0.363420464889083, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000399


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.193062 in range [0.000000, 0.386123]...	solution exists & found.
	Iteration #003: testing norm threshold 0.096531 in range [0.000000, 0.193063]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048078 in range [0.000000, 0.096157]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023757 in range [0.000000, 0.047515]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011879 in range [0.000000, 0.023758]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005940 in range [0.000000, 0.011880]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002743 in range [0.000000, 0.005486]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001369 in range [0.000000, 0.002739]...	no solution exists.
	Iteration #010: testing norm threshold 0.002054 in range [0.001369, 0.002739]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001712 in range [0.001369, 0.002055]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.83190653240323, x5 : -0.12564635255794712, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.989013574587705, x10 : 0.2439956024569376, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.8256588578224182, x5 : -0.27564608195098117, x6 : 0, x7 : 0, x8 : 4, x9 : 1.9691224694252014, x10 : -0.021171373140532523, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001448


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092069 in range [0.000000, 0.184138]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042572 in range [0.000000, 0.085144]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021287 in range [0.000000, 0.042573]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010644 in range [0.000000, 0.021288]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005322 in range [0.000000, 0.010645]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002646 in range [0.000000, 0.005292]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001226 in range [0.000000, 0.002452]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000613 in range [0.000000, 0.001227]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000307 in range [0.000000, 0.000614]...	no solution exists.
	Iteration #011: testing norm threshold 0.000461 in range [0.000307, 0.000614]...	no solution exists.
	Iteration #012: testing norm threshold 0.000538 in range [0.000461, 0.000614]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.940574238274823, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.9414149765737, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 0.940574238274823, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 0.9403920850787418, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000613


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133386 in range [0.000000, 0.266771]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066693 in range [0.000000, 0.133387]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032550 in range [0.000000, 0.065101]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015827 in range [0.000000, 0.031655]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007574 in range [0.000000, 0.015148]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003461 in range [0.000000, 0.006922]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001640 in range [0.000000, 0.003280]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000322 in range [0.000000, 0.000643]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000161 in range [0.000000, 0.000323]...	no solution exists.
	Iteration #011: testing norm threshold 0.000242 in range [0.000161, 0.000323]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.25064555668183275, x5 : 0.6974897158118785, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.2494802116258483, x5 : 0.6943751990145212, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5822645938811156, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000223


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150847 in range [0.000000, 0.301695]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065246 in range [0.000000, 0.130493]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032328 in range [0.000000, 0.064657]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013225 in range [0.000000, 0.026451]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006613 in range [0.000000, 0.013226]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002052 in range [0.000000, 0.004104]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001021 in range [0.000000, 0.002042]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000511 in range [0.000000, 0.001022]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000512]...	no solution exists.
	Iteration #011: testing norm threshold 0.000384 in range [0.000256, 0.000512]...	no solution exists.
	Iteration #012: testing norm threshold 0.000448 in range [0.000384, 0.000512]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5838538909354427, x5 : -0.01828077842275249, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : -0.020363305106559863, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000436


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146334 in range [0.000000, 0.292668]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069344 in range [0.000000, 0.138688]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030153 in range [0.000000, 0.060307]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015077 in range [0.000000, 0.030154]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007539 in range [0.000000, 0.015078]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003283 in range [0.000000, 0.006567]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001642 in range [0.000000, 0.003284]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000822 in range [0.000000, 0.001643]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000411 in range [0.000000, 0.000823]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000206 in range [0.000000, 0.000412]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000104 in range [0.000000, 0.000207]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000052 in range [0.000000, 0.000105]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4509629068626354, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.5192947685718536, x5 : -0.3257963188311034, x6 : 0, x7 : 0, x8 : 6, x9 : -0.45038266199466354, x10 : -0.37472734094902077, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126756 in range [0.000000, 0.253512]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062503 in range [0.000000, 0.125005]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031252 in range [0.000000, 0.062504]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013070 in range [0.000000, 0.026141]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006536 in range [0.000000, 0.013071]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003268 in range [0.000000, 0.006537]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001497 in range [0.000000, 0.002994]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000075 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.6504955577861647, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.6056715605777837, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.651815336816538, x5 : -0.39538006692630695, x6 : 0, x7 : 0, x8 : 4, x9 : -0.61029811349032, x10 : -0.31948421895504, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120357 in range [0.000000, 0.240715]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060179 in range [0.000000, 0.120358]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030090 in range [0.000000, 0.060180]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015046 in range [0.000000, 0.030091]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006741 in range [0.000000, 0.013482]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003371 in range [0.000000, 0.006742]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001686 in range [0.000000, 0.003372]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000843 in range [0.000000, 0.001687]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000381 in range [0.000000, 0.000763]...	no solution exists.
	Iteration #011: testing norm threshold 0.000572 in range [0.000381, 0.000763]...	no solution exists.
	Iteration #012: testing norm threshold 0.000667 in range [0.000572, 0.000763]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5713585784009324, x5 : 0.008560615111046171, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5776062309741974, x5 : 0.1001887209713459, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.24656211584806442, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000762


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156241 in range [0.000000, 0.312482]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077198 in range [0.000000, 0.154396]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038599 in range [0.000000, 0.077199]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019085 in range [0.000000, 0.038169]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009543 in range [0.000000, 0.019086]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004626 in range [0.000000, 0.009252]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001387 in range [0.000000, 0.002774]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000554 in range [0.000000, 0.001107]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000277 in range [0.000000, 0.000555]...	no solution exists.
	Iteration #011: testing norm threshold 0.000416 in range [0.000277, 0.000555]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000335 in range [0.000277, 0.000392]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.4824127786761093, x5 : -0.295641844938672, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 0.6364179163924074, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.4678349196910858, x5 : -0.3403775095939636, x6 : 0, x7 : 1, x8 : 0, x9 : 0.6360833537225834, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000391


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101459 in range [0.000000, 0.202918]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050730 in range [0.000000, 0.101460]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025358 in range [0.000000, 0.050717]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012588 in range [0.000000, 0.025175]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006294 in range [0.000000, 0.012589]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003148 in range [0.000000, 0.006295]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001561 in range [0.000000, 0.003123]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000781 in range [0.000000, 0.001562]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000141 in range [0.000000, 0.000282]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.15901326476209, x5 : -0.3672188943621351, x6 : 0.0, x7 : 4.0, x8 : 2.0, x9 : -0.05314065445225386, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.16080355140784, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 2, x9 : -0.0539150309815438, x10 : -0.20822360323088004, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115498 in range [0.000000, 0.230996]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054148 in range [0.000000, 0.108296]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027074 in range [0.000000, 0.054149]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013538 in range [0.000000, 0.027075]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006709 in range [0.000000, 0.013419]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002779 in range [0.000000, 0.005558]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001390 in range [0.000000, 0.002780]...	no solution exists.
	Iteration #009: testing norm threshold 0.002085 in range [0.001390, 0.002780]...	no solution exists.
	Iteration #010: testing norm threshold 0.002432 in range [0.002085, 0.002780]...	no solution exists.
	Iteration #011: testing norm threshold 0.002606 in range [0.002432, 0.002780]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002520 in range [0.002432, 0.002607]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.07987628537685762, x5 : 1.0732692252850595, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : 3.3376103194867297, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4276624917984009, x5 : 1.0643853040601625, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6255626678466797, x10 : 3.328726398261833, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002512


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153055 in range [0.000000, 0.306109]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076528 in range [0.000000, 0.153056]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037439 in range [0.000000, 0.074878]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018696 in range [0.000000, 0.037392]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008849 in range [0.000000, 0.017698]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004425 in range [0.000000, 0.008850]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002213 in range [0.000000, 0.004426]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001107 in range [0.000000, 0.002214]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000196 in range [0.000000, 0.000391]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000197]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.37976378620510665, x5 : -0.07196356549034981, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.5526285935897328, x10 : 0.31028734639329025, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.40683695673942566, x5 : -0.07120223095018406, x6 : 0, x7 : 0, x8 : 1, x9 : -0.5583169205831822, x10 : 0.3079922509148843, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000196


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111781 in range [0.000000, 0.223563]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055820 in range [0.000000, 0.111640]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024384 in range [0.000000, 0.048769]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012193 in range [0.000000, 0.024385]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006097 in range [0.000000, 0.012194]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002777 in range [0.000000, 0.005553]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001258 in range [0.000000, 0.002515]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000250 in range [0.000000, 0.000499]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000125 in range [0.000000, 0.000251]...	no solution exists.
	Iteration #011: testing norm threshold 0.000188 in range [0.000125, 0.000251]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.3314303696504035, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7733661234378815, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37332675994386516, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000188


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127799 in range [0.000000, 0.255599]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063274 in range [0.000000, 0.126548]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031418 in range [0.000000, 0.062836]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015505 in range [0.000000, 0.031011]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006653 in range [0.000000, 0.013306]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001960 in range [0.000000, 0.003920]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000980 in range [0.000000, 0.001961]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000437 in range [0.000000, 0.000874]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000219 in range [0.000000, 0.000438]...	no solution exists.
	Iteration #011: testing norm threshold 0.000329 in range [0.000219, 0.000438]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000272 in range [0.000219, 0.000324]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6213398285389738, x5 : -0.09880495902414847, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5858062269716715, x5 : -0.09873985895178722, x6 : 1, x7 : 3, x8 : 0, x9 : -0.6762653055220103, x10 : -0.36911101863229423, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000272


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134478 in range [0.000000, 0.268957]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067240 in range [0.000000, 0.134479]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033124 in range [0.000000, 0.066247]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016248 in range [0.000000, 0.032497]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007885 in range [0.000000, 0.015770]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002045 in range [0.000000, 0.004090]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001023 in range [0.000000, 0.002046]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000512 in range [0.000000, 0.001024]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000513]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000129 in range [0.000000, 0.000257]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000065 in range [0.000000, 0.000130]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.07423256921543701, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.17671220249596656, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.07440636079003368, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 0.17688599407056324, x10 : -0.19829694026794029, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000129


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117093 in range [0.000000, 0.234186]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057893 in range [0.000000, 0.115785]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028871 in range [0.000000, 0.057742]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014291 in range [0.000000, 0.028581]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007146 in range [0.000000, 0.014292]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002136 in range [0.000000, 0.004272]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001067 in range [0.000000, 0.002134]...	no solution exists.
	Iteration #009: testing norm threshold 0.001601 in range [0.001067, 0.002134]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001154 in range [0.001067, 0.001241]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 0.045076839968246143, x5 : -0.3493246320062693, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.14135022450393264, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.1319400891661644, x5 : -0.3716924488544464, x6 : 0, x7 : 4, x8 : 0, x9 : 0.1444740517825467, x10 : -0.19578090340948637, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001154


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136877 in range [0.000000, 0.273755]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068439 in range [0.000000, 0.136878]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034220 in range [0.000000, 0.068440]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017111 in range [0.000000, 0.034221]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008556 in range [0.000000, 0.017112]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004278 in range [0.000000, 0.008557]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002140 in range [0.000000, 0.004279]...	no solution exists.
	Iteration #009: testing norm threshold 0.003210 in range [0.002140, 0.004279]...	no solution exists.
	Iteration #010: testing norm threshold 0.003744 in range [0.003210, 0.004279]...	no solution exists.
	Iteration #011: testing norm threshold 0.004012 in range [0.003744, 0.004279]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003879 in range [0.003744, 0.004013]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003812 in range [0.003744, 0.003880]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.7610997613743382, x5 : 2.4511274266867247, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 1.9227098658526407, x10 : 0.3544818423508587, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.486202895641327, x5 : 2.4511274266867247, x6 : 1, x7 : 1, x8 : 0, x9 : 1.6729658842086792, x10 : 0.11141211539506912, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003784


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.211437 in range [0.000000, 0.422874]...	solution exists & found.
	Iteration #003: testing norm threshold 0.105719 in range [0.000000, 0.211438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052860 in range [0.000000, 0.105720]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026382 in range [0.000000, 0.052763]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013191 in range [0.000000, 0.026383]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006357 in range [0.000000, 0.012715]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002936 in range [0.000000, 0.005873]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001424 in range [0.000000, 0.002847]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000712 in range [0.000000, 0.001425]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000357 in range [0.000000, 0.000713]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	no solution exists.
	Iteration #013: testing norm threshold 0.000268 in range [0.000179, 0.000358]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 1.6153211151383833, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.8387251681215608, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 1.6136422115186104, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 3, x9 : 1.837046264501788, x10 : 0.19043138347101868, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000357


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090326 in range [0.000000, 0.180653]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045164 in range [0.000000, 0.090327]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022243 in range [0.000000, 0.044486]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011122 in range [0.000000, 0.022244]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005393 in range [0.000000, 0.010786]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002568 in range [0.000000, 0.005135]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000489 in range [0.000000, 0.000979]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	no solution exists.
	Iteration #011: testing norm threshold 0.000185 in range [0.000123, 0.000246]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.08404138955502774, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.008938181962211472, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.0837674650081915, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.009486031055883939, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.081132 in range [0.000000, 0.162263]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038646 in range [0.000000, 0.077293]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018399 in range [0.000000, 0.036798]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008442 in range [0.000000, 0.016884]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003345 in range [0.000000, 0.006690]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001578 in range [0.000000, 0.003156]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000790 in range [0.000000, 0.001579]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000158 in range [0.000000, 0.000317]...	no solution exists.
	Iteration #010: testing norm threshold 0.000238 in range [0.000158, 0.000317]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5130471199065506, x5 : 0.11592618924624082, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5130471199065506, x5 : 0.09797858074307442, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : 0.9687845649049188, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000316


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147065 in range [0.000000, 0.294130]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072228 in range [0.000000, 0.144457]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036110 in range [0.000000, 0.072221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018056 in range [0.000000, 0.036111]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008318 in range [0.000000, 0.016635]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004159 in range [0.000000, 0.008319]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001577 in range [0.000000, 0.003154]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000789 in range [0.000000, 0.001578]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000395 in range [0.000000, 0.000790]...	no solution exists.
	Iteration #011: testing norm threshold 0.000593 in range [0.000395, 0.000790]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000494 in range [0.000395, 0.000594]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000445 in range [0.000395, 0.000495]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : -0.13459348373588, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6692385375499725, x5 : -0.2553797662258148, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6895774650115034, x10 : -0.32845028850532265, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000494


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157255 in range [0.000000, 0.314510]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078603 in range [0.000000, 0.157205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034888 in range [0.000000, 0.069775]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017359 in range [0.000000, 0.034717]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008679 in range [0.000000, 0.017357]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004340 in range [0.000000, 0.008680]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002170 in range [0.000000, 0.004341]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000858 in range [0.000000, 0.001715]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000429 in range [0.000000, 0.000859]...	no solution exists.
	Iteration #011: testing norm threshold 0.000644 in range [0.000429, 0.000859]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000537 in range [0.000429, 0.000645]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000484 in range [0.000429, 0.000538]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 1.8110810115123797, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.04647678882476, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 1.8027507662773132, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : 2.0440776267695178, x10 : 0.10901295252898995, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000537


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097638 in range [0.000000, 0.195277]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048820 in range [0.000000, 0.097639]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023730 in range [0.000000, 0.047461]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011866 in range [0.000000, 0.023731]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002916 in range [0.000000, 0.005832]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001438 in range [0.000000, 0.002877]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000720 in range [0.000000, 0.001439]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000360 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000156 in range [0.000000, 0.000313]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.458900765590339, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4421224123646269, x10 : -0.0653658692460416, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.4567883943061537, x5 : -0.30906254053115845, x6 : 0, x7 : 0, x8 : 0, x9 : -0.44764672373224007, x10 : -0.07089018061365476, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074022 in range [0.000000, 0.148044]...	solution exists & found.
	Iteration #003: testing norm threshold 0.020964 in range [0.000000, 0.041928]...	solution exists & found.
	Iteration #004: testing norm threshold 0.010114 in range [0.000000, 0.020227]...	solution exists & found.
	Iteration #005: testing norm threshold 0.004758 in range [0.000000, 0.009517]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001156 in range [0.000000, 0.002311]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000187 in range [0.000000, 0.000374]...	no solution exists.
	Iteration #008: testing norm threshold 0.000280 in range [0.000187, 0.000374]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7650358974933624, x5 : -0.376166025540068, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6788607835769653, x10 : -0.3636787086725235, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000229


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080115 in range [0.000000, 0.160229]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040058 in range [0.000000, 0.080116]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019042 in range [0.000000, 0.038084]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009521 in range [0.000000, 0.019043]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003191 in range [0.000000, 0.006383]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001280 in range [0.000000, 0.002560]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000500 in range [0.000000, 0.001000]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000250 in range [0.000000, 0.000501]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000126 in range [0.000000, 0.000251]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000063 in range [0.000000, 0.000127]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4332819178666184, x10 : -0.2863383490338839, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5234598815441132, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4350986734771462, x10 : -0.2881551046444117, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132624 in range [0.000000, 0.265249]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066175 in range [0.000000, 0.132350]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030193 in range [0.000000, 0.060386]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013318 in range [0.000000, 0.026636]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006509 in range [0.000000, 0.013018]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001312 in range [0.000000, 0.002624]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000656 in range [0.000000, 0.001313]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000329 in range [0.000000, 0.000657]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000165 in range [0.000000, 0.000330]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4509629068626354, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.5176562298757272, x5 : -0.38914271109932863, x6 : 0, x7 : 0, x8 : 6, x9 : -0.45140691265364186, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175897 in range [0.000000, 0.351795]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087806 in range [0.000000, 0.175612]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043795 in range [0.000000, 0.087590]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021800 in range [0.000000, 0.043600]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007788 in range [0.000000, 0.015576]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002914 in range [0.000000, 0.005828]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001458 in range [0.000000, 0.002915]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000378 in range [0.000000, 0.000756]...	no solution exists.
	Iteration #010: testing norm threshold 0.000567 in range [0.000378, 0.000756]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000473 in range [0.000378, 0.000568]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4422403488776585, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.34487697288653363, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.44203068681161367, x5 : -0.22525518502365127, x6 : 0, x7 : 6, x8 : 0, x9 : -0.3452962970186233, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000473


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103698 in range [0.000000, 0.207397]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048164 in range [0.000000, 0.096327]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023956 in range [0.000000, 0.047912]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009290 in range [0.000000, 0.018580]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004646 in range [0.000000, 0.009291]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002274 in range [0.000000, 0.004548]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000743 in range [0.000000, 0.001487]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000348 in range [0.000000, 0.000696]...	no solution exists.
	Iteration #010: testing norm threshold 0.000522 in range [0.000348, 0.000696]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000435 in range [0.000348, 0.000523]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.3403775008283364, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7299695265911663, x5 : -0.3537982106208801, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6503385556362713, x10 : -0.27528972923755646, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000435


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124605 in range [0.000000, 0.249209]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061916 in range [0.000000, 0.123832]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030958 in range [0.000000, 0.061917]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008580 in range [0.000000, 0.017160]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004291 in range [0.000000, 0.008581]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002038 in range [0.000000, 0.004076]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000059 in range [0.000000, 0.000119]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5297075366192311, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4509629068626354, x10 : -0.3747273409490208, x11 : 1.0, x12 : 22.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.530445578539182, x5 : -0.4030074179172516, x6 : 0, x7 : 0, x8 : 6, x9 : -0.45170094878258626, x10 : -0.36294066675257264, x11 : 1, x12 : 22, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000118


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148865 in range [0.000000, 0.297730]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071938 in range [0.000000, 0.143876]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035350 in range [0.000000, 0.070701]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017519 in range [0.000000, 0.035038]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008760 in range [0.000000, 0.017520]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004381 in range [0.000000, 0.008761]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002090 in range [0.000000, 0.004179]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000616 in range [0.000000, 0.001232]...	no solution exists.
	Iteration #010: testing norm threshold 0.000924 in range [0.000616, 0.001232]...	no solution exists.
	Iteration #011: testing norm threshold 0.001078 in range [0.000924, 0.001232]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001001 in range [0.000924, 0.001079]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.12152732715855885, x5 : -0.0003865160668867154, x6 : 1.0, x7 : 0.0, x8 : 3.0, x9 : -0.06198114895026234, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.11111456900835037, x5 : -0.3985338509082794, x6 : 1, x7 : 0, x8 : 3, x9 : -0.06220116050810963, x10 : 0.31006733483544296, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085382 in range [0.000000, 0.170763]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042475 in range [0.000000, 0.084950]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020592 in range [0.000000, 0.041184]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010209 in range [0.000000, 0.020418]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002741 in range [0.000000, 0.005483]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001098 in range [0.000000, 0.002195]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000519 in range [0.000000, 0.001038]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000260 in range [0.000000, 0.000520]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000130 in range [0.000000, 0.000261]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3493246320062693, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7358801957327646, x5 : -0.3493246323680176, x6 : 3, x7 : 6, x8 : 0, x9 : -0.678605645533256, x10 : -0.3526300933319849, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000121


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156831 in range [0.000000, 0.313662]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078416 in range [0.000000, 0.156832]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038988 in range [0.000000, 0.077976]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018500 in range [0.000000, 0.036999]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009250 in range [0.000000, 0.018501]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004626 in range [0.000000, 0.009251]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001890 in range [0.000000, 0.003781]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000724 in range [0.000000, 0.001449]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000324 in range [0.000000, 0.000649]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000325]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7675916130945653, x5 : -0.41481872157311134, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6902569706842869, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116217 in range [0.000000, 0.232433]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058109 in range [0.000000, 0.116218]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028964 in range [0.000000, 0.057928]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014208 in range [0.000000, 0.028416]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007104 in range [0.000000, 0.014208]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003553 in range [0.000000, 0.007105]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001777 in range [0.000000, 0.003554]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000166 in range [0.000000, 0.000333]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000084 in range [0.000000, 0.000167]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2699924655894329, x5 : -0.3940602878959337, x6 : 0.0, x7 : 2.0, x8 : 2.0, x9 : 0.4109853066931912, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2655722133595141, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 2, x9 : 0.4087751805782318, x10 : -0.37124356001306735, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115063 in range [0.000000, 0.230126]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053836 in range [0.000000, 0.107672]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024425 in range [0.000000, 0.048850]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012213 in range [0.000000, 0.024426]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004832 in range [0.000000, 0.009663]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002323 in range [0.000000, 0.004645]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000652 in range [0.000000, 0.001303]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000326 in range [0.000000, 0.000653]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000164 in range [0.000000, 0.000327]...	no solution exists.
	Iteration #011: testing norm threshold 0.000246 in range [0.000164, 0.000327]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7004768079242063, x5 : -0.2688004514048733, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7192197740077972, x5 : -0.3032913729537731, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000246


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.195792 in range [0.000000, 0.391584]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097288 in range [0.000000, 0.194576]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048582 in range [0.000000, 0.097164]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024208 in range [0.000000, 0.048415]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012104 in range [0.000000, 0.024209]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006053 in range [0.000000, 0.012105]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002986 in range [0.000000, 0.005972]...	no solution exists.
	Iteration #009: testing norm threshold 0.004479 in range [0.002986, 0.005972]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003733 in range [0.002986, 0.004480]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003360 in range [0.002986, 0.003734]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003173 in range [0.002986, 0.003361]...	no solution exists.
	Iteration #013: testing norm threshold 0.003267 in range [0.003173, 0.003361]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.098473199806118, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.3514738490060516, x10 : 0.26609285043572184, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.0982921289080165, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 0, x9 : 2.592558495138214, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003360


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123829 in range [0.000000, 0.247658]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061915 in range [0.000000, 0.123830]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030935 in range [0.000000, 0.061870]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015407 in range [0.000000, 0.030814]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007704 in range [0.000000, 0.015408]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003254 in range [0.000000, 0.006507]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001627 in range [0.000000, 0.003255]...	no solution exists.
	Iteration #009: testing norm threshold 0.002441 in range [0.001627, 0.003255]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001840 in range [0.001627, 0.002054]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001734 in range [0.001627, 0.001841]...	no solution exists.
	Iteration #012: testing norm threshold 0.001788 in range [0.001734, 0.001841]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.3964242029177871, x5 : 0.08013766453450928, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.296254253147487, x10 : 0.7080378100114063, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6817338466644287, x5 : 0.13317309906688116, x6 : 2, x7 : 6, x8 : 0, x9 : -0.2943411441449426, x10 : 0.7042115920063176, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001788


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126552 in range [0.000000, 0.253105]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062974 in range [0.000000, 0.125947]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030760 in range [0.000000, 0.061520]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014807 in range [0.000000, 0.029615]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007404 in range [0.000000, 0.014808]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003571 in range [0.000000, 0.007142]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001543 in range [0.000000, 0.003086]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000772 in range [0.000000, 0.001544]...	no solution exists.
	Iteration #010: testing norm threshold 0.001158 in range [0.000772, 0.001544]...	no solution exists.
	Iteration #011: testing norm threshold 0.001351 in range [0.001158, 0.001544]...	no solution exists.
	Iteration #012: testing norm threshold 0.001447 in range [0.001351, 0.001544]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.3672684736705962, x5 : -0.15248774609174578, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4465426596136311, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.36542458394722427, x5 : -0.12195856959591024, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : 0.30659956694654644, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001447


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133846 in range [0.000000, 0.267691]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066923 in range [0.000000, 0.133847]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033222 in range [0.000000, 0.066445]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015623 in range [0.000000, 0.031246]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007812 in range [0.000000, 0.015624]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002418 in range [0.000000, 0.004836]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000606 in range [0.000000, 0.001211]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000300 in range [0.000000, 0.000599]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000150 in range [0.000000, 0.000301]...	no solution exists.
	Iteration #011: testing norm threshold 0.000225 in range [0.000150, 0.000301]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6484130024909973, x5 : -0.396559545507903, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5747298300266266, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000225


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153952 in range [0.000000, 0.307904]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076977 in range [0.000000, 0.153953]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038489 in range [0.000000, 0.076978]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019130 in range [0.000000, 0.038261]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009193 in range [0.000000, 0.018387]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004597 in range [0.000000, 0.009194]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002027 in range [0.000000, 0.004055]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001014 in range [0.000000, 0.002028]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000508 in range [0.000000, 0.001015]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000254 in range [0.000000, 0.000509]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 2.3108935128927945, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.576906458705269, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 2.3086567314044197, x5 : -0.2084073146477181, x6 : 0, x7 : 0, x8 : 4, x9 : 2.594614205728487, x10 : 0.16889201648087915, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000146


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116801 in range [0.000000, 0.233601]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058142 in range [0.000000, 0.116283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028081 in range [0.000000, 0.056161]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014022 in range [0.000000, 0.028044]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006970 in range [0.000000, 0.013940]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002010 in range [0.000000, 0.004019]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000789 in range [0.000000, 0.001578]...	no solution exists.
	Iteration #009: testing norm threshold 0.001183 in range [0.000789, 0.001578]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000880 in range [0.000789, 0.000971]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.10775209020208136, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : 0.4207735862872114, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6067619621753693, x5 : 0.09564091637730598, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6146396100521088, x10 : 0.4780992716550827, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000970


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091524 in range [0.000000, 0.183048]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045648 in range [0.000000, 0.091295]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022824 in range [0.000000, 0.045649]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011413 in range [0.000000, 0.022825]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005154 in range [0.000000, 0.010308]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002578 in range [0.000000, 0.005155]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001276 in range [0.000000, 0.002552]...	no solution exists.
	Iteration #009: testing norm threshold 0.001914 in range [0.001276, 0.002552]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001596 in range [0.001276, 0.001915]...	no solution exists.
	Iteration #011: testing norm threshold 0.001755 in range [0.001596, 0.001915]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001676 in range [0.001596, 0.001756]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.0780226761544371, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.166847586272916, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.8281164169311523, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 3, x9 : 1.163112227061427, x10 : 0.31028734639329025, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001755


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.198526 in range [0.000000, 0.397051]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097149 in range [0.000000, 0.194298]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048575 in range [0.000000, 0.097150]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024218 in range [0.000000, 0.048435]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009221 in range [0.000000, 0.018442]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004339 in range [0.000000, 0.008678]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001985 in range [0.000000, 0.003969]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000394 in range [0.000000, 0.000787]...	no solution exists.
	Iteration #010: testing norm threshold 0.000591 in range [0.000394, 0.000787]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000493 in range [0.000394, 0.000592]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.258975765038173, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3050947476454955, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.26182273900742087, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.30794172161474337, x10 : -0.2724427552683086, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000483


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.219825 in range [0.000000, 0.439650]...	solution exists & found.
	Iteration #003: testing norm threshold 0.109911 in range [0.000000, 0.219822]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054358 in range [0.000000, 0.108717]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026904 in range [0.000000, 0.053808]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013452 in range [0.000000, 0.026905]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005339 in range [0.000000, 0.010678]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002668 in range [0.000000, 0.005337]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001297 in range [0.000000, 0.002595]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000529 in range [0.000000, 0.001057]...	no solution exists.
	Iteration #011: testing norm threshold 0.000793 in range [0.000529, 0.001057]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000661 in range [0.000529, 0.000794]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 1.2904429892411136, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.4674243992052045, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 1.2860227087845706, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 1.4873155355453491, x10 : 0.01860284221255234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000618


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138102 in range [0.000000, 0.276204]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069052 in range [0.000000, 0.138103]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034526 in range [0.000000, 0.069053]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017264 in range [0.000000, 0.034527]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007843 in range [0.000000, 0.015686]...	no solution exists.
	Iteration #007: testing norm threshold 0.011764 in range [0.007843, 0.015686]...	no solution exists.
	Iteration #008: testing norm threshold 0.013725 in range [0.011764, 0.015686]...	solution exists & found.
	Iteration #009: testing norm threshold 0.012745 in range [0.011764, 0.013726]...	no solution exists.
	Iteration #010: testing norm threshold 0.013236 in range [0.012745, 0.013726]...	no solution exists.
	Iteration #011: testing norm threshold 0.013481 in range [0.013236, 0.013726]...	solution exists & found.
	Iteration #012: testing norm threshold 0.013359 in range [0.013236, 0.013482]...	no solution exists.
	Iteration #013: testing norm threshold 0.013420 in range [0.013359, 0.013482]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.7114935084754662, x5 : 2.8626954608716373, x6 : 1.0, x7 : 0.0, x8 : 1.0, x9 : 0.5833749494043565, x10 : 7.757059915243576, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 1.847901633087833, x5 : 1.5072051286697388, x6 : 1, x7 : 0, x8 : 1, x9 : -0.059771026484668255, x10 : 7.755642645234814, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.013481


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165260 in range [0.000000, 0.330519]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082630 in range [0.000000, 0.165261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041121 in range [0.000000, 0.082242]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020561 in range [0.000000, 0.041122]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009407 in range [0.000000, 0.018814]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004704 in range [0.000000, 0.009408]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002353 in range [0.000000, 0.004705]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001177 in range [0.000000, 0.002354]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000577 in range [0.000000, 0.001154]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000198 in range [0.000000, 0.000395]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000099 in range [0.000000, 0.000199]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000050 in range [0.000000, 0.000100]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.14087423606615898, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.2739576419740598, x10 : -0.1537548611611785, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.1403333896626285, x5 : -0.3582717627286911, x6 : 0, x7 : 0, x8 : 2, x9 : 0.27341679557052934, x10 : -0.15429570756470898, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000099


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088895 in range [0.000000, 0.177791]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041623 in range [0.000000, 0.083245]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020812 in range [0.000000, 0.041624]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009018 in range [0.000000, 0.018036]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001520 in range [0.000000, 0.003039]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000760 in range [0.000000, 0.001521]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000381 in range [0.000000, 0.000761]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000191 in range [0.000000, 0.000382]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000096 in range [0.000000, 0.000192]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5880189951136129, x5 : -0.01828077842275249, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5884229566890554, x5 : -0.018684739998194998, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6715713232393921, x10 : -0.363274747097081, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000191


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133219 in range [0.000000, 0.266439]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065289 in range [0.000000, 0.130579]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032645 in range [0.000000, 0.065290]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016137 in range [0.000000, 0.032274]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007674 in range [0.000000, 0.015347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003837 in range [0.000000, 0.007675]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001753 in range [0.000000, 0.003506]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000809 in range [0.000000, 0.001617]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000405 in range [0.000000, 0.000810]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000203 in range [0.000000, 0.000406]...	no solution exists.
	Iteration #012: testing norm threshold 0.000304 in range [0.000203, 0.000406]...	no solution exists.
	Iteration #013: testing norm threshold 0.000355 in range [0.000304, 0.000406]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 4.168529976356671, x5 : -0.09880495902414847, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 4.548336731761159, x10 : 0.2439956024569376, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 4.168515060665783, x5 : -0.19722340255975723, x6 : 0, x7 : 2, x8 : 0, x9 : 4.5483218160702705, x10 : 0.19980110973119736, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000405


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143085 in range [0.000000, 0.286170]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071507 in range [0.000000, 0.143014]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035754 in range [0.000000, 0.071508]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017878 in range [0.000000, 0.035755]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008301 in range [0.000000, 0.016601]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003107 in range [0.000000, 0.006213]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001554 in range [0.000000, 0.003108]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000625 in range [0.000000, 0.001251]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000313 in range [0.000000, 0.000626]...	no solution exists.
	Iteration #011: testing norm threshold 0.000470 in range [0.000313, 0.000626]...	no solution exists.
	Iteration #012: testing norm threshold 0.000548 in range [0.000470, 0.000626]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4005893070959573, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.38907944537657596, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.40267185866832733, x5 : -0.22749505794859212, x6 : 0, x7 : 4, x8 : 0, x9 : -0.43107180297374725, x10 : -0.24318715929970514, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000625


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138754 in range [0.000000, 0.277507]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069377 in range [0.000000, 0.138755]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033429 in range [0.000000, 0.066857]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012600 in range [0.000000, 0.025201]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006227 in range [0.000000, 0.012455]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003114 in range [0.000000, 0.006228]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001336 in range [0.000000, 0.002672]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000669 in range [0.000000, 0.001337]...	no solution exists.
	Iteration #010: testing norm threshold 0.001003 in range [0.000669, 0.001337]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000836 in range [0.000669, 0.001004]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000753 in range [0.000669, 0.000837]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.240461739103072, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.4409029157111788, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.240461739103072, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 1, x9 : 1.3524979948997498, x10 : -0.024373105654436792, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000836


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107909 in range [0.000000, 0.215817]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053955 in range [0.000000, 0.107910]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018875 in range [0.000000, 0.037751]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009438 in range [0.000000, 0.018876]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002578 in range [0.000000, 0.005156]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001289 in range [0.000000, 0.002578]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000645 in range [0.000000, 0.001290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000320 in range [0.000000, 0.000640]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000160 in range [0.000000, 0.000321]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000081 in range [0.000000, 0.000161]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6504955577861647, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.6056715605777837, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6504955577331517, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 5, x9 : -0.6091419014808216, x10 : -0.19794935722477303, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154850 in range [0.000000, 0.309699]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071624 in range [0.000000, 0.143248]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035580 in range [0.000000, 0.071160]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017790 in range [0.000000, 0.035581]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004344 in range [0.000000, 0.008688]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001685 in range [0.000000, 0.003370]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000685 in range [0.000000, 0.001370]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000343 in range [0.000000, 0.000686]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000122 in range [0.000000, 0.000244]...	no solution exists.
	Iteration #011: testing norm threshold 0.000183 in range [0.000122, 0.000244]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.376166025540068, x6 : 0.0, x7 : 1.0, x8 : 4.0, x9 : -0.42886167061761415, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.525850895271863, x5 : -0.4164281189441681, x6 : 0, x7 : 1, x8 : 4, x9 : -0.42886167061761415, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000243


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.216856 in range [0.000000, 0.433713]...	solution exists & found.
	Iteration #003: testing norm threshold 0.107380 in range [0.000000, 0.214761]...	solution exists & found.
	Iteration #004: testing norm threshold 0.053691 in range [0.000000, 0.107381]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026557 in range [0.000000, 0.053114]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013279 in range [0.000000, 0.026558]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006435 in range [0.000000, 0.012871]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003218 in range [0.000000, 0.006436]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001610 in range [0.000000, 0.003219]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000403 in range [0.000000, 0.000807]...	no solution exists.
	Iteration #011: testing norm threshold 0.000605 in range [0.000403, 0.000807]...	no solution exists.
	Iteration #012: testing norm threshold 0.000706 in range [0.000605, 0.000807]...	no solution exists.
	Iteration #013: testing norm threshold 0.000756 in range [0.000706, 0.000807]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.6948330917627856, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8618505260916236, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.6945439233337705, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8154379427433014, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000756


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138495 in range [0.000000, 0.276989]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066059 in range [0.000000, 0.132118]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027922 in range [0.000000, 0.055844]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013945 in range [0.000000, 0.027889]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006787 in range [0.000000, 0.013574]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003380 in range [0.000000, 0.006761]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001591 in range [0.000000, 0.003182]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000772 in range [0.000000, 0.001544]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000386 in range [0.000000, 0.000773]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000194 in range [0.000000, 0.000387]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000096 in range [0.000000, 0.000191]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : -0.3227916955947876, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6940765055578685, x10 : -0.2467508206589307, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177101 in range [0.000000, 0.354202]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083587 in range [0.000000, 0.167174]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041788 in range [0.000000, 0.083577]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020895 in range [0.000000, 0.041789]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010381 in range [0.000000, 0.020763]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004909 in range [0.000000, 0.009817]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002455 in range [0.000000, 0.004910]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000885 in range [0.000000, 0.001771]...	no solution exists.
	Iteration #010: testing norm threshold 0.001328 in range [0.000885, 0.001771]...	no solution exists.
	Iteration #011: testing norm threshold 0.001549 in range [0.001328, 0.001771]...	no solution exists.
	Iteration #012: testing norm threshold 0.001660 in range [0.001549, 0.001771]...	no solution exists.
	Iteration #013: testing norm threshold 0.001715 in range [0.001660, 0.001771]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 1.0, x4 : -0.30062680681987425, x5 : 0.5901241416766838, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : 2.1443589286323808, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 1, x4 : -0.4351565276412504, x5 : 0.3217101991176605, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6167221665382385, x10 : 2.1421488182064317, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001715


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127377 in range [0.000000, 0.254753]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062289 in range [0.000000, 0.124578]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030982 in range [0.000000, 0.061964]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014142 in range [0.000000, 0.028283]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007071 in range [0.000000, 0.014143]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003315 in range [0.000000, 0.006631]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001508 in range [0.000000, 0.003016]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000754 in range [0.000000, 0.001509]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000245 in range [0.000000, 0.000491]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.06173725668092664, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.18997294424297928, x10 : -0.17585210913996274, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.06121342843280671, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 1, x9 : 0.18944911599485936, x10 : -0.17727397709399145, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139255 in range [0.000000, 0.278509]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069297 in range [0.000000, 0.138595]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034649 in range [0.000000, 0.069298]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016399 in range [0.000000, 0.032799]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008103 in range [0.000000, 0.016207]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003738 in range [0.000000, 0.007477]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001699 in range [0.000000, 0.003398]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000850 in range [0.000000, 0.001700]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000425 in range [0.000000, 0.000851]...	no solution exists.
	Iteration #011: testing norm threshold 0.000638 in range [0.000425, 0.000851]...	no solution exists.
	Iteration #012: testing norm threshold 0.000745 in range [0.000638, 0.000851]...	no solution exists.
	Iteration #013: testing norm threshold 0.000798 in range [0.000745, 0.000851]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2964617026417041, x5 : -0.045122171956551146, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.19016831917138527, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.23090649957586046, x5 : -0.13906705379486084, x6 : 0, x7 : 6, x8 : 0, x9 : -0.14717987741161104, x10 : -0.17585210913996274, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000850


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185076 in range [0.000000, 0.370152]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091296 in range [0.000000, 0.182592]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045427 in range [0.000000, 0.090855]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022714 in range [0.000000, 0.045428]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010976 in range [0.000000, 0.021952]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005367 in range [0.000000, 0.010734]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002684 in range [0.000000, 0.005368]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001342 in range [0.000000, 0.002685]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000672 in range [0.000000, 0.001343]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000336 in range [0.000000, 0.000673]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000169 in range [0.000000, 0.000337]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.8905929881367816, x5 : 1.547467177715503, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : 0.11040849376090298, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.887893846130776, x5 : 1.5447680357094975, x6 : 1, x7 : 0, x8 : 0, x9 : 0.10770935175489749, x10 : -0.360979566666518, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144278 in range [0.000000, 0.288555]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072067 in range [0.000000, 0.144134]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032103 in range [0.000000, 0.064205]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016052 in range [0.000000, 0.032104]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008026 in range [0.000000, 0.016053]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002643 in range [0.000000, 0.005287]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001322 in range [0.000000, 0.002644]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000488 in range [0.000000, 0.000975]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000244 in range [0.000000, 0.000489]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000123 in range [0.000000, 0.000245]...	no solution exists.
	Iteration #012: testing norm threshold 0.000184 in range [0.000123, 0.000245]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5088820157283805, x5 : 0.14276758278003948, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.48427618256827376, x5 : 0.1446577393887592, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000244


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069206 in range [0.000000, 0.138412]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034585 in range [0.000000, 0.069171]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017144 in range [0.000000, 0.034288]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008571 in range [0.000000, 0.017142]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004162 in range [0.000000, 0.008324]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001525 in range [0.000000, 0.003050]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000763 in range [0.000000, 0.001526]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000382 in range [0.000000, 0.000764]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000098 in range [0.000000, 0.000197]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.046555451951496615, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.044104785025839394, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.0461663977925623, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 0.04332667670797077, x10 : -0.2455694547079546, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.057035 in range [0.000000, 0.114070]...	solution exists & found.
	Iteration #003: testing norm threshold 0.025775 in range [0.000000, 0.051549]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012517 in range [0.000000, 0.025035]...	solution exists & found.
	Iteration #005: testing norm threshold 0.002879 in range [0.000000, 0.005757]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001440 in range [0.000000, 0.002880]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000701 in range [0.000000, 0.001402]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000351 in range [0.000000, 0.000702]...	no solution exists.
	Iteration #009: testing norm threshold 0.000526 in range [0.000351, 0.000702]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000439 in range [0.000351, 0.000527]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7483755052089691, x5 : -0.2103591489949209, x6 : 2, x7 : 6, x8 : 0, x9 : -0.696001671568392, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000439


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129279 in range [0.000000, 0.258558]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064640 in range [0.000000, 0.129280]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032320 in range [0.000000, 0.064641]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012949 in range [0.000000, 0.025899]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006030 in range [0.000000, 0.012061]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001993 in range [0.000000, 0.003985]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000224 in range [0.000000, 0.000448]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000084 in range [0.000000, 0.000168]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7650358974933624, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6830182360687784, x10 : -0.35263775345068293, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114365 in range [0.000000, 0.228730]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057183 in range [0.000000, 0.114366]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028592 in range [0.000000, 0.057184]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014296 in range [0.000000, 0.028593]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007149 in range [0.000000, 0.014297]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003575 in range [0.000000, 0.007150]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001693 in range [0.000000, 0.003386]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000847 in range [0.000000, 0.001694]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000424 in range [0.000000, 0.000848]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000213 in range [0.000000, 0.000425]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000107 in range [0.000000, 0.000214]...	no solution exists.
	Iteration #013: testing norm threshold 0.000160 in range [0.000107, 0.000214]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.013234618526135609, x5 : -0.3493246320062693, x6 : 0.0, x7 : 2.0, x8 : 4.0, x9 : 0.08830725751588178, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.013369209930970178, x5 : -0.3716924488544464, x6 : 0, x7 : 2, x8 : 4, x9 : 0.08817266611104721, x10 : -0.3303982574301569, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000213


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069407 in range [0.000000, 0.138814]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034644 in range [0.000000, 0.069288]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017323 in range [0.000000, 0.034645]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008662 in range [0.000000, 0.017324]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002862 in range [0.000000, 0.005724]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001431 in range [0.000000, 0.002863]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000712 in range [0.000000, 0.001424]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000354 in range [0.000000, 0.000708]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000178 in range [0.000000, 0.000355]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000077 in range [0.000000, 0.000155]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7687196249201135, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6913849825098352, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128574 in range [0.000000, 0.257148]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059324 in range [0.000000, 0.118648]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029662 in range [0.000000, 0.059325]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014063 in range [0.000000, 0.028126]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005369 in range [0.000000, 0.010738]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001736 in range [0.000000, 0.003473]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000739 in range [0.000000, 0.001479]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000370 in range [0.000000, 0.000740]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000156 in range [0.000000, 0.000313]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 0.4949080912106197, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.64967865813942, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : 0.49421655704613626, x5 : -0.4119545519351959, x6 : 0, x7 : 0, x8 : 1, x9 : 0.6489871239749366, x10 : -0.26493263521958305, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159629 in range [0.000000, 0.319257]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079815 in range [0.000000, 0.159630]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039908 in range [0.000000, 0.079816]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018745 in range [0.000000, 0.037490]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009373 in range [0.000000, 0.018746]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004125 in range [0.000000, 0.008250]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001514 in range [0.000000, 0.003028]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000758 in range [0.000000, 0.001515]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000198 in range [0.000000, 0.000396]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000084 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.3964242029177871, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.296254253147487, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.39696719815389886, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 0, x9 : -0.29640638059753227, x10 : -0.2643932285051449, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096751 in range [0.000000, 0.193502]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048376 in range [0.000000, 0.096752]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024188 in range [0.000000, 0.048377]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012095 in range [0.000000, 0.024189]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006048 in range [0.000000, 0.012096]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003024 in range [0.000000, 0.006049]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001513 in range [0.000000, 0.003025]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000757 in range [0.000000, 0.001514]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000379 in range [0.000000, 0.000758]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000190 in range [0.000000, 0.000380]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000087 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.15068305640574975, x5 : -0.376166025540068, x6 : 0.0, x7 : 1.0, x8 : 2.0, x9 : -0.035459665456236904, x10 : -0.2642411010550996, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.1506830553490801, x5 : -0.35379820850754085, x6 : 0, x7 : 1, x8 : 2, x9 : -0.03545966651290655, x10 : -0.2557452783028218, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163425 in range [0.000000, 0.326851]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081713 in range [0.000000, 0.163426]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040400 in range [0.000000, 0.080801]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020141 in range [0.000000, 0.040282]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010071 in range [0.000000, 0.020142]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001923 in range [0.000000, 0.003845]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000908 in range [0.000000, 0.001816]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000455 in range [0.000000, 0.000909]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000228 in range [0.000000, 0.000456]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000229]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.6069909067820431, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.6221330529203526, x10 : 0.31028734639329025, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 1.6059600291027007, x5 : -0.12117278575897217, x6 : 0, x7 : 0, x8 : 4, x9 : 1.6236329780435597, x10 : 0.3223668490347806, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000113


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.201825 in range [0.000000, 0.403650]...	solution exists & found.
	Iteration #003: testing norm threshold 0.100913 in range [0.000000, 0.201826]...	solution exists & found.
	Iteration #004: testing norm threshold 0.050457 in range [0.000000, 0.100914]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024905 in range [0.000000, 0.049811]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012453 in range [0.000000, 0.024906]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006227 in range [0.000000, 0.012454]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003114 in range [0.000000, 0.006228]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000467 in range [0.000000, 0.000933]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000234 in range [0.000000, 0.000468]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000117 in range [0.000000, 0.000235]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.7864653836825284, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.9281542348266872, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.7864653836825284, x5 : -0.2822211383301574, x6 : 0, x7 : 0, x8 : 6, x9 : 0.9215238691847962, x10 : 0.04512037057429552, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.060236 in range [0.000000, 0.120473]...	solution exists & found.
	Iteration #003: testing norm threshold 0.030082 in range [0.000000, 0.060164]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013519 in range [0.000000, 0.027039]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006760 in range [0.000000, 0.013520]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003246 in range [0.000000, 0.006491]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000476 in range [0.000000, 0.000953]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000239 in range [0.000000, 0.000477]...	no solution exists.
	Iteration #009: testing norm threshold 0.000358 in range [0.000239, 0.000477]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000299 in range [0.000239, 0.000359]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6504955577861647, x5 : -0.19722340198141025, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6734036505222321, x5 : -0.24643263220787048, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5666380564926129, x10 : 0.18875247985124588, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000299


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158286 in range [0.000000, 0.316573]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078781 in range [0.000000, 0.157562]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038971 in range [0.000000, 0.077942]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018884 in range [0.000000, 0.037768]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008554 in range [0.000000, 0.017108]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004276 in range [0.000000, 0.008553]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001345 in range [0.000000, 0.002691]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000568 in range [0.000000, 0.001135]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000284 in range [0.000000, 0.000569]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000143 in range [0.000000, 0.000285]...	no solution exists.
	Iteration #012: testing norm threshold 0.000214 in range [0.000143, 0.000285]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7171372246368868, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7067244648933411, x5 : -0.40712093329898874, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6388234198093414, x10 : -0.33017278230659525, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000284


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.071600 in range [0.000000, 0.143200]...	solution exists & found.
	Iteration #003: testing norm threshold 0.035800 in range [0.000000, 0.071601]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017901 in range [0.000000, 0.035801]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007565 in range [0.000000, 0.015130]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003783 in range [0.000000, 0.007566]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001253 in range [0.000000, 0.002507]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000627 in range [0.000000, 0.001254]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000314 in range [0.000000, 0.000628]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000158 in range [0.000000, 0.000315]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000159]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.09880495902414847, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7567057311534882, x5 : -0.09959356129611649, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6954980164375962, x10 : -0.3080412958766841, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111533 in range [0.000000, 0.223067]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055767 in range [0.000000, 0.111534]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026494 in range [0.000000, 0.052988]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012316 in range [0.000000, 0.024632]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006076 in range [0.000000, 0.012152]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002658 in range [0.000000, 0.005317]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000545 in range [0.000000, 0.001091]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	no solution exists.
	Iteration #011: testing norm threshold 0.000206 in range [0.000137, 0.000274]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.658825766142505, x5 : -0.17932913962554445, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6775687336921692, x5 : -0.21959123760461807, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.24295055849150066, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000273


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097613 in range [0.000000, 0.195226]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044972 in range [0.000000, 0.089945]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022282 in range [0.000000, 0.044565]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010244 in range [0.000000, 0.020488]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004936 in range [0.000000, 0.009872]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002386 in range [0.000000, 0.004773]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	no solution exists.
	Iteration #009: testing norm threshold 0.000528 in range [0.000352, 0.000704]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000441 in range [0.000352, 0.000529]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7171372246368868, x5 : -0.4030074190738666, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7160755382146823, x5 : -0.3964104780638705, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6123886832678804, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000441


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131869 in range [0.000000, 0.263738]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064957 in range [0.000000, 0.129915]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032479 in range [0.000000, 0.064958]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016240 in range [0.000000, 0.032480]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008121 in range [0.000000, 0.016241]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003156 in range [0.000000, 0.006311]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001578 in range [0.000000, 0.003157]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000759 in range [0.000000, 0.001517]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000380 in range [0.000000, 0.000760]...	no solution exists.
	Iteration #011: testing norm threshold 0.000570 in range [0.000380, 0.000760]...	no solution exists.
	Iteration #012: testing norm threshold 0.000665 in range [0.000570, 0.000760]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 3.7520195585396583, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 4.066529781619697, x10 : 0.5533570741599168, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 3.7506764720367074, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 5, x9 : 4.065186695116746, x10 : 0.5463400004594238, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000759


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181241 in range [0.000000, 0.362482]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089670 in range [0.000000, 0.179341]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043854 in range [0.000000, 0.087708]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021927 in range [0.000000, 0.043855]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008057 in range [0.000000, 0.016115]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002134 in range [0.000000, 0.004268]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000162 in range [0.000000, 0.000325]...	no solution exists.
	Iteration #009: testing norm threshold 0.000243 in range [0.000162, 0.000325]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6726063521108628, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000243


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097196 in range [0.000000, 0.194393]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048429 in range [0.000000, 0.096858]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024129 in range [0.000000, 0.048258]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009754 in range [0.000000, 0.019508]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003534 in range [0.000000, 0.007067]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001767 in range [0.000000, 0.003535]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000884 in range [0.000000, 0.001768]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000438 in range [0.000000, 0.000877]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000220 in range [0.000000, 0.000439]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000110 in range [0.000000, 0.000221]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3755986820269365, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.32277573664151243, x10 : -0.2642411010550996, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3754353668047922, x5 : -0.33544175257988207, x6 : 0, x7 : 0, x8 : 6, x9 : -0.32252077988750455, x10 : -0.2645677314993883, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000107


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.047103 in range [0.000000, 0.094207]...	solution exists & found.
	Iteration #003: testing norm threshold 0.023411 in range [0.000000, 0.046822]...	solution exists & found.
	Iteration #004: testing norm threshold 0.011570 in range [0.000000, 0.023141]...	solution exists & found.
	Iteration #005: testing norm threshold 0.005786 in range [0.000000, 0.011571]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002725 in range [0.000000, 0.005450]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001328 in range [0.000000, 0.002656]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000475 in range [0.000000, 0.000949]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000238 in range [0.000000, 0.000476]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6504955577861647, x5 : -0.2777475825828062, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : 0.0009258746903110836, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6546606719493866, x5 : -0.3001154065132141, x6 : 0, x7 : 6, x8 : 0, x9 : -0.563806802034378, x10 : -0.010122749023139477, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177908 in range [0.000000, 0.355815]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088755 in range [0.000000, 0.177510]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043684 in range [0.000000, 0.087367]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021626 in range [0.000000, 0.043252]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010801 in range [0.000000, 0.021603]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005294 in range [0.000000, 0.010588]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002627 in range [0.000000, 0.005253]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000711 in range [0.000000, 0.001421]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000712]...	no solution exists.
	Iteration #011: testing norm threshold 0.000534 in range [0.000356, 0.000712]...	no solution exists.
	Iteration #012: testing norm threshold 0.000623 in range [0.000534, 0.000712]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.4005893070959573, x5 : -0.08985782784621557, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3537174673845421, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.40683695673942566, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 6, x9 : -0.32299666155026385, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000711


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.060169 in range [0.000000, 0.120337]...	solution exists & found.
	Iteration #003: testing norm threshold 0.029022 in range [0.000000, 0.058043]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014242 in range [0.000000, 0.028483]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006678 in range [0.000000, 0.013356]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002283 in range [0.000000, 0.004565]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000828 in range [0.000000, 0.001656]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000388 in range [0.000000, 0.000777]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000192 in range [0.000000, 0.000384]...	no solution exists.
	Iteration #010: testing norm threshold 0.000288 in range [0.000192, 0.000384]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.2131596190783016, x5 : 0.7780138964132745, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.2319025844335556, x5 : 0.7764094528429487, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6868404546301857, x10 : -0.31787977538471424, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000383


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134515 in range [0.000000, 0.269031]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064834 in range [0.000000, 0.129669]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029799 in range [0.000000, 0.059598]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013897 in range [0.000000, 0.027794]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006368 in range [0.000000, 0.012735]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002017 in range [0.000000, 0.004033]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001009 in range [0.000000, 0.002018]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000505 in range [0.000000, 0.001010]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	no solution exists.
	Iteration #011: testing norm threshold 0.000327 in range [0.000218, 0.000436]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000273 in range [0.000218, 0.000328]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7574231234386894, x5 : -0.415062984545562, x6 : 0, x7 : 6, x8 : 0, x9 : -0.668400010187957, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000273


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069102 in range [0.000000, 0.138204]...	solution exists & found.
	Iteration #003: testing norm threshold 0.033968 in range [0.000000, 0.067936]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014535 in range [0.000000, 0.029069]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006571 in range [0.000000, 0.013142]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003100 in range [0.000000, 0.006200]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001043 in range [0.000000, 0.002087]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000140 in range [0.000000, 0.000281]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.525542432441061, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.464223648609648, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5255858897357378, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.46197007045629207, x10 : -0.28638180632856075, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139072 in range [0.000000, 0.278145]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066612 in range [0.000000, 0.133223]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033129 in range [0.000000, 0.066259]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016521 in range [0.000000, 0.033042]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008261 in range [0.000000, 0.016522]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004131 in range [0.000000, 0.008262]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001930 in range [0.000000, 0.003859]...	no solution exists.
	Iteration #009: testing norm threshold 0.002894 in range [0.001930, 0.003859]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002343 in range [0.001930, 0.002756]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001994 in range [0.001930, 0.002059]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.4005893070959573, x5 : 0.32171020633869724, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.30067450039649124, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.4443228989839554, x5 : -0.30906254053115845, x6 : 2, x7 : 6, x8 : 0, x9 : -0.2991032300961537, x10 : -0.029077456075173844, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001994


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157571 in range [0.000000, 0.315143]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068125 in range [0.000000, 0.136250]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034063 in range [0.000000, 0.068126]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015908 in range [0.000000, 0.031817]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007955 in range [0.000000, 0.015909]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003616 in range [0.000000, 0.007232]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001809 in range [0.000000, 0.003617]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000814 in range [0.000000, 0.001629]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000408 in range [0.000000, 0.000815]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000204 in range [0.000000, 0.000409]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000103 in range [0.000000, 0.000205]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.025729931060645986, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.09714775201389024, x10 : -0.24214385307631545, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.02560696298913947, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 1, x9 : 0.0969018158708772, x10 : -0.2531924769282341, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120656 in range [0.000000, 0.241312]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060328 in range [0.000000, 0.120657]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026536 in range [0.000000, 0.053071]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013268 in range [0.000000, 0.026537]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006562 in range [0.000000, 0.013125]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003282 in range [0.000000, 0.006563]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001641 in range [0.000000, 0.003283]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000797 in range [0.000000, 0.001594]...	no solution exists.
	Iteration #010: testing norm threshold 0.001196 in range [0.000797, 0.001594]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000997 in range [0.000797, 0.001197]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000897 in range [0.000797, 0.000998]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000848 in range [0.000797, 0.000898]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.25064555668183275, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.1724873301753683, x10 : -0.3747273409490208, x11 : 1.0, x12 : 15.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.15913796497907265, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.22553029656410217, x10 : -0.37472734094902077, x11 : 1, x12 : 15, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000848


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150268 in range [0.000000, 0.300536]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075003 in range [0.000000, 0.150006]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035818 in range [0.000000, 0.071636]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017910 in range [0.000000, 0.035819]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008910 in range [0.000000, 0.017819]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004455 in range [0.000000, 0.008911]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001588 in range [0.000000, 0.003177]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000795 in range [0.000000, 0.001589]...	no solution exists.
	Iteration #010: testing norm threshold 0.001192 in range [0.000795, 0.001589]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000994 in range [0.000795, 0.001193]...	no solution exists.
	Iteration #012: testing norm threshold 0.001093 in range [0.000994, 0.001193]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : 4.035246642655226, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 2.373575085251073, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 1, x4 : 4.0332165890960665, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 2.3715450316919133, x10 : 0.19078253341040552, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001192


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.172783 in range [0.000000, 0.345565]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086392 in range [0.000000, 0.172784]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043196 in range [0.000000, 0.086393]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021259 in range [0.000000, 0.042518]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010537 in range [0.000000, 0.021075]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004670 in range [0.000000, 0.009339]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002335 in range [0.000000, 0.004671]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001118 in range [0.000000, 0.002235]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000559 in range [0.000000, 0.001119]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7671184837818146, x5 : -0.3875041902065277, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6966712434081946, x10 : -0.3615961819887161, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000133


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174733 in range [0.000000, 0.349467]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087164 in range [0.000000, 0.174328]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043164 in range [0.000000, 0.086327]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019863 in range [0.000000, 0.039726]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005975 in range [0.000000, 0.011950]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002356 in range [0.000000, 0.004713]...	no solution exists.
	Iteration #008: testing norm threshold 0.003535 in range [0.002356, 0.004713]...	no solution exists.
	Iteration #009: testing norm threshold 0.004124 in range [0.003535, 0.004713]...	no solution exists.
	Iteration #010: testing norm threshold 0.004418 in range [0.004124, 0.004713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004271 in range [0.004124, 0.004419]...	no solution exists.
	Iteration #012: testing norm threshold 0.004345 in range [0.004271, 0.004419]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : 2.7940455975605287, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.9570477221196327, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 1, x4 : 3.0858797882790214, x5 : -0.40720407617143317, x6 : 0, x7 : 0, x8 : 0, x9 : 2.9567708133648423, x10 : 0.7856550668472894, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004345


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133799 in range [0.000000, 0.267597]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061117 in range [0.000000, 0.122234]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030001 in range [0.000000, 0.060002]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014563 in range [0.000000, 0.029126]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006497 in range [0.000000, 0.012994]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001149 in range [0.000000, 0.002299]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000552 in range [0.000000, 0.001105]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000277 in range [0.000000, 0.000553]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000139 in range [0.000000, 0.000278]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.31728722353255473, x5 : -0.376166025540068, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.2432112861594361, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.31479374974950164, x5 : -0.40748098492622375, x6 : 0, x7 : 3, x8 : 0, x9 : -0.2481982337255423, x10 : -0.26922804862120586, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000139


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124842 in range [0.000000, 0.249683]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058793 in range [0.000000, 0.117587]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027422 in range [0.000000, 0.054844]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013712 in range [0.000000, 0.027423]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006717 in range [0.000000, 0.013434]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003359 in range [0.000000, 0.006718]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001680 in range [0.000000, 0.003360]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000390 in range [0.000000, 0.000780]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000196 in range [0.000000, 0.000391]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000197]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.26730597339451323, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.18574807192238105, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.2725907454347652, x5 : -0.3037777684909065, x6 : 0, x7 : 0, x8 : 6, x9 : -0.19103284396263298, x10 : -0.2695258730953516, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139454 in range [0.000000, 0.278909]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063908 in range [0.000000, 0.127817]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031731 in range [0.000000, 0.063462]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014523 in range [0.000000, 0.029045]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007262 in range [0.000000, 0.014524]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003431 in range [0.000000, 0.006862]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001716 in range [0.000000, 0.003432]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000296 in range [0.000000, 0.000592]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000148 in range [0.000000, 0.000297]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000075 in range [0.000000, 0.000149]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6546606619643349, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.610091807826788, x10 : -0.2863383490338839, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6609083116054535, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 4, x9 : -0.6069372003386632, x10 : -0.2908100737131738, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000148


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089825 in range [0.000000, 0.179650]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044902 in range [0.000000, 0.089804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021547 in range [0.000000, 0.043094]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009711 in range [0.000000, 0.019421]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004060 in range [0.000000, 0.008120]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001665 in range [0.000000, 0.003330]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000833 in range [0.000000, 0.001666]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000405 in range [0.000000, 0.000811]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000203 in range [0.000000, 0.000406]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7632341950323539, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6960057942739685, x10 : -0.36339788423692776, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095548 in range [0.000000, 0.191097]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047775 in range [0.000000, 0.095549]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016805 in range [0.000000, 0.033611]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007828 in range [0.000000, 0.015657]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003577 in range [0.000000, 0.007154]...	no solution exists.
	Iteration #007: testing norm threshold 0.005365 in range [0.003577, 0.007154]...	no solution exists.
	Iteration #008: testing norm threshold 0.006260 in range [0.005365, 0.007154]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005813 in range [0.005365, 0.006261]...	no solution exists.
	Iteration #010: testing norm threshold 0.006037 in range [0.005813, 0.006261]...	no solution exists.
	Iteration #011: testing norm threshold 0.006149 in range [0.006037, 0.006261]...	no solution exists.
	Iteration #012: testing norm threshold 0.006205 in range [0.006149, 0.006261]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.292296598463534, x5 : 2.1827134913487383, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 2.011775440759676, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7567057311534882, x5 : 0.8272231221199036, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6820083025568897, x10 : 2.0107578467673406, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.006205


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141503 in range [0.000000, 0.283006]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070752 in range [0.000000, 0.141504]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033916 in range [0.000000, 0.067832]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016259 in range [0.000000, 0.032517]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008130 in range [0.000000, 0.016260]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003831 in range [0.000000, 0.007662]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001916 in range [0.000000, 0.003832]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000959 in range [0.000000, 0.001917]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000480 in range [0.000000, 0.000960]...	no solution exists.
	Iteration #011: testing norm threshold 0.000720 in range [0.000480, 0.000960]...	no solution exists.
	Iteration #012: testing norm threshold 0.000840 in range [0.000720, 0.000960]...	no solution exists.
	Iteration #013: testing norm threshold 0.000900 in range [0.000840, 0.000960]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.50740340374513, x5 : 1.0285335693953952, x6 : 1.0, x7 : 0.0, x8 : 4.0, x9 : 0.4109853066931912, x10 : 0.973204785756817, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.613542406753418, x5 : 1.1578873385943147, x6 : 1, x7 : 0, x8 : 4, x9 : 0.4068913626644589, x10 : 0.973204785756817, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000959


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149950 in range [0.000000, 0.299900]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074976 in range [0.000000, 0.149951]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035945 in range [0.000000, 0.071890]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017973 in range [0.000000, 0.035946]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008987 in range [0.000000, 0.017974]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004402 in range [0.000000, 0.008804]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001547 in range [0.000000, 0.003094]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000774 in range [0.000000, 0.001548]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000388 in range [0.000000, 0.000775]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000194 in range [0.000000, 0.000389]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140963 in range [0.000000, 0.281926]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070219 in range [0.000000, 0.140438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033516 in range [0.000000, 0.067032]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016749 in range [0.000000, 0.033498]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007729 in range [0.000000, 0.015458]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000403 in range [0.000000, 0.000806]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000084 in range [0.000000, 0.000168]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4089195154522975, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3095149948944997, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.40868892965665005, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.30997616648579457, x10 : -0.2863383490338839, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136870 in range [0.000000, 0.273740]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067705 in range [0.000000, 0.135409]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032710 in range [0.000000, 0.065421]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016310 in range [0.000000, 0.032621]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007505 in range [0.000000, 0.015010]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001865 in range [0.000000, 0.003730]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000516 in range [0.000000, 0.001032]...	no solution exists.
	Iteration #009: testing norm threshold 0.000774 in range [0.000516, 0.001032]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000602 in range [0.000516, 0.000689]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6889559407292685, x5 : -0.38086356839094127, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.085928413793502, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000602


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.183183 in range [0.000000, 0.366366]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090939 in range [0.000000, 0.181878]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045121 in range [0.000000, 0.090242]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021805 in range [0.000000, 0.043610]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010083 in range [0.000000, 0.020165]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005042 in range [0.000000, 0.010084]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002521 in range [0.000000, 0.005043]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001261 in range [0.000000, 0.002522]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000605 in range [0.000000, 0.001210]...	no solution exists.
	Iteration #011: testing norm threshold 0.000908 in range [0.000605, 0.001210]...	no solution exists.
	Iteration #012: testing norm threshold 0.001059 in range [0.000908, 0.001210]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000963 in range [0.000908, 0.001018]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4963867031938701, x5 : -0.2509061890490075, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.4465426596136311, x10 : 0.06721761862666377, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4963867031938701, x5 : -0.2643268802586804, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6255626678466797, x10 : 0.06721761862666377, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001017


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132456 in range [0.000000, 0.264913]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062025 in range [0.000000, 0.124050]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026741 in range [0.000000, 0.053481]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013371 in range [0.000000, 0.026742]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006686 in range [0.000000, 0.013372]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003113 in range [0.000000, 0.006227]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001557 in range [0.000000, 0.003114]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000152 in range [0.000000, 0.000304]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000076 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5671934742227622, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : -0.3084355970126681, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5681494666057962, x5 : -0.39811062459877583, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5327374637126923, x10 : -0.3084355970126681, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116721 in range [0.000000, 0.233442]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056502 in range [0.000000, 0.113004]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027768 in range [0.000000, 0.055536]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013313 in range [0.000000, 0.026626]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006180 in range [0.000000, 0.012361]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001230 in range [0.000000, 0.002459]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000615 in range [0.000000, 0.001231]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000308 in range [0.000000, 0.000616]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000148 in range [0.000000, 0.000296]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.26730597339451323, x5 : -0.3224832384724706, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.15922658842835558, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.26937472871214396, x5 : -0.32248324155807495, x6 : 0, x7 : 1, x8 : 0, x9 : -0.16364684142172337, x10 : -0.27528972923755646, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107910 in range [0.000000, 0.215820]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053955 in range [0.000000, 0.107911]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025855 in range [0.000000, 0.051710]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012745 in range [0.000000, 0.025490]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003134 in range [0.000000, 0.006268]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001365 in range [0.000000, 0.002730]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000573 in range [0.000000, 0.001147]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000287 in range [0.000000, 0.000574]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000144 in range [0.000000, 0.000288]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5546981616882519, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5349476045937159, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5575883901581868, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5347294576076629, x10 : -0.2531924769282341, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185336 in range [0.000000, 0.370672]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088627 in range [0.000000, 0.177255]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044289 in range [0.000000, 0.088579]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022092 in range [0.000000, 0.044184]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010493 in range [0.000000, 0.020986]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005184 in range [0.000000, 0.010367]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002592 in range [0.000000, 0.005185]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001297 in range [0.000000, 0.002593]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000649 in range [0.000000, 0.001298]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000300 in range [0.000000, 0.000600]...	no solution exists.
	Iteration #012: testing norm threshold 0.000450 in range [0.000300, 0.000600]...	no solution exists.
	Iteration #013: testing norm threshold 0.000525 in range [0.000450, 0.000600]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.6365216332684039, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.7292431086214964, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.6177786588668823, x5 : 0.39953491031938837, x6 : 0, x7 : 0, x8 : 0, x9 : 0.7354907631787245, x10 : -0.12705699607898283, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000525


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137983 in range [0.000000, 0.275965]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067931 in range [0.000000, 0.135862]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029777 in range [0.000000, 0.059554]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014889 in range [0.000000, 0.029778]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005983 in range [0.000000, 0.011966]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002992 in range [0.000000, 0.005984]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001497 in range [0.000000, 0.002993]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7723248511954899, x5 : -0.4243339807197209, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148611 in range [0.000000, 0.297222]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074306 in range [0.000000, 0.148612]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037154 in range [0.000000, 0.074307]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018577 in range [0.000000, 0.037155]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009289 in range [0.000000, 0.018578]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004634 in range [0.000000, 0.009268]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002318 in range [0.000000, 0.004635]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001159 in range [0.000000, 0.002319]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000580 in range [0.000000, 0.001160]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000291 in range [0.000000, 0.000581]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000073 in range [0.000000, 0.000147]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.16586486113517976, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.20765393323899625, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.1658116522308091, x5 : -0.28222113847732544, x6 : 0, x7 : 0, x8 : 6, x9 : 0.2076007243346256, x10 : -0.36362549976815284, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.067347 in range [0.000000, 0.134694]...	solution exists & found.
	Iteration #003: testing norm threshold 0.033674 in range [0.000000, 0.067348]...	solution exists & found.
	Iteration #004: testing norm threshold 0.015542 in range [0.000000, 0.031083]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006040 in range [0.000000, 0.012079]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002086 in range [0.000000, 0.004173]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001034 in range [0.000000, 0.002068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000094 in range [0.000000, 0.000187]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4164281189441681, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3349530644844112, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175208 in range [0.000000, 0.350416]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080508 in range [0.000000, 0.161016]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040238 in range [0.000000, 0.080477]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019988 in range [0.000000, 0.039975]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007434 in range [0.000000, 0.014867]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003652 in range [0.000000, 0.007305]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001731 in range [0.000000, 0.003462]...	no solution exists.
	Iteration #009: testing norm threshold 0.002596 in range [0.001731, 0.003462]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002164 in range [0.001731, 0.002597]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001948 in range [0.001731, 0.002165]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001840 in range [0.001731, 0.001949]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001786 in range [0.001731, 0.001841]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.3339476402452353, x5 : 0.3843401245842274, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.2299505444124234, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.1940752081175921, x5 : 0.6352012418607595, x6 : 1, x7 : 6, x8 : 0, x9 : -0.23029198593443778, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001786


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157581 in range [0.000000, 0.315162]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069269 in range [0.000000, 0.138539]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033210 in range [0.000000, 0.066420]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016021 in range [0.000000, 0.032041]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007932 in range [0.000000, 0.015865]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003967 in range [0.000000, 0.007933]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001984 in range [0.000000, 0.003968]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000317 in range [0.000000, 0.000633]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.08820649373319786, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.030844043278826675, x10 : -0.2200466050975312, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.09028904512524605, x5 : -0.3549343097816203, x6 : 0, x7 : 0, x8 : 6, x9 : 0.03251276975236206, x10 : -0.22338405804460199, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093342 in range [0.000000, 0.186683]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046671 in range [0.000000, 0.093343]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023336 in range [0.000000, 0.046672]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011653 in range [0.000000, 0.023307]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005827 in range [0.000000, 0.011654]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002353 in range [0.000000, 0.004707]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001177 in range [0.000000, 0.002354]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000589 in range [0.000000, 0.001178]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000295 in range [0.000000, 0.000590]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000148 in range [0.000000, 0.000296]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7337976413495673, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7338317847376918, x5 : -0.37620016892819264, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.36364456528439887, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000148


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069625 in range [0.000000, 0.139249]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034813 in range [0.000000, 0.069626]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016799 in range [0.000000, 0.033599]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008400 in range [0.000000, 0.016800]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004182 in range [0.000000, 0.008365]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002092 in range [0.000000, 0.004183]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001046 in range [0.000000, 0.002093]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000408 in range [0.000000, 0.000816]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000204 in range [0.000000, 0.000409]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000103 in range [0.000000, 0.000205]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3880939945614469, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.34487697288653363, x10 : -0.2642411010550996, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.3880494788184182, x5 : -0.3267853956945526, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3447350926770062, x10 : -0.2530210640557396, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177517 in range [0.000000, 0.355034]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086902 in range [0.000000, 0.173804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043451 in range [0.000000, 0.086903]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021726 in range [0.000000, 0.043452]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008507 in range [0.000000, 0.017014]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004254 in range [0.000000, 0.008508]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002128 in range [0.000000, 0.004255]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000845 in range [0.000000, 0.001689]...	no solution exists.
	Iteration #010: testing norm threshold 0.001267 in range [0.000845, 0.001689]...	no solution exists.
	Iteration #011: testing norm threshold 0.001478 in range [0.001267, 0.001689]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001373 in range [0.001267, 0.001479]...	no solution exists.
	Iteration #013: testing norm threshold 0.001426 in range [0.001373, 0.001479]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.17150857729660038, x5 : 0.9390622576160664, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.42886167061761415, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.17304459333738145, x5 : 0.9384117901097407, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6962866187095642, x10 : -0.13156599137806005, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001478


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122774 in range [0.000000, 0.245548]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057219 in range [0.000000, 0.114438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027971 in range [0.000000, 0.055943]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013449 in range [0.000000, 0.026899]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001828 in range [0.000000, 0.003655]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000879 in range [0.000000, 0.001758]...	no solution exists.
	Iteration #008: testing norm threshold 0.001318 in range [0.000879, 0.001758]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001093 in range [0.000879, 0.001306]...	no solution exists.
	Iteration #010: testing norm threshold 0.001200 in range [0.001093, 0.001306]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4089195154522975, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.3537174673845421, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4443228989839554, x5 : -0.22745518478265753, x6 : 1, x7 : 6, x8 : 0, x9 : -0.35480064677386636, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001188


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171863 in range [0.000000, 0.343726]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085932 in range [0.000000, 0.171864]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042966 in range [0.000000, 0.085933]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021350 in range [0.000000, 0.042699]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010233 in range [0.000000, 0.020466]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002478 in range [0.000000, 0.004957]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001240 in range [0.000000, 0.002479]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000263 in range [0.000000, 0.000525]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000102 in range [0.000000, 0.000203]...	no solution exists.
	Iteration #011: testing norm threshold 0.000152 in range [0.000102, 0.000203]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.3135361072945377, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7355787423521273, x5 : -0.3180096745491028, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000202


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124992 in range [0.000000, 0.249984]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062496 in range [0.000000, 0.124993]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031076 in range [0.000000, 0.062152]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014684 in range [0.000000, 0.029368]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006559 in range [0.000000, 0.013119]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001971 in range [0.000000, 0.003941]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000477 in range [0.000000, 0.000953]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000116 in range [0.000000, 0.000233]...	no solution exists.
	Iteration #010: testing norm threshold 0.000174 in range [0.000116, 0.000233]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.3839288903832768, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3050947476454955, x10 : -0.13165761318239427, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.38547441483273204, x5 : -0.2225192727135544, x6 : 0, x7 : 0, x8 : 6, x9 : -0.29691884830464177, x10 : -0.13088485095766667, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000174


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109206 in range [0.000000, 0.218411]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053910 in range [0.000000, 0.107821]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026956 in range [0.000000, 0.053911]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013438 in range [0.000000, 0.026876]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006719 in range [0.000000, 0.013439]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003360 in range [0.000000, 0.006720]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001573 in range [0.000000, 0.003146]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000763 in range [0.000000, 0.001526]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000382 in range [0.000000, 0.000764]...	no solution exists.
	Iteration #011: testing norm threshold 0.000573 in range [0.000382, 0.000764]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000478 in range [0.000382, 0.000574]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.09653670208953813, x5 : 0.6617011911001469, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.10051467730621293, x5 : 0.48723213374614716, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.2653461576309475, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000478


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164697 in range [0.000000, 0.329394]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082347 in range [0.000000, 0.164694]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041174 in range [0.000000, 0.082348]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020537 in range [0.000000, 0.041075]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010105 in range [0.000000, 0.020210]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005053 in range [0.000000, 0.010106]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002273 in range [0.000000, 0.004545]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001020 in range [0.000000, 0.002040]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000510 in range [0.000000, 0.001021]...	no solution exists.
	Iteration #011: testing norm threshold 0.000766 in range [0.000510, 0.001021]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000633 in range [0.000510, 0.000756]...	no solution exists.
	Iteration #013: testing norm threshold 0.000695 in range [0.000633, 0.000756]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6213398285389738, x5 : -0.09880495902414847, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6692385375499725, x5 : -0.13490194082260132, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6211424171924591, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000663


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164392 in range [0.000000, 0.328785]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082196 in range [0.000000, 0.164392]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039401 in range [0.000000, 0.078803]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019350 in range [0.000000, 0.038700]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009676 in range [0.000000, 0.019351]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004838 in range [0.000000, 0.009677]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001405 in range [0.000000, 0.002810]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000703 in range [0.000000, 0.001406]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	no solution exists.
	Iteration #011: testing norm threshold 0.000528 in range [0.000352, 0.000704]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000440 in range [0.000352, 0.000529]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.16586486113517976, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2872183837210725, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.1600303738011665, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 0, x9 : 0.28138389638705924, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000528


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146785 in range [0.000000, 0.293569]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073347 in range [0.000000, 0.146694]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036303 in range [0.000000, 0.072605]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015151 in range [0.000000, 0.030303]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005947 in range [0.000000, 0.011894]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001912 in range [0.000000, 0.003824]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000903 in range [0.000000, 0.001805]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000452 in range [0.000000, 0.000904]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000226 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000115]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.34487697288653363, x10 : -0.0653658692460416, x11 : 1.0, x12 : 17.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.39005477768190805, x5 : -0.27131322133891994, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3468377560069948, x10 : -0.06732665236650275, x11 : 1, x12 : 17, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000114


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.071363 in range [0.000000, 0.142726]...	solution exists & found.
	Iteration #003: testing norm threshold 0.032921 in range [0.000000, 0.065843]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016394 in range [0.000000, 0.032788]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008186 in range [0.000000, 0.016373]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003708 in range [0.000000, 0.007416]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001830 in range [0.000000, 0.003660]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000915 in range [0.000000, 0.001831]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000418 in range [0.000000, 0.000836]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000194 in range [0.000000, 0.000389]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.374120070043686, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.499390251673276, x10 : -0.3747273409490208, x11 : 2.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.37161930783513875, x5 : -0.29761464430466683, x6 : 0, x7 : 0, x8 : 6, x9 : 0.4968894894647287, x10 : -0.3611779464639762, x11 : 2, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148464 in range [0.000000, 0.296928]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074032 in range [0.000000, 0.148064]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032990 in range [0.000000, 0.065980]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016495 in range [0.000000, 0.032991]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007983 in range [0.000000, 0.015967]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003801 in range [0.000000, 0.007602]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001863 in range [0.000000, 0.003727]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000932 in range [0.000000, 0.001864]...	no solution exists.
	Iteration #010: testing norm threshold 0.001398 in range [0.000932, 0.001864]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001166 in range [0.000932, 0.001399]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001050 in range [0.000932, 0.001167]...	no solution exists.
	Iteration #013: testing norm threshold 0.001108 in range [0.001050, 0.001167]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.1991856945605408, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2606969002270471, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.1984016079322722, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.43829088155777296, x10 : -0.16401939596383727, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151713 in range [0.000000, 0.303427]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075857 in range [0.000000, 0.151714]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037921 in range [0.000000, 0.075842]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018658 in range [0.000000, 0.037316]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005625 in range [0.000000, 0.011251]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002471 in range [0.000000, 0.004942]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001236 in range [0.000000, 0.002472]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000618 in range [0.000000, 0.001237]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000310 in range [0.000000, 0.000619]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000208]...	no solution exists.
	Iteration #012: testing norm threshold 0.000156 in range [0.000104, 0.000208]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6130096201826336, x5 : -0.0809106966682827, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6338351368904114, x5 : -0.08715836612667198, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3574310392141342, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000207


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184825 in range [0.000000, 0.369650]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090692 in range [0.000000, 0.181385]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045347 in range [0.000000, 0.090693]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022431 in range [0.000000, 0.044861]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010780 in range [0.000000, 0.021559]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003979 in range [0.000000, 0.007957]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001613 in range [0.000000, 0.003225]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000807 in range [0.000000, 0.001614]...	no solution exists.
	Iteration #010: testing norm threshold 0.001210 in range [0.000807, 0.001614]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000970 in range [0.000807, 0.001132]...	no solution exists.
	Iteration #012: testing norm threshold 0.001051 in range [0.000970, 0.001132]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4630658697685091, x5 : 0.2411860257373012, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.4863248848546693, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5317901074886322, x5 : 0.28561320900917053, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5990411937236786, x10 : -0.019088831703504578, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115734 in range [0.000000, 0.231468]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057738 in range [0.000000, 0.115476]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028143 in range [0.000000, 0.056287]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013440 in range [0.000000, 0.026880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005970 in range [0.000000, 0.011941]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002265 in range [0.000000, 0.004530]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001133 in range [0.000000, 0.002266]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000567 in range [0.000000, 0.001134]...	no solution exists.
	Iteration #010: testing norm threshold 0.000851 in range [0.000567, 0.001134]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000685 in range [0.000567, 0.000803]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.16734347311843026, x5 : -0.15248774609174578, x6 : 0.0, x7 : 3.0, x8 : 2.0, x9 : -0.203429060918398, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.1664159483450764, x5 : -0.22406478971242905, x6 : 0, x7 : 3, x8 : 2, x9 : -0.20790263537795076, x10 : 0.18312098505400073, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000654


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.068074 in range [0.000000, 0.136149]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034038 in range [0.000000, 0.068075]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014859 in range [0.000000, 0.029718]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006834 in range [0.000000, 0.013668]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002527 in range [0.000000, 0.005055]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000463 in range [0.000000, 0.000925]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000226 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000090 in range [0.000000, 0.000181]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.19722340198141025, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6817338466644287, x5 : -0.19863048977206194, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6184125069750025, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111904 in range [0.000000, 0.223808]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055953 in range [0.000000, 0.111905]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027977 in range [0.000000, 0.055954]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008909 in range [0.000000, 0.017818]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001845 in range [0.000000, 0.003690]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000923 in range [0.000000, 0.001846]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000462 in range [0.000000, 0.000924]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000231 in range [0.000000, 0.000463]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000116 in range [0.000000, 0.000232]...	no solution exists.
	Iteration #011: testing norm threshold 0.000174 in range [0.000116, 0.000232]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7358801960945129, x5 : -0.30906254053115845, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3621089262537999, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000174


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095788 in range [0.000000, 0.191577]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047077 in range [0.000000, 0.094154]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023424 in range [0.000000, 0.046847]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011712 in range [0.000000, 0.023425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005003 in range [0.000000, 0.010007]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002396 in range [0.000000, 0.004792]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001020 in range [0.000000, 0.002039]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000510 in range [0.000000, 0.001021]...	no solution exists.
	Iteration #010: testing norm threshold 0.000765 in range [0.000510, 0.001021]...	no solution exists.
	Iteration #011: testing norm threshold 0.000893 in range [0.000765, 0.001021]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3547731611360859, x5 : 0.4738114363635562, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3610208034515381, x5 : 0.2814481258392334, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.30612223342103073, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000844


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169491 in range [0.000000, 0.338983]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084746 in range [0.000000, 0.169492]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042374 in range [0.000000, 0.084747]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021187 in range [0.000000, 0.042375]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008228 in range [0.000000, 0.016457]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004115 in range [0.000000, 0.008229]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002058 in range [0.000000, 0.004116]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001029 in range [0.000000, 0.002059]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000515 in range [0.000000, 0.001030]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000130 in range [0.000000, 0.000259]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.9905554884128646, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.140326102778891, x10 : -0.021171373288473145, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.9899598241073417, x5 : -0.19215417124526224, x6 : 0, x7 : 0, x8 : 6, x9 : 1.1397304384733682, x10 : -0.021171373288473145, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145913 in range [0.000000, 0.291826]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072579 in range [0.000000, 0.145159]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036290 in range [0.000000, 0.072580]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018146 in range [0.000000, 0.036291]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008074 in range [0.000000, 0.016147]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003525 in range [0.000000, 0.007050]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001763 in range [0.000000, 0.003526]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000335 in range [0.000000, 0.000669]...	no solution exists.
	Iteration #010: testing norm threshold 0.000502 in range [0.000335, 0.000669]...	no solution exists.
	Iteration #011: testing norm threshold 0.000586 in range [0.000502, 0.000669]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.22834142380773165, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2783778892230641, x10 : -0.10956036520361004, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.2275932573468398, x5 : -0.2963900113995639, x6 : 0, x7 : 0, x8 : 0, x9 : 0.27762972276217224, x10 : -0.27528972923755646, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000586


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.190658 in range [0.000000, 0.381317]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093190 in range [0.000000, 0.186380]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045855 in range [0.000000, 0.091711]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022928 in range [0.000000, 0.045856]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011465 in range [0.000000, 0.022929]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005733 in range [0.000000, 0.011466]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002867 in range [0.000000, 0.005734]...	no solution exists.
	Iteration #009: testing norm threshold 0.004300 in range [0.002867, 0.005734]...	no solution exists.
	Iteration #010: testing norm threshold 0.005017 in range [0.004300, 0.005734]...	no solution exists.
	Iteration #011: testing norm threshold 0.005375 in range [0.005017, 0.005734]...	solution exists & found.
	Iteration #012: testing norm threshold 0.005197 in range [0.005017, 0.005376]...	no solution exists.
	Iteration #013: testing norm threshold 0.005287 in range [0.005197, 0.005376]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 2.223426325151222, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 2.475240771978171, x10 : 1.6582194730991282, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : 2.2226075413639297, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 2, x9 : 2.5931962080274045, x10 : 0.8074754178524017, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005375


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099668 in range [0.000000, 0.199336]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049724 in range [0.000000, 0.099449]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024863 in range [0.000000, 0.049725]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012432 in range [0.000000, 0.024864]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004095 in range [0.000000, 0.008189]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002048 in range [0.000000, 0.004096]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001024 in range [0.000000, 0.002049]...	no solution exists.
	Iteration #009: testing norm threshold 0.001537 in range [0.001024, 0.002049]...	no solution exists.
	Iteration #010: testing norm threshold 0.001793 in range [0.001537, 0.002049]...	no solution exists.
	Iteration #011: testing norm threshold 0.001921 in range [0.001793, 0.002049]...	no solution exists.
	Iteration #012: testing norm threshold 0.001985 in range [0.001921, 0.002049]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.1321690304706489, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.051921157798806, x10 : -0.04326862126725737, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.1321690304706489, x5 : -0.09880495902414847, x6 : 0, x7 : 0, x8 : 0, x9 : 1.0519764634233133, x10 : -0.04337923251627232, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001985


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156563 in range [0.000000, 0.313126]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077720 in range [0.000000, 0.155441]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038477 in range [0.000000, 0.076954]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019207 in range [0.000000, 0.038414]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009491 in range [0.000000, 0.018982]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004746 in range [0.000000, 0.009492]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002373 in range [0.000000, 0.004747]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001187 in range [0.000000, 0.002374]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000594 in range [0.000000, 0.001188]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000298 in range [0.000000, 0.000595]...	no solution exists.
	Iteration #012: testing norm threshold 0.000446 in range [0.000298, 0.000595]...	no solution exists.
	Iteration #013: testing norm threshold 0.000521 in range [0.000446, 0.000595]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3880939945614469, x5 : -0.3493246320062693, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.3404567256375294, x10 : -0.17585210913996274, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3910609514907992, x5 : -0.3537982106208801, x6 : 0, x7 : 1, x8 : 0, x9 : -0.4156009256839752, x10 : -0.22004660218954086, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000594


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085390 in range [0.000000, 0.170780]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042696 in range [0.000000, 0.085391]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018992 in range [0.000000, 0.037985]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008745 in range [0.000000, 0.017490]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003769 in range [0.000000, 0.007537]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001885 in range [0.000000, 0.003770]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000798 in range [0.000000, 0.001595]...	no solution exists.
	Iteration #009: testing norm threshold 0.001197 in range [0.000798, 0.001595]...	no solution exists.
	Iteration #010: testing norm threshold 0.001396 in range [0.001197, 0.001595]...	no solution exists.
	Iteration #011: testing norm threshold 0.001496 in range [0.001396, 0.001595]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.3047919109980444, x5 : 0.5811770104987509, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.4553831541116396, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.3058969724905988, x5 : 0.6449119958492439, x6 : 2, x7 : 6, x8 : 0, x9 : -0.45648821560419395, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001594


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119706 in range [0.000000, 0.239411]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059840 in range [0.000000, 0.119680]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028750 in range [0.000000, 0.057499]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013482 in range [0.000000, 0.026964]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006610 in range [0.000000, 0.013220]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003306 in range [0.000000, 0.006611]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001391 in range [0.000000, 0.002783]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000639 in range [0.000000, 0.001277]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000320 in range [0.000000, 0.000640]...	no solution exists.
	Iteration #011: testing norm threshold 0.000480 in range [0.000320, 0.000640]...	no solution exists.
	Iteration #012: testing norm threshold 0.000560 in range [0.000480, 0.000640]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5796887867572726, x5 : 0.053296271000710604, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5338726043701172, x5 : 0.025900569030739853, x6 : 4, x7 : 6, x8 : 0, x9 : -0.687446117401123, x10 : -0.33053283393383026, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000639


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170345 in range [0.000000, 0.340690]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085173 in range [0.000000, 0.170346]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042246 in range [0.000000, 0.084492]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021124 in range [0.000000, 0.042247]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010339 in range [0.000000, 0.020679]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004314 in range [0.000000, 0.008627]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002157 in range [0.000000, 0.004315]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000857 in range [0.000000, 0.001714]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000219 in range [0.000000, 0.000437]...	no solution exists.
	Iteration #011: testing norm threshold 0.000328 in range [0.000219, 0.000437]...	no solution exists.
	Iteration #012: testing norm threshold 0.000383 in range [0.000328, 0.000437]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.4241013201817275, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.4507675319342294, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.4217019420334435, x5 : -0.4164281189441681, x6 : 0, x7 : 0, x8 : 0, x9 : 0.4686377725278998, x10 : -0.15615423930946248, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000383


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.083930 in range [0.000000, 0.167860]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041948 in range [0.000000, 0.083895]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020974 in range [0.000000, 0.041949]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010246 in range [0.000000, 0.020492]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005072 in range [0.000000, 0.010143]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002536 in range [0.000000, 0.005073]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001269 in range [0.000000, 0.002537]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000635 in range [0.000000, 0.001270]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000338]...	no solution exists.
	Iteration #011: testing norm threshold 0.000253 in range [0.000169, 0.000338]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.7698049669698479, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.7248228613724922, x10 : -0.10956036520361004, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.7665656372623101, x5 : -0.2553797662258148, x6 : 0, x7 : 0, x8 : 6, x9 : 0.7215835316649544, x10 : -0.10956036520361004, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000253


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114197 in range [0.000000, 0.228395]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056199 in range [0.000000, 0.112398]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026820 in range [0.000000, 0.053639]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013036 in range [0.000000, 0.026073]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006519 in range [0.000000, 0.013037]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003260 in range [0.000000, 0.006520]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001525 in range [0.000000, 0.003050]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000763 in range [0.000000, 0.001526]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000381 in range [0.000000, 0.000763]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.125692431336729, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.32277573664151243, x10 : -0.2642411010550996, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.12232334723351919, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : -0.329513904847932, x10 : -0.2642411010550996, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000136


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.055328 in range [0.000000, 0.110655]...	solution exists & found.
	Iteration #003: testing norm threshold 0.022880 in range [0.000000, 0.045760]...	solution exists & found.
	Iteration #004: testing norm threshold 0.010450 in range [0.000000, 0.020900]...	solution exists & found.
	Iteration #005: testing norm threshold 0.001359 in range [0.000000, 0.002718]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000576 in range [0.000000, 0.001153]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000289 in range [0.000000, 0.000577]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000145 in range [0.000000, 0.000290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5838538909354427, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5859364569187164, x5 : -0.3864801702802542, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5512615929955926, x10 : -0.26560811461735306, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122924 in range [0.000000, 0.245848]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059338 in range [0.000000, 0.118676]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027972 in range [0.000000, 0.055943]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013986 in range [0.000000, 0.027973]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006304 in range [0.000000, 0.012608]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003153 in range [0.000000, 0.006305]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000318 in range [0.000000, 0.000637]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000160 in range [0.000000, 0.000319]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000080 in range [0.000000, 0.000161]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.6546606619643349, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.6189323023247965, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.6588257551193237, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 2, x9 : -0.6189323023247965, x10 : -0.29276375148633554, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138619 in range [0.000000, 0.277238]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069310 in range [0.000000, 0.138620]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034656 in range [0.000000, 0.069311]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014707 in range [0.000000, 0.029413]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007351 in range [0.000000, 0.014703]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003676 in range [0.000000, 0.007352]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001359 in range [0.000000, 0.002717]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000680 in range [0.000000, 0.001360]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000340 in range [0.000000, 0.000681]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000171 in range [0.000000, 0.000341]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6906266395915789, x10 : -0.3624389802087587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118540 in range [0.000000, 0.237079]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057663 in range [0.000000, 0.115326]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028832 in range [0.000000, 0.057664]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014283 in range [0.000000, 0.028567]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007142 in range [0.000000, 0.014284]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003183 in range [0.000000, 0.006366]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001592 in range [0.000000, 0.003184]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000796 in range [0.000000, 0.001593]...	no solution exists.
	Iteration #010: testing norm threshold 0.001195 in range [0.000796, 0.001593]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000996 in range [0.000796, 0.001196]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000897 in range [0.000796, 0.000997]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000847 in range [0.000796, 0.000898]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.474082570319769, x5 : -0.0809106966682827, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.4772890154282548, x10 : 0.4870653302235641, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.474082570319769, x5 : 0.24336122387212447, x6 : 0, x7 : 0, x8 : 6, x9 : 0.47511381431461425, x10 : 0.4848901291099235, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000847


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.039008 in range [0.000000, 0.078016]...	solution exists & found.
	Iteration #003: testing norm threshold 0.019045 in range [0.000000, 0.038089]...	solution exists & found.
	Iteration #004: testing norm threshold 0.008601 in range [0.000000, 0.017202]...	solution exists & found.
	Iteration #005: testing norm threshold 0.003167 in range [0.000000, 0.006334]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001570 in range [0.000000, 0.003141]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000786 in range [0.000000, 0.001571]...	no solution exists.
	Iteration #008: testing norm threshold 0.001178 in range [0.000786, 0.001571]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000983 in range [0.000786, 0.001179]...	no solution exists.
	Iteration #010: testing norm threshold 0.001081 in range [0.000983, 0.001179]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2824877781239433, x5 : 1.207476192954053, x6 : 1.0, x7 : 0.0, x8 : 5.0, x9 : -0.42886167061761415, x10 : 3.669069039168493, x11 : 1.0, x12 : 15.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3551180172815867, x5 : 1.207476192954053, x6 : 1, x7 : 0, x8 : 5, x9 : -0.43276769301280255, x10 : 3.882898937548692, x11 : 1, x12 : 15, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001178


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126812 in range [0.000000, 0.253624]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063407 in range [0.000000, 0.126813]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031704 in range [0.000000, 0.063408]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015303 in range [0.000000, 0.030606]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005889 in range [0.000000, 0.011778]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002740 in range [0.000000, 0.005480]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000571 in range [0.000000, 0.001142]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000286 in range [0.000000, 0.000572]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000143 in range [0.000000, 0.000287]...	no solution exists.
	Iteration #011: testing norm threshold 0.000215 in range [0.000143, 0.000287]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7379627525806427, x5 : -0.3932369407922246, x6 : 0, x7 : 6, x8 : 0, x9 : -0.646787231853626, x10 : -0.3583817985564687, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000215


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150506 in range [0.000000, 0.301013]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075081 in range [0.000000, 0.150162]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037099 in range [0.000000, 0.074198]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018513 in range [0.000000, 0.037026]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006556 in range [0.000000, 0.013113]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002481 in range [0.000000, 0.004961]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001241 in range [0.000000, 0.002482]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000200 in range [0.000000, 0.000399]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000100 in range [0.000000, 0.000201]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000051 in range [0.000000, 0.000101]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.658825766142505, x5 : -0.3672188943621351, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.657617481647729, x5 : -0.3895867168903351, x6 : 1, x7 : 3, x8 : 0, x9 : -0.6299829126849196, x10 : -0.22004660218954086, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000100


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.043667 in range [0.000000, 0.087334]...	solution exists & found.
	Iteration #003: testing norm threshold 0.020347 in range [0.000000, 0.040695]...	solution exists & found.
	Iteration #004: testing norm threshold 0.010174 in range [0.000000, 0.020348]...	solution exists & found.
	Iteration #005: testing norm threshold 0.004575 in range [0.000000, 0.009150]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002288 in range [0.000000, 0.004576]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001145 in range [0.000000, 0.002289]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000573 in range [0.000000, 0.001146]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000284 in range [0.000000, 0.000567]...	no solution exists.
	Iteration #010: testing norm threshold 0.000425 in range [0.000284, 0.000567]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000355 in range [0.000284, 0.000426]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.27415756976760297, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3181601144641022, x10 : -0.17585210913996274, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.2741342961550711, x5 : -0.22851508310886937, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3181601144641022, x10 : -0.27528972923755646, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000425


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155854 in range [0.000000, 0.311708]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074630 in range [0.000000, 0.149261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036709 in range [0.000000, 0.073419]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018317 in range [0.000000, 0.036634]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008735 in range [0.000000, 0.017469]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004026 in range [0.000000, 0.008052]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002014 in range [0.000000, 0.004027]...	no solution exists.
	Iteration #009: testing norm threshold 0.003020 in range [0.002014, 0.004027]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002372 in range [0.002014, 0.002731]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002193 in range [0.002014, 0.002373]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002082 in range [0.002014, 0.002150]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.06321586866417711, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1503860939303471, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.3360302001237869, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.15038609504699707, x10 : -0.11166185513138771, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002149


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146319 in range [0.000000, 0.292639]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071057 in range [0.000000, 0.142114]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035529 in range [0.000000, 0.071058]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014009 in range [0.000000, 0.028017]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007005 in range [0.000000, 0.014010]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003503 in range [0.000000, 0.007006]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001572 in range [0.000000, 0.003145]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000583 in range [0.000000, 0.001167]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000292 in range [0.000000, 0.000584]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000147 in range [0.000000, 0.000293]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000148]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.3964242029177871, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.31393524214350393, x10 : -0.3747273409490208, x11 : 1.0, x12 : 15.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.3964242029177871, x5 : -0.34150789741868637, x6 : 0, x7 : 0, x8 : 6, x9 : -0.31165920444785483, x10 : -0.37472734094902077, x11 : 1, x12 : 15, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000147


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089397 in range [0.000000, 0.178795]...	solution exists & found.
	Iteration #003: testing norm threshold 0.025501 in range [0.000000, 0.051003]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012751 in range [0.000000, 0.025502]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006346 in range [0.000000, 0.012691]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003173 in range [0.000000, 0.006347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001587 in range [0.000000, 0.003174]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000794 in range [0.000000, 0.001588]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000161 in range [0.000000, 0.000321]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000081 in range [0.000000, 0.000162]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4005893070959573, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.30067450039649124, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4006536944348245, x5 : -0.36268094239879606, x6 : 0, x7 : 0, x8 : 6, x9 : -0.30073888773535845, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121683 in range [0.000000, 0.243367]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054132 in range [0.000000, 0.108264]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026514 in range [0.000000, 0.053029]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012753 in range [0.000000, 0.025506]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006218 in range [0.000000, 0.012436]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003110 in range [0.000000, 0.006219]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001555 in range [0.000000, 0.003111]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000720 in range [0.000000, 0.001441]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000281 in range [0.000000, 0.000563]...	no solution exists.
	Iteration #011: testing norm threshold 0.000422 in range [0.000281, 0.000563]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000347 in range [0.000281, 0.000412]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.2756361817508535, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3271959838905167, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.28189826175634863, x5 : -0.4164281189441681, x6 : 0, x7 : 6, x8 : 0, x9 : -0.33166955089948885, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000347


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155127 in range [0.000000, 0.310255]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077430 in range [0.000000, 0.154860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038715 in range [0.000000, 0.077431]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019358 in range [0.000000, 0.038716]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009254 in range [0.000000, 0.018508]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004627 in range [0.000000, 0.009255]...	no solution exists.
	Iteration #008: testing norm threshold 0.006941 in range [0.004627, 0.009255]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005680 in range [0.004627, 0.006732]...	no solution exists.
	Iteration #010: testing norm threshold 0.006206 in range [0.005680, 0.006732]...	no solution exists.
	Iteration #011: testing norm threshold 0.006469 in range [0.006206, 0.006732]...	solution exists & found.
	Iteration #012: testing norm threshold 0.006338 in range [0.006206, 0.006470]...	no solution exists.
	Iteration #013: testing norm threshold 0.006404 in range [0.006338, 0.006470]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.3866153825781964, x5 : 0.1248733204241737, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 0.5347522296653099, x10 : 0.9953020337356012, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : 0.13157158301222077, x6 : 1, x7 : 4, x8 : 0, x9 : 0.5325275277148815, x10 : 0.9930773317851729, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.006469


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181432 in range [0.000000, 0.362865]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089918 in range [0.000000, 0.179836]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044928 in range [0.000000, 0.089857]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022296 in range [0.000000, 0.044592]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010825 in range [0.000000, 0.021649]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005347 in range [0.000000, 0.010694]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002674 in range [0.000000, 0.005348]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001338 in range [0.000000, 0.002675]...	no solution exists.
	Iteration #010: testing norm threshold 0.002006 in range [0.001338, 0.002675]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001672 in range [0.001338, 0.002007]...	no solution exists.
	Iteration #012: testing norm threshold 0.001840 in range [0.001672, 0.002007]...	no solution exists.
	Iteration #013: testing norm threshold 0.001924 in range [0.001840, 0.002007]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.17419506949152005, x5 : 0.1248733204241737, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3093196199660937, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.1974683843113359, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.38236380289568267, x10 : -0.16027313549743333, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001924


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098680 in range [0.000000, 0.197359]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049123 in range [0.000000, 0.098246]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024266 in range [0.000000, 0.048532]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012134 in range [0.000000, 0.024267]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006039 in range [0.000000, 0.012078]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003020 in range [0.000000, 0.006040]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001511 in range [0.000000, 0.003021]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000724 in range [0.000000, 0.001449]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000363 in range [0.000000, 0.000725]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000182 in range [0.000000, 0.000364]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.458900765590339, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.3625579618825506, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.45941597873582135, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 0, x9 : -0.36365098256441114, x10 : -0.2424894609653711, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096755 in range [0.000000, 0.193509]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042218 in range [0.000000, 0.084435]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021062 in range [0.000000, 0.042123]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010531 in range [0.000000, 0.021063]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002244 in range [0.000000, 0.004488]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001123 in range [0.000000, 0.002245]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000116 in range [0.000000, 0.000231]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000058 in range [0.000000, 0.000117]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.3672188943621351, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7542146639443905, x5 : -0.3716924488544464, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.22253767230662888, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136290 in range [0.000000, 0.272580]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067659 in range [0.000000, 0.135317]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033756 in range [0.000000, 0.067512]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014028 in range [0.000000, 0.028055]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006075 in range [0.000000, 0.012151]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001016 in range [0.000000, 0.002032]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000508 in range [0.000000, 0.001017]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000255 in range [0.000000, 0.000509]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000128 in range [0.000000, 0.000256]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.4030074190738666, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7650358974933624, x5 : -0.40748098492622375, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6874461472034454, x10 : -0.30217184570068173, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000105


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122078 in range [0.000000, 0.244155]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060941 in range [0.000000, 0.121881]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030471 in range [0.000000, 0.060942]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015127 in range [0.000000, 0.030255]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007564 in range [0.000000, 0.015128]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003783 in range [0.000000, 0.007565]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000645 in range [0.000000, 0.001290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000084 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.2946080934192836, x5 : -0.2240647955152089, x6 : 0.0, x7 : 3.0, x8 : 2.0, x9 : 1.4630041519562, x10 : 0.13350936256301646, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.2936059942842446, x5 : -0.20964199700105418, x6 : 0, x7 : 3, x8 : 2, x9 : 1.4630041519562, x10 : 0.14556008926880132, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110880 in range [0.000000, 0.221759]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055196 in range [0.000000, 0.110391]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023840 in range [0.000000, 0.047680]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011920 in range [0.000000, 0.023841]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005961 in range [0.000000, 0.011921]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002307 in range [0.000000, 0.004614]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001154 in range [0.000000, 0.002308]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000351 in range [0.000000, 0.000702]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000161 in range [0.000000, 0.000323]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.769201010465622, x5 : -0.4130596051250392, x6 : 1, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : -0.3625736537992838, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121653 in range [0.000000, 0.243307]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054772 in range [0.000000, 0.109544]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027387 in range [0.000000, 0.054773]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013694 in range [0.000000, 0.027388]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006733 in range [0.000000, 0.013467]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001025 in range [0.000000, 0.002051]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000513 in range [0.000000, 0.001026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000257 in range [0.000000, 0.000514]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000065 in range [0.000000, 0.000130]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7648108513740567, x5 : -0.4121795963711052, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.34135641769447606, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115936 in range [0.000000, 0.231873]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056162 in range [0.000000, 0.112324]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028057 in range [0.000000, 0.056114]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013316 in range [0.000000, 0.026633]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006573 in range [0.000000, 0.013146]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003287 in range [0.000000, 0.006574]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001411 in range [0.000000, 0.002821]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000706 in range [0.000000, 0.001412]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000353 in range [0.000000, 0.000707]...	no solution exists.
	Iteration #011: testing norm threshold 0.000530 in range [0.000353, 0.000707]...	no solution exists.
	Iteration #012: testing norm threshold 0.000618 in range [0.000530, 0.000707]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.40475441127412737, x5 : 0.3664458622283616, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.40460757705504785, x5 : 0.36615219379020253, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6871524787652864, x10 : -0.13165761157870293, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000706


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.172705 in range [0.000000, 0.345410]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084339 in range [0.000000, 0.168678]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042170 in range [0.000000, 0.084340]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020900 in range [0.000000, 0.041800]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010451 in range [0.000000, 0.020901]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003460 in range [0.000000, 0.006920]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001201 in range [0.000000, 0.002401]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000455 in range [0.000000, 0.000910]...	no solution exists.
	Iteration #010: testing norm threshold 0.000682 in range [0.000455, 0.000910]...	no solution exists.
	Iteration #011: testing norm threshold 0.000796 in range [0.000682, 0.000910]...	no solution exists.
	Iteration #012: testing norm threshold 0.000853 in range [0.000796, 0.000910]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2089945149001315, x5 : -0.09880495902414847, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.09734312694229624, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2214898318052292, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.1028674399168323, x10 : 0.08379055363091194, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000909


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173470 in range [0.000000, 0.346940]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084923 in range [0.000000, 0.169847]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042386 in range [0.000000, 0.084771]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018255 in range [0.000000, 0.036509]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008824 in range [0.000000, 0.017648]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004412 in range [0.000000, 0.008825]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002067 in range [0.000000, 0.004135]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000953 in range [0.000000, 0.001907]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000477 in range [0.000000, 0.000954]...	no solution exists.
	Iteration #011: testing norm threshold 0.000716 in range [0.000477, 0.000954]...	no solution exists.
	Iteration #012: testing norm threshold 0.000835 in range [0.000716, 0.000954]...	no solution exists.
	Iteration #013: testing norm threshold 0.000895 in range [0.000835, 0.000954]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6671559744988452, x5 : -0.19722340198141025, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6143281927887749, x5 : 0.02274530729312182, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5673354438130211, x10 : 0.20018310416492582, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000953


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133494 in range [0.000000, 0.266988]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066708 in range [0.000000, 0.133415]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033354 in range [0.000000, 0.066709]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016582 in range [0.000000, 0.033164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008291 in range [0.000000, 0.016583]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004146 in range [0.000000, 0.008292]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000635 in range [0.000000, 0.001270]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000081 in range [0.000000, 0.000163]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.5297075366192311, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4686438958586523, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.5274990561374628, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4789570391070241, x10 : -0.28613932106660217, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094036 in range [0.000000, 0.188072]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046591 in range [0.000000, 0.093181]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022781 in range [0.000000, 0.045563]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011391 in range [0.000000, 0.022782]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005696 in range [0.000000, 0.011392]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002813 in range [0.000000, 0.005627]...	no solution exists.
	Iteration #008: testing norm threshold 0.004220 in range [0.002813, 0.005627]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003343 in range [0.002813, 0.003872]...	no solution exists.
	Iteration #010: testing norm threshold 0.003607 in range [0.003343, 0.003872]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003475 in range [0.003343, 0.003608]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003410 in range [0.003343, 0.003476]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.9155836132058024, x5 : 3.2026864456330872, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.5614690880877413, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.9142356114321185, x5 : 2.639017105102539, x6 : 2, x7 : 5, x8 : 0, x9 : -0.4363541697308137, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003475


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097580 in range [0.000000, 0.195160]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048791 in range [0.000000, 0.097581]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024396 in range [0.000000, 0.048792]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012198 in range [0.000000, 0.024397]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006086 in range [0.000000, 0.012171]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003043 in range [0.000000, 0.006087]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001482 in range [0.000000, 0.002963]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000741 in range [0.000000, 0.001483]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000371 in range [0.000000, 0.000742]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000186 in range [0.000000, 0.000372]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000094 in range [0.000000, 0.000187]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3747273409490208, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7406133495871092, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.37472734094902077, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000094


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095632 in range [0.000000, 0.191263]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047816 in range [0.000000, 0.095631]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023908 in range [0.000000, 0.047817]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006606 in range [0.000000, 0.013212]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003304 in range [0.000000, 0.006607]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001561 in range [0.000000, 0.003122]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000781 in range [0.000000, 0.001562]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000391 in range [0.000000, 0.000782]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000196 in range [0.000000, 0.000392]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000197]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.13818774387123936, x5 : -0.3582717631842022, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : -0.04430015995424538, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.15276560932397842, x5 : -0.31738742042630885, x6 : 0, x7 : 3, x8 : 3, x9 : -0.04496179899094798, x10 : -0.19657080455878764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000196


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104928 in range [0.000000, 0.209856]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051861 in range [0.000000, 0.103722]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025931 in range [0.000000, 0.051862]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012757 in range [0.000000, 0.025513]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006379 in range [0.000000, 0.012758]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002271 in range [0.000000, 0.004542]...	no solution exists.
	Iteration #008: testing norm threshold 0.003406 in range [0.002271, 0.004542]...	solution exists & found.
	Iteration #009: testing norm threshold 0.002839 in range [0.002271, 0.003407]...	no solution exists.
	Iteration #010: testing norm threshold 0.003123 in range [0.002839, 0.003407]...	no solution exists.
	Iteration #011: testing norm threshold 0.003265 in range [0.003123, 0.003407]...	no solution exists.
	Iteration #012: testing norm threshold 0.003336 in range [0.003265, 0.003407]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.08820649373319786, x5 : 1.046427831751261, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.07082164344827081, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6775687336921692, x5 : 1.0461258427971996, x6 : 1, x7 : 3, x8 : 0, x9 : -0.07112363240233222, x10 : -0.16450149363804445, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003406


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159334 in range [0.000000, 0.318667]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079667 in range [0.000000, 0.159335]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039834 in range [0.000000, 0.079668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018892 in range [0.000000, 0.037784]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007412 in range [0.000000, 0.014823]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003706 in range [0.000000, 0.007413]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001474 in range [0.000000, 0.002948]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000738 in range [0.000000, 0.001475]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000369 in range [0.000000, 0.000739]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.31728722353255473, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.31029334761590915, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2130157747942107, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000185


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166424 in range [0.000000, 0.332847]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083212 in range [0.000000, 0.166425]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041126 in range [0.000000, 0.082252]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020563 in range [0.000000, 0.041127]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010282 in range [0.000000, 0.020564]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004024 in range [0.000000, 0.008049]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001654 in range [0.000000, 0.003309]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000828 in range [0.000000, 0.001655]...	no solution exists.
	Iteration #010: testing norm threshold 0.001242 in range [0.000828, 0.001655]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001035 in range [0.000828, 0.001243]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000932 in range [0.000828, 0.001036]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000880 in range [0.000828, 0.000933]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 1.8860528867194415, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.126041239306836, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 1.8861522215828785, x5 : -0.19722340255975723, x6 : 0, x7 : 0, x8 : 4, x9 : 2.125842569579962, x10 : -0.03221999667584896, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000880


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152831 in range [0.000000, 0.305661]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076314 in range [0.000000, 0.152628]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038077 in range [0.000000, 0.076153]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018219 in range [0.000000, 0.036437]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005352 in range [0.000000, 0.010704]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002676 in range [0.000000, 0.005353]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001121 in range [0.000000, 0.002241]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000208 in range [0.000000, 0.000416]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000105 in range [0.000000, 0.000209]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.12152732715855885, x5 : -0.3672188943621351, x6 : 0.0, x7 : 4.0, x8 : 2.0, x9 : -0.01777867646021995, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.12174813523397261, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 2, x9 : -0.017840538825169304, x10 : -0.22010846746248056, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000105


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124376 in range [0.000000, 0.248752]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062188 in range [0.000000, 0.124377]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031095 in range [0.000000, 0.062189]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015467 in range [0.000000, 0.030933]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007722 in range [0.000000, 0.015444]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001294 in range [0.000000, 0.002588]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000467 in range [0.000000, 0.000934]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000234 in range [0.000000, 0.000468]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000117 in range [0.000000, 0.000235]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.3631033694924261, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3581377146335463, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.36310337483882904, x5 : -0.3411492330681944, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3581377173067478, x10 : -0.2531924769282341, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101214 in range [0.000000, 0.202428]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050487 in range [0.000000, 0.100973]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025059 in range [0.000000, 0.050119]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012530 in range [0.000000, 0.025060]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006266 in range [0.000000, 0.012531]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002563 in range [0.000000, 0.005127]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001282 in range [0.000000, 0.002564]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000642 in range [0.000000, 0.001283]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000321 in range [0.000000, 0.000643]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000217]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000055 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.525542432441061, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4421224123646269, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5255424371280822, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4421224147081375, x10 : -0.3730968313358044, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.071967 in range [0.000000, 0.143934]...	solution exists & found.
	Iteration #003: testing norm threshold 0.034808 in range [0.000000, 0.069616]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016508 in range [0.000000, 0.033016]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006944 in range [0.000000, 0.013888]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002929 in range [0.000000, 0.005858]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000228 in range [0.000000, 0.000456]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000114 in range [0.000000, 0.000229]...	no solution exists.
	Iteration #009: testing norm threshold 0.000172 in range [0.000114, 0.000229]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7507311738490522, x5 : -0.37883013854021436, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.2513830325960577, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157927 in range [0.000000, 0.315855]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078964 in range [0.000000, 0.157928]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036919 in range [0.000000, 0.073839]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018460 in range [0.000000, 0.036920]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009231 in range [0.000000, 0.018461]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003912 in range [0.000000, 0.007824]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001534 in range [0.000000, 0.003068]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000767 in range [0.000000, 0.001535]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000384 in range [0.000000, 0.000768]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000193 in range [0.000000, 0.000385]...	no solution exists.
	Iteration #012: testing norm threshold 0.000289 in range [0.000193, 0.000385]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : 0.978060175878354, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.1624273390239117, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 2, x4 : 0.9756002126231871, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 6, x9 : 1.1599673757687448, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000384


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117659 in range [0.000000, 0.235317]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057912 in range [0.000000, 0.115824]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028737 in range [0.000000, 0.057473]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012125 in range [0.000000, 0.024249]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006056 in range [0.000000, 0.012112]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001979 in range [0.000000, 0.003959]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000990 in range [0.000000, 0.001980]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000372 in range [0.000000, 0.000744]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000183 in range [0.000000, 0.000366]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.24083673634224206, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.3800435759501615, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.23973167626766637, x5 : -0.30274808219273364, x6 : 0, x7 : 0, x8 : 6, x9 : 0.3789385158755858, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166315 in range [0.000000, 0.332631]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083158 in range [0.000000, 0.166316]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040228 in range [0.000000, 0.080456]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020115 in range [0.000000, 0.040229]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009512 in range [0.000000, 0.019023]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004346 in range [0.000000, 0.008692]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002155 in range [0.000000, 0.004309]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001043 in range [0.000000, 0.002087]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000522 in range [0.000000, 0.001044]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000252 in range [0.000000, 0.000503]...	no solution exists.
	Iteration #012: testing norm threshold 0.000377 in range [0.000252, 0.000503]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000303 in range [0.000252, 0.000354]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.2200112154513914, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.20765393323899625, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.2182520829574977, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.20705487869789516, x10 : -0.11078274560236931, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000303


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096188 in range [0.000000, 0.192376]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048094 in range [0.000000, 0.096189]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023939 in range [0.000000, 0.047877]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011796 in range [0.000000, 0.023592]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005878 in range [0.000000, 0.011755]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002305 in range [0.000000, 0.004611]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001153 in range [0.000000, 0.002306]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000533 in range [0.000000, 0.001066]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.2131596190783016, x5 : -0.3403775008283364, x6 : 1.0, x7 : 4.0, x8 : 2.0, x9 : -0.10618362144030473, x10 : -0.2642411010550996, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.2153964069656013, x5 : -0.3426142887156361, x6 : 1, x7 : 4, x8 : 2, x9 : -0.10879422868833084, x10 : -0.27528972923755646, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101595 in range [0.000000, 0.203190]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050223 in range [0.000000, 0.100446]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025112 in range [0.000000, 0.050224]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012556 in range [0.000000, 0.025113]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006217 in range [0.000000, 0.012434]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003109 in range [0.000000, 0.006218]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001555 in range [0.000000, 0.003110]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000778 in range [0.000000, 0.001556]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000390 in range [0.000000, 0.000779]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000195 in range [0.000000, 0.000391]...	no solution exists.
	Iteration #012: testing norm threshold 0.000293 in range [0.000195, 0.000391]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7623613411692338, x5 : -0.4253752529621124, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6888880413170142, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000293


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.084932 in range [0.000000, 0.169863]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042466 in range [0.000000, 0.084933]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021046 in range [0.000000, 0.042092]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010523 in range [0.000000, 0.021047]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005262 in range [0.000000, 0.010524]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002632 in range [0.000000, 0.005263]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001316 in range [0.000000, 0.002633]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000602 in range [0.000000, 0.001204]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000302 in range [0.000000, 0.000603]...	no solution exists.
	Iteration #011: testing norm threshold 0.000452 in range [0.000302, 0.000603]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000357 in range [0.000302, 0.000413]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6921465995678661, x5 : 1.2343175864878515, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 0.06721761862666377, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6489437550600851, x5 : 1.238414889724388, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6814740926321828, x10 : 0.06721761862666377, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000350


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103271 in range [0.000000, 0.206543]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050285 in range [0.000000, 0.100570]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024488 in range [0.000000, 0.048976]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012245 in range [0.000000, 0.024489]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006113 in range [0.000000, 0.012225]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001888 in range [0.000000, 0.003775]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000272 in range [0.000000, 0.000544]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000137 in range [0.000000, 0.000273]...	no solution exists.
	Iteration #010: testing norm threshold 0.000205 in range [0.000137, 0.000273]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6546606619643349, x5 : -0.215117664337276, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6817338168621063, x5 : -0.21444066150492078, x6 : 1, x7 : 4, x8 : 0, x9 : -0.5711656841336447, x10 : -0.30978960267737854, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000205


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117385 in range [0.000000, 0.234770]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058685 in range [0.000000, 0.117370]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029343 in range [0.000000, 0.058686]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014479 in range [0.000000, 0.028959]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006648 in range [0.000000, 0.013296]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002478 in range [0.000000, 0.004956]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000765 in range [0.000000, 0.001531]...	no solution exists.
	Iteration #009: testing norm threshold 0.001148 in range [0.000765, 0.001531]...	no solution exists.
	Iteration #010: testing norm threshold 0.001340 in range [0.001148, 0.001531]...	no solution exists.
	Iteration #011: testing norm threshold 0.001435 in range [0.001340, 0.001531]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.5653398650003418, x5 : 0.9569565199719322, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 1.7856822011335094, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 1.486202895641327, x5 : 1.1541031883476627, x6 : 0, x7 : 4, x8 : 0, x9 : 1.7039076089859009, x10 : 0.09841689751443256, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001435


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158677 in range [0.000000, 0.317354]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072652 in range [0.000000, 0.145304]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035153 in range [0.000000, 0.070306]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016702 in range [0.000000, 0.033404]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007574 in range [0.000000, 0.015148]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003601 in range [0.000000, 0.007201]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001441 in range [0.000000, 0.002883]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000721 in range [0.000000, 0.001442]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000722]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000165 in range [0.000000, 0.000331]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000150]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7733661234378815, x5 : -0.4252858268095063, x6 : 0, x7 : 6, x8 : 0, x9 : -0.696197192556958, x10 : -0.36358928251991735, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126948 in range [0.000000, 0.253896]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061578 in range [0.000000, 0.123156]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024360 in range [0.000000, 0.048720]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012180 in range [0.000000, 0.024361]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006079 in range [0.000000, 0.012158]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002502 in range [0.000000, 0.005004]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001251 in range [0.000000, 0.002503]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000618 in range [0.000000, 0.001237]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000299 in range [0.000000, 0.000598]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000076 in range [0.000000, 0.000151]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7046419121023764, x5 : -0.376166025540068, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.3305328449914524, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.709153749155443, x5 : -0.38063958287239075, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6233525574207306, x10 : -0.34158146381378174, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168171 in range [0.000000, 0.336341]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084086 in range [0.000000, 0.168172]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041954 in range [0.000000, 0.083907]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020977 in range [0.000000, 0.041955]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010489 in range [0.000000, 0.020978]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005245 in range [0.000000, 0.010490]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002623 in range [0.000000, 0.005246]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000708 in range [0.000000, 0.001417]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000242 in range [0.000000, 0.000485]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000122 in range [0.000000, 0.000243]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000061 in range [0.000000, 0.000123]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.390405489517197, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.5823508276793146, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.3879068015815508, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 1.5801407098770142, x10 : 0.10699187897963142, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000122


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118450 in range [0.000000, 0.236900]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057116 in range [0.000000, 0.114232]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026296 in range [0.000000, 0.052592]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013149 in range [0.000000, 0.026297]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006559 in range [0.000000, 0.013118]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002909 in range [0.000000, 0.005818]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001455 in range [0.000000, 0.002910]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000681 in range [0.000000, 0.001362]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4089195154522975, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.32277573664151243, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4089195154522975, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.32277573664151243, x10 : -0.2642411010550996, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.082470 in range [0.000000, 0.164940]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041186 in range [0.000000, 0.082372]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020506 in range [0.000000, 0.041013]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010254 in range [0.000000, 0.020507]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005127 in range [0.000000, 0.010255]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002564 in range [0.000000, 0.005128]...	no solution exists.
	Iteration #008: testing norm threshold 0.003846 in range [0.002564, 0.005128]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003206 in range [0.002564, 0.003847]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002885 in range [0.002564, 0.003207]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002725 in range [0.002564, 0.002886]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002645 in range [0.002564, 0.002726]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.7947955920388686, x5 : 1.87851103129902, x6 : 5.0, x7 : 5.0, x8 : 0.0, x9 : 0.9679364600677252, x10 : 0.376579090329643, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.7879778744133061, x5 : 1.8716933136734575, x6 : 5, x7 : 5, x8 : 0, x9 : 0.9713453188805065, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002645


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.226131 in range [0.000000, 0.452263]...	solution exists & found.
	Iteration #003: testing norm threshold 0.113066 in range [0.000000, 0.226132]...	solution exists & found.
	Iteration #004: testing norm threshold 0.056506 in range [0.000000, 0.113012]...	solution exists & found.
	Iteration #005: testing norm threshold 0.028254 in range [0.000000, 0.056507]...	solution exists & found.
	Iteration #006: testing norm threshold 0.014102 in range [0.000000, 0.028204]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005758 in range [0.000000, 0.011517]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002880 in range [0.000000, 0.005759]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001440 in range [0.000000, 0.002881]...	no solution exists.
	Iteration #010: testing norm threshold 0.002161 in range [0.001440, 0.002881]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001801 in range [0.001440, 0.002162]...	no solution exists.
	Iteration #012: testing norm threshold 0.001981 in range [0.001801, 0.002162]...	no solution exists.
	Iteration #013: testing norm threshold 0.002071 in range [0.001981, 0.002162]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.1700299653133499, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2385956639820259, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.1981425915575968, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.44271134927043787, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002161


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.211450 in range [0.000000, 0.422899]...	solution exists & found.
	Iteration #003: testing norm threshold 0.105725 in range [0.000000, 0.211451]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052863 in range [0.000000, 0.105726]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025928 in range [0.000000, 0.051856]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012110 in range [0.000000, 0.024220]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006056 in range [0.000000, 0.012111]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003028 in range [0.000000, 0.006057]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000923 in range [0.000000, 0.001847]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000462 in range [0.000000, 0.000924]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000218 in range [0.000000, 0.000437]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000110 in range [0.000000, 0.000219]...	no solution exists.
	Iteration #013: testing norm threshold 0.000165 in range [0.000110, 0.000219]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7004768079242063, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6904921034627135, x5 : -0.3895867168903351, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6167221665382385, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000218


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106346 in range [0.000000, 0.212693]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049558 in range [0.000000, 0.099116]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024779 in range [0.000000, 0.049559]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012371 in range [0.000000, 0.024742]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005458 in range [0.000000, 0.010917]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002730 in range [0.000000, 0.005459]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001315 in range [0.000000, 0.002629]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000595 in range [0.000000, 0.001189]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000298 in range [0.000000, 0.000596]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000149 in range [0.000000, 0.000299]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000150]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4713960781248494, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4023401871235887, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4714847192589195, x5 : -0.37668315927950596, x6 : 0, x7 : 0, x8 : 0, x9 : -0.38899081042690403, x10 : -0.3746913293879241, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153301 in range [0.000000, 0.306602]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076651 in range [0.000000, 0.153302]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038326 in range [0.000000, 0.076652]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019156 in range [0.000000, 0.038313]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009568 in range [0.000000, 0.019137]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002578 in range [0.000000, 0.005156]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000974 in range [0.000000, 0.001948]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000488 in range [0.000000, 0.000975]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000224 in range [0.000000, 0.000447]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000225]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7650358974933624, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3651196227280357, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.072498 in range [0.000000, 0.144997]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036037 in range [0.000000, 0.072073]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018000 in range [0.000000, 0.035999]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009000 in range [0.000000, 0.018001]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004094 in range [0.000000, 0.008188]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001163 in range [0.000000, 0.002326]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000582 in range [0.000000, 0.001164]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.5791500770837583, x10 : -0.19794935711874695, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6381834365049449, x5 : -0.3357207513317008, x6 : 0, x7 : 0, x8 : 6, x9 : -0.5791500770837583, x10 : -0.19813254837203756, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180141 in range [0.000000, 0.360283]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089455 in range [0.000000, 0.178909]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044430 in range [0.000000, 0.088861]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022216 in range [0.000000, 0.044431]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011108 in range [0.000000, 0.022217]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001844 in range [0.000000, 0.003688]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000789 in range [0.000000, 0.001578]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000355 in range [0.000000, 0.000710]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6463304536079947, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.5835703243327625, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6473717280494959, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 6, x9 : -0.5879905521869659, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132139 in range [0.000000, 0.264279]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066070 in range [0.000000, 0.132140]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032854 in range [0.000000, 0.065708]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014421 in range [0.000000, 0.028841]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007211 in range [0.000000, 0.014422]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003149 in range [0.000000, 0.006298]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001458 in range [0.000000, 0.002917]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000730 in range [0.000000, 0.001459]...	no solution exists.
	Iteration #010: testing norm threshold 0.001095 in range [0.000730, 0.001459]...	no solution exists.
	Iteration #011: testing norm threshold 0.001277 in range [0.001095, 0.001459]...	no solution exists.
	Iteration #012: testing norm threshold 0.001368 in range [0.001277, 0.001459]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.7069534070581265, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.6177128056713483, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.7043301126063743, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 1.63801709280304, x10 : 0.13350936025381088, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001368


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196261 in range [0.000000, 0.392522]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098131 in range [0.000000, 0.196262]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049066 in range [0.000000, 0.098132]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023767 in range [0.000000, 0.047533]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011845 in range [0.000000, 0.023691]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005832 in range [0.000000, 0.011665]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002665 in range [0.000000, 0.005330]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001333 in range [0.000000, 0.002666]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000667 in range [0.000000, 0.001334]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000254 in range [0.000000, 0.000508]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000128 in range [0.000000, 0.000255]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000064 in range [0.000000, 0.000129]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.125692431336729, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.022198923709224192, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.12595490654651212, x5 : -0.273011529249598, x6 : 0, x7 : 0, x8 : 3, x9 : -0.0224613989190073, x10 : -0.21929757012158024, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113593 in range [0.000000, 0.227186]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043159 in range [0.000000, 0.086318]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019166 in range [0.000000, 0.038332]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009574 in range [0.000000, 0.019149]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004788 in range [0.000000, 0.009575]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001569 in range [0.000000, 0.003138]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000679 in range [0.000000, 0.001359]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000177 in range [0.000000, 0.000354]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000089 in range [0.000000, 0.000178]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6546606619643349, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.6321930440718091, x10 : -0.0653658692460416, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6552867680012691, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 5, x9 : -0.6328191501087432, x10 : -0.06599197528297569, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106350 in range [0.000000, 0.212700]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050816 in range [0.000000, 0.101632]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025408 in range [0.000000, 0.050817]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012661 in range [0.000000, 0.025321]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006331 in range [0.000000, 0.012662]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003166 in range [0.000000, 0.006332]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001320 in range [0.000000, 0.002640]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000661 in range [0.000000, 0.001321]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000331 in range [0.000000, 0.000662]...	no solution exists.
	Iteration #011: testing norm threshold 0.000496 in range [0.000331, 0.000662]...	no solution exists.
	Iteration #012: testing norm threshold 0.000579 in range [0.000496, 0.000662]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.4824127786761093, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.08850263244428777, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.45974816328475804, x5 : -0.29564185440540314, x6 : 0, x7 : 0, x8 : 1, x9 : -0.06861150234038915, x10 : -0.14270621879990186, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000661


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130256 in range [0.000000, 0.260512]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062040 in range [0.000000, 0.124081]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031021 in range [0.000000, 0.062041]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015511 in range [0.000000, 0.031022]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007730 in range [0.000000, 0.015460]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003865 in range [0.000000, 0.007731]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001933 in range [0.000000, 0.003866]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000840 in range [0.000000, 0.001679]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000286 in range [0.000000, 0.000573]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000144 in range [0.000000, 0.000287]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.1863153847868604, x5 : -0.13459348373588, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.144746350027895, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 1.1862490495696187, x5 : -0.08531792564582401, x6 : 0, x7 : 0, x8 : 6, x9 : 1.1446758882121562, x10 : -0.04311128356835628, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000127


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188054 in range [0.000000, 0.376109]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079988 in range [0.000000, 0.159975]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039566 in range [0.000000, 0.079133]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019093 in range [0.000000, 0.038186]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009547 in range [0.000000, 0.019094]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004472 in range [0.000000, 0.008943]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002236 in range [0.000000, 0.004473]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001091 in range [0.000000, 0.002181]...	no solution exists.
	Iteration #010: testing norm threshold 0.001636 in range [0.001091, 0.002181]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001314 in range [0.001091, 0.001538]...	no solution exists.
	Iteration #012: testing norm threshold 0.001426 in range [0.001314, 0.001538]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001371 in range [0.001314, 0.001427]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.3631033694924261, x5 : 0.4559171740076905, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : 0.7964268019265432, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6067619621753693, x5 : 0.44500235174865815, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6056715605777837, x10 : 0.7943442454404135, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001426


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.064335 in range [0.000000, 0.128671]...	solution exists & found.
	Iteration #003: testing norm threshold 0.031407 in range [0.000000, 0.062815]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013495 in range [0.000000, 0.026990]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006748 in range [0.000000, 0.013496]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002283 in range [0.000000, 0.004567]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001142 in range [0.000000, 0.002284]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000182 in range [0.000000, 0.000363]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000078 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.19794935711874695, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6963117080055254, x5 : -0.36274532973766327, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6797420489460324, x10 : -0.1979493613782362, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130726 in range [0.000000, 0.261452]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065311 in range [0.000000, 0.130623]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032656 in range [0.000000, 0.065312]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015794 in range [0.000000, 0.031588]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007296 in range [0.000000, 0.014592]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003649 in range [0.000000, 0.007297]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000935 in range [0.000000, 0.001870]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000342 in range [0.000000, 0.000685]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000172 in range [0.000000, 0.000343]...	no solution exists.
	Iteration #011: testing norm threshold 0.000257 in range [0.000172, 0.000343]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4672309739466792, x5 : 0.17855610749177106, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : 1.1278855216083066, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.46833602881991887, x5 : 0.3063108935785457, x6 : 1, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : 1.126780466735067, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000342


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.228525 in range [0.000000, 0.457050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.114183 in range [0.000000, 0.228365]...	solution exists & found.
	Iteration #004: testing norm threshold 0.056217 in range [0.000000, 0.112434]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027217 in range [0.000000, 0.054435]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013454 in range [0.000000, 0.026908]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006644 in range [0.000000, 0.013289]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002626 in range [0.000000, 0.005251]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001313 in range [0.000000, 0.002627]...	no solution exists.
	Iteration #010: testing norm threshold 0.001970 in range [0.001313, 0.002627]...	no solution exists.
	Iteration #011: testing norm threshold 0.002298 in range [0.001970, 0.002627]...	no solution exists.
	Iteration #012: testing norm threshold 0.002462 in range [0.002298, 0.002627]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002381 in range [0.002298, 0.002463]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.3089570151762145, x5 : 0.5722298793208179, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.499585626601682, x10 : 0.3544818423508587, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7150546610355377, x5 : 0.5680647663485584, x6 : 1, x7 : 3, x8 : 0, x9 : -0.5090516396463667, x10 : 0.3544818423508587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002381
