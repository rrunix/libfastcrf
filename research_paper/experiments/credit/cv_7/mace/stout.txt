

====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108660 in range [0.000000, 0.217320]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053965 in range [0.000000, 0.107930]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026242 in range [0.000000, 0.052483]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013029 in range [0.000000, 0.026058]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006489 in range [0.000000, 0.012977]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003245 in range [0.000000, 0.006490]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001535 in range [0.000000, 0.003070]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000768 in range [0.000000, 0.001536]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000384 in range [0.000000, 0.000769]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000193 in range [0.000000, 0.000385]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.08672788174994739, x5 : -0.3314303696504035, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : 0.19881343874098772, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.08763663293020423, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : 0.19699593638047405, x10 : -0.17766961150047642, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160777 in range [0.000000, 0.321554]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080389 in range [0.000000, 0.160778]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040154 in range [0.000000, 0.080307]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018521 in range [0.000000, 0.037043]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009240 in range [0.000000, 0.018479]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004620 in range [0.000000, 0.009241]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002311 in range [0.000000, 0.004621]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000874 in range [0.000000, 0.001749]...	no solution exists.
	Iteration #010: testing norm threshold 0.001312 in range [0.000874, 0.001749]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001093 in range [0.000874, 0.001313]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000984 in range [0.000874, 0.001094]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000930 in range [0.000874, 0.000985]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.5448893413486612, x5 : -0.15248774609174578, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.7027216251274709, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.5430397564285984, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 0, x9 : 0.7027216251274709, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000930


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099314 in range [0.000000, 0.198627]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049556 in range [0.000000, 0.099113]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024779 in range [0.000000, 0.049557]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012390 in range [0.000000, 0.024780]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006157 in range [0.000000, 0.012315]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003079 in range [0.000000, 0.006158]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001442 in range [0.000000, 0.002884]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000722 in range [0.000000, 0.001443]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000321 in range [0.000000, 0.000641]...	no solution exists.
	Iteration #011: testing norm threshold 0.000481 in range [0.000321, 0.000641]...	no solution exists.
	Iteration #012: testing norm threshold 0.000561 in range [0.000481, 0.000641]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.8402367407595703, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.077418519567789, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.8402367407595703, x5 : -0.08538426086306572, x6 : 0, x7 : 0, x8 : 6, x9 : 2.077418519567789, x10 : 0.19382091590999886, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000640


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124736 in range [0.000000, 0.249472]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062368 in range [0.000000, 0.124737]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031185 in range [0.000000, 0.062369]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015043 in range [0.000000, 0.030085]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007522 in range [0.000000, 0.015044]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003761 in range [0.000000, 0.007523]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001881 in range [0.000000, 0.003762]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000941 in range [0.000000, 0.001882]...	no solution exists.
	Iteration #010: testing norm threshold 0.001412 in range [0.000941, 0.001882]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001177 in range [0.000941, 0.001413]...	no solution exists.
	Iteration #012: testing norm threshold 0.001295 in range [0.001177, 0.001413]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001236 in range [0.001177, 0.001296]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.4528820521897483, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.6663355254103949, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.4524690212801445, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 3, x9 : 1.665922494500791, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001295


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153277 in range [0.000000, 0.306554]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075521 in range [0.000000, 0.151043]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037541 in range [0.000000, 0.075083]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017551 in range [0.000000, 0.035101]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008444 in range [0.000000, 0.016888]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001502 in range [0.000000, 0.003004]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000751 in range [0.000000, 0.001503]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000376 in range [0.000000, 0.000752]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000188 in range [0.000000, 0.000377]...	no solution exists.
	Iteration #011: testing norm threshold 0.000283 in range [0.000188, 0.000377]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.069692467798097, x5 : -0.07196356549034981, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.1314856082808822, x10 : 0.5091625782023483, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.0666448963051782, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 4, x9 : 1.1284380367879634, x10 : 0.5061150067094295, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000376


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150065 in range [0.000000, 0.300130]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074777 in range [0.000000, 0.149554]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037061 in range [0.000000, 0.074122]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018000 in range [0.000000, 0.036001]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008923 in range [0.000000, 0.017845]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002138 in range [0.000000, 0.004277]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001070 in range [0.000000, 0.002139]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000374 in range [0.000000, 0.000747]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000187 in range [0.000000, 0.000375]...	no solution exists.
	Iteration #011: testing norm threshold 0.000281 in range [0.000187, 0.000375]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 1, x4 : -0.7351598423084246, x5 : -0.3895867168903351, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6602042894920336, x10 : -0.3629583548864351, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000374


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132210 in range [0.000000, 0.264420]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066012 in range [0.000000, 0.132024]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032448 in range [0.000000, 0.064896]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016071 in range [0.000000, 0.032142]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007657 in range [0.000000, 0.015313]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003829 in range [0.000000, 0.007658]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001915 in range [0.000000, 0.003830]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000958 in range [0.000000, 0.001916]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000370 in range [0.000000, 0.000740]...	no solution exists.
	Iteration #011: testing norm threshold 0.000555 in range [0.000370, 0.000740]...	no solution exists.
	Iteration #012: testing norm threshold 0.000648 in range [0.000555, 0.000740]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.11736222298038874, x5 : -0.3672188943621351, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.031039418207232668, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.12630935699833307, x5 : -0.3985338509082794, x6 : 0, x7 : 2, x8 : 0, x9 : -0.0929228775203228, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000739


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117534 in range [0.000000, 0.235068]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054591 in range [0.000000, 0.109182]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027296 in range [0.000000, 0.054592]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011968 in range [0.000000, 0.023936]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005982 in range [0.000000, 0.011964]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002745 in range [0.000000, 0.005489]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000459 in range [0.000000, 0.000917]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000230 in range [0.000000, 0.000460]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000115 in range [0.000000, 0.000231]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6546606619643349, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6577844867848942, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6220561271453557, x10 : -0.3115594218332274, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140451 in range [0.000000, 0.280902]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069665 in range [0.000000, 0.139329]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034833 in range [0.000000, 0.069666]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017417 in range [0.000000, 0.034834]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008709 in range [0.000000, 0.017418]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001263 in range [0.000000, 0.002525]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000584 in range [0.000000, 0.001169]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000264 in range [0.000000, 0.000528]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000131 in range [0.000000, 0.000262]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.7864653836825284, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.7380836031195048, x10 : 0.06721761862666377, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.7820974191789478, x5 : -0.031701475381851196, x6 : 0, x7 : 0, x8 : 4, x9 : 0.7380836021881823, x10 : 0.06523658559953242, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.209462 in range [0.000000, 0.418924]...	solution exists & found.
	Iteration #003: testing norm threshold 0.103552 in range [0.000000, 0.207103]...	solution exists & found.
	Iteration #004: testing norm threshold 0.051346 in range [0.000000, 0.102692]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025558 in range [0.000000, 0.051116]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012779 in range [0.000000, 0.025559]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006327 in range [0.000000, 0.012654]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003164 in range [0.000000, 0.006328]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001530 in range [0.000000, 0.003060]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000548 in range [0.000000, 0.001095]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000274 in range [0.000000, 0.000549]...	no solution exists.
	Iteration #012: testing norm threshold 0.000412 in range [0.000274, 0.000549]...	no solution exists.
	Iteration #013: testing norm threshold 0.000480 in range [0.000412, 0.000549]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.18252527784786027, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3181601144641022, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.18104399624160336, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3166788328578453, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000548


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125222 in range [0.000000, 0.250444]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062612 in range [0.000000, 0.125223]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031288 in range [0.000000, 0.062576]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014690 in range [0.000000, 0.029381]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007346 in range [0.000000, 0.014691]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002347 in range [0.000000, 0.004695]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001013 in range [0.000000, 0.002026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000394 in range [0.000000, 0.000787]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000395]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7171372246368868, x5 : -0.2688004514048733, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : -0.2732740044593811, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6383008548760615, x10 : -0.18637816251756764, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000197


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156336 in range [0.000000, 0.312671]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076238 in range [0.000000, 0.152476]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038117 in range [0.000000, 0.076235]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018252 in range [0.000000, 0.036505]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008882 in range [0.000000, 0.017764]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004441 in range [0.000000, 0.008883]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002209 in range [0.000000, 0.004418]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001105 in range [0.000000, 0.002210]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000553 in range [0.000000, 0.001106]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000208 in range [0.000000, 0.000417]...	no solution exists.
	Iteration #012: testing norm threshold 0.000312 in range [0.000208, 0.000417]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000261 in range [0.000208, 0.000313]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.7573096544353376, x5 : 3.1490036585654897, x6 : 2.0, x7 : 3.0, x8 : 1.0, x9 : -0.6808157638108557, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.7671404424094213, x5 : 3.14750308751494, x6 : 2, x7 : 3, x8 : 1, x9 : -0.6918663680553436, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000312


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101985 in range [0.000000, 0.203970]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050348 in range [0.000000, 0.100696]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025174 in range [0.000000, 0.050349]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012588 in range [0.000000, 0.025175]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006294 in range [0.000000, 0.012589]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002897 in range [0.000000, 0.005794]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001449 in range [0.000000, 0.002898]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000721 in range [0.000000, 0.001442]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000361 in range [0.000000, 0.000722]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000181]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.14503934024432916, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.1943931914919835, x10 : -0.17585210913996274, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.13879168778657913, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 6, x9 : 0.1943931914919835, x10 : -0.18137641829540518, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000180


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151772 in range [0.000000, 0.303544]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075887 in range [0.000000, 0.151773]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036527 in range [0.000000, 0.073054]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018237 in range [0.000000, 0.036474]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009119 in range [0.000000, 0.018238]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004560 in range [0.000000, 0.009120]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002280 in range [0.000000, 0.004560]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000789 in range [0.000000, 0.001578]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000355 in range [0.000000, 0.000709]...	no solution exists.
	Iteration #011: testing norm threshold 0.000532 in range [0.000355, 0.000709]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000444 in range [0.000355, 0.000533]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6421653494298245, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6983942687511444, x5 : -0.384039673338377, x6 : 0, x7 : 6, x8 : 0, x9 : -0.558122317381723, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000444


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169143 in range [0.000000, 0.338287]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084572 in range [0.000000, 0.169144]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041828 in range [0.000000, 0.083655]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017090 in range [0.000000, 0.034179]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008545 in range [0.000000, 0.017091]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004273 in range [0.000000, 0.008546]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002137 in range [0.000000, 0.004274]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001069 in range [0.000000, 0.002138]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000403 in range [0.000000, 0.000806]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000193 in range [0.000000, 0.000386]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.09505809010628764, x5 : -0.15248774609174578, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : 0.15461096625094534, x10 : 0.1777038585205849, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.09316892240114276, x5 : -0.09244222345057487, x6 : 0, x7 : 5, x8 : 0, x9 : 0.1554431325194233, x10 : 0.17074572457658238, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163353 in range [0.000000, 0.326707]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080812 in range [0.000000, 0.161623]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039965 in range [0.000000, 0.079929]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019983 in range [0.000000, 0.039966]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009992 in range [0.000000, 0.019984]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004896 in range [0.000000, 0.009793]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002449 in range [0.000000, 0.004897]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001225 in range [0.000000, 0.002450]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000613 in range [0.000000, 0.001226]...	no solution exists.
	Iteration #011: testing norm threshold 0.000919 in range [0.000613, 0.001226]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000738 in range [0.000613, 0.000864]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000676 in range [0.000613, 0.000739]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : 1.2321315307467318, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.2066298115139542, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 1, x4 : 1.225665573239969, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 1.2066298115139542, x10 : 0.004158853443692433, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000676


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188120 in range [0.000000, 0.376241]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094061 in range [0.000000, 0.188121]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047031 in range [0.000000, 0.094062]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023350 in range [0.000000, 0.046700]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011676 in range [0.000000, 0.023351]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005838 in range [0.000000, 0.011677]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002920 in range [0.000000, 0.005839]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001440 in range [0.000000, 0.002881]...	no solution exists.
	Iteration #010: testing norm threshold 0.002161 in range [0.001440, 0.002881]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001801 in range [0.001440, 0.002162]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001621 in range [0.001440, 0.001802]...	no solution exists.
	Iteration #013: testing norm threshold 0.001712 in range [0.001621, 0.001802]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.640311740207404, x5 : 0.3932872557621603, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 1.4674243992052045, x10 : 1.6582194730991282, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.640311740207404, x5 : -0.3045889735221863, x6 : 0, x7 : 2, x8 : 0, x9 : 1.4652048265286535, x10 : 1.6559999004225772, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001801


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116931 in range [0.000000, 0.233863]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056463 in range [0.000000, 0.112925]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026891 in range [0.000000, 0.053783]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013408 in range [0.000000, 0.026816]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004061 in range [0.000000, 0.008121]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002031 in range [0.000000, 0.004062]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000470 in range [0.000000, 0.000939]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000230 in range [0.000000, 0.000459]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000115 in range [0.000000, 0.000231]...	no solution exists.
	Iteration #011: testing norm threshold 0.000173 in range [0.000115, 0.000231]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.28396639010719377, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.27712954170228754, x5 : -0.28222113847732544, x6 : 0, x7 : 0, x8 : 0, x9 : -0.17957932992965792, x10 : -0.17451623288732004, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000230


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163471 in range [0.000000, 0.326943]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079001 in range [0.000000, 0.158003]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034923 in range [0.000000, 0.069846]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017462 in range [0.000000, 0.034924]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001716 in range [0.000000, 0.003432]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000858 in range [0.000000, 0.001717]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000430 in range [0.000000, 0.000859]...	no solution exists.
	Iteration #009: testing norm threshold 0.000645 in range [0.000430, 0.000859]...	no solution exists.
	Iteration #010: testing norm threshold 0.000752 in range [0.000645, 0.000859]...	no solution exists.
	Iteration #011: testing norm threshold 0.000806 in range [0.000752, 0.000859]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6171747243608038, x5 : -0.08985782784621557, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.10956036520361004, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6942291557788849, x5 : -0.2016969621181488, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6956237577861252, x10 : -0.07575163105782894, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000858


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164529 in range [0.000000, 0.329057]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082219 in range [0.000000, 0.164438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040668 in range [0.000000, 0.081336]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019545 in range [0.000000, 0.039091]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008004 in range [0.000000, 0.016008]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003004 in range [0.000000, 0.006009]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001136 in range [0.000000, 0.002273]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000569 in range [0.000000, 0.001137]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000267 in range [0.000000, 0.000533]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.43770216511562265, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5309906008068463, x5 : -0.35251514643326487, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4389852293032379, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163216 in range [0.000000, 0.326431]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081320 in range [0.000000, 0.162640]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040534 in range [0.000000, 0.081069]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020258 in range [0.000000, 0.040517]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008782 in range [0.000000, 0.017565]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004392 in range [0.000000, 0.008783]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001472 in range [0.000000, 0.002943]...	no solution exists.
	Iteration #009: testing norm threshold 0.002207 in range [0.001472, 0.002943]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001840 in range [0.001472, 0.002208]...	no solution exists.
	Iteration #011: testing norm threshold 0.002024 in range [0.001840, 0.002208]...	no solution exists.
	Iteration #012: testing norm threshold 0.002116 in range [0.002024, 0.002208]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.35745965333100554, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3270006089621107, x10 : 1.6582194730991282, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 0.3605275244131621, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3208648667977976, x10 : 1.652083730934815, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002116


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097683 in range [0.000000, 0.195366]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048842 in range [0.000000, 0.097684]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020289 in range [0.000000, 0.040578]...	solution exists & found.
	Iteration #005: testing norm threshold 0.005022 in range [0.000000, 0.010045]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002512 in range [0.000000, 0.005023]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001256 in range [0.000000, 0.002513]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000629 in range [0.000000, 0.001257]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000315 in range [0.000000, 0.000630]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000158 in range [0.000000, 0.000316]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000159]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.01777867646021995, x10 : -0.3747273409490208, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.12603407159408656, x5 : -0.30906254053115845, x6 : 0, x7 : 0, x8 : 1, x9 : -0.019519588510618857, x10 : -0.37472734094902077, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000158


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131315 in range [0.000000, 0.262630]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065658 in range [0.000000, 0.131316]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030263 in range [0.000000, 0.060526]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013611 in range [0.000000, 0.027222]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006357 in range [0.000000, 0.012714]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002226 in range [0.000000, 0.004453]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001114 in range [0.000000, 0.002227]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000557 in range [0.000000, 0.001115]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000279 in range [0.000000, 0.000558]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000140 in range [0.000000, 0.000280]...	no solution exists.
	Iteration #012: testing norm threshold 0.000210 in range [0.000140, 0.000280]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.3135361072945377, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7213023288150568, x5 : -0.314827722055631, x6 : 3, x7 : 6, x8 : 0, x9 : -0.628691303739807, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000279


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167323 in range [0.000000, 0.334647]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081487 in range [0.000000, 0.162974]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040744 in range [0.000000, 0.081488]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020091 in range [0.000000, 0.040181]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008468 in range [0.000000, 0.016937]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004235 in range [0.000000, 0.008469]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002118 in range [0.000000, 0.004236]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001059 in range [0.000000, 0.002119]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000530 in range [0.000000, 0.001060]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000266 in range [0.000000, 0.000531]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000133 in range [0.000000, 0.000267]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5005518073720403, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.43770216511562265, x10 : -0.2642411010550996, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.49920113599347044, x5 : -0.33590393970844845, x6 : 0, x7 : 0, x8 : 0, x9 : -0.43770216799216566, x10 : -0.2642411039316426, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000133


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178707 in range [0.000000, 0.357414]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089354 in range [0.000000, 0.178708]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035778 in range [0.000000, 0.071555]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017887 in range [0.000000, 0.035774]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006059 in range [0.000000, 0.012118]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003030 in range [0.000000, 0.006060]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001515 in range [0.000000, 0.003031]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000675 in range [0.000000, 0.001350]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000271 in range [0.000000, 0.000543]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7397333375463834, x5 : -0.38063958287239075, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6628228417883267, x10 : -0.34126952209571504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000136


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116900 in range [0.000000, 0.233800]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053344 in range [0.000000, 0.106688]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026672 in range [0.000000, 0.053345]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013254 in range [0.000000, 0.026508]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006627 in range [0.000000, 0.013255]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003184 in range [0.000000, 0.006367]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001307 in range [0.000000, 0.002613]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000446 in range [0.000000, 0.000892]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000224 in range [0.000000, 0.000447]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000225]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3964242029177871, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3404567256375294, x10 : -0.13165761318239427, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3968802336623307, x5 : -0.32202721081353136, x6 : 0, x7 : 0, x8 : 0, x9 : -0.35592760145664215, x10 : -0.13142959781012248, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000112


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090812 in range [0.000000, 0.181623]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042584 in range [0.000000, 0.085168]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020223 in range [0.000000, 0.040445]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009364 in range [0.000000, 0.018727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004213 in range [0.000000, 0.008426]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001880 in range [0.000000, 0.003760]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000489 in range [0.000000, 0.000979]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	no solution exists.
	Iteration #010: testing norm threshold 0.000368 in range [0.000245, 0.000490]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000307 in range [0.000245, 0.000369]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7213023288150568, x5 : -0.30458897611660485, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7213023296544919, x5 : -0.2195912293146024, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6476639202783475, x10 : -0.12318089423953879, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000307


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118907 in range [0.000000, 0.237813]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059454 in range [0.000000, 0.118908]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029677 in range [0.000000, 0.059353]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014248 in range [0.000000, 0.028497]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007120 in range [0.000000, 0.014239]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003547 in range [0.000000, 0.007094]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001672 in range [0.000000, 0.003345]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000837 in range [0.000000, 0.001673]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000135 in range [0.000000, 0.000270]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.6046794118262934, x5 : -0.4298488126076653, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.5172666155976989, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6066111447105674, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 0, x9 : -0.5172666155976989, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149668 in range [0.000000, 0.299336]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074835 in range [0.000000, 0.149669]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037386 in range [0.000000, 0.074771]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018164 in range [0.000000, 0.036328]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008276 in range [0.000000, 0.016553]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004139 in range [0.000000, 0.008277]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002070 in range [0.000000, 0.004140]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000299 in range [0.000000, 0.000598]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000075 in range [0.000000, 0.000151]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7442103922367096, x5 : -0.36274532973766327, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6814378532124662, x10 : -0.2857162548147363, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152467 in range [0.000000, 0.304934]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076234 in range [0.000000, 0.152468]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037754 in range [0.000000, 0.075508]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017906 in range [0.000000, 0.035812]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008038 in range [0.000000, 0.016077]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001618 in range [0.000000, 0.003236]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000799 in range [0.000000, 0.001598]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000367 in range [0.000000, 0.000734]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000101 in range [0.000000, 0.000201]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.769201010465622, x5 : -0.40954491868788767, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.3537351495460844, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114682 in range [0.000000, 0.229364]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057341 in range [0.000000, 0.114683]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028620 in range [0.000000, 0.057240]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014311 in range [0.000000, 0.028621]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007156 in range [0.000000, 0.014312]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003578 in range [0.000000, 0.007157]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000934 in range [0.000000, 0.001868]...	no solution exists.
	Iteration #009: testing norm threshold 0.001401 in range [0.000934, 0.001868]...	no solution exists.
	Iteration #010: testing norm threshold 0.001634 in range [0.001401, 0.001868]...	no solution exists.
	Iteration #011: testing norm threshold 0.001751 in range [0.001634, 0.001868]...	no solution exists.
	Iteration #012: testing norm threshold 0.001810 in range [0.001751, 0.001868]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.30747840319296404, x5 : 1.547467177715503, x6 : 1.0, x7 : 1.0, x8 : 3.0, x9 : 0.3402613507091234, x10 : -0.10956036520361004, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.09297554194927216, x5 : 1.543707412037244, x6 : 1, x7 : 1, x8 : 3, x9 : 0.3402613507091234, x10 : -0.27528972923755646, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001810


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109727 in range [0.000000, 0.219454]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053942 in range [0.000000, 0.107883]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026783 in range [0.000000, 0.053566]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012933 in range [0.000000, 0.025865]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004601 in range [0.000000, 0.009203]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002301 in range [0.000000, 0.004602]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000840 in range [0.000000, 0.001679]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000420 in range [0.000000, 0.000841]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000168 in range [0.000000, 0.000335]...	no solution exists.
	Iteration #011: testing norm threshold 0.000252 in range [0.000168, 0.000335]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5005518073720403, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4332819178666184, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5005076758180772, x5 : -0.34476281349500965, x6 : 0, x7 : 6, x8 : 0, x9 : -0.43337018097454455, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000204


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137882 in range [0.000000, 0.275764]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067658 in range [0.000000, 0.135316]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033830 in range [0.000000, 0.067659]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015921 in range [0.000000, 0.031841]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007961 in range [0.000000, 0.015922]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003978 in range [0.000000, 0.007956]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001989 in range [0.000000, 0.003979]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000877 in range [0.000000, 0.001754]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000284 in range [0.000000, 0.000568]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000143 in range [0.000000, 0.000285]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5088820157283805, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.464223648609648, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.510964572429657, x5 : -0.3135361075401306, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4664337784051895, x10 : -0.2684062144576525, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000107


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088253 in range [0.000000, 0.176506]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039146 in range [0.000000, 0.078293]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019574 in range [0.000000, 0.039147]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009592 in range [0.000000, 0.019184]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000588 in range [0.000000, 0.001176]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000294 in range [0.000000, 0.000589]...	no solution exists.
	Iteration #008: testing norm threshold 0.000442 in range [0.000294, 0.000589]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000369 in range [0.000294, 0.000443]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6463304536079947, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.6056715605777837, x10 : -0.17585210913996274, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6445193041029721, x5 : -0.3529469310163144, x6 : 0, x7 : 0, x8 : 5, x9 : -0.5909986440594128, x10 : -0.2531924769282341, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000369


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098479 in range [0.000000, 0.196957]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049240 in range [0.000000, 0.098480]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024620 in range [0.000000, 0.049241]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012311 in range [0.000000, 0.024621]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006156 in range [0.000000, 0.012312]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003078 in range [0.000000, 0.006157]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001405 in range [0.000000, 0.002810]...	no solution exists.
	Iteration #009: testing norm threshold 0.002108 in range [0.001405, 0.002810]...	no solution exists.
	Iteration #010: testing norm threshold 0.002459 in range [0.002108, 0.002810]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002284 in range [0.002108, 0.002460]...	no solution exists.
	Iteration #012: testing norm threshold 0.002372 in range [0.002284, 0.002460]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 2.140124241587819, x5 : 0.4022343869400932, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.2674891512749715, x10 : 1.6803167210779124, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 2.142807575614556, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 2.336949333496894, x10 : 1.6749500530244388, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002459


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.206341 in range [0.000000, 0.412681]...	solution exists & found.
	Iteration #003: testing norm threshold 0.103171 in range [0.000000, 0.206342]...	solution exists & found.
	Iteration #004: testing norm threshold 0.050881 in range [0.000000, 0.101762]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024978 in range [0.000000, 0.049955]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012489 in range [0.000000, 0.024979]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006237 in range [0.000000, 0.012473]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003053 in range [0.000000, 0.006105]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000868 in range [0.000000, 0.001735]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000434 in range [0.000000, 0.000869]...	no solution exists.
	Iteration #011: testing norm threshold 0.000651 in range [0.000434, 0.000869]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000541 in range [0.000434, 0.000648]...	no solution exists.
	Iteration #013: testing norm threshold 0.000594 in range [0.000541, 0.000648]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.34487697288653363, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3899483668451101, x5 : -0.40562661264256056, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3467313451701968, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000647


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136829 in range [0.000000, 0.273657]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067758 in range [0.000000, 0.135516]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033879 in range [0.000000, 0.067759]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016940 in range [0.000000, 0.033880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008471 in range [0.000000, 0.016941]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004236 in range [0.000000, 0.008472]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002118 in range [0.000000, 0.004237]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001060 in range [0.000000, 0.002119]...	no solution exists.
	Iteration #010: testing norm threshold 0.001590 in range [0.001060, 0.002119]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001325 in range [0.001060, 0.001591]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001193 in range [0.001060, 0.001326]...	no solution exists.
	Iteration #013: testing norm threshold 0.001260 in range [0.001193, 0.001326]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 1.9110435117884623, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.006694563583721, x10 : 0.26609285043572184, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : 1.9263213589649513, x5 : 0.23949495850613856, x6 : 0, x7 : 0, x8 : 0, x9 : 2.006694563583721, x10 : 0.21084972470998764, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001325


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.198167 in range [0.000000, 0.396334]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068829 in range [0.000000, 0.137658]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033769 in range [0.000000, 0.067537]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016884 in range [0.000000, 0.033768]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008443 in range [0.000000, 0.016885]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003596 in range [0.000000, 0.007193]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001477 in range [0.000000, 0.002953]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000739 in range [0.000000, 0.001478]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000370 in range [0.000000, 0.000740]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000248]...	no solution exists.
	Iteration #012: testing norm threshold 0.000186 in range [0.000124, 0.000248]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.3547731611360859, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.30067450039649124, x10 : -0.24214385307631545, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.3549214974206549, x5 : -0.31786133826453383, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3071565377779692, x10 : -0.2422921893608844, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000186


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135770 in range [0.000000, 0.271540]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067886 in range [0.000000, 0.135771]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032890 in range [0.000000, 0.065781]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015211 in range [0.000000, 0.030422]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007606 in range [0.000000, 0.015212]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003804 in range [0.000000, 0.007607]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001902 in range [0.000000, 0.003805]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000952 in range [0.000000, 0.001903]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000341 in range [0.000000, 0.000682]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000078 in range [0.000000, 0.000157]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.20066430654379125, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.10618362144030473, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.2017004032964547, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.10878126045315778, x10 : -0.2229919850034986, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000156


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157310 in range [0.000000, 0.314619]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078425 in range [0.000000, 0.156850]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038304 in range [0.000000, 0.076608]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019153 in range [0.000000, 0.038305]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009352 in range [0.000000, 0.018703]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001532 in range [0.000000, 0.003064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000766 in range [0.000000, 0.001533]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000320 in range [0.000000, 0.000639]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000160 in range [0.000000, 0.000321]...	no solution exists.
	Iteration #011: testing norm threshold 0.000241 in range [0.000160, 0.000321]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.05488566030783686, x5 : 1.0732692252850595, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.2863383490338839, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.051499196052832805, x5 : 1.0664962967750513, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5548387169837952, x10 : -0.34158146381378174, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000241


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094309 in range [0.000000, 0.188618]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047150 in range [0.000000, 0.094300]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022938 in range [0.000000, 0.045877]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011470 in range [0.000000, 0.022939]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005735 in range [0.000000, 0.011471]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002593 in range [0.000000, 0.005187]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001297 in range [0.000000, 0.002594]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000333 in range [0.000000, 0.000666]...	no solution exists.
	Iteration #010: testing norm threshold 0.000499 in range [0.000333, 0.000666]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000392 in range [0.000333, 0.000450]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.21732472325647173, x5 : 0.7690667652353416, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 0.02302312266909531, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.2881314940750599, x5 : 0.7738183372117287, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : 0.013519978716321069, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000449


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173223 in range [0.000000, 0.346446]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085677 in range [0.000000, 0.171354]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042839 in range [0.000000, 0.085678]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018579 in range [0.000000, 0.037158]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009290 in range [0.000000, 0.018580]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004645 in range [0.000000, 0.009291]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002321 in range [0.000000, 0.004643]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001160 in range [0.000000, 0.002320]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000580 in range [0.000000, 0.001161]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000291 in range [0.000000, 0.000581]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	no solution exists.
	Iteration #013: testing norm threshold 0.000219 in range [0.000146, 0.000292]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.5573846538831715, x5 : -0.2061705331593431, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6452584108904159, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.5572209173116215, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6450946743188659, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000219


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127105 in range [0.000000, 0.254210]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059865 in range [0.000000, 0.119730]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029089 in range [0.000000, 0.058178]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014352 in range [0.000000, 0.028704]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006440 in range [0.000000, 0.012879]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002836 in range [0.000000, 0.005672]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001364 in range [0.000000, 0.002727]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000621 in range [0.000000, 0.001242]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000174 in range [0.000000, 0.000349]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000153]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.26730597339451323, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.18574807192238105, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.26730597339451323, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.1945885643362999, x10 : -0.27749095982744654, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000152


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.191178 in range [0.000000, 0.382356]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095590 in range [0.000000, 0.191179]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046132 in range [0.000000, 0.092264]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020579 in range [0.000000, 0.041158]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010290 in range [0.000000, 0.020580]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002222 in range [0.000000, 0.004444]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001112 in range [0.000000, 0.002223]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000424 in range [0.000000, 0.000849]...	no solution exists.
	Iteration #010: testing norm threshold 0.000636 in range [0.000424, 0.000849]...	no solution exists.
	Iteration #011: testing norm threshold 0.000742 in range [0.000636, 0.000849]...	no solution exists.
	Iteration #012: testing norm threshold 0.000795 in range [0.000742, 0.000849]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6005143076481233, x5 : -0.16143487726967867, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5994670472781137, x5 : -0.21064409613609314, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6299829185009003, x10 : 0.19538085584514858, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000790


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135341 in range [0.000000, 0.270683]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067671 in range [0.000000, 0.135342]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033836 in range [0.000000, 0.067672]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015442 in range [0.000000, 0.030883]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004698 in range [0.000000, 0.009397]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002188 in range [0.000000, 0.004376]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000985 in range [0.000000, 0.001970]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000493 in range [0.000000, 0.000986]...	no solution exists.
	Iteration #010: testing norm threshold 0.000739 in range [0.000493, 0.000986]...	no solution exists.
	Iteration #011: testing norm threshold 0.000863 in range [0.000739, 0.000986]...	no solution exists.
	Iteration #012: testing norm threshold 0.000924 in range [0.000863, 0.000986]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5437880990917243, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6879814863204956, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5517731529419031, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000924


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154070 in range [0.000000, 0.308141]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077036 in range [0.000000, 0.154071]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038421 in range [0.000000, 0.076842]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019195 in range [0.000000, 0.038391]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007078 in range [0.000000, 0.014156]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003539 in range [0.000000, 0.007079]...	no solution exists.
	Iteration #008: testing norm threshold 0.005309 in range [0.003539, 0.007079]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004425 in range [0.003539, 0.005310]...	no solution exists.
	Iteration #010: testing norm threshold 0.004867 in range [0.004425, 0.005310]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004647 in range [0.004425, 0.004868]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004536 in range [0.004425, 0.004648]...	no solution exists.
	Iteration #013: testing norm threshold 0.004592 in range [0.004536, 0.004648]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.8531070505332504, x5 : -0.3224832384724706, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 1.0298199215537849, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.8517176285689084, x5 : -0.4164281189441681, x6 : 0, x7 : 4, x8 : 0, x9 : 1.0305146325359558, x10 : 0.013363920768534949, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004647


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123265 in range [0.000000, 0.246529]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060740 in range [0.000000, 0.121481]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029962 in range [0.000000, 0.059924]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014982 in range [0.000000, 0.029963]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007487 in range [0.000000, 0.014975]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002684 in range [0.000000, 0.005367]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001342 in range [0.000000, 0.002685]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000408 in range [0.000000, 0.000816]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000132 in range [0.000000, 0.000264]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000133]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.14651795222757966, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.04430015995424538, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.13969856000974318, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 2, x9 : -0.041518297637845474, x10 : -0.2418579829764259, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111744 in range [0.000000, 0.223488]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053269 in range [0.000000, 0.106537]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026635 in range [0.000000, 0.053270]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013318 in range [0.000000, 0.026636]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006659 in range [0.000000, 0.013319]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003330 in range [0.000000, 0.006660]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001660 in range [0.000000, 0.003319]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000384 in range [0.000000, 0.000769]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000186 in range [0.000000, 0.000372]...	no solution exists.
	Iteration #011: testing norm threshold 0.000279 in range [0.000186, 0.000372]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.19649920236562116, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.16364683567735985, x10 : -0.24214385307631545, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.197687436018603, x5 : -0.2497179655638608, x6 : 0, x7 : 0, x8 : 0, x9 : -0.1648350693303417, x10 : -0.2520042432752523, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000279


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086248 in range [0.000000, 0.172495]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043124 in range [0.000000, 0.086249]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021491 in range [0.000000, 0.042981]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009957 in range [0.000000, 0.019915]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004973 in range [0.000000, 0.009947]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002390 in range [0.000000, 0.004781]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001196 in range [0.000000, 0.002391]...	no solution exists.
	Iteration #009: testing norm threshold 0.001793 in range [0.001196, 0.002391]...	no solution exists.
	Iteration #010: testing norm threshold 0.002092 in range [0.001793, 0.002391]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001943 in range [0.001793, 0.002093]...	no solution exists.
	Iteration #012: testing norm threshold 0.002018 in range [0.001943, 0.002093]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 1.7610997613743382, x5 : 2.773224149092308, x6 : 4.0, x7 : 3.0, x8 : 1.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 1.7633438980793237, x5 : 2.773684893798909, x6 : 4, x7 : 3, x8 : 1, x9 : -0.6952692217208783, x10 : -0.37472734094902077, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002016


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107841 in range [0.000000, 0.215681]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053921 in range [0.000000, 0.107842]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026961 in range [0.000000, 0.053922]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013404 in range [0.000000, 0.026808]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006202 in range [0.000000, 0.012403]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002639 in range [0.000000, 0.005279]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001153 in range [0.000000, 0.002307]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000171 in range [0.000000, 0.000343]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.34496434079649513, x5 : 1.9858766054342143, x6 : 4.0, x7 : 5.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.3448627563916672, x5 : 1.9858766054342143, x6 : 4, x7 : 5, x8 : 0, x9 : -0.6343015847502929, x10 : -0.36357712426769556, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171945 in range [0.000000, 0.343889]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075674 in range [0.000000, 0.151347]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037674 in range [0.000000, 0.075347]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018773 in range [0.000000, 0.037545]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008494 in range [0.000000, 0.016988]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003788 in range [0.000000, 0.007576]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001895 in range [0.000000, 0.003789]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000930 in range [0.000000, 0.001859]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000451 in range [0.000000, 0.000903]...	no solution exists.
	Iteration #011: testing norm threshold 0.000677 in range [0.000451, 0.000903]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000565 in range [0.000451, 0.000678]...	no solution exists.
	Iteration #013: testing norm threshold 0.000621 in range [0.000565, 0.000678]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4755611823030195, x5 : 0.6169655352104825, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.5968310660797752, x10 : 1.2162745135234436, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.4766929831754987, x5 : 0.7030951063458069, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : 1.2168404139596831, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000677


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134797 in range [0.000000, 0.269593]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067235 in range [0.000000, 0.134471]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032821 in range [0.000000, 0.065643]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016411 in range [0.000000, 0.032822]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008206 in range [0.000000, 0.016412]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004104 in range [0.000000, 0.008207]...	no solution exists.
	Iteration #008: testing norm threshold 0.006155 in range [0.004104, 0.008207]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004624 in range [0.004104, 0.005144]...	no solution exists.
	Iteration #010: testing norm threshold 0.004884 in range [0.004624, 0.005144]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004754 in range [0.004624, 0.004885]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004690 in range [0.004624, 0.004755]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.8815127853021014, x5 : 7.166265557457357, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : -0.4156009288706015, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.879391829104644, x5 : 7.163900430047465, x6 : 2, x7 : 3, x8 : 0, x9 : -0.5549803519968876, x10 : -0.044214982323782716, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004754


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169991 in range [0.000000, 0.339983]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084996 in range [0.000000, 0.169992]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042305 in range [0.000000, 0.084610]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021153 in range [0.000000, 0.042306]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010560 in range [0.000000, 0.021120]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004937 in range [0.000000, 0.009873]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001398 in range [0.000000, 0.002796]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000464 in range [0.000000, 0.000928]...	no solution exists.
	Iteration #010: testing norm threshold 0.000696 in range [0.000464, 0.000928]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000581 in range [0.000464, 0.000697]...	no solution exists.
	Iteration #012: testing norm threshold 0.000639 in range [0.000581, 0.000697]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 1.2238013223903916, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.4232219267151618, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 1.2216591827686534, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.4232219267151618, x10 : 0.12460288117146864, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000696


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162367 in range [0.000000, 0.324733]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079468 in range [0.000000, 0.158935]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038960 in range [0.000000, 0.077919]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019469 in range [0.000000, 0.038939]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008984 in range [0.000000, 0.017968]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002305 in range [0.000000, 0.004609]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001097 in range [0.000000, 0.002194]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000487 in range [0.000000, 0.000973]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.03674663161190589, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.07504651576886906, x10 : -0.2200466050975312, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.03432280052505232, x5 : -0.3249070695593242, x6 : 0, x7 : 0, x8 : 0, x9 : 0.07262268468201549, x10 : -0.20657414867331642, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139887 in range [0.000000, 0.279775]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065569 in range [0.000000, 0.131138]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032375 in range [0.000000, 0.064750]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016006 in range [0.000000, 0.032012]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008003 in range [0.000000, 0.016007]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002892 in range [0.000000, 0.005785]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001402 in range [0.000000, 0.002803]...	no solution exists.
	Iteration #009: testing norm threshold 0.002102 in range [0.001402, 0.002803]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001595 in range [0.001402, 0.001788]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001499 in range [0.001402, 0.001596]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.07154607702051738, x5 : 0.11592618924624082, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.481904637605665, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.10070180706679821, x5 : -0.174855574965477, x6 : 0, x7 : 5, x8 : 0, x9 : -0.594620943069458, x10 : -0.2616139363576315, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001595


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127303 in range [0.000000, 0.254607]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063652 in range [0.000000, 0.127304]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031827 in range [0.000000, 0.063653]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015388 in range [0.000000, 0.030776]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007694 in range [0.000000, 0.015389]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003848 in range [0.000000, 0.007695]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001848 in range [0.000000, 0.003695]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000444 in range [0.000000, 0.000889]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000223 in range [0.000000, 0.000445]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000224]...	no solution exists.
	Iteration #012: testing norm threshold 0.000168 in range [0.000112, 0.000224]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.9322440299184828, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 1.0961236302888482, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.9307144529601656, x5 : -0.030130529495783858, x6 : 0, x7 : 0, x8 : 5, x9 : 1.0945940533305312, x10 : 0.19028205680956295, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000168


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140086 in range [0.000000, 0.280172]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070044 in range [0.000000, 0.140087]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035022 in range [0.000000, 0.070045]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017512 in range [0.000000, 0.035023]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008756 in range [0.000000, 0.017513]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004379 in range [0.000000, 0.008757]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002190 in range [0.000000, 0.004380]...	no solution exists.
	Iteration #009: testing norm threshold 0.003285 in range [0.002190, 0.004380]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002718 in range [0.002190, 0.003246]...	no solution exists.
	Iteration #011: testing norm threshold 0.002982 in range [0.002718, 0.003246]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002851 in range [0.002718, 0.002983]...	no solution exists.
	Iteration #013: testing norm threshold 0.002917 in range [0.002851, 0.002983]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 3.868642475528421, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 4.230078929832854, x10 : 0.5091625782023483, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 3.8671965264038572, x5 : -0.0543570004062632, x6 : 0, x7 : 0, x8 : 5, x9 : 4.22863298070829, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002917


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122076 in range [0.000000, 0.244152]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060481 in range [0.000000, 0.120962]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030172 in range [0.000000, 0.060344]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014768 in range [0.000000, 0.029535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006671 in range [0.000000, 0.013342]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001430 in range [0.000000, 0.002859]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000715 in range [0.000000, 0.001431]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	no solution exists.
	Iteration #010: testing norm threshold 0.000537 in range [0.000358, 0.000716]...	no solution exists.
	Iteration #011: testing norm threshold 0.000627 in range [0.000537, 0.000716]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : 0.2769745504490328, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7442103922367096, x5 : 0.2751531701140032, x6 : 3, x7 : 6, x8 : 0, x9 : -0.660924643278122, x10 : -0.2513710965932045, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000715


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119045 in range [0.000000, 0.238091]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057626 in range [0.000000, 0.115253]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025598 in range [0.000000, 0.051195]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012464 in range [0.000000, 0.024927]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006232 in range [0.000000, 0.012465]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002624 in range [0.000000, 0.005249]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000180 in range [0.000000, 0.000359]...	no solution exists.
	Iteration #010: testing norm threshold 0.000269 in range [0.000180, 0.000359]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6171747243608038, x5 : -0.376166025540068, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.5305273573447117, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6400828063488007, x5 : -0.3895867168903351, x6 : 0, x7 : 2, x8 : 0, x9 : -0.5185052673884923, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000269


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164141 in range [0.000000, 0.328281]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080404 in range [0.000000, 0.160808]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040203 in range [0.000000, 0.080405]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020100 in range [0.000000, 0.040201]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010034 in range [0.000000, 0.020068]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004162 in range [0.000000, 0.008324]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002075 in range [0.000000, 0.004150]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000581 in range [0.000000, 0.001163]...	no solution exists.
	Iteration #010: testing norm threshold 0.000872 in range [0.000581, 0.001163]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000727 in range [0.000581, 0.000873]...	no solution exists.
	Iteration #012: testing norm threshold 0.000800 in range [0.000727, 0.000873]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : 0.9480093887939992, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.1327282963729509, x5 : 0.9480093887939992, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6318144825148841, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000872


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109131 in range [0.000000, 0.218262]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054566 in range [0.000000, 0.109132]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026751 in range [0.000000, 0.053502]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013033 in range [0.000000, 0.026066]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006517 in range [0.000000, 0.013034]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002923 in range [0.000000, 0.005846]...	no solution exists.
	Iteration #008: testing norm threshold 0.004385 in range [0.002923, 0.005846]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003654 in range [0.002923, 0.004386]...	no solution exists.
	Iteration #010: testing norm threshold 0.004020 in range [0.003654, 0.004386]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003760 in range [0.003654, 0.003865]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003708 in range [0.003654, 0.003761]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4657523619634288, x5 : -0.295641844938672, x6 : 4.0, x7 : 4.0, x8 : 2.0, x9 : 0.5966356911513693, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.017399723175913095, x5 : -0.19550636025357235, x6 : 4, x7 : 4, x8 : 2, x9 : 0.5997309920836575, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003760


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143357 in range [0.000000, 0.286714]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071679 in range [0.000000, 0.143358]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032611 in range [0.000000, 0.065221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015156 in range [0.000000, 0.030312]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007579 in range [0.000000, 0.015157]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003620 in range [0.000000, 0.007240]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001810 in range [0.000000, 0.003621]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000522 in range [0.000000, 0.001045]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000262 in range [0.000000, 0.000523]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000131 in range [0.000000, 0.000263]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.12152732715855885, x5 : -0.3672188943621351, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : -0.022198923709224192, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.12067028003088906, x5 : -0.40748098492622375, x6 : 0, x7 : 3, x8 : 3, x9 : -0.02391301796456378, x10 : -0.21592853823086336, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123781 in range [0.000000, 0.247562]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061891 in range [0.000000, 0.123782]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030821 in range [0.000000, 0.061642]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015119 in range [0.000000, 0.030238]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007067 in range [0.000000, 0.014133]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003534 in range [0.000000, 0.007068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001767 in range [0.000000, 0.003535]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000884 in range [0.000000, 0.001768]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000443 in range [0.000000, 0.000885]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000135 in range [0.000000, 0.000269]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.125692431336729, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.008938181962211472, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.11791586198607429, x5 : -0.2985864884475802, x6 : 0, x7 : 0, x8 : 6, x9 : -0.010467100027845405, x10 : -0.20746906169453605, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.069519 in range [0.000000, 0.139037]...	solution exists & found.
	Iteration #003: testing norm threshold 0.033182 in range [0.000000, 0.066365]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013967 in range [0.000000, 0.027934]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006984 in range [0.000000, 0.013968]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001546 in range [0.000000, 0.003092]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000641 in range [0.000000, 0.001281]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000291 in range [0.000000, 0.000582]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.4119545502517995, x6 : 1, x7 : 6, x8 : 0, x9 : -0.688187588064369, x10 : -0.33200151455647803, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168639 in range [0.000000, 0.337278]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082805 in range [0.000000, 0.165609]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037850 in range [0.000000, 0.075700]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018910 in range [0.000000, 0.037821]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008591 in range [0.000000, 0.017182]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004296 in range [0.000000, 0.008592]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002148 in range [0.000000, 0.004297]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001075 in range [0.000000, 0.002149]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000538 in range [0.000000, 0.001076]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000269 in range [0.000000, 0.000539]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000135 in range [0.000000, 0.000270]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.14651795222757966, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.11060386868930897, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.15172433353661852, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 0, x9 : -0.11581024999834781, x10 : -0.1979493573307991, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091694 in range [0.000000, 0.183389]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045057 in range [0.000000, 0.090114]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022345 in range [0.000000, 0.044690]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010922 in range [0.000000, 0.021844]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005462 in range [0.000000, 0.010923]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002601 in range [0.000000, 0.005202]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001301 in range [0.000000, 0.002602]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000651 in range [0.000000, 0.001302]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000326 in range [0.000000, 0.000652]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000327]...	no solution exists.
	Iteration #012: testing norm threshold 0.000245 in range [0.000163, 0.000327]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.17983878565294062, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.06640139619926658, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.18425903207681996, x5 : -0.3225365621431678, x6 : 0, x7 : 0, x8 : 1, x9 : -0.06861151941120625, x10 : -0.13566899741556812, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158849 in range [0.000000, 0.317698]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079425 in range [0.000000, 0.158850]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039713 in range [0.000000, 0.079426]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019857 in range [0.000000, 0.039714]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009929 in range [0.000000, 0.019858]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003721 in range [0.000000, 0.007442]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001822 in range [0.000000, 0.003643]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000619 in range [0.000000, 0.001237]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000310 in range [0.000000, 0.000620]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000311]...	no solution exists.
	Iteration #012: testing norm threshold 0.000233 in range [0.000155, 0.000311]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : 0.5990712728546167, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6315597168919251, x5 : 0.6753147669318511, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6633276383271953, x10 : -0.3086284605250245, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000233


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141367 in range [0.000000, 0.282735]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069852 in range [0.000000, 0.139704]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031219 in range [0.000000, 0.062438]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014364 in range [0.000000, 0.028727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006305 in range [0.000000, 0.012609]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003153 in range [0.000000, 0.006306]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001213 in range [0.000000, 0.002425]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000106 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000053 in range [0.000000, 0.000107]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7442103922367096, x5 : -0.4164281189441681, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6576595238529671, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154721 in range [0.000000, 0.309442]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077361 in range [0.000000, 0.154722]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038681 in range [0.000000, 0.077362]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018723 in range [0.000000, 0.037445]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009362 in range [0.000000, 0.018724]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003829 in range [0.000000, 0.007658]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001661 in range [0.000000, 0.003322]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000766 in range [0.000000, 0.001532]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000383 in range [0.000000, 0.000767]...	no solution exists.
	Iteration #011: testing norm threshold 0.000575 in range [0.000383, 0.000767]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000467 in range [0.000383, 0.000550]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.3824502784000263, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.5259117351673014, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3449643403291702, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 0.5203874228918165, x10 : -0.1371819254578792, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000549


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117725 in range [0.000000, 0.235450]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055062 in range [0.000000, 0.110124]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027531 in range [0.000000, 0.055063]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013572 in range [0.000000, 0.027144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006513 in range [0.000000, 0.013026]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003257 in range [0.000000, 0.006514]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001152 in range [0.000000, 0.002304]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000163 in range [0.000000, 0.000325]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.029895035238816113, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.06178577402185635, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.030670011183264567, x5 : -0.3053639520610533, x6 : 0, x7 : 0, x8 : 6, x9 : 0.04852503165602684, x10 : -0.22082158104197966, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090945 in range [0.000000, 0.181890]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042159 in range [0.000000, 0.084317]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019690 in range [0.000000, 0.039380]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009648 in range [0.000000, 0.019295]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003439 in range [0.000000, 0.006877]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001500 in range [0.000000, 0.002999]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000730 in range [0.000000, 0.001460]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000360 in range [0.000000, 0.000719]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000180 in range [0.000000, 0.000361]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7129721204587166, x5 : -0.2866947137607391, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.2642411010550996, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7000236729458307, x5 : -0.2892304225383123, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6321930440718091, x10 : -0.262973246666313, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124383 in range [0.000000, 0.248767]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059891 in range [0.000000, 0.119783]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029575 in range [0.000000, 0.059149]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014788 in range [0.000000, 0.029576]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007394 in range [0.000000, 0.014789]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003264 in range [0.000000, 0.006528]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001476 in range [0.000000, 0.002953]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000739 in range [0.000000, 0.001477]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000370 in range [0.000000, 0.000740]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000185 in range [0.000000, 0.000371]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.7698049669698479, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.8662707733406277, x10 : 0.4428708342659957, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.7677950607792163, x5 : -0.11222565546631813, x6 : 0, x7 : 0, x8 : 3, x9 : 0.8642608671499962, x10 : 0.4323699023902363, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162897 in range [0.000000, 0.325795]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078281 in range [0.000000, 0.156562]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039141 in range [0.000000, 0.078282]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019571 in range [0.000000, 0.039142]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009775 in range [0.000000, 0.019549]...	no solution exists.
	Iteration #007: testing norm threshold 0.014662 in range [0.009775, 0.019549]...	no solution exists.
	Iteration #008: testing norm threshold 0.017105 in range [0.014662, 0.019549]...	solution exists & found.
	Iteration #009: testing norm threshold 0.015884 in range [0.014662, 0.017106]...	solution exists & found.
	Iteration #010: testing norm threshold 0.015265 in range [0.014662, 0.015867]...	no solution exists.
	Iteration #011: testing norm threshold 0.015566 in range [0.015265, 0.015867]...	no solution exists.
	Iteration #012: testing norm threshold 0.015717 in range [0.015566, 0.015867]...	solution exists & found.
	Iteration #013: testing norm threshold 0.015630 in range [0.015566, 0.015694]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 6.126128940096629, x5 : 1.0732692252850595, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 4.269861155073892, x10 : 3.3376103194867297, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 6.123807117091566, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 4.271022066576423, x10 : 3.334129064127705, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.015693


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109580 in range [0.000000, 0.219159]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054336 in range [0.000000, 0.108672]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027167 in range [0.000000, 0.054334]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013581 in range [0.000000, 0.027162]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006791 in range [0.000000, 0.013582]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003350 in range [0.000000, 0.006700]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001303 in range [0.000000, 0.002605]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000073 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.026619170958228428, x10 : -0.24214385307631545, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.14443539828062057, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 4, x9 : -0.02680706037908324, x10 : -0.24233174249717027, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095517 in range [0.000000, 0.191033]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046163 in range [0.000000, 0.092327]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022475 in range [0.000000, 0.044950]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008656 in range [0.000000, 0.017313]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002050 in range [0.000000, 0.004099]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001025 in range [0.000000, 0.002051]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000513 in range [0.000000, 0.001026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000257 in range [0.000000, 0.000514]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	no solution exists.
	Iteration #011: testing norm threshold 0.000194 in range [0.000129, 0.000258]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5338726407974013, x5 : -0.4030074190738666, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4553831541116396, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5334801382364185, x5 : -0.34445858066691465, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4549906558336169, x10 : -0.36328621273650236, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161199 in range [0.000000, 0.322398]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076000 in range [0.000000, 0.151999]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037158 in range [0.000000, 0.074316]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018580 in range [0.000000, 0.037159]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008701 in range [0.000000, 0.017401]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004351 in range [0.000000, 0.008702]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002176 in range [0.000000, 0.004352]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001088 in range [0.000000, 0.002177]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000545 in range [0.000000, 0.001089]...	no solution exists.
	Iteration #011: testing norm threshold 0.000817 in range [0.000545, 0.001089]...	no solution exists.
	Iteration #012: testing norm threshold 0.000953 in range [0.000817, 0.001089]...	no solution exists.
	Iteration #013: testing norm threshold 0.001021 in range [0.000953, 0.001089]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.02008621489922539, x5 : 0.062243402178643485, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : 0.1457704717529369, x10 : 0.31028734639329025, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.020086213946342468, x5 : -0.2553797513246536, x6 : 2, x7 : 4, x8 : 0, x9 : 0.18113245633086236, x10 : 0.3102873473461732, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001005


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133123 in range [0.000000, 0.266247]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065681 in range [0.000000, 0.131362]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032092 in range [0.000000, 0.064183]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014501 in range [0.000000, 0.029002]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007135 in range [0.000000, 0.014270]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000921 in range [0.000000, 0.001841]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000435 in range [0.000000, 0.000869]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000109 in range [0.000000, 0.000219]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.28396639010719377, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4509629068626354, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2850847808602802, x5 : -0.397415460155193, x6 : 0, x7 : 0, x8 : 6, x9 : -0.45468059298089386, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121298 in range [0.000000, 0.242595]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060216 in range [0.000000, 0.120432]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030044 in range [0.000000, 0.060087]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012735 in range [0.000000, 0.025470]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006368 in range [0.000000, 0.012736]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003185 in range [0.000000, 0.006369]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001409 in range [0.000000, 0.002817]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000581 in range [0.000000, 0.001162]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000291 in range [0.000000, 0.000582]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	no solution exists.
	Iteration #012: testing norm threshold 0.000219 in range [0.000146, 0.000292]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4598034013606439, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5249202063065841, x5 : -0.15341842888589505, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4580319623387973, x10 : 0.06367474058297048, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000291


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.082040 in range [0.000000, 0.164081]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036743 in range [0.000000, 0.073487]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018362 in range [0.000000, 0.036724]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008046 in range [0.000000, 0.016091]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004023 in range [0.000000, 0.008047]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002012 in range [0.000000, 0.004024]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001007 in range [0.000000, 0.002013]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000324 in range [0.000000, 0.000649]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000163 in range [0.000000, 0.000325]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4214148279868079, x5 : 1.118004881174724, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.42055460181089793, x5 : 1.1135846305205035, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3128558476668887, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115547 in range [0.000000, 0.231094]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057659 in range [0.000000, 0.115317]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028830 in range [0.000000, 0.057660]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014415 in range [0.000000, 0.028831]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006666 in range [0.000000, 0.013333]...	no solution exists.
	Iteration #007: testing norm threshold 0.009999 in range [0.006666, 0.013333]...	solution exists & found.
	Iteration #008: testing norm threshold 0.008243 in range [0.006666, 0.009820]...	no solution exists.
	Iteration #009: testing norm threshold 0.009031 in range [0.008243, 0.009820]...	no solution exists.
	Iteration #010: testing norm threshold 0.009426 in range [0.009031, 0.009820]...	solution exists & found.
	Iteration #011: testing norm threshold 0.009229 in range [0.009031, 0.009427]...	solution exists & found.
	Iteration #012: testing norm threshold 0.009131 in range [0.009031, 0.009230]...	solution exists & found.
	Iteration #013: testing norm threshold 0.009082 in range [0.009031, 0.009132]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.4150211173470475, x5 : 6.289446702019932, x6 : 1.0, x7 : 1.0, x8 : 3.0, x9 : -0.031039418207232668, x10 : 2.6967901281019877, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.417721447696693, x5 : 5.555782079696655, x6 : 1, x7 : 1, x8 : 3, x9 : -0.1415456011891365, x10 : 0.7853781580924988, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.009131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090251 in range [0.000000, 0.180502]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044399 in range [0.000000, 0.088797]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019702 in range [0.000000, 0.039405]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008008 in range [0.000000, 0.016016]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003826 in range [0.000000, 0.007652]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001758 in range [0.000000, 0.003516]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000879 in range [0.000000, 0.001759]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000440 in range [0.000000, 0.000880]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000106 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000107]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.19722340198141025, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 4, x4 : -0.667772823252789, x5 : -0.21064409613609314, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6956697699556205, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135038 in range [0.000000, 0.270076]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067520 in range [0.000000, 0.135039]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033760 in range [0.000000, 0.067521]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016881 in range [0.000000, 0.033761]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008441 in range [0.000000, 0.016882]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001466 in range [0.000000, 0.002932]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000509 in range [0.000000, 0.001018]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000128 in range [0.000000, 0.000256]...	no solution exists.
	Iteration #011: testing norm threshold 0.000192 in range [0.000128, 0.000256]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.40475441127412737, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3404567256375294, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.38908802505888784, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.338440886624676, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000173


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137022 in range [0.000000, 0.274044]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067398 in range [0.000000, 0.134795]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033699 in range [0.000000, 0.067399]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015588 in range [0.000000, 0.031175]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007794 in range [0.000000, 0.015589]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003888 in range [0.000000, 0.007775]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001915 in range [0.000000, 0.003830]...	no solution exists.
	Iteration #009: testing norm threshold 0.002872 in range [0.001915, 0.003830]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002394 in range [0.001915, 0.002873]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002155 in range [0.001915, 0.002395]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002035 in range [0.001915, 0.002156]...	no solution exists.
	Iteration #013: testing norm threshold 0.002096 in range [0.002035, 0.002156]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.20066430654379125, x5 : 0.3932872557621603, x6 : 1.0, x7 : 1.0, x8 : 2.0, x9 : -0.3802389508785675, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.20407836415096275, x5 : 0.6248531569190001, x6 : 1, x7 : 1, x8 : 2, x9 : -0.5879905521869659, x10 : -0.34158146381378174, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148741 in range [0.000000, 0.297481]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073694 in range [0.000000, 0.147389]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036848 in range [0.000000, 0.073695]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018424 in range [0.000000, 0.036849]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006468 in range [0.000000, 0.012935]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002769 in range [0.000000, 0.005538]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000974 in range [0.000000, 0.001947]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000309 in range [0.000000, 0.000618]...	no solution exists.
	Iteration #010: testing norm threshold 0.000463 in range [0.000309, 0.000618]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000385 in range [0.000309, 0.000462]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6838163912115257, x5 : -0.3314303696504035, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6839033153124437, x5 : -0.3537982106208801, x6 : 1, x7 : 6, x8 : 0, x9 : -0.660924643278122, x10 : -0.1317445372833123, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000385


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136044 in range [0.000000, 0.272087]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068022 in range [0.000000, 0.136045]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033455 in range [0.000000, 0.066911]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016322 in range [0.000000, 0.032645]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008162 in range [0.000000, 0.016323]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003015 in range [0.000000, 0.006030]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001348 in range [0.000000, 0.002696]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000276 in range [0.000000, 0.000552]...	no solution exists.
	Iteration #010: testing norm threshold 0.000414 in range [0.000276, 0.000552]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000346 in range [0.000276, 0.000415]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.1881689940092809, x5 : -0.23301192669314175, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.2255302971634192, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.18854881994225084, x5 : -0.36721889674663544, x6 : 0, x7 : 6, x8 : 0, x9 : -0.22563671052913778, x10 : -0.242250266442034, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000346


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149126 in range [0.000000, 0.298251]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067517 in range [0.000000, 0.135033]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029569 in range [0.000000, 0.059137]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014785 in range [0.000000, 0.029570]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007393 in range [0.000000, 0.014786]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003398 in range [0.000000, 0.006797]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001567 in range [0.000000, 0.003135]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000784 in range [0.000000, 0.001568]...	no solution exists.
	Iteration #010: testing norm threshold 0.001176 in range [0.000784, 0.001568]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000981 in range [0.000784, 0.001177]...	no solution exists.
	Iteration #012: testing norm threshold 0.001079 in range [0.000981, 0.001177]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4089195154522975, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.3095149948944997, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5734411180019379, x5 : -0.36874965865381226, x6 : 0, x7 : 4, x8 : 0, x9 : -0.31245778509513383, x10 : -0.1839579372502135, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001176


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089793 in range [0.000000, 0.179587]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044259 in range [0.000000, 0.088519]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021960 in range [0.000000, 0.043920]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010968 in range [0.000000, 0.021935]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002115 in range [0.000000, 0.004230]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001058 in range [0.000000, 0.002116]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000530 in range [0.000000, 0.001059]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000265 in range [0.000000, 0.000531]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000121 in range [0.000000, 0.000241]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.07987628537685762, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.0575609017012581, x10 : -0.10956036520361004, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.08176936622913075, x5 : -0.3071694596788853, x6 : 0, x7 : 0, x8 : 0, x9 : -0.05945398255353123, x10 : -0.08557003728365598, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000121


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138047 in range [0.000000, 0.276093]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067514 in range [0.000000, 0.135029]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031923 in range [0.000000, 0.063847]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015962 in range [0.000000, 0.031924]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007434 in range [0.000000, 0.014868]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003717 in range [0.000000, 0.007435]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001859 in range [0.000000, 0.003718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000910 in range [0.000000, 0.001819]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000447 in range [0.000000, 0.000894]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000187 in range [0.000000, 0.000374]...	no solution exists.
	Iteration #012: testing norm threshold 0.000281 in range [0.000187, 0.000374]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.17150857729660038, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.08408238519528352, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.1722234971487383, x5 : -0.28150621862518754, x6 : 0, x7 : 0, x8 : 6, x9 : -0.0656864760946032, x10 : -0.17656702899210067, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000281


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154121 in range [0.000000, 0.308241]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076445 in range [0.000000, 0.152890]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038031 in range [0.000000, 0.076063]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019016 in range [0.000000, 0.038032]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009509 in range [0.000000, 0.019017]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004575 in range [0.000000, 0.009149]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000788 in range [0.000000, 0.001576]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000395 in range [0.000000, 0.000789]...	no solution exists.
	Iteration #010: testing norm threshold 0.000592 in range [0.000395, 0.000789]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000494 in range [0.000395, 0.000593]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000445 in range [0.000395, 0.000495]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.32561743188889497, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2387910389104319, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3281457297031808, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.20090076037987467, x10 : -0.17838040695424853, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000494


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154233 in range [0.000000, 0.308466]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072799 in range [0.000000, 0.145598]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036117 in range [0.000000, 0.072233]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014368 in range [0.000000, 0.028736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007185 in range [0.000000, 0.014369]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003383 in range [0.000000, 0.006766]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001516 in range [0.000000, 0.003032]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000759 in range [0.000000, 0.001517]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000380 in range [0.000000, 0.000760]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000190 in range [0.000000, 0.000381]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000096 in range [0.000000, 0.000191]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4672309739466792, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3713984563805591, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.47114383832931855, x5 : -0.37672671848975137, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3713984563805591, x10 : -0.3597658442898841, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.078245 in range [0.000000, 0.156489]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037324 in range [0.000000, 0.074649]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018663 in range [0.000000, 0.037325]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007678 in range [0.000000, 0.015355]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003497 in range [0.000000, 0.006994]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001577 in range [0.000000, 0.003155]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000303 in range [0.000000, 0.000605]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000152 in range [0.000000, 0.000304]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000076 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6838163912115257, x5 : -0.2688004514048733, x6 : 3.0, x7 : 3.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.04326862126725737, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6835172347183985, x5 : -0.28222113847732544, x6 : 3, x7 : 3, x8 : 0, x9 : -0.6984967528068727, x10 : -0.03162168368959462, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182181 in range [0.000000, 0.364362]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088629 in range [0.000000, 0.177259]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042136 in range [0.000000, 0.084271]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020554 in range [0.000000, 0.041107]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010277 in range [0.000000, 0.020555]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004853 in range [0.000000, 0.009706]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002319 in range [0.000000, 0.004638]...	no solution exists.
	Iteration #009: testing norm threshold 0.003479 in range [0.002319, 0.004638]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002899 in range [0.002319, 0.003480]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002610 in range [0.002319, 0.002900]...	no solution exists.
	Iteration #012: testing norm threshold 0.002755 in range [0.002610, 0.002900]...	no solution exists.
	Iteration #013: testing norm threshold 0.002828 in range [0.002755, 0.002900]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.31728722353255473, x5 : 0.25908028809316697, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5796887874603271, x5 : -0.21064409613609314, x6 : 0, x7 : 6, x8 : 0, x9 : -0.21346851594996197, x10 : -0.18570176691729212, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002899


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132193 in range [0.000000, 0.264387]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065401 in range [0.000000, 0.130802]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032701 in range [0.000000, 0.065402]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016351 in range [0.000000, 0.032702]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008176 in range [0.000000, 0.016352]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004089 in range [0.000000, 0.008177]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001412 in range [0.000000, 0.002824]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000652 in range [0.000000, 0.001304]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000326 in range [0.000000, 0.000653]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000157]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3089570151762145, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.21668980266541069, x10 : -0.24214385307631545, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.30865554781084487, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 6, x9 : -0.21889992801293645, x10 : -0.2443539784238412, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132508 in range [0.000000, 0.265016]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066254 in range [0.000000, 0.132509]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032448 in range [0.000000, 0.064897]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016225 in range [0.000000, 0.032449]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006579 in range [0.000000, 0.013158]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002709 in range [0.000000, 0.005418]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001355 in range [0.000000, 0.002710]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000678 in range [0.000000, 0.001356]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000225 in range [0.000000, 0.000450]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000110 in range [0.000000, 0.000219]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.05488566030783686, x5 : 1.7443040636300262, x6 : 3.0, x7 : 4.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.05488566030783686, x5 : 1.753037233248573, x6 : 3, x7 : 4, x8 : 0, x9 : -0.5548387169837952, x10 : -0.3592584618843988, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.194440 in range [0.000000, 0.388880]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097220 in range [0.000000, 0.194441]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048611 in range [0.000000, 0.097221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024306 in range [0.000000, 0.048612]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012149 in range [0.000000, 0.024297]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006042 in range [0.000000, 0.012084]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003021 in range [0.000000, 0.006043]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001511 in range [0.000000, 0.003022]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000756 in range [0.000000, 0.001512]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000379 in range [0.000000, 0.000757]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000151 in range [0.000000, 0.000302]...	no solution exists.
	Iteration #013: testing norm threshold 0.000226 in range [0.000151, 0.000302]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.8114560087515492, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8220683008505854, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.8092192279642781, x5 : -0.29787862572594304, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8231866912442208, x10 : 0.014211279591464038, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000301


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162767 in range [0.000000, 0.325535]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079492 in range [0.000000, 0.158983]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037235 in range [0.000000, 0.074469]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018450 in range [0.000000, 0.036900]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008935 in range [0.000000, 0.017871]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002728 in range [0.000000, 0.005457]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001317 in range [0.000000, 0.002633]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000411 in range [0.000000, 0.000823]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000206 in range [0.000000, 0.000412]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000207]...	no solution exists.
	Iteration #012: testing norm threshold 0.000155 in range [0.000104, 0.000207]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.658825766142505, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.610091807826788, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6577152689770179, x5 : -0.3963128565773053, x6 : 0, x7 : 0, x8 : 4, x9 : -0.5747189461216016, x10 : -0.28633834421634674, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000206


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123511 in range [0.000000, 0.247023]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061756 in range [0.000000, 0.123512]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030879 in range [0.000000, 0.061757]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015440 in range [0.000000, 0.030880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007720 in range [0.000000, 0.015441]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001161 in range [0.000000, 0.002322]...	no solution exists.
	Iteration #008: testing norm threshold 0.001742 in range [0.001161, 0.002322]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001452 in range [0.001161, 0.001743]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001307 in range [0.001161, 0.001453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001235 in range [0.001161, 0.001308]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5838538909354427, x5 : -0.09880495902414847, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5893153823852783, x5 : -0.044134246379968885, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.17211672644233966, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001235


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163148 in range [0.000000, 0.326297]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079641 in range [0.000000, 0.159283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038253 in range [0.000000, 0.076505]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019127 in range [0.000000, 0.038254]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008759 in range [0.000000, 0.017519]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002849 in range [0.000000, 0.005698]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001212 in range [0.000000, 0.002425]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000607 in range [0.000000, 0.001213]...	no solution exists.
	Iteration #010: testing norm threshold 0.000910 in range [0.000607, 0.001213]...	no solution exists.
	Iteration #011: testing norm threshold 0.001062 in range [0.000910, 0.001213]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000986 in range [0.000910, 0.001063]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.3529195519136654, x5 : 0.008560615111046171, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.524887613442259, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.350441163804521, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 1.524887613442259, x10 : 0.1089337264750879, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119367 in range [0.000000, 0.238733]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059495 in range [0.000000, 0.118989]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026117 in range [0.000000, 0.052234]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013059 in range [0.000000, 0.026118]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006530 in range [0.000000, 0.013060]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003265 in range [0.000000, 0.006531]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000492 in range [0.000000, 0.000984]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000247 in range [0.000000, 0.000493]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000124 in range [0.000000, 0.000248]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000062 in range [0.000000, 0.000125]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7379627455277374, x5 : -0.3403775008283364, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7352566306970404, x5 : -0.38063958287239075, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6637583402123114, x10 : -0.307812023677616, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000124


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146770 in range [0.000000, 0.293539]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072677 in range [0.000000, 0.145353]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036339 in range [0.000000, 0.072678]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018170 in range [0.000000, 0.036340]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009085 in range [0.000000, 0.018171]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004141 in range [0.000000, 0.008283]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001993 in range [0.000000, 0.003986]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000997 in range [0.000000, 0.001994]...	no solution exists.
	Iteration #010: testing norm threshold 0.001495 in range [0.000997, 0.001994]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001247 in range [0.000997, 0.001496]...	no solution exists.
	Iteration #012: testing norm threshold 0.001372 in range [0.001247, 0.001496]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001310 in range [0.001247, 0.001373]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2866528823021134, x5 : 1.851669637765221, x6 : 4.0, x7 : 5.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.2866528823021134, x5 : 1.8632153034048304, x6 : 4, x7 : 5, x8 : 0, x9 : -0.6480522860544018, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001310


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136577 in range [0.000000, 0.273153]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067611 in range [0.000000, 0.135222]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033806 in range [0.000000, 0.067612]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016835 in range [0.000000, 0.033670]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006178 in range [0.000000, 0.012355]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003089 in range [0.000000, 0.006179]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001545 in range [0.000000, 0.003090]...	no solution exists.
	Iteration #009: testing norm threshold 0.002318 in range [0.001545, 0.003090]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001932 in range [0.001545, 0.002319]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001715 in range [0.001545, 0.001886]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001631 in range [0.001545, 0.001716]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.14651795222757966, x5 : 0.2948688128048986, x6 : 1.0, x7 : 0.0, x8 : 2.0, x9 : -0.39349969262558027, x10 : 1.4151497453325017, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.1486005038022995, x5 : -0.33590394258499146, x6 : 1, x7 : 0, x8 : 2, x9 : -0.39513725070327965, x10 : 1.4151497453325017, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001631


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149194 in range [0.000000, 0.298387]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074597 in range [0.000000, 0.149195]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036498 in range [0.000000, 0.072997]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018250 in range [0.000000, 0.036499]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009125 in range [0.000000, 0.018251]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144525 in range [0.000000, 0.289050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067740 in range [0.000000, 0.135479]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033870 in range [0.000000, 0.067741]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014910 in range [0.000000, 0.029820]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007456 in range [0.000000, 0.014911]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002692 in range [0.000000, 0.005384]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001267 in range [0.000000, 0.002533]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000634 in range [0.000000, 0.001268]...	no solution exists.
	Iteration #010: testing norm threshold 0.000951 in range [0.000634, 0.001268]...	no solution exists.
	Iteration #011: testing norm threshold 0.001109 in range [0.000951, 0.001268]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001031 in range [0.000951, 0.001110]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 3.6187362248382136, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 3.9648640948926, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 3.6187362248382136, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 3.969337661901572, x10 : 0.6327989320571092, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001026


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093140 in range [0.000000, 0.186280]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036814 in range [0.000000, 0.073629]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018408 in range [0.000000, 0.036815]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009174 in range [0.000000, 0.018348]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004195 in range [0.000000, 0.008391]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002098 in range [0.000000, 0.004196]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001050 in range [0.000000, 0.002099]...	no solution exists.
	Iteration #009: testing norm threshold 0.001574 in range [0.001050, 0.002099]...	no solution exists.
	Iteration #010: testing norm threshold 0.001837 in range [0.001574, 0.002099]...	no solution exists.
	Iteration #011: testing norm threshold 0.001968 in range [0.001837, 0.002099]...	no solution exists.
	Iteration #012: testing norm threshold 0.002034 in range [0.001968, 0.002099]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.42974503634314815, x5 : 0.32171020633869724, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.42776329430519117, x5 : 0.08013766072690487, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5575056237903733, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.083714 in range [0.000000, 0.167428]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041854 in range [0.000000, 0.083707]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016481 in range [0.000000, 0.032961]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008183 in range [0.000000, 0.016365]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000442 in range [0.000000, 0.000884]...	no solution exists.
	Iteration #007: testing norm threshold 0.000663 in range [0.000442, 0.000884]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000553 in range [0.000442, 0.000664]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000498 in range [0.000442, 0.000554]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6421653494298245, x5 : -0.30458897611660485, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7067244648933411, x5 : -0.2780560553073883, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5567341115146848, x10 : -0.2974380344121369, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000553


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132103 in range [0.000000, 0.264205]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066052 in range [0.000000, 0.132104]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032968 in range [0.000000, 0.065935]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016091 in range [0.000000, 0.032181]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007672 in range [0.000000, 0.015344]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002015 in range [0.000000, 0.004031]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000506 in range [0.000000, 0.001012]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000239 in range [0.000000, 0.000479]...	no solution exists.
	Iteration #010: testing norm threshold 0.000359 in range [0.000239, 0.000479]...	no solution exists.
	Iteration #011: testing norm threshold 0.000419 in range [0.000359, 0.000479]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.12985753551489912, x5 : -0.3851131567180008, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.013358429211215713, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.12242057592417145, x5 : -0.2541904640271797, x6 : 0, x7 : 3, x8 : 0, x9 : -0.013358429211215713, x10 : -0.252003174729599, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000419


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151716 in range [0.000000, 0.303432]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075858 in range [0.000000, 0.151717]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036483 in range [0.000000, 0.072966]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018215 in range [0.000000, 0.036431]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008879 in range [0.000000, 0.017758]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004408 in range [0.000000, 0.008815]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002204 in range [0.000000, 0.004409]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000377 in range [0.000000, 0.000754]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 2.190105491725861, x5 : 1.753251194807959, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 2.4089370632431075, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 2.1880385842364585, x5 : 1.7511842873185564, x6 : 0, x7 : 0, x8 : 5, x9 : 2.406870155753705, x10 : 0.24606249948750286, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000189


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093597 in range [0.000000, 0.187195]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046799 in range [0.000000, 0.093598]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022619 in range [0.000000, 0.045238]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009531 in range [0.000000, 0.019062]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004483 in range [0.000000, 0.008966]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002242 in range [0.000000, 0.004484]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000594 in range [0.000000, 0.001189]...	no solution exists.
	Iteration #009: testing norm threshold 0.000891 in range [0.000594, 0.001189]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000743 in range [0.000594, 0.000892]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000669 in range [0.000594, 0.000744]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.8693924700067608, x5 : 0.008560615111046171, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.108360250310819, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 1.8686323134358342, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 2.1076000937398924, x10 : 0.18875247985124588, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000743


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101342 in range [0.000000, 0.202684]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049350 in range [0.000000, 0.098700]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024675 in range [0.000000, 0.049351]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012338 in range [0.000000, 0.024676]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006170 in range [0.000000, 0.012339]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002782 in range [0.000000, 0.005563]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001152 in range [0.000000, 0.002305]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000419 in range [0.000000, 0.000838]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	no solution exists.
	Iteration #012: testing norm threshold 0.000158 in range [0.000105, 0.000211]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.15068305640574975, x5 : -0.3582717631842022, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : -0.04872040720324962, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.14299705172097463, x5 : -0.31657132053887627, x6 : 0, x7 : 3, x8 : 3, x9 : -0.050158761213476157, x10 : -0.19794935711874695, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000158


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171437 in range [0.000000, 0.342874]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083561 in range [0.000000, 0.167122]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041781 in range [0.000000, 0.083562]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020205 in range [0.000000, 0.040411]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010103 in range [0.000000, 0.020206]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005052 in range [0.000000, 0.010104]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002527 in range [0.000000, 0.005053]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000659 in range [0.000000, 0.001317]...	no solution exists.
	Iteration #010: testing norm threshold 0.000988 in range [0.000659, 0.001317]...	no solution exists.
	Iteration #011: testing norm threshold 0.001153 in range [0.000988, 0.001317]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001071 in range [0.000988, 0.001154]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4449268410725782, x5 : -0.3135361072945377, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.5656939604083395, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.45370866268143567, x5 : -0.19916279704108322, x6 : 0, x7 : 3, x8 : 0, x9 : 0.5656939604083395, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147167 in range [0.000000, 0.294335]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073584 in range [0.000000, 0.147168]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036793 in range [0.000000, 0.073585]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018355 in range [0.000000, 0.036709]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009178 in range [0.000000, 0.018356]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004545 in range [0.000000, 0.009090]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002273 in range [0.000000, 0.004546]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001095 in range [0.000000, 0.002190]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000493 in range [0.000000, 0.000986]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4422403488776585, x5 : 0.6706483222780798, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : 0.8406212978841117, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4484880119562149, x5 : 0.6662280785968243, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6211424241654242, x10 : 0.8362010542028562, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145756 in range [0.000000, 0.291511]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072776 in range [0.000000, 0.145552]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035914 in range [0.000000, 0.071829]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015149 in range [0.000000, 0.030298]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005896 in range [0.000000, 0.011792]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002937 in range [0.000000, 0.005874]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001469 in range [0.000000, 0.002938]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000735 in range [0.000000, 0.001470]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000368 in range [0.000000, 0.000736]...	no solution exists.
	Iteration #011: testing norm threshold 0.000552 in range [0.000368, 0.000736]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000461 in range [0.000368, 0.000553]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.2631408692163431, x5 : -0.3672188943621351, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.15480634117935135, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.2631408692163431, x5 : -0.38063958287239075, x6 : 1, x7 : 3, x8 : 0, x9 : -0.16957254907530742, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000461


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150087 in range [0.000000, 0.300173]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074085 in range [0.000000, 0.148169]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035941 in range [0.000000, 0.071881]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017888 in range [0.000000, 0.035777]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008074 in range [0.000000, 0.016147]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003143 in range [0.000000, 0.006286]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001205 in range [0.000000, 0.002411]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000503 in range [0.000000, 0.001006]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000248 in range [0.000000, 0.000496]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4030074190738666, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7712835669517517, x5 : -0.4052442020000452, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3172474360288614, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124459 in range [0.000000, 0.248918]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062230 in range [0.000000, 0.124460]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031018 in range [0.000000, 0.062037]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015329 in range [0.000000, 0.030658]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002859 in range [0.000000, 0.005717]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001430 in range [0.000000, 0.002860]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000715 in range [0.000000, 0.001431]...	no solution exists.
	Iteration #009: testing norm threshold 0.001073 in range [0.000715, 0.001431]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000844 in range [0.000715, 0.000973]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000780 in range [0.000715, 0.000845]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.015921110721055266, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.11924898825891145, x10 : -0.1537548611611785, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.11319712176918983, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 6, x9 : 0.1182641496040485, x10 : -0.15473969981604144, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000780


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129747 in range [0.000000, 0.259493]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064701 in range [0.000000, 0.129403]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031839 in range [0.000000, 0.063677]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015918 in range [0.000000, 0.031836]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007959 in range [0.000000, 0.015919]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003863 in range [0.000000, 0.007726]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001932 in range [0.000000, 0.003864]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000461 in range [0.000000, 0.000922]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000231 in range [0.000000, 0.000462]...	no solution exists.
	Iteration #011: testing norm threshold 0.000347 in range [0.000231, 0.000462]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000289 in range [0.000231, 0.000348]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 4.0, x4 : 0.12421381935347853, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.2474361584800344, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 4, x4 : 0.12385381555858345, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 0.24733529855405018, x10 : -0.16470262266612165, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000289


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118306 in range [0.000000, 0.236612]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058839 in range [0.000000, 0.117678]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026387 in range [0.000000, 0.052774]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012560 in range [0.000000, 0.025120]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006280 in range [0.000000, 0.012561]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001426 in range [0.000000, 0.002852]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000218 in range [0.000000, 0.000437]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000110 in range [0.000000, 0.000219]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000055 in range [0.000000, 0.000111]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7308167718855018, x5 : -0.3537982106208801, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6394920419613801, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000110


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181719 in range [0.000000, 0.363437]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090531 in range [0.000000, 0.181063]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045266 in range [0.000000, 0.090532]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022391 in range [0.000000, 0.044781]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009706 in range [0.000000, 0.019411]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002526 in range [0.000000, 0.005052]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001263 in range [0.000000, 0.002527]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7681597426202751, x5 : -0.41538685109882123, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6952453508642173, x10 : -0.36263744082717664, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114252 in range [0.000000, 0.228505]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056572 in range [0.000000, 0.113143]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025681 in range [0.000000, 0.051362]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012130 in range [0.000000, 0.024259]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006061 in range [0.000000, 0.012122]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002959 in range [0.000000, 0.005919]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001098 in range [0.000000, 0.002195]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000549 in range [0.000000, 0.001099]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000062 in range [0.000000, 0.000124]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7719512713616893, x5 : -0.42156937383832327, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6956189263009733, x10 : -0.34091377140519086, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145025 in range [0.000000, 0.290050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072513 in range [0.000000, 0.145026]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036257 in range [0.000000, 0.072514]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018129 in range [0.000000, 0.036258]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009065 in range [0.000000, 0.018130]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004533 in range [0.000000, 0.009066]...	no solution exists.
	Iteration #008: testing norm threshold 0.006800 in range [0.004533, 0.009066]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005455 in range [0.004533, 0.006377]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004873 in range [0.004533, 0.005214]...	no solution exists.
	Iteration #011: testing norm threshold 0.005044 in range [0.004873, 0.005214]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004959 in range [0.004873, 0.005045]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 8.687668009671254, x5 : 1.5385200465375701, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 5.1273891213807135, x10 : 0.8406212978841117, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 8.686303049373858, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 5.1260241610833175, x10 : 0.8406212978841117, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004959


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137179 in range [0.000000, 0.274358]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066607 in range [0.000000, 0.133215]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033081 in range [0.000000, 0.066163]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015970 in range [0.000000, 0.031940]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007985 in range [0.000000, 0.015971]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003634 in range [0.000000, 0.007268]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000530 in range [0.000000, 0.001061]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000266 in range [0.000000, 0.000531]...	no solution exists.
	Iteration #010: testing norm threshold 0.000398 in range [0.000266, 0.000531]...	no solution exists.
	Iteration #011: testing norm threshold 0.000465 in range [0.000398, 0.000531]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.0280414260163957, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.2154703060119627, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.0256389221164464, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 1.2130678021120134, x10 : 0.07826624065637589, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000465


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158085 in range [0.000000, 0.316170]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078964 in range [0.000000, 0.157928]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039420 in range [0.000000, 0.078840]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017648 in range [0.000000, 0.035296]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008276 in range [0.000000, 0.016553]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000285 in range [0.000000, 0.000571]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000143 in range [0.000000, 0.000286]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000072 in range [0.000000, 0.000144]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7046419121023764, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7003373170388052, x5 : -0.4162886107456991, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6210029089939901, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109346 in range [0.000000, 0.218691]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050944 in range [0.000000, 0.101887]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025283 in range [0.000000, 0.050567]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012642 in range [0.000000, 0.025284]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006173 in range [0.000000, 0.012347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003087 in range [0.000000, 0.006174]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001544 in range [0.000000, 0.003088]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000410 in range [0.000000, 0.000820]...	no solution exists.
	Iteration #010: testing norm threshold 0.000615 in range [0.000410, 0.000820]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000513 in range [0.000410, 0.000616]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000462 in range [0.000410, 0.000514]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : 1.49869819814962, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 1.7149582451494416, x10 : -0.19794935711874695, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 3, x4 : 1.497510448779217, x5 : -0.24340799337594252, x6 : 0, x7 : 0, x8 : 5, x9 : 1.7145470137680956, x10 : -0.05390601201588994, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000513


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092023 in range [0.000000, 0.184046]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039522 in range [0.000000, 0.079043]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019758 in range [0.000000, 0.039515]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009789 in range [0.000000, 0.019578]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004895 in range [0.000000, 0.009790]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002448 in range [0.000000, 0.004896]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001225 in range [0.000000, 0.002449]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000613 in range [0.000000, 0.001226]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000307 in range [0.000000, 0.000614]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000122 in range [0.000000, 0.000244]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000061 in range [0.000000, 0.000123]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.1131971188022186, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.004322559784801243, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.11517635486993517, x5 : -0.37866034680467414, x6 : 0, x7 : 0, x8 : 3, x9 : 0.002343323717084665, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133972 in range [0.000000, 0.267945]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065944 in range [0.000000, 0.131888]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032973 in range [0.000000, 0.065945]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015783 in range [0.000000, 0.031566]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007785 in range [0.000000, 0.015570]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002494 in range [0.000000, 0.004987]...	no solution exists.
	Iteration #008: testing norm threshold 0.003740 in range [0.002494, 0.004987]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003093 in range [0.002494, 0.003692]...	no solution exists.
	Iteration #010: testing norm threshold 0.003392 in range [0.003093, 0.003692]...	no solution exists.
	Iteration #011: testing norm threshold 0.003542 in range [0.003392, 0.003692]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003468 in range [0.003392, 0.003543]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.10486691044587836, x5 : 1.0106393070395294, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4609833061695099, x5 : 0.8003817200660706, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.05290380186526526, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003542


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107201 in range [0.000000, 0.214402]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050833 in range [0.000000, 0.101666]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024603 in range [0.000000, 0.049206]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008940 in range [0.000000, 0.017879]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003983 in range [0.000000, 0.007966]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001937 in range [0.000000, 0.003874]...	no solution exists.
	Iteration #008: testing norm threshold 0.002905 in range [0.001937, 0.003874]...	no solution exists.
	Iteration #009: testing norm threshold 0.003390 in range [0.002905, 0.003874]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003138 in range [0.002905, 0.003371]...	no solution exists.
	Iteration #011: testing norm threshold 0.003255 in range [0.003138, 0.003371]...	no solution exists.
	Iteration #012: testing norm threshold 0.003313 in range [0.003255, 0.003371]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 4.589205498351854, x5 : 0.008560615111046171, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 4.994781703910586, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 4.586870071947271, x5 : 0.011083907150542072, x6 : 0, x7 : 0, x8 : 5, x9 : 4.992446277506003, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003370


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182684 in range [0.000000, 0.365368]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091343 in range [0.000000, 0.182685]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045672 in range [0.000000, 0.091344]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022836 in range [0.000000, 0.045673]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011419 in range [0.000000, 0.022837]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005710 in range [0.000000, 0.011420]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002446 in range [0.000000, 0.004891]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000817 in range [0.000000, 0.001633]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000365 in range [0.000000, 0.000730]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.05488566030783686, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.01316305428280972, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.059050763957202435, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : 0.011766011796428891, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000127


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.198341 in range [0.000000, 0.396683]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090404 in range [0.000000, 0.180809]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045203 in range [0.000000, 0.090405]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022602 in range [0.000000, 0.045204]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010336 in range [0.000000, 0.020673]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004709 in range [0.000000, 0.009418]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002022 in range [0.000000, 0.004044]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001011 in range [0.000000, 0.002023]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000506 in range [0.000000, 0.001012]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000254 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000127 in range [0.000000, 0.000255]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2658273614112628, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.296058878219081, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.26454786716935946, x5 : -0.22681558289556752, x6 : 0, x7 : 0, x8 : 0, x9 : 0.2947793839771777, x10 : -0.3623992144306202, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150431 in range [0.000000, 0.300863]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071729 in range [0.000000, 0.143458]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035315 in range [0.000000, 0.070630]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015935 in range [0.000000, 0.031870]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007916 in range [0.000000, 0.015833]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003328 in range [0.000000, 0.006657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001665 in range [0.000000, 0.003329]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000796 in range [0.000000, 0.001591]...	no solution exists.
	Iteration #010: testing norm threshold 0.001194 in range [0.000796, 0.001591]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000945 in range [0.000796, 0.001094]...	no solution exists.
	Iteration #012: testing norm threshold 0.001020 in range [0.000945, 0.001094]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.13818774387123936, x5 : -0.24195905787107466, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.022198923709224192, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.17359113693237305, x5 : -0.2315058702950107, x6 : 0, x7 : 5, x8 : 0, x9 : -0.1658569574356079, x10 : -0.2413908226333438, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001020


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085904 in range [0.000000, 0.171808]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041962 in range [0.000000, 0.083924]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020981 in range [0.000000, 0.041963]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010417 in range [0.000000, 0.020834]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001572 in range [0.000000, 0.003144]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000155 in range [0.000000, 0.000311]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7646501795501488, x5 : -0.376166025540068, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6903662670794096, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144464 in range [0.000000, 0.288928]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072087 in range [0.000000, 0.144174]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036044 in range [0.000000, 0.072088]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017906 in range [0.000000, 0.035812]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008770 in range [0.000000, 0.017541]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004217 in range [0.000000, 0.008434]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001254 in range [0.000000, 0.002508]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000578 in range [0.000000, 0.001156]...	no solution exists.
	Iteration #010: testing norm threshold 0.000867 in range [0.000578, 0.001156]...	no solution exists.
	Iteration #011: testing norm threshold 0.001011 in range [0.000867, 0.001156]...	no solution exists.
	Iteration #012: testing norm threshold 0.001084 in range [0.001011, 0.001156]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2991481948366237, x5 : -0.215117664337276, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 0.38888407044817, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.29115454433445215, x5 : -0.3269568085670471, x6 : 0, x7 : 1, x8 : 0, x9 : 0.38556888100111975, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001155


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099501 in range [0.000000, 0.199001]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049667 in range [0.000000, 0.099333]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024834 in range [0.000000, 0.049668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012417 in range [0.000000, 0.024835]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006154 in range [0.000000, 0.012309]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003078 in range [0.000000, 0.006155]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001523 in range [0.000000, 0.003046]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000712 in range [0.000000, 0.001423]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000173 in range [0.000000, 0.000346]...	no solution exists.
	Iteration #012: testing norm threshold 0.000260 in range [0.000173, 0.000346]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.15901326476209, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.11944436318731745, x10 : -0.19794935711874695, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.15442082207887928, x5 : -0.3333940498182134, x6 : 0, x7 : 0, x8 : 6, x9 : -0.12195425595409552, x10 : -0.2531924769282341, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000260


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.066307 in range [0.000000, 0.132614]...	solution exists & found.
	Iteration #003: testing norm threshold 0.033103 in range [0.000000, 0.066206]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016552 in range [0.000000, 0.033104]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007888 in range [0.000000, 0.015775]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003944 in range [0.000000, 0.007889]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001733 in range [0.000000, 0.003466]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000507 in range [0.000000, 0.001013]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000254 in range [0.000000, 0.000508]...	no solution exists.
	Iteration #010: testing norm threshold 0.000381 in range [0.000254, 0.000508]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.0197112176600551, x5 : 2.299026196661865, x6 : 2.0, x7 : 3.0, x8 : 2.0, x9 : -0.5747298298347541, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 1.0197112176600551, x5 : 2.296816086235916, x6 : 2, x7 : 3, x8 : 2, x9 : -0.6233525574207306, x10 : -0.3614685982465744, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000318


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161565 in range [0.000000, 0.323130]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075242 in range [0.000000, 0.150485]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037622 in range [0.000000, 0.075243]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018770 in range [0.000000, 0.037540]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008237 in range [0.000000, 0.016473]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004119 in range [0.000000, 0.008238]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002060 in range [0.000000, 0.004120]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001030 in range [0.000000, 0.002061]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000516 in range [0.000000, 0.001031]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000258 in range [0.000000, 0.000517]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000130 in range [0.000000, 0.000259]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.2756361817508535, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2829935114004743, x10 : -0.10956036520361004, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.2772028823273566, x5 : -0.3240499390489737, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2845602119769774, x10 : -0.09694503998879687, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174817 in range [0.000000, 0.349633]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085485 in range [0.000000, 0.170970]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042743 in range [0.000000, 0.085486]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021184 in range [0.000000, 0.042368]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009671 in range [0.000000, 0.019341]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004389 in range [0.000000, 0.008778]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002167 in range [0.000000, 0.004335]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001084 in range [0.000000, 0.002168]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000543 in range [0.000000, 0.001085]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000213 in range [0.000000, 0.000427]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000107 in range [0.000000, 0.000214]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4089195154522975, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.34487697288653363, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4097071484009648, x5 : -0.3669131604296735, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3451827092034956, x10 : -0.3743090732134882, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141922 in range [0.000000, 0.283845]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069315 in range [0.000000, 0.138629]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034005 in range [0.000000, 0.068010]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016302 in range [0.000000, 0.032605]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007748 in range [0.000000, 0.015496]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003327 in range [0.000000, 0.006653]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000315 in range [0.000000, 0.000630]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000158 in range [0.000000, 0.000316]...	no solution exists.
	Iteration #010: testing norm threshold 0.000237 in range [0.000158, 0.000316]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.22834142380773165, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.3667828342031488, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.2529275708407261, x5 : -0.2866947054862976, x6 : 0, x7 : 0, x8 : 3, x9 : 0.3651047629814298, x10 : -0.17753018036168175, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000315


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113083 in range [0.000000, 0.226165]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054437 in range [0.000000, 0.108875]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026941 in range [0.000000, 0.053881]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013471 in range [0.000000, 0.026942]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006736 in range [0.000000, 0.013472]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001851 in range [0.000000, 0.003702]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000371 in range [0.000000, 0.000742]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000186 in range [0.000000, 0.000372]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000094 in range [0.000000, 0.000187]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.19722340198141025, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6672003097440133, x5 : -0.21064409613609314, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6609264350296883, x10 : -0.253148141683066, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000186


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100305 in range [0.000000, 0.200609]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050058 in range [0.000000, 0.100115]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025029 in range [0.000000, 0.050059]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012476 in range [0.000000, 0.024953]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006239 in range [0.000000, 0.012477]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002983 in range [0.000000, 0.005967]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001126 in range [0.000000, 0.002251]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000494 in range [0.000000, 0.000988]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000248 in range [0.000000, 0.000495]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000249]...	no solution exists.
	Iteration #012: testing norm threshold 0.000186 in range [0.000124, 0.000249]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3964242029177871, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.296254253147487, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3936229225025547, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.29697297826990177, x10 : -0.2524737518058193, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000186


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100075 in range [0.000000, 0.200150]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046368 in range [0.000000, 0.092736]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020993 in range [0.000000, 0.041986]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007207 in range [0.000000, 0.014415]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003604 in range [0.000000, 0.007208]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001672 in range [0.000000, 0.003344]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000788 in range [0.000000, 0.001575]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000352 in range [0.000000, 0.000703]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000165 in range [0.000000, 0.000331]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000083 in range [0.000000, 0.000166]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.03258152743373577, x5 : -0.30458897611660485, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : 0.1590312134999496, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.03062480557022633, x5 : -0.30906254053115845, x6 : 2, x7 : 5, x8 : 0, x9 : 0.18308917628860596, x10 : -0.26114877623401617, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000165


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.049076 in range [0.000000, 0.098152]...	solution exists & found.
	Iteration #003: testing norm threshold 0.024385 in range [0.000000, 0.048770]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012174 in range [0.000000, 0.024348]...	solution exists & found.
	Iteration #005: testing norm threshold 0.005718 in range [0.000000, 0.011436]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002721 in range [0.000000, 0.005442]...	no solution exists.
	Iteration #007: testing norm threshold 0.004081 in range [0.002721, 0.005442]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003402 in range [0.002721, 0.004082]...	no solution exists.
	Iteration #009: testing norm threshold 0.003742 in range [0.003402, 0.004082]...	no solution exists.
	Iteration #010: testing norm threshold 0.003912 in range [0.003742, 0.004082]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003828 in range [0.003742, 0.003913]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.6531820499810844, x5 : 1.9500880807224827, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : 0.8176480536015812, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.513651043176651, x5 : 1.2298439741134644, x6 : 1, x7 : 5, x8 : 0, x9 : 1.046949778179729, x10 : -0.18137641829540518, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003912


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154582 in range [0.000000, 0.309164]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077291 in range [0.000000, 0.154583]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038622 in range [0.000000, 0.077244]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019311 in range [0.000000, 0.038623]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009656 in range [0.000000, 0.019312]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004829 in range [0.000000, 0.009657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002415 in range [0.000000, 0.004830]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001208 in range [0.000000, 0.002416]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000604 in range [0.000000, 0.001209]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000290 in range [0.000000, 0.000579]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000145 in range [0.000000, 0.000291]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.007590902364715015, x5 : 0.9390622576160664, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.13250973000592414, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.006579943213078268, x5 : 0.9365034972442545, x6 : 0, x7 : 0, x8 : 6, x9 : 0.12916048231998797, x10 : -0.36266774952088676, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130587 in range [0.000000, 0.261173]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060662 in range [0.000000, 0.121325]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028623 in range [0.000000, 0.057247]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013766 in range [0.000000, 0.027532]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006884 in range [0.000000, 0.013767]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003442 in range [0.000000, 0.006885]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001523 in range [0.000000, 0.003045]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000711 in range [0.000000, 0.001422]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000712]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000179 in range [0.000000, 0.000357]...	no solution exists.
	Iteration #012: testing norm threshold 0.000268 in range [0.000179, 0.000357]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6156961123775533, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.7513443448665176, x10 : -0.021171373288473145, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6376573224953104, x5 : -0.1137894610473227, x6 : 0, x7 : 0, x8 : 6, x9 : 0.7402937114238739, x10 : -0.028554698000122614, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000356


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125603 in range [0.000000, 0.251205]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059933 in range [0.000000, 0.119867]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029078 in range [0.000000, 0.058155]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014528 in range [0.000000, 0.029055]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007264 in range [0.000000, 0.014529]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002528 in range [0.000000, 0.005056]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001265 in range [0.000000, 0.002529]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000633 in range [0.000000, 0.001266]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000309 in range [0.000000, 0.000618]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000078 in range [0.000000, 0.000156]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.18400388983111074, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.1371253521833344, x10 : -0.13165761318239427, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.18642309794950715, x5 : -0.339140805470027, x6 : 0, x7 : 0, x8 : 6, x9 : -0.13954456030173082, x10 : -0.12923840346030652, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196894 in range [0.000000, 0.393788]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098104 in range [0.000000, 0.196208]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047706 in range [0.000000, 0.095412]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022753 in range [0.000000, 0.045506]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008248 in range [0.000000, 0.016496]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002579 in range [0.000000, 0.005158]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000190 in range [0.000000, 0.000381]...	no solution exists.
	Iteration #010: testing norm threshold 0.000285 in range [0.000190, 0.000381]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6463304536079947, x5 : -0.4030074190738666, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6059292279114528, x5 : -0.3977011166443629, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5703095825857498, x10 : -0.2965542398323817, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000285


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104713 in range [0.000000, 0.209427]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050934 in range [0.000000, 0.101867]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022018 in range [0.000000, 0.044036]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009351 in range [0.000000, 0.018701]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002180 in range [0.000000, 0.004360]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000063 in range [0.000000, 0.000127]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.3582717631842022, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7129721308784769, x5 : -0.40748098492622375, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6321930475450626, x10 : -0.22004660857078465, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000126


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124278 in range [0.000000, 0.248555]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061431 in range [0.000000, 0.122863]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030716 in range [0.000000, 0.061432]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015359 in range [0.000000, 0.030717]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006607 in range [0.000000, 0.013215]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003304 in range [0.000000, 0.006608]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001596 in range [0.000000, 0.003192]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000760 in range [0.000000, 0.001521]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000381 in range [0.000000, 0.000761]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000191 in range [0.000000, 0.000382]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000087 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.9364091340966528, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.0740223940438272, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.9364091157913208, x5 : -0.2718882610297008, x6 : 0, x7 : 0, x8 : 0, x9 : 1.0820384870076374, x10 : -0.044654364696937676, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165404 in range [0.000000, 0.330807]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082702 in range [0.000000, 0.165405]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041352 in range [0.000000, 0.082703]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020638 in range [0.000000, 0.041276]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010319 in range [0.000000, 0.020639]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005160 in range [0.000000, 0.010320]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002581 in range [0.000000, 0.005161]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001223 in range [0.000000, 0.002445]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000612 in range [0.000000, 0.001224]...	no solution exists.
	Iteration #011: testing norm threshold 0.000918 in range [0.000612, 0.001224]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000765 in range [0.000612, 0.000919]...	no solution exists.
	Iteration #013: testing norm threshold 0.000842 in range [0.000765, 0.000919]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 1.0, x4 : 0.4699174661415989, x5 : 2.701647099668845, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : 0.4596080264322378, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 1, x4 : 0.4636698067188263, x5 : 2.7015565885821777, x6 : 2, x7 : 3, x8 : 0, x9 : 0.5923059597046028, x10 : -0.33044232284716274, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000918


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102275 in range [0.000000, 0.204549]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049863 in range [0.000000, 0.099725]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024758 in range [0.000000, 0.049516]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012294 in range [0.000000, 0.024588]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004265 in range [0.000000, 0.008530]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002112 in range [0.000000, 0.004223]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001056 in range [0.000000, 0.002113]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000284 in range [0.000000, 0.000569]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000143 in range [0.000000, 0.000285]...	no solution exists.
	Iteration #011: testing norm threshold 0.000214 in range [0.000143, 0.000285]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.35893826531425604, x5 : 0.4827585675414892, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3623317622250648, x5 : 0.47936507063068046, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.36028521176171474, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000284


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.059728 in range [0.000000, 0.119456]...	solution exists & found.
	Iteration #003: testing norm threshold 0.019222 in range [0.000000, 0.038445]...	solution exists & found.
	Iteration #004: testing norm threshold 0.009612 in range [0.000000, 0.019223]...	solution exists & found.
	Iteration #005: testing norm threshold 0.000930 in range [0.000000, 0.001860]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000313 in range [0.000000, 0.000625]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000156 in range [0.000000, 0.000313]...	no solution exists.
	Iteration #008: testing norm threshold 0.000234 in range [0.000156, 0.000313]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6713210786770154, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.6233525495738007, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6743887161655672, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 1, x9 : -0.6233525574207306, x10 : -0.308435604859598, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000234


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148351 in range [0.000000, 0.296702]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042039 in range [0.000000, 0.084078]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019216 in range [0.000000, 0.038432]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008636 in range [0.000000, 0.017271]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001418 in range [0.000000, 0.002835]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000591 in range [0.000000, 0.001181]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000296 in range [0.000000, 0.000592]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000148 in range [0.000000, 0.000297]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.004904410169795361, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.10598824651189874, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.004904410275821437, x5 : -0.30011540640718803, x6 : 0, x7 : 0, x8 : 3, x9 : 0.10598824640587266, x10 : -0.19794935722477303, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098167 in range [0.000000, 0.196334]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049072 in range [0.000000, 0.098144]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024536 in range [0.000000, 0.049073]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012174 in range [0.000000, 0.024348]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006087 in range [0.000000, 0.012175]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000855 in range [0.000000, 0.001711]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000401 in range [0.000000, 0.000802]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000201 in range [0.000000, 0.000402]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000101 in range [0.000000, 0.000202]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.12985753551489912, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.013358429211215713, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.12553820639832983, x5 : -0.36945567160829074, x6 : 0, x7 : 0, x8 : 3, x9 : -0.008911528363666626, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101557 in range [0.000000, 0.203114]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050779 in range [0.000000, 0.101558]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025390 in range [0.000000, 0.050780]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012642 in range [0.000000, 0.025283]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006321 in range [0.000000, 0.012643]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001086 in range [0.000000, 0.002173]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000544 in range [0.000000, 0.001087]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000272 in range [0.000000, 0.000545]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000137 in range [0.000000, 0.000273]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.4030074190738666, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.34158146381378174, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000050


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125127 in range [0.000000, 0.250254]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062432 in range [0.000000, 0.124865]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031217 in range [0.000000, 0.062433]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015609 in range [0.000000, 0.031218]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007805 in range [0.000000, 0.015610]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003666 in range [0.000000, 0.007332]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001693 in range [0.000000, 0.003386]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000847 in range [0.000000, 0.001694]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000424 in range [0.000000, 0.000848]...	no solution exists.
	Iteration #011: testing norm threshold 0.000636 in range [0.000424, 0.000848]...	no solution exists.
	Iteration #012: testing norm threshold 0.000742 in range [0.000636, 0.000848]...	no solution exists.
	Iteration #013: testing norm threshold 0.000795 in range [0.000742, 0.000848]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.7156586126536363, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.7425038503685091, x10 : 0.4428708342659957, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.7201321796626085, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6892774855971351, x10 : 0.4473444012749679, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000847


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147778 in range [0.000000, 0.295557]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072574 in range [0.000000, 0.145148]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032173 in range [0.000000, 0.064346]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015805 in range [0.000000, 0.031611]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007903 in range [0.000000, 0.015806]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003901 in range [0.000000, 0.007802]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001700 in range [0.000000, 0.003400]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000851 in range [0.000000, 0.001701]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000294 in range [0.000000, 0.000587]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000147 in range [0.000000, 0.000295]...	no solution exists.
	Iteration #012: testing norm threshold 0.000221 in range [0.000147, 0.000295]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.14651795222757966, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.03987991270524115, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.14666159379234156, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 2, x9 : -0.040302750105993816, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000221


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116612 in range [0.000000, 0.233225]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058147 in range [0.000000, 0.116293]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029074 in range [0.000000, 0.058148]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014045 in range [0.000000, 0.028091]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006649 in range [0.000000, 0.013298]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003217 in range [0.000000, 0.006435]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000918 in range [0.000000, 0.001836]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000460 in range [0.000000, 0.000919]...	no solution exists.
	Iteration #010: testing norm threshold 0.000689 in range [0.000460, 0.000919]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 1.16965496807418, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.3480777234820898, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : 1.140499234199524, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.3418300838260229, x10 : 0.016775483013028416, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000554


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157776 in range [0.000000, 0.315553]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076085 in range [0.000000, 0.152170]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038043 in range [0.000000, 0.076086]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017372 in range [0.000000, 0.034745]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008687 in range [0.000000, 0.017373]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004344 in range [0.000000, 0.008688]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001491 in range [0.000000, 0.002981]...	no solution exists.
	Iteration #009: testing norm threshold 0.002236 in range [0.001491, 0.002981]...	no solution exists.
	Iteration #010: testing norm threshold 0.002609 in range [0.002236, 0.002981]...	no solution exists.
	Iteration #011: testing norm threshold 0.002795 in range [0.002609, 0.002981]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002702 in range [0.002609, 0.002796]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.06321586866417711, x5 : 1.0285335693953952, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : 0.057365526772852116, x10 : 3.2271240795928087, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.06321586866417711, x5 : 0.004087049295776524, x6 : 2, x7 : 6, x8 : 0, x9 : 0.04756309184895284, x10 : 3.2173216446689095, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002702


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103403 in range [0.000000, 0.206806]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051702 in range [0.000000, 0.103404]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023490 in range [0.000000, 0.046980]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011746 in range [0.000000, 0.023491]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005841 in range [0.000000, 0.011683]...	no solution exists.
	Iteration #007: testing norm threshold 0.008762 in range [0.005841, 0.011683]...	solution exists & found.
	Iteration #008: testing norm threshold 0.007238 in range [0.005841, 0.008634]...	solution exists & found.
	Iteration #009: testing norm threshold 0.006533 in range [0.005841, 0.007224]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2533320488767524, x5 : 2.8358540673378387, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.3802389508785675, x10 : 3.7574580310836296, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.47972629964351654, x5 : 2.8336439569118896, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6830258965492249, x10 : 3.7552479206576805, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005860


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124609 in range [0.000000, 0.249218]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059514 in range [0.000000, 0.119028]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028447 in range [0.000000, 0.056894]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012438 in range [0.000000, 0.024875]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006219 in range [0.000000, 0.012439]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002720 in range [0.000000, 0.005439]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001243 in range [0.000000, 0.002486]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000622 in range [0.000000, 0.001244]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000311 in range [0.000000, 0.000623]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000156 in range [0.000000, 0.000312]...	no solution exists.
	Iteration #012: testing norm threshold 0.000234 in range [0.000156, 0.000312]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6838163912115257, x5 : -0.02722790960068537, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7317151129245758, x5 : -0.02756685759546361, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6012513133287795, x10 : -0.36333976067774526, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000311


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142156 in range [0.000000, 0.284311]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071078 in range [0.000000, 0.142157]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035216 in range [0.000000, 0.070432]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017609 in range [0.000000, 0.035217]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008459 in range [0.000000, 0.016917]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002511 in range [0.000000, 0.005021]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000559 in range [0.000000, 0.001118]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7680269294643309, x5 : -0.4164281189441681, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6909579133659409, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157757 in range [0.000000, 0.315515]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078398 in range [0.000000, 0.156796]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039065 in range [0.000000, 0.078130]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019533 in range [0.000000, 0.039066]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009767 in range [0.000000, 0.019534]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003709 in range [0.000000, 0.007418]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001826 in range [0.000000, 0.003652]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000914 in range [0.000000, 0.001827]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000297 in range [0.000000, 0.000593]...	no solution exists.
	Iteration #011: testing norm threshold 0.000445 in range [0.000297, 0.000593]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000371 in range [0.000297, 0.000446]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : -0.458900765590339, x5 : -0.3224832384724706, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.3625579618825506, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 2, x4 : -0.4647555246183198, x5 : -0.18227921053962842, x6 : 0, x7 : 4, x8 : 0, x9 : -0.3640814603263435, x10 : -0.27333175771383933, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000445


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118342 in range [0.000000, 0.236684]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053882 in range [0.000000, 0.107763]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021355 in range [0.000000, 0.042710]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010078 in range [0.000000, 0.020155]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001998 in range [0.000000, 0.003996]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000410 in range [0.000000, 0.000819]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000205 in range [0.000000, 0.000411]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000103 in range [0.000000, 0.000206]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7669174228015869, x5 : -0.4164281189441681, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3633481333626843, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161098 in range [0.000000, 0.322197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076811 in range [0.000000, 0.153622]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038406 in range [0.000000, 0.076812]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019204 in range [0.000000, 0.038407]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009602 in range [0.000000, 0.019205]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004512 in range [0.000000, 0.009025]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002257 in range [0.000000, 0.004513]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001129 in range [0.000000, 0.002258]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000565 in range [0.000000, 0.001130]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000283 in range [0.000000, 0.000566]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000142 in range [0.000000, 0.000284]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000071 in range [0.000000, 0.000143]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.773061814156862, x5 : -0.4071766756452043, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161109 in range [0.000000, 0.322219]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080393 in range [0.000000, 0.160786]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039413 in range [0.000000, 0.078827]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018310 in range [0.000000, 0.036619]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009150 in range [0.000000, 0.018299]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002651 in range [0.000000, 0.005301]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001326 in range [0.000000, 0.002652]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000504 in range [0.000000, 0.001008]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000068 in range [0.000000, 0.000137]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.28396639010719377, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.2653125224044573, x10 : -0.13165761318239427, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.28586099201017373, x5 : -0.36721889674663544, x6 : 0, x7 : 0, x8 : 5, x9 : -0.2668744365866337, x10 : -0.1388186380195301, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000136


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154965 in range [0.000000, 0.309930]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077483 in range [0.000000, 0.154966]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038742 in range [0.000000, 0.077484]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019293 in range [0.000000, 0.038586]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009647 in range [0.000000, 0.019294]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004136 in range [0.000000, 0.008272]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002069 in range [0.000000, 0.004137]...	no solution exists.
	Iteration #009: testing norm threshold 0.003103 in range [0.002069, 0.004137]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002259 in range [0.002069, 0.002450]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002164 in range [0.002069, 0.002260]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.11588361099713827, x5 : 0.7780138964132745, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.2474361584800344, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.07006746716797352, x5 : 1.476458623215067, x6 : 0, x7 : 0, x8 : 2, x9 : 0.246867694871901, x10 : -0.009554285240383107, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002164


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133658 in range [0.000000, 0.267317]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066830 in range [0.000000, 0.133659]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033104 in range [0.000000, 0.066209]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015968 in range [0.000000, 0.031936]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006400 in range [0.000000, 0.012799]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003200 in range [0.000000, 0.006401]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001601 in range [0.000000, 0.003201]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000682 in range [0.000000, 0.001363]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000289 in range [0.000000, 0.000577]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000145 in range [0.000000, 0.000290]...	no solution exists.
	Iteration #012: testing norm threshold 0.000217 in range [0.000145, 0.000290]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6921465995678661, x5 : 0.16960897631383814, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7317151129245758, x5 : 0.16854720680774918, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6928909455189457, x10 : -0.3625306933380783, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000289


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141837 in range [0.000000, 0.283674]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070541 in range [0.000000, 0.141082]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035271 in range [0.000000, 0.070542]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017341 in range [0.000000, 0.034682]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008671 in range [0.000000, 0.017342]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004257 in range [0.000000, 0.008513]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001615 in range [0.000000, 0.003231]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000452 in range [0.000000, 0.000903]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000226 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	no solution exists.
	Iteration #012: testing norm threshold 0.000170 in range [0.000114, 0.000227]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.19722340198141025, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7161628066211407, x5 : -0.2598533183336258, x6 : 3, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : -0.3183791640818003, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000226


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165033 in range [0.000000, 0.330066]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082517 in range [0.000000, 0.165034]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040668 in range [0.000000, 0.081336]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019664 in range [0.000000, 0.039328]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009538 in range [0.000000, 0.019075]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004054 in range [0.000000, 0.008107]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001923 in range [0.000000, 0.003847]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000916 in range [0.000000, 0.001831]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000401 in range [0.000000, 0.000803]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000201 in range [0.000000, 0.000402]...	no solution exists.
	Iteration #012: testing norm threshold 0.000302 in range [0.000201, 0.000402]...	no solution exists.
	Iteration #013: testing norm threshold 0.000352 in range [0.000302, 0.000402]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5796887867572726, x5 : -0.3851131567180008, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5796887867572726, x5 : -0.36546684746522257, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5570488408387371, x10 : -0.18514867816943475, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000401


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116864 in range [0.000000, 0.233728]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058433 in range [0.000000, 0.116865]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029217 in range [0.000000, 0.058434]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014609 in range [0.000000, 0.029218]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007305 in range [0.000000, 0.014610]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002712 in range [0.000000, 0.005424]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000784 in range [0.000000, 0.001567]...	no solution exists.
	Iteration #009: testing norm threshold 0.001176 in range [0.000784, 0.001567]...	no solution exists.
	Iteration #010: testing norm threshold 0.001371 in range [0.001176, 0.001567]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001274 in range [0.001176, 0.001372]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 5.043201853772397, x5 : 0.14276758278003948, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 5.083186648890671, x10 : 0.7522323059689747, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 5.131777767430975, x5 : -0.14801418036222458, x6 : 0, x7 : 0, x8 : 4, x9 : 5.082077998433573, x10 : 0.7464400640333634, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001274


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125048 in range [0.000000, 0.250096]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062524 in range [0.000000, 0.125049]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031263 in range [0.000000, 0.062525]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014832 in range [0.000000, 0.029664]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005419 in range [0.000000, 0.010837]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002623 in range [0.000000, 0.005246]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001264 in range [0.000000, 0.002528]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000633 in range [0.000000, 0.001265]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000316 in range [0.000000, 0.000632]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000159 in range [0.000000, 0.000317]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5463679533319117, x5 : -0.3851131567180008, x6 : 1.0, x7 : 1.0, x8 : 5.0, x9 : -0.4598034013606439, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5463679538635191, x5 : -0.37169244832283904, x6 : 1, x7 : 1, x8 : 5, x9 : -0.4598034018922513, x10 : -0.36367870814091613, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157135 in range [0.000000, 0.314270]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073416 in range [0.000000, 0.146833]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036429 in range [0.000000, 0.072859]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017008 in range [0.000000, 0.034016]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008504 in range [0.000000, 0.017009]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002825 in range [0.000000, 0.005651]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001136 in range [0.000000, 0.002273]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000569 in range [0.000000, 0.001137]...	no solution exists.
	Iteration #010: testing norm threshold 0.000853 in range [0.000569, 0.001137]...	no solution exists.
	Iteration #011: testing norm threshold 0.000995 in range [0.000853, 0.001137]...	no solution exists.
	Iteration #012: testing norm threshold 0.001066 in range [0.000995, 0.001137]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2381502441473224, x5 : 0.17855610749177106, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : -0.1282848576853259, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3110395669937134, x5 : 0.16053202475042985, x6 : 1, x7 : 0, x8 : 0, x9 : -0.20342905819416046, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119525 in range [0.000000, 0.239050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050319 in range [0.000000, 0.100638]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025160 in range [0.000000, 0.050320]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012081 in range [0.000000, 0.024162]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005988 in range [0.000000, 0.011976]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001802 in range [0.000000, 0.003604]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000854 in range [0.000000, 0.001708]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000427 in range [0.000000, 0.000855]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000214 in range [0.000000, 0.000428]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000215]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.458900765590339, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.4421224123646269, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.46050807103467345, x5 : -0.32534950312271266, x6 : 0, x7 : 0, x8 : 2, x9 : -0.44372971780896137, x10 : -0.2437511585206499, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144005 in range [0.000000, 0.288009]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072003 in range [0.000000, 0.144006]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036002 in range [0.000000, 0.072004]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014573 in range [0.000000, 0.029146]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007158 in range [0.000000, 0.014316]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003545 in range [0.000000, 0.007090]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001673 in range [0.000000, 0.003347]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000837 in range [0.000000, 0.001674]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000419 in range [0.000000, 0.000838]...	no solution exists.
	Iteration #011: testing norm threshold 0.000629 in range [0.000419, 0.000838]...	no solution exists.
	Iteration #012: testing norm threshold 0.000733 in range [0.000629, 0.000838]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000682 in range [0.000629, 0.000734]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.658825766142505, x5 : -0.24195905787107466, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5747298298347541, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6754861772060394, x5 : -0.2732740044593811, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5747298298347541, x10 : -0.05655563079099872, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000682


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095847 in range [0.000000, 0.191695]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047856 in range [0.000000, 0.095712]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023928 in range [0.000000, 0.047857]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011965 in range [0.000000, 0.023929]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005769 in range [0.000000, 0.011538]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002746 in range [0.000000, 0.005492]...	no solution exists.
	Iteration #008: testing norm threshold 0.004119 in range [0.002746, 0.005492]...	no solution exists.
	Iteration #009: testing norm threshold 0.004806 in range [0.004119, 0.005492]...	no solution exists.
	Iteration #010: testing norm threshold 0.005149 in range [0.004806, 0.005492]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004978 in range [0.004806, 0.005150]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004884 in range [0.004806, 0.004963]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.5740450705958521, x5 : 1.6727270142065631, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : 2.674692880123203, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.5198987126350403, x5 : -0.07643713057041168, x6 : 3, x7 : 5, x8 : 0, x9 : -0.64205446414221, x10 : 2.6690834231476304, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004884


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129173 in range [0.000000, 0.258345]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064587 in range [0.000000, 0.129174]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032294 in range [0.000000, 0.064588]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014919 in range [0.000000, 0.029839]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007015 in range [0.000000, 0.014031]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003160 in range [0.000000, 0.006320]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001513 in range [0.000000, 0.003026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000636 in range [0.000000, 0.001272]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.40475441127412737, x5 : 0.3932872557621603, x6 : 5.0, x7 : 4.0, x8 : 0.0, x9 : -0.68523601105986, x10 : 1.6361222251203438, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.40083220817715925, x5 : 0.3942070810077443, x6 : 5, x7 : 4, x8 : 0, x9 : -0.6833963564840059, x10 : 1.6363046132168866, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000035


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137236 in range [0.000000, 0.274471]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051995 in range [0.000000, 0.103991]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025906 in range [0.000000, 0.051811]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012946 in range [0.000000, 0.025891]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006473 in range [0.000000, 0.012947]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003188 in range [0.000000, 0.006375]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000758 in range [0.000000, 0.001516]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000183 in range [0.000000, 0.000366]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000068 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7681597426202751, x5 : -0.4253752529621124, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6951177734032153, x10 : -0.33696711859520195, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176605 in range [0.000000, 0.353211]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087791 in range [0.000000, 0.175582]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041265 in range [0.000000, 0.082530]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020440 in range [0.000000, 0.040879]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008985 in range [0.000000, 0.017971]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004281 in range [0.000000, 0.008562]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002107 in range [0.000000, 0.004213]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001054 in range [0.000000, 0.002108]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000452 in range [0.000000, 0.000903]...	no solution exists.
	Iteration #011: testing norm threshold 0.000677 in range [0.000452, 0.000903]...	no solution exists.
	Iteration #012: testing norm threshold 0.000790 in range [0.000677, 0.000903]...	no solution exists.
	Iteration #013: testing norm threshold 0.000847 in range [0.000790, 0.000903]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.2491669446985823, x5 : -0.3493246320062693, x6 : 0.0, x7 : 3.0, x8 : 1.0, x9 : 0.38888407044817, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.24663457453721943, x5 : -0.17232320480411412, x6 : 0, x7 : 3, x8 : 1, x9 : 0.38635170028680715, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000902


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173011 in range [0.000000, 0.346021]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086506 in range [0.000000, 0.173012]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039570 in range [0.000000, 0.079139]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019785 in range [0.000000, 0.039571]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009258 in range [0.000000, 0.018515]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003239 in range [0.000000, 0.006478]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001620 in range [0.000000, 0.003240]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000810 in range [0.000000, 0.001621]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000406 in range [0.000000, 0.000811]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000203 in range [0.000000, 0.000407]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000101 in range [0.000000, 0.000201]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.37976378620510665, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3050947476454955, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.3825559982493557, x5 : -0.34403945285307197, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3059063713953593, x10 : -0.2523808531783703, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145894 in range [0.000000, 0.291788]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072770 in range [0.000000, 0.145541]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035864 in range [0.000000, 0.071728]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017926 in range [0.000000, 0.035853]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008472 in range [0.000000, 0.016944]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004236 in range [0.000000, 0.008473]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002119 in range [0.000000, 0.004237]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000976 in range [0.000000, 0.001951]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000488 in range [0.000000, 0.000977]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000245 in range [0.000000, 0.000489]...	no solution exists.
	Iteration #012: testing norm threshold 0.000367 in range [0.000245, 0.000489]...	no solution exists.
	Iteration #013: testing norm threshold 0.000428 in range [0.000367, 0.000489]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.11171850681896814, x5 : 1.4937843906479054, x6 : 5.0, x7 : 5.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.11220139986640439, x5 : 1.492818604553033, x6 : 5, x7 : 5, x8 : 0, x9 : -0.6290171324060277, x10 : -0.362712922577651, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000428


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174335 in range [0.000000, 0.348670]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086158 in range [0.000000, 0.172316]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042613 in range [0.000000, 0.085226]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020349 in range [0.000000, 0.040697]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008355 in range [0.000000, 0.016710]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002650 in range [0.000000, 0.005299]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000564 in range [0.000000, 0.001128]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000272 in range [0.000000, 0.000543]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000136 in range [0.000000, 0.000273]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5921840992917831, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5918533230633882, x5 : -0.34418952414614623, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5813601911067963, x10 : -0.23043367961270278, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000136


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155801 in range [0.000000, 0.311602]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072006 in range [0.000000, 0.144012]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034829 in range [0.000000, 0.069659]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013590 in range [0.000000, 0.027179]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006795 in range [0.000000, 0.013591]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000737 in range [0.000000, 0.001474]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000369 in range [0.000000, 0.000738]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	no solution exists.
	Iteration #010: testing norm threshold 0.000278 in range [0.000185, 0.000370]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.7254674329932271, x5 : -0.24195905787107466, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.679264599707967, x5 : -0.23709880771959427, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6498740330678261, x10 : -0.10994705567394192, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000278


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130461 in range [0.000000, 0.260921]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063153 in range [0.000000, 0.126307]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031358 in range [0.000000, 0.062716]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014919 in range [0.000000, 0.029837]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006639 in range [0.000000, 0.013278]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002672 in range [0.000000, 0.005344]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001286 in range [0.000000, 0.002572]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000635 in range [0.000000, 0.001269]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000318 in range [0.000000, 0.000636]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000159 in range [0.000000, 0.000319]...	no solution exists.
	Iteration #012: testing norm threshold 0.000239 in range [0.000159, 0.000319]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.3314303696504035, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7288303699592847, x5 : -0.21798689572981284, x6 : 2, x7 : 6, x8 : 0, x9 : -0.646059586693558, x10 : -0.1529526939490662, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000318


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130948 in range [0.000000, 0.261896]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062007 in range [0.000000, 0.124015]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031004 in range [0.000000, 0.062008]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015503 in range [0.000000, 0.031005]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007752 in range [0.000000, 0.015504]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003446 in range [0.000000, 0.006892]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001724 in range [0.000000, 0.003447]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000862 in range [0.000000, 0.001725]...	no solution exists.
	Iteration #010: testing norm threshold 0.001293 in range [0.000862, 0.001725]...	no solution exists.
	Iteration #011: testing norm threshold 0.001509 in range [0.001293, 0.001725]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001402 in range [0.001293, 0.001510]...	no solution exists.
	Iteration #013: testing norm threshold 0.001456 in range [0.001402, 0.001510]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5463679533319117, x5 : -0.13459348373588, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.4553831541116396, x10 : 0.28819009841450605, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5472991799238106, x5 : -0.09340016456382083, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.26609285175800323, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001509


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125212 in range [0.000000, 0.250423]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059792 in range [0.000000, 0.119584]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029896 in range [0.000000, 0.059793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014170 in range [0.000000, 0.028340]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007086 in range [0.000000, 0.014171]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003140 in range [0.000000, 0.006280]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001567 in range [0.000000, 0.003133]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000188 in range [0.000000, 0.000376]...	no solution exists.
	Iteration #010: testing norm threshold 0.000282 in range [0.000188, 0.000376]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7088070162805465, x5 : -0.2777475825828062, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7317151129245758, x5 : -0.27910081460932284, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000282


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140129 in range [0.000000, 0.280258]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069861 in range [0.000000, 0.139721]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029129 in range [0.000000, 0.058259]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013814 in range [0.000000, 0.027628]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006907 in range [0.000000, 0.013815]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001959 in range [0.000000, 0.003918]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000332 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000166 in range [0.000000, 0.000333]...	no solution exists.
	Iteration #010: testing norm threshold 0.000249 in range [0.000166, 0.000333]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7088070162805465, x5 : -0.4209016814297324, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6881235252569644, x5 : -0.39659333335861846, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6321930587291718, x10 : -0.36173819112286254, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.195884 in range [0.000000, 0.391767]...	solution exists & found.
	Iteration #003: testing norm threshold 0.097942 in range [0.000000, 0.195885]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048972 in range [0.000000, 0.097943]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023830 in range [0.000000, 0.047659]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011081 in range [0.000000, 0.022162]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005092 in range [0.000000, 0.010185]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002439 in range [0.000000, 0.004878]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001220 in range [0.000000, 0.002440]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000585 in range [0.000000, 0.001171]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104879 in range [0.000000, 0.209757]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052440 in range [0.000000, 0.104880]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026220 in range [0.000000, 0.052441]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013111 in range [0.000000, 0.026221]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006556 in range [0.000000, 0.013112]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003278 in range [0.000000, 0.006557]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001640 in range [0.000000, 0.003279]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000753 in range [0.000000, 0.001507]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000231 in range [0.000000, 0.000463]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000224]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.32145232771072485, x5 : -0.3314303696504035, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.2432112861594361, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3233401949305867, x5 : -0.3448510766029358, x6 : 0, x7 : 6, x8 : 0, x9 : -0.25426191091537476, x10 : -0.17773997635982458, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000112


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079496 in range [0.000000, 0.158993]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038057 in range [0.000000, 0.076114]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018880 in range [0.000000, 0.037760]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007555 in range [0.000000, 0.015110]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002535 in range [0.000000, 0.005071]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001157 in range [0.000000, 0.002314]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000199 in range [0.000000, 0.000397]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000093 in range [0.000000, 0.000185]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7525406181812286, x5 : -0.368323950937983, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.31948421895504, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133911 in range [0.000000, 0.267823]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066956 in range [0.000000, 0.133912]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033276 in range [0.000000, 0.066552]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016286 in range [0.000000, 0.032572]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006033 in range [0.000000, 0.012065]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002996 in range [0.000000, 0.005991]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001498 in range [0.000000, 0.002997]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000750 in range [0.000000, 0.001499]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000307 in range [0.000000, 0.000614]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000154 in range [0.000000, 0.000308]...	no solution exists.
	Iteration #012: testing norm threshold 0.000231 in range [0.000154, 0.000308]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.08672788174994739, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.18997294424297928, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.08546112761997936, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.18870619011301126, x10 : -0.10956036520361004, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000231


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079325 in range [0.000000, 0.158651]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037206 in range [0.000000, 0.074412]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017024 in range [0.000000, 0.034047]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007350 in range [0.000000, 0.014700]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003676 in range [0.000000, 0.007351]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001838 in range [0.000000, 0.003677]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000920 in range [0.000000, 0.001839]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000237 in range [0.000000, 0.000474]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000119 in range [0.000000, 0.000238]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000060 in range [0.000000, 0.000120]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7691430738770062, x5 : -0.4253173163734967, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962286821209485, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120564 in range [0.000000, 0.241127]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058012 in range [0.000000, 0.116024]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025930 in range [0.000000, 0.051860]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012965 in range [0.000000, 0.025931]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006483 in range [0.000000, 0.012966]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002704 in range [0.000000, 0.005407]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001286 in range [0.000000, 0.002571]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000643 in range [0.000000, 0.001287]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000175 in range [0.000000, 0.000351]...	no solution exists.
	Iteration #011: testing norm threshold 0.000263 in range [0.000175, 0.000351]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4880564948375299, x5 : -0.3224832384724706, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4156009288706015, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.48809386788050363, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.41563830191357526, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000263


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129888 in range [0.000000, 0.259777]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062817 in range [0.000000, 0.125634]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031409 in range [0.000000, 0.062818]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015364 in range [0.000000, 0.030727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007682 in range [0.000000, 0.015365]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003542 in range [0.000000, 0.007085]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001772 in range [0.000000, 0.003543]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000416 in range [0.000000, 0.000833]...	no solution exists.
	Iteration #010: testing norm threshold 0.000625 in range [0.000416, 0.000833]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000521 in range [0.000416, 0.000626]...	no solution exists.
	Iteration #012: testing norm threshold 0.000573 in range [0.000521, 0.000626]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.17983878565294062, x5 : 0.2501331569152341, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.29183400589848274, x10 : -0.24214385307631545, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.19025154411792755, x5 : 0.15618828311562538, x6 : 0, x7 : 0, x8 : 1, x9 : -0.24924642249996784, x10 : -0.2305000017588866, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000573


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.179553 in range [0.000000, 0.359106]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089777 in range [0.000000, 0.179554]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044889 in range [0.000000, 0.089778]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021885 in range [0.000000, 0.043771]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006386 in range [0.000000, 0.012771]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003101 in range [0.000000, 0.006203]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001514 in range [0.000000, 0.003027]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000757 in range [0.000000, 0.001515]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000278 in range [0.000000, 0.000556]...	no solution exists.
	Iteration #011: testing norm threshold 0.000417 in range [0.000278, 0.000556]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000333 in range [0.000278, 0.000388]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6046794118262934, x5 : -0.06301643431241692, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6380002498626709, x5 : -0.07643713057041168, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6034614443778992, x10 : -0.07199424132704735, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000387


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096943 in range [0.000000, 0.193886]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048348 in range [0.000000, 0.096696]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024165 in range [0.000000, 0.048330]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012083 in range [0.000000, 0.024166]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006042 in range [0.000000, 0.012084]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003006 in range [0.000000, 0.006012]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001503 in range [0.000000, 0.003007]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000752 in range [0.000000, 0.001504]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000377 in range [0.000000, 0.000753]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4774843903566608, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.529946024015603, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : -0.47736514665847485, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000189


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124548 in range [0.000000, 0.249096]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057333 in range [0.000000, 0.114666]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027897 in range [0.000000, 0.055793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013949 in range [0.000000, 0.027898]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006975 in range [0.000000, 0.013950]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003488 in range [0.000000, 0.006976]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001712 in range [0.000000, 0.003424]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000783 in range [0.000000, 0.001565]...	no solution exists.
	Iteration #010: testing norm threshold 0.001174 in range [0.000783, 0.001565]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000979 in range [0.000783, 0.001175]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000881 in range [0.000783, 0.000980]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5671934742227622, x5 : -0.17038200844761156, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5687018237102868, x5 : -0.15545295744206378, x6 : 1, x7 : 6, x8 : 0, x9 : -0.594620943069458, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000881


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.220023 in range [0.000000, 0.440046]...	solution exists & found.
	Iteration #003: testing norm threshold 0.110012 in range [0.000000, 0.220024]...	solution exists & found.
	Iteration #004: testing norm threshold 0.053022 in range [0.000000, 0.106044]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026511 in range [0.000000, 0.053023]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012961 in range [0.000000, 0.025921]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000712 in range [0.000000, 0.001425]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000357 in range [0.000000, 0.000713]...	no solution exists.
	Iteration #009: testing norm threshold 0.000535 in range [0.000357, 0.000713]...	no solution exists.
	Iteration #010: testing norm threshold 0.000624 in range [0.000535, 0.000713]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.307103405953794, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.2994550037430432, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.3056424180576434, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.2979940158468926, x10 : 0.07972722855252647, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000712


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158446 in range [0.000000, 0.316891]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079223 in range [0.000000, 0.158447]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039612 in range [0.000000, 0.079224]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019807 in range [0.000000, 0.039613]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009266 in range [0.000000, 0.018532]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004633 in range [0.000000, 0.009267]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002317 in range [0.000000, 0.004634]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001159 in range [0.000000, 0.002318]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000373 in range [0.000000, 0.000746]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000357]...	no solution exists.
	Iteration #012: testing norm threshold 0.000267 in range [0.000178, 0.000357]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.8406117379987399, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.0165591798067721, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.8320721035668573, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 1.0126497033022441, x10 : -0.04326862126725737, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000356


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138770 in range [0.000000, 0.277540]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068357 in range [0.000000, 0.136714]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034179 in range [0.000000, 0.068358]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017090 in range [0.000000, 0.034180]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008430 in range [0.000000, 0.016861]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003207 in range [0.000000, 0.006414]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001569 in range [0.000000, 0.003138]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000735 in range [0.000000, 0.001470]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000368 in range [0.000000, 0.000736]...	no solution exists.
	Iteration #011: testing norm threshold 0.000552 in range [0.000368, 0.000736]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000460 in range [0.000368, 0.000553]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.6115310081993831, x5 : -0.17932913962554445, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.7601848393645261, x10 : 0.0009258746903110836, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.611275970664713, x5 : -0.3582717627286911, x6 : 0, x7 : 0, x8 : 0, x9 : 0.7599298018298559, x10 : 0.0006708371556409102, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000460


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143950 in range [0.000000, 0.287899]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071975 in range [0.000000, 0.143951]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035988 in range [0.000000, 0.071976]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017995 in range [0.000000, 0.035989]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008802 in range [0.000000, 0.017604]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003938 in range [0.000000, 0.007877]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001387 in range [0.000000, 0.002773]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000392 in range [0.000000, 0.000783]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000196 in range [0.000000, 0.000393]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.474082570319769, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.499390251673276, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.4752668058984396, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 0, x9 : 0.49702178051593476, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094985 in range [0.000000, 0.189971]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044546 in range [0.000000, 0.089093]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018871 in range [0.000000, 0.037742]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007190 in range [0.000000, 0.014380]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003595 in range [0.000000, 0.007191]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001798 in range [0.000000, 0.003596]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000900 in range [0.000000, 0.001799]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000450 in range [0.000000, 0.000901]...	no solution exists.
	Iteration #010: testing norm threshold 0.000675 in range [0.000450, 0.000901]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000560 in range [0.000450, 0.000670]...	no solution exists.
	Iteration #012: testing norm threshold 0.000615 in range [0.000560, 0.000670]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5796887867572726, x5 : -0.009333647244819604, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5807300653518648, x5 : -0.07643713057041168, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6002100255550356, x10 : 0.23398825561390213, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000669


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128786 in range [0.000000, 0.257572]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058635 in range [0.000000, 0.117270]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025647 in range [0.000000, 0.051294]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012530 in range [0.000000, 0.025061]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006140 in range [0.000000, 0.012279]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003046 in range [0.000000, 0.006092]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001524 in range [0.000000, 0.003047]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000425 in range [0.000000, 0.000850]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000213 in range [0.000000, 0.000426]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000209]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000105]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.625504932717144, x5 : -0.3135361072945377, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6267636007208827, x5 : -0.3269568085670471, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5406265198464587, x10 : -0.08872178522856447, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142311 in range [0.000000, 0.284623]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068804 in range [0.000000, 0.137607]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034238 in range [0.000000, 0.068476]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017080 in range [0.000000, 0.034160]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006629 in range [0.000000, 0.013259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002439 in range [0.000000, 0.004879]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001147 in range [0.000000, 0.002295]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000479 in range [0.000000, 0.000958]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000377]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.15484816058391987, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.03987991270524115, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.1517972422896837, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 4, x9 : -0.043436900051072834, x10 : -0.24311222011061018, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000189


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152084 in range [0.000000, 0.304168]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073599 in range [0.000000, 0.147197]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036546 in range [0.000000, 0.073092]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018273 in range [0.000000, 0.036547]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009137 in range [0.000000, 0.018274]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004018 in range [0.000000, 0.008036]...	no solution exists.
	Iteration #008: testing norm threshold 0.006027 in range [0.004018, 0.008036]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005023 in range [0.004018, 0.006028]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004521 in range [0.004018, 0.005024]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004270 in range [0.004018, 0.004522]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004145 in range [0.004018, 0.004271]...	solution exists & found.
	Iteration #013: testing norm threshold 0.004082 in range [0.004018, 0.004146]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.8989231964931218, x5 : 3.1579507897434227, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.8989231964931218, x5 : 3.159747709973623, x6 : 2, x7 : 3, x8 : 0, x9 : -0.6976703460182684, x10 : -0.3490362532333333, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.190344 in range [0.000000, 0.380689]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095173 in range [0.000000, 0.190345]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047506 in range [0.000000, 0.095012]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021084 in range [0.000000, 0.042167]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010093 in range [0.000000, 0.020186]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003564 in range [0.000000, 0.007129]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000187 in range [0.000000, 0.000374]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000094 in range [0.000000, 0.000188]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4332819178666184, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5192947685718536, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.43536446235375126, x10 : -0.2442263975634483, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133117 in range [0.000000, 0.266233]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065962 in range [0.000000, 0.131924]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032981 in range [0.000000, 0.065963]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014868 in range [0.000000, 0.029735]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007334 in range [0.000000, 0.014668]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003281 in range [0.000000, 0.006562]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001641 in range [0.000000, 0.003282]...	no solution exists.
	Iteration #009: testing norm threshold 0.002461 in range [0.001641, 0.003282]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002041 in range [0.001641, 0.002440]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001841 in range [0.001641, 0.002042]...	no solution exists.
	Iteration #012: testing norm threshold 0.001941 in range [0.001841, 0.002042]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001892 in range [0.001841, 0.001942]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4005893070959573, x5 : 0.3753929934062945, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4017848382685606, x5 : 0.3709194213151932, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5580634364654125, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001941


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103449 in range [0.000000, 0.206898]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049905 in range [0.000000, 0.099810]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024946 in range [0.000000, 0.049891]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012352 in range [0.000000, 0.024703]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006169 in range [0.000000, 0.012338]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003085 in range [0.000000, 0.006170]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001543 in range [0.000000, 0.003086]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000703 in range [0.000000, 0.001407]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4241013201817275, x5 : -0.2777475825828062, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : 0.574534454906348, x10 : 0.0009258746903110836, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.42371653168395607, x5 : -0.30834052339936935, x6 : 0, x7 : 3, x8 : 3, x9 : 0.5741496664085766, x10 : 0.0009258746903110836, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126386 in range [0.000000, 0.252773]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062349 in range [0.000000, 0.124697]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030772 in range [0.000000, 0.061543]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015386 in range [0.000000, 0.030773]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007694 in range [0.000000, 0.015387]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003819 in range [0.000000, 0.007639]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001910 in range [0.000000, 0.003820]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000956 in range [0.000000, 0.001911]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000416 in range [0.000000, 0.000831]...	no solution exists.
	Iteration #011: testing norm threshold 0.000624 in range [0.000416, 0.000831]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000520 in range [0.000416, 0.000625]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000468 in range [0.000416, 0.000521]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.9447393424529932, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.127065361031878, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 0.9364091157913208, x5 : -0.2706467107815945, x6 : 0, x7 : 0, x8 : 0, x9 : 1.1761052413897313, x10 : 0.08089353433416248, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000468


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104248 in range [0.000000, 0.208495]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048854 in range [0.000000, 0.097708]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024417 in range [0.000000, 0.048835]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012209 in range [0.000000, 0.024418]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006093 in range [0.000000, 0.012185]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002270 in range [0.000000, 0.004540]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001136 in range [0.000000, 0.002271]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000430 in range [0.000000, 0.000860]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000123 in range [0.000000, 0.000247]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000062 in range [0.000000, 0.000124]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7728056655345599, x5 : -0.35771130482536945, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096194 in range [0.000000, 0.192388]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048052 in range [0.000000, 0.096104]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023585 in range [0.000000, 0.047171]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011793 in range [0.000000, 0.023586]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005775 in range [0.000000, 0.011549]...	no solution exists.
	Iteration #007: testing norm threshold 0.008662 in range [0.005775, 0.011549]...	solution exists & found.
	Iteration #008: testing norm threshold 0.007219 in range [0.005775, 0.008663]...	no solution exists.
	Iteration #009: testing norm threshold 0.007941 in range [0.007219, 0.008663]...	no solution exists.
	Iteration #010: testing norm threshold 0.008302 in range [0.007941, 0.008663]...	solution exists & found.
	Iteration #011: testing norm threshold 0.008122 in range [0.007941, 0.008303]...	solution exists & found.
	Iteration #012: testing norm threshold 0.008032 in range [0.007941, 0.008123]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.1367091318879889, x5 : 3.4353118562593417, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 0.2695373947250556, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.31312212347984314, x5 : 3.4250810939778935, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6520841419696808, x10 : -0.06618372969981969, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.008032


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135886 in range [0.000000, 0.271772]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062435 in range [0.000000, 0.124869]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031218 in range [0.000000, 0.062436]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015609 in range [0.000000, 0.031219]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007397 in range [0.000000, 0.014793]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000983 in range [0.000000, 0.001965]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000492 in range [0.000000, 0.000984]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000202 in range [0.000000, 0.000404]...	no solution exists.
	Iteration #010: testing norm threshold 0.000303 in range [0.000202, 0.000404]...	no solution exists.
	Iteration #011: testing norm threshold 0.000354 in range [0.000303, 0.000404]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.6130096201826336, x5 : -0.295641844938672, x6 : 1.0, x7 : 2.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.6103160309605946, x5 : -0.4253752529621124, x6 : 1, x7 : 2, x8 : 0, x9 : -0.5692045274687115, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000403


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095809 in range [0.000000, 0.191618]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047263 in range [0.000000, 0.094527]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023632 in range [0.000000, 0.047264]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007152 in range [0.000000, 0.014304]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003350 in range [0.000000, 0.006700]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001512 in range [0.000000, 0.003023]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000756 in range [0.000000, 0.001513]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000379 in range [0.000000, 0.000757]...	no solution exists.
	Iteration #010: testing norm threshold 0.000568 in range [0.000379, 0.000757]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000474 in range [0.000379, 0.000569]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.658825766142505, x5 : -0.2240647955152089, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7081305979493796, x5 : -0.22474121894530008, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6337267457250296, x10 : 0.1349597687085304, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000474


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173340 in range [0.000000, 0.346680]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086671 in range [0.000000, 0.173341]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043115 in range [0.000000, 0.086230]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021558 in range [0.000000, 0.043116]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010410 in range [0.000000, 0.020819]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005205 in range [0.000000, 0.010411]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002603 in range [0.000000, 0.005206]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001302 in range [0.000000, 0.002604]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000101 in range [0.000000, 0.000203]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.3403775008283364, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.43770216511562265, x10 : -0.2863383490338839, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.5311377515464986, x5 : -0.34007049306328313, x6 : 0, x7 : 4, x8 : 0, x9 : -0.4373811902549563, x10 : -0.2746757062568693, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150966 in range [0.000000, 0.301933]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075479 in range [0.000000, 0.150958]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037728 in range [0.000000, 0.075455]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018864 in range [0.000000, 0.037729]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008229 in range [0.000000, 0.016458]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003915 in range [0.000000, 0.007829]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001958 in range [0.000000, 0.003916]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000647 in range [0.000000, 0.001295]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000324 in range [0.000000, 0.000648]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000325]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.4797262864811897, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.38907944537657596, x10 : -0.3747273409490208, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.4807525099795883, x5 : -0.3617191062392647, x6 : 0, x7 : 0, x8 : 0, x9 : -0.40676043927669525, x10 : -0.37472734094902077, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144415 in range [0.000000, 0.288830]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071698 in range [0.000000, 0.143395]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035849 in range [0.000000, 0.071699]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017925 in range [0.000000, 0.035850]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008963 in range [0.000000, 0.017926]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003716 in range [0.000000, 0.007432]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001859 in range [0.000000, 0.003717]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000907 in range [0.000000, 0.001814]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000454 in range [0.000000, 0.000908]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000135 in range [0.000000, 0.000270]...	no solution exists.
	Iteration #012: testing norm threshold 0.000202 in range [0.000135, 0.000270]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.292296598463534, x5 : -0.3493246320062693, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.18574807192238105, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.29229660089278153, x5 : -0.34932463443551687, x6 : 0, x7 : 3, x8 : 0, x9 : -0.1437557192317749, x10 : -0.1648034801628583, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000269


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147575 in range [0.000000, 0.295150]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073788 in range [0.000000, 0.147576]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035929 in range [0.000000, 0.071858]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016881 in range [0.000000, 0.033762]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008117 in range [0.000000, 0.016233]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002060 in range [0.000000, 0.004120]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000617 in range [0.000000, 0.001233]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000309 in range [0.000000, 0.000618]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000078 in range [0.000000, 0.000156]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.295641844938672, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.709789586652656, x5 : -0.29272705486718514, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6377234583987192, x10 : -0.05431724339723587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000155


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163676 in range [0.000000, 0.327351]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076578 in range [0.000000, 0.153156]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034921 in range [0.000000, 0.069841]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016768 in range [0.000000, 0.033535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008384 in range [0.000000, 0.016769]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004193 in range [0.000000, 0.008385]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002097 in range [0.000000, 0.004194]...	no solution exists.
	Iteration #009: testing norm threshold 0.003145 in range [0.002097, 0.004194]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002622 in range [0.002097, 0.003146]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002355 in range [0.002097, 0.002614]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002227 in range [0.002097, 0.002356]...	no solution exists.
	Iteration #013: testing norm threshold 0.002291 in range [0.002227, 0.002356]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.392259098739617, x5 : -0.2240647955152089, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.29183400589848274, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.18442887618534143, x6 : 3, x7 : 6, x8 : 0, x9 : -0.29183400589848274, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002291


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143247 in range [0.000000, 0.286493]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070266 in range [0.000000, 0.140533]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034690 in range [0.000000, 0.069380]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017346 in range [0.000000, 0.034691]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008673 in range [0.000000, 0.017347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004096 in range [0.000000, 0.008192]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001471 in range [0.000000, 0.002941]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000675 in range [0.000000, 0.001350]...	no solution exists.
	Iteration #010: testing norm threshold 0.001012 in range [0.000675, 0.001350]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000844 in range [0.000675, 0.001013]...	no solution exists.
	Iteration #012: testing norm threshold 0.000929 in range [0.000844, 0.001013]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.12985753551489912, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.013358429211215713, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.1423528492450714, x5 : 0.7293572378394321, x6 : 0, x7 : 0, x8 : 0, x9 : -0.01838458613710412, x10 : -0.2481663200023457, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001012


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.191621 in range [0.000000, 0.383242]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090365 in range [0.000000, 0.180729]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045153 in range [0.000000, 0.090305]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022332 in range [0.000000, 0.044663]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010420 in range [0.000000, 0.020839]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002900 in range [0.000000, 0.005801]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001451 in range [0.000000, 0.002901]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000726 in range [0.000000, 0.001452]...	no solution exists.
	Iteration #010: testing norm threshold 0.001089 in range [0.000726, 0.001452]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000881 in range [0.000726, 0.001036]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000804 in range [0.000726, 0.000882]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.40475441127412737, x5 : -0.13459348373588, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.3050947476454955, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4038450787502545, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.30691341269324124, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000804


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188068 in range [0.000000, 0.376135]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088333 in range [0.000000, 0.176665]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044146 in range [0.000000, 0.088291]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021405 in range [0.000000, 0.042810]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008303 in range [0.000000, 0.016606]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003832 in range [0.000000, 0.007664]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001546 in range [0.000000, 0.003091]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000610 in range [0.000000, 0.001220]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000305 in range [0.000000, 0.000611]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000141 in range [0.000000, 0.000281]...	no solution exists.
	Iteration #012: testing norm threshold 0.000211 in range [0.000141, 0.000281]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.24195905787107466, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6900640428066254, x5 : -0.3001154065132141, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6829784978704799, x10 : -0.319436820276295, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000211


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114233 in range [0.000000, 0.228465]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057117 in range [0.000000, 0.114234]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026958 in range [0.000000, 0.053916]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013480 in range [0.000000, 0.026959]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006721 in range [0.000000, 0.013442]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003282 in range [0.000000, 0.006564]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001588 in range [0.000000, 0.003176]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000543 in range [0.000000, 0.001085]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000255 in range [0.000000, 0.000509]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000122 in range [0.000000, 0.000243]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000061 in range [0.000000, 0.000123]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.3135361072945377, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7733661234378815, x5 : -0.31810465539576444, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000122


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126281 in range [0.000000, 0.252561]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055240 in range [0.000000, 0.110481]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027621 in range [0.000000, 0.055241]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013406 in range [0.000000, 0.026811]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001206 in range [0.000000, 0.002412]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000604 in range [0.000000, 0.001207]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000302 in range [0.000000, 0.000605]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000152 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000076 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7546231622404179, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7608708143234253, x5 : -0.39406028389930725, x6 : 1, x7 : 6, x8 : 0, x9 : -0.694495273875675, x10 : -0.3636787086725235, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109052 in range [0.000000, 0.218105]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054527 in range [0.000000, 0.109053]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023795 in range [0.000000, 0.047591]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009843 in range [0.000000, 0.019685]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001812 in range [0.000000, 0.003624]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000906 in range [0.000000, 0.001813]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000454 in range [0.000000, 0.000907]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000130 in range [0.000000, 0.000261]...	no solution exists.
	Iteration #010: testing norm threshold 0.000195 in range [0.000130, 0.000261]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4464054530558286, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5437880990917243, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4493146548509014, x5 : -0.38063958287239075, x6 : 0, x7 : 6, x8 : 0, x9 : -0.546697300886797, x10 : -0.04617782306233012, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000260


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141997 in range [0.000000, 0.283995]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070999 in range [0.000000, 0.141998]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031753 in range [0.000000, 0.063507]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015877 in range [0.000000, 0.031754]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007241 in range [0.000000, 0.014483]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003621 in range [0.000000, 0.007242]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001811 in range [0.000000, 0.003622]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000906 in range [0.000000, 0.001812]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000320 in range [0.000000, 0.000640]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000158 in range [0.000000, 0.000316]...	no solution exists.
	Iteration #012: testing norm threshold 0.000237 in range [0.000158, 0.000316]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6963117037460361, x5 : -0.2598533202269404, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6747077110791787, x5 : -0.2598533202269404, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6778271499658212, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000237


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112415 in range [0.000000, 0.224830]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056208 in range [0.000000, 0.112416]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028105 in range [0.000000, 0.056209]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013994 in range [0.000000, 0.027987]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006997 in range [0.000000, 0.013995]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001851 in range [0.000000, 0.003702]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000908 in range [0.000000, 0.001815]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000454 in range [0.000000, 0.000909]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000228 in range [0.000000, 0.000455]...	no solution exists.
	Iteration #011: testing norm threshold 0.000341 in range [0.000228, 0.000455]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6005143076481233, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5962215960025787, x5 : -0.37842944264411926, x6 : 0, x7 : 4, x8 : 0, x9 : -0.5283172428607941, x10 : -0.18469058722257614, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000315


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092775 in range [0.000000, 0.185549]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046388 in range [0.000000, 0.092776]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022370 in range [0.000000, 0.044739]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007443 in range [0.000000, 0.014886]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003705 in range [0.000000, 0.007411]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001828 in range [0.000000, 0.003656]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000782 in range [0.000000, 0.001563]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000328 in range [0.000000, 0.000656]...	no solution exists.
	Iteration #010: testing norm threshold 0.000492 in range [0.000328, 0.000656]...	no solution exists.
	Iteration #011: testing norm threshold 0.000574 in range [0.000492, 0.000656]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.6546606619643349, x5 : -0.376166025540068, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.3747273409490208, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6459505655957081, x5 : -0.4008534648609974, x6 : 0, x7 : 2, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3570511886072971, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000574


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096718 in range [0.000000, 0.193436]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047499 in range [0.000000, 0.094998]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022797 in range [0.000000, 0.045594]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010087 in range [0.000000, 0.020175]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005044 in range [0.000000, 0.010088]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001828 in range [0.000000, 0.003657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000914 in range [0.000000, 0.001828]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000371 in range [0.000000, 0.000742]...	no solution exists.
	Iteration #010: testing norm threshold 0.000556 in range [0.000371, 0.000742]...	no solution exists.
	Iteration #011: testing norm threshold 0.000649 in range [0.000556, 0.000742]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : -0.3464429527797456, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.2829935114004743, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 2, x4 : -0.3465946009775155, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.28314515959824416, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000649


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127456 in range [0.000000, 0.254913]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063102 in range [0.000000, 0.126204]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030468 in range [0.000000, 0.060936]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015066 in range [0.000000, 0.030131]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007533 in range [0.000000, 0.015067]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003767 in range [0.000000, 0.007534]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001828 in range [0.000000, 0.003657]...	no solution exists.
	Iteration #009: testing norm threshold 0.002742 in range [0.001828, 0.003657]...	no solution exists.
	Iteration #010: testing norm threshold 0.003200 in range [0.002742, 0.003657]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002972 in range [0.002742, 0.003201]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002858 in range [0.002742, 0.002973]...	no solution exists.
	Iteration #013: testing norm threshold 0.002915 in range [0.002858, 0.002973]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.009069514347965484, x5 : -0.2240647955152089, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : 0.1148287410099072, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.17775623500347137, x5 : -0.08834850085988369, x6 : 1, x7 : 6, x8 : 0, x9 : 0.10884585071407113, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002915


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.083439 in range [0.000000, 0.166878]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040962 in range [0.000000, 0.081923]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020481 in range [0.000000, 0.040963]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009989 in range [0.000000, 0.019977]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004603 in range [0.000000, 0.009205]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002302 in range [0.000000, 0.004604]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001143 in range [0.000000, 0.002285]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000566 in range [0.000000, 0.001131]...	no solution exists.
	Iteration #010: testing norm threshold 0.000849 in range [0.000566, 0.001131]...	no solution exists.
	Iteration #011: testing norm threshold 0.000990 in range [0.000849, 0.001131]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000920 in range [0.000849, 0.000991]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 2.8523570560549105, x5 : 0.3843401245842274, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.687412639930374, x10 : 0.376579090329643, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 2.8493545246520022, x5 : 0.3858413902856816, x6 : 0, x7 : 0, x8 : 6, x9 : 2.684410108527466, x10 : 0.12246073782444, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000920


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162562 in range [0.000000, 0.325124]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080071 in range [0.000000, 0.160142]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037784 in range [0.000000, 0.075569]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018778 in range [0.000000, 0.037555]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008682 in range [0.000000, 0.017364]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002937 in range [0.000000, 0.005874]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001146 in range [0.000000, 0.002291]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000555 in range [0.000000, 0.001110]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000095 in range [0.000000, 0.000189]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.32978253606706515, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2255302971634192, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3309156381221035, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.23879104107618332, x10 : -0.265374203110138, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135598 in range [0.000000, 0.271197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067800 in range [0.000000, 0.135599]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032478 in range [0.000000, 0.064956]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015635 in range [0.000000, 0.031271]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007818 in range [0.000000, 0.015636]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003910 in range [0.000000, 0.007819]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001482 in range [0.000000, 0.002965]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000742 in range [0.000000, 0.001483]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000171 in range [0.000000, 0.000342]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.046555451951496615, x5 : 1.118004881174724, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.045183588416949215, x5 : 1.1288797868798341, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189061 in range [0.000000, 0.378121]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092391 in range [0.000000, 0.184781]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042617 in range [0.000000, 0.085234]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021277 in range [0.000000, 0.042554]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009963 in range [0.000000, 0.019925]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004982 in range [0.000000, 0.009964]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002064 in range [0.000000, 0.004129]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001033 in range [0.000000, 0.002065]...	no solution exists.
	Iteration #010: testing norm threshold 0.001549 in range [0.001033, 0.002065]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001188 in range [0.001033, 0.001344]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001111 in range [0.001033, 0.001189]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.1821502806086903, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.4198258011911997, x10 : 0.31028734639329025, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.182150262851535, x5 : 0.36362106795595633, x6 : 0, x7 : 0, x8 : 0, x9 : 0.41982579231262207, x10 : -0.010122749023139477, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001188


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147655 in range [0.000000, 0.295310]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073828 in range [0.000000, 0.147656]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036899 in range [0.000000, 0.073797]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018450 in range [0.000000, 0.036900]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006109 in range [0.000000, 0.012219]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002651 in range [0.000000, 0.005301]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001310 in range [0.000000, 0.002620]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000655 in range [0.000000, 0.001311]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000287 in range [0.000000, 0.000575]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000195]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7650358974933624, x5 : -0.4164281189441681, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6899113953113556, x10 : -0.359513595700264, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.075917 in range [0.000000, 0.151834]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037959 in range [0.000000, 0.075918]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018980 in range [0.000000, 0.037960]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008959 in range [0.000000, 0.017918]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002785 in range [0.000000, 0.005571]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001194 in range [0.000000, 0.002387]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000597 in range [0.000000, 0.001195]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000299 in range [0.000000, 0.000598]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000151]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.625504932717144, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6317525804042816, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5353355043956021, x10 : -0.2218688448711644, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174203 in range [0.000000, 0.348406]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079577 in range [0.000000, 0.159155]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039789 in range [0.000000, 0.079578]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019895 in range [0.000000, 0.039790]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009948 in range [0.000000, 0.019896]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004975 in range [0.000000, 0.009949]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002488 in range [0.000000, 0.004976]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001244 in range [0.000000, 0.002489]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000591 in range [0.000000, 0.001182]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000170 in range [0.000000, 0.000341]...	no solution exists.
	Iteration #012: testing norm threshold 0.000256 in range [0.000170, 0.000341]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.7698049669698479, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.9016327513326616, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.7700109853601643, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.9011523387354994, x10 : 0.021567482210671608, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000340


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123845 in range [0.000000, 0.247691]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061128 in range [0.000000, 0.122256]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030564 in range [0.000000, 0.061129]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014072 in range [0.000000, 0.028144]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007036 in range [0.000000, 0.014073]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003507 in range [0.000000, 0.007015]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001754 in range [0.000000, 0.003508]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000878 in range [0.000000, 0.001755]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000439 in range [0.000000, 0.000879]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000220 in range [0.000000, 0.000440]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000111 in range [0.000000, 0.000221]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7631650236418452, x5 : -0.4235043791105952, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000111


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148131 in range [0.000000, 0.296263]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070177 in range [0.000000, 0.140354]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032243 in range [0.000000, 0.064486]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015570 in range [0.000000, 0.031140]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007785 in range [0.000000, 0.015571]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003312 in range [0.000000, 0.006624]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001408 in range [0.000000, 0.002816]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000089 in range [0.000000, 0.000179]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.3972955189326453, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6862078152278114, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000178


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107097 in range [0.000000, 0.214195]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047107 in range [0.000000, 0.094213]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022956 in range [0.000000, 0.045911]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011053 in range [0.000000, 0.022105]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004453 in range [0.000000, 0.008905]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002227 in range [0.000000, 0.004454]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001114 in range [0.000000, 0.002228]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000485 in range [0.000000, 0.000969]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000243 in range [0.000000, 0.000486]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.769201024329246, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6877012689467081, x10 : -0.3042705048676142, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000197


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125522 in range [0.000000, 0.251043]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062689 in range [0.000000, 0.125378]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031194 in range [0.000000, 0.062388]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015519 in range [0.000000, 0.031037]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007760 in range [0.000000, 0.015520]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003742 in range [0.000000, 0.007484]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001615 in range [0.000000, 0.003230]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000338 in range [0.000000, 0.000675]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.13818774387123936, x5 : -0.3672188943621351, x6 : 0.0, x7 : 1.0, x8 : 3.0, x9 : -0.04430015995424538, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.14651795476675034, x5 : -0.36945567160829074, x6 : 0, x7 : 1, x8 : 3, x9 : -0.04653693720040103, x10 : -0.22228338234368686, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153517 in range [0.000000, 0.307034]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074779 in range [0.000000, 0.149559]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031608 in range [0.000000, 0.063216]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015684 in range [0.000000, 0.031367]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007160 in range [0.000000, 0.014320]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003107 in range [0.000000, 0.006213]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001553 in range [0.000000, 0.003105]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000757 in range [0.000000, 0.001514]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000365 in range [0.000000, 0.000730]...	no solution exists.
	Iteration #011: testing norm threshold 0.000548 in range [0.000365, 0.000730]...	no solution exists.
	Iteration #012: testing norm threshold 0.000639 in range [0.000548, 0.000730]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : -0.4119545502517995, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.2874137586494785, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.3858838692343366, x5 : -0.3985338509082794, x6 : 0, x7 : 5, x8 : 0, x9 : -0.1658569574356079, x10 : -0.3261125832796097, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000729


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089594 in range [0.000000, 0.179187]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044307 in range [0.000000, 0.088614]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022154 in range [0.000000, 0.044308]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009790 in range [0.000000, 0.019581]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003945 in range [0.000000, 0.007890]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001863 in range [0.000000, 0.003725]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000932 in range [0.000000, 0.001864]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6338351410734843, x5 : -0.3672188943621351, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.2200466050975312, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6348764172250128, x5 : -0.3716924488544464, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5536698697412612, x10 : -0.22108788124905965, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000027


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118610 in range [0.000000, 0.237221]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055732 in range [0.000000, 0.111464]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027219 in range [0.000000, 0.054439]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013610 in range [0.000000, 0.027220]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006756 in range [0.000000, 0.013511]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001057 in range [0.000000, 0.002115]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000529 in range [0.000000, 0.001058]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.30062680681987425, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4244414233686099, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.28936437285704214, x5 : -0.30821286655230123, x6 : 0, x7 : 0, x8 : 5, x9 : -0.4252910973474671, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000121


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.197889 in range [0.000000, 0.395777]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098945 in range [0.000000, 0.197890]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045155 in range [0.000000, 0.090310]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021907 in range [0.000000, 0.043814]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010954 in range [0.000000, 0.021908]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005104 in range [0.000000, 0.010207]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002552 in range [0.000000, 0.005105]...	no solution exists.
	Iteration #009: testing norm threshold 0.003828 in range [0.002552, 0.005105]...	no solution exists.
	Iteration #010: testing norm threshold 0.004466 in range [0.003828, 0.005105]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004148 in range [0.003828, 0.004467]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003989 in range [0.003828, 0.004149]...	no solution exists.
	Iteration #013: testing norm threshold 0.004069 in range [0.003989, 0.004149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.7652648655525078, x5 : 1.5922028336051672, x6 : 1.0, x7 : 0.0, x8 : 0.0, x9 : 1.9978540690857127, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.0946831107139587, x5 : 1.59130053953424, x6 : 1, x7 : 0, x8 : 0, x9 : 1.9969517750147856, x10 : 0.023925415129867934, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097149 in range [0.000000, 0.194299]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048575 in range [0.000000, 0.097150]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024288 in range [0.000000, 0.048576]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012145 in range [0.000000, 0.024289]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006073 in range [0.000000, 0.012146]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001815 in range [0.000000, 0.003631]...	no solution exists.
	Iteration #008: testing norm threshold 0.002723 in range [0.001815, 0.003631]...	no solution exists.
	Iteration #009: testing norm threshold 0.003177 in range [0.002723, 0.003631]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002904 in range [0.002723, 0.003085]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002814 in range [0.002723, 0.002905]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.5657148622395118, x5 : -0.3314303696504035, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.7248228613724922, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.5657148622395118, x5 : -0.4253752529621124, x6 : 0, x7 : 4, x8 : 0, x9 : 0.7197089296887162, x10 : -0.31948421895504, x11 : 0, x12 : 1, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002904


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143242 in range [0.000000, 0.286484]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071620 in range [0.000000, 0.143240]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033525 in range [0.000000, 0.067049]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007461 in range [0.000000, 0.014921]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003731 in range [0.000000, 0.007462]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001756 in range [0.000000, 0.003511]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000825 in range [0.000000, 0.001651]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000413 in range [0.000000, 0.000826]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000207 in range [0.000000, 0.000414]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000208]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000105]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7151842916942656, x5 : -0.4142159477086191, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6321930587291718, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138964 in range [0.000000, 0.277928]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069483 in range [0.000000, 0.138965]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031263 in range [0.000000, 0.062525]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015632 in range [0.000000, 0.031264]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007816 in range [0.000000, 0.015633]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003909 in range [0.000000, 0.007817]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001955 in range [0.000000, 0.003910]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000802 in range [0.000000, 0.001605]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000402 in range [0.000000, 0.000803]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000201 in range [0.000000, 0.000403]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000096 in range [0.000000, 0.000192]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.021564826882475862, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.06178577402185635, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.024090719961635466, x5 : -0.284168812407138, x6 : 0, x7 : 0, x8 : 6, x9 : 0.05925988094269675, x10 : -0.3636787086725235, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129149 in range [0.000000, 0.258298]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061686 in range [0.000000, 0.123371]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028611 in range [0.000000, 0.057221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014306 in range [0.000000, 0.028612]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007153 in range [0.000000, 0.014307]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003266 in range [0.000000, 0.006532]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001628 in range [0.000000, 0.003256]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000815 in range [0.000000, 0.001629]...	no solution exists.
	Iteration #010: testing norm threshold 0.001222 in range [0.000815, 0.001629]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001019 in range [0.000815, 0.001223]...	no solution exists.
	Iteration #012: testing norm threshold 0.001121 in range [0.001019, 0.001223]...	no solution exists.
	Iteration #013: testing norm threshold 0.001172 in range [0.001121, 0.001223]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4922215990157, x5 : -0.215117664337276, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.3979199398745845, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5880189836025238, x5 : -0.3180096745491028, x6 : 1, x7 : 5, x8 : 0, x9 : -0.4156009256839752, x10 : -0.19553634867840997, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001222


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093430 in range [0.000000, 0.186860]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045377 in range [0.000000, 0.090753]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022668 in range [0.000000, 0.045335]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009454 in range [0.000000, 0.018909]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003164 in range [0.000000, 0.006327]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001427 in range [0.000000, 0.002854]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000601 in range [0.000000, 0.001201]...	no solution exists.
	Iteration #009: testing norm threshold 0.000901 in range [0.000601, 0.001201]...	no solution exists.
	Iteration #010: testing norm threshold 0.001051 in range [0.000901, 0.001201]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000976 in range [0.000901, 0.001052]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4130846196304676, x5 : 0.34855159987249584, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : 0.7964268019265432, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.41206775521892175, x5 : 0.6930161714553833, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : 0.7945158658880888, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000976


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133813 in range [0.000000, 0.267626]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066907 in range [0.000000, 0.133814]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031770 in range [0.000000, 0.063540]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012074 in range [0.000000, 0.024148]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005968 in range [0.000000, 0.011936]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002889 in range [0.000000, 0.005778]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001445 in range [0.000000, 0.002890]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000393 in range [0.000000, 0.000787]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000165 in range [0.000000, 0.000329]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000083 in range [0.000000, 0.000166]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7504580598786733, x5 : -0.37169244703802085, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.330532846807878, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000024


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110300 in range [0.000000, 0.220599]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054661 in range [0.000000, 0.109322]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026665 in range [0.000000, 0.053329]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013206 in range [0.000000, 0.026411]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005871 in range [0.000000, 0.011742]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002781 in range [0.000000, 0.005562]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001174 in range [0.000000, 0.002348]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000511 in range [0.000000, 0.001021]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000512]...	no solution exists.
	Iteration #011: testing norm threshold 0.000384 in range [0.000256, 0.000512]...	no solution exists.
	Iteration #012: testing norm threshold 0.000448 in range [0.000384, 0.000512]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4199362160035574, x5 : -0.13459348373588, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.34468159795812764, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.4181019454562966, x5 : -0.16590844094753265, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3424714654684067, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000448


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150636 in range [0.000000, 0.301272]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075157 in range [0.000000, 0.150314]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037469 in range [0.000000, 0.074938]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018476 in range [0.000000, 0.036953]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008783 in range [0.000000, 0.017566]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004392 in range [0.000000, 0.008784]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001959 in range [0.000000, 0.003919]...	no solution exists.
	Iteration #009: testing norm threshold 0.002939 in range [0.001959, 0.003919]...	no solution exists.
	Iteration #010: testing norm threshold 0.003429 in range [0.002939, 0.003919]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003118 in range [0.002939, 0.003297]...	no solution exists.
	Iteration #012: testing norm threshold 0.003208 in range [0.003118, 0.003297]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.30062680681987425, x5 : 0.16960897631383814, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.296254253147487, x10 : 0.9069130418204644, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.30504705747409483, x5 : -0.40748098492622375, x6 : 1, x7 : 5, x8 : 0, x9 : -0.6211424171924591, x10 : 0.9024927911662438, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003296


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141090 in range [0.000000, 0.282179]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069645 in range [0.000000, 0.139290]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034823 in range [0.000000, 0.069646]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017412 in range [0.000000, 0.034824]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008707 in range [0.000000, 0.017413]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004354 in range [0.000000, 0.008708]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002177 in range [0.000000, 0.004355]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001089 in range [0.000000, 0.002178]...	no solution exists.
	Iteration #010: testing norm threshold 0.001634 in range [0.001089, 0.002178]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001362 in range [0.001089, 0.001635]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001226 in range [0.001089, 0.001363]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001158 in range [0.001089, 0.001227]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5422028491537415, x5 : 0.07119053335657638, x6 : 3.0, x7 : 2.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 0.8627185458628959, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5436244317852567, x5 : -0.3582717627286911, x6 : 3, x7 : 2, x8 : 0, x9 : -0.6771840632634891, x10 : 0.8612969632313807, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001226


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129678 in range [0.000000, 0.259355]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054373 in range [0.000000, 0.108746]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027187 in range [0.000000, 0.054374]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011954 in range [0.000000, 0.023908]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005978 in range [0.000000, 0.011955]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002727 in range [0.000000, 0.005455]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001364 in range [0.000000, 0.002728]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000683 in range [0.000000, 0.001365]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000342 in range [0.000000, 0.000684]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000255]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7732458462062327, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6961663414779155, x10 : -0.3635584314408748, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174503 in range [0.000000, 0.349006]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087128 in range [0.000000, 0.174256]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043565 in range [0.000000, 0.087129]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020150 in range [0.000000, 0.040301]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008310 in range [0.000000, 0.016621]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004156 in range [0.000000, 0.008311]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001713 in range [0.000000, 0.003426]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000301 in range [0.000000, 0.000601]...	no solution exists.
	Iteration #010: testing norm threshold 0.000451 in range [0.000301, 0.000601]...	no solution exists.
	Iteration #011: testing norm threshold 0.000526 in range [0.000451, 0.000601]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5671934742227622, x5 : -0.295641844938672, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5796887874603271, x5 : -0.22645580768585205, x6 : 0, x7 : 5, x8 : 0, x9 : -0.4774843903566608, x10 : 0.05825154948979616, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000600


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136789 in range [0.000000, 0.273579]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068395 in range [0.000000, 0.136790]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033526 in range [0.000000, 0.067052]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014036 in range [0.000000, 0.028071]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006947 in range [0.000000, 0.013894]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001997 in range [0.000000, 0.003994]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000999 in range [0.000000, 0.001998]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000500 in range [0.000000, 0.001000]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000251 in range [0.000000, 0.000501]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4255799321649779, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3537174673845421, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.42848897337001124, x5 : -0.3687834076494131, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3566265085895754, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114969 in range [0.000000, 0.229938]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056799 in range [0.000000, 0.113597]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028352 in range [0.000000, 0.056705]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014167 in range [0.000000, 0.028334]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006890 in range [0.000000, 0.013780]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002582 in range [0.000000, 0.005163]...	no solution exists.
	Iteration #008: testing norm threshold 0.003873 in range [0.002582, 0.005163]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003228 in range [0.002582, 0.003874]...	no solution exists.
	Iteration #010: testing norm threshold 0.003551 in range [0.003228, 0.003874]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003390 in range [0.003228, 0.003552]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003309 in range [0.003228, 0.003391]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 4.231006539029222, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 4.517395001018129, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 4.227207325279174, x5 : 0.11212697549619315, x6 : 0, x7 : 0, x8 : 5, x9 : 4.513595787268081, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003390


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153735 in range [0.000000, 0.307469]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076868 in range [0.000000, 0.153736]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037007 in range [0.000000, 0.074014]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018456 in range [0.000000, 0.036913]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007360 in range [0.000000, 0.014721]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003183 in range [0.000000, 0.006365]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001439 in range [0.000000, 0.002877]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000314 in range [0.000000, 0.000628]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000157 in range [0.000000, 0.000315]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000158]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7629533705967582, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 1.0, x12 : 16.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7650358974933624, x5 : -0.423259255263119, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6874461472034454, x10 : -0.3636787086725235, x11 : 1, x12 : 16, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185873 in range [0.000000, 0.371747]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092226 in range [0.000000, 0.184452]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045860 in range [0.000000, 0.091719]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022930 in range [0.000000, 0.045861]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010069 in range [0.000000, 0.020139]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000836 in range [0.000000, 0.001671]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000418 in range [0.000000, 0.000837]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 1.0, x4 : -0.6088445160044635, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 1, x4 : -0.6088445160044635, x5 : -0.3772986392713356, x6 : 0, x7 : 4, x8 : 0, x9 : -0.5216868817806244, x10 : -0.2962543603650306, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000045


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170592 in range [0.000000, 0.341185]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085172 in range [0.000000, 0.170344]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040891 in range [0.000000, 0.081783]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018816 in range [0.000000, 0.037631]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009408 in range [0.000000, 0.018817]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004485 in range [0.000000, 0.008970]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001436 in range [0.000000, 0.002871]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000232 in range [0.000000, 0.000464]...	no solution exists.
	Iteration #010: testing norm threshold 0.000348 in range [0.000232, 0.000464]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000290 in range [0.000232, 0.000349]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.34079923661832506, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.4861295099262633, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.3199737221002579, x5 : -0.3269568085670471, x6 : 0, x7 : 0, x8 : 0, x9 : 0.48563374244032065, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000348


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142730 in range [0.000000, 0.285460]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071365 in range [0.000000, 0.142731]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034593 in range [0.000000, 0.069187]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016700 in range [0.000000, 0.033399]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007572 in range [0.000000, 0.015145]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003178 in range [0.000000, 0.006356]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001590 in range [0.000000, 0.003179]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000585 in range [0.000000, 0.001171]...	no solution exists.
	Iteration #010: testing norm threshold 0.000878 in range [0.000585, 0.001171]...	no solution exists.
	Iteration #011: testing norm threshold 0.001025 in range [0.000878, 0.001171]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.2423153483254925, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.13270510493433016, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.19428907334804535, x5 : -0.2308018058538437, x6 : 0, x7 : 0, x8 : 1, x9 : -0.1658569574356079, x10 : -0.2509823516011238, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000973


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175835 in range [0.000000, 0.351670]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086220 in range [0.000000, 0.172439]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043019 in range [0.000000, 0.086039]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020980 in range [0.000000, 0.041960]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009914 in range [0.000000, 0.019828]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004881 in range [0.000000, 0.009763]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002441 in range [0.000000, 0.004882]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001096 in range [0.000000, 0.002193]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000455 in range [0.000000, 0.000910]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000228 in range [0.000000, 0.000456]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000114 in range [0.000000, 0.000229]...	no solution exists.
	Iteration #013: testing norm threshold 0.000172 in range [0.000114, 0.000229]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2714710775726833, x5 : -0.3672188943621351, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2713539584617417, x5 : -0.353563972398997, x6 : 0, x7 : 6, x8 : 0, x9 : -0.176790458313431, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000228


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143759 in range [0.000000, 0.287518]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068690 in range [0.000000, 0.137380]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033697 in range [0.000000, 0.067394]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016493 in range [0.000000, 0.032986]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008247 in range [0.000000, 0.016494]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004124 in range [0.000000, 0.008248]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002063 in range [0.000000, 0.004125]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001032 in range [0.000000, 0.002064]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000516 in range [0.000000, 0.001033]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000259 in range [0.000000, 0.000517]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000130 in range [0.000000, 0.000260]...	no solution exists.
	Iteration #013: testing norm threshold 0.000195 in range [0.000130, 0.000260]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.06738097284234723, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.0575609017012581, x10 : 0.26609285043572184, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.09653669968247414, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 0, x9 : -0.058936272926417066, x10 : 0.2647174792105629, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000259


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138955 in range [0.000000, 0.277911]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067153 in range [0.000000, 0.134306]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032772 in range [0.000000, 0.065544]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016386 in range [0.000000, 0.032773]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008194 in range [0.000000, 0.016387]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003732 in range [0.000000, 0.007465]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001428 in range [0.000000, 0.002855]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000661 in range [0.000000, 0.001323]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000331 in range [0.000000, 0.000662]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000166 in range [0.000000, 0.000332]...	no solution exists.
	Iteration #012: testing norm threshold 0.000249 in range [0.000166, 0.000332]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3339476402452353, x5 : 0.5632827481428851, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.33401836074305113, x5 : 0.5632827481428851, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6255626678466797, x10 : -0.3415107433159659, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132461 in range [0.000000, 0.264922]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065626 in range [0.000000, 0.131253]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032814 in range [0.000000, 0.065627]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015435 in range [0.000000, 0.030870]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007718 in range [0.000000, 0.015436]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003860 in range [0.000000, 0.007719]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001748 in range [0.000000, 0.003495]...	no solution exists.
	Iteration #009: testing norm threshold 0.002621 in range [0.001748, 0.003495]...	no solution exists.
	Iteration #010: testing norm threshold 0.003058 in range [0.002621, 0.003495]...	no solution exists.
	Iteration #011: testing norm threshold 0.003277 in range [0.003058, 0.003495]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003168 in range [0.003058, 0.003278]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003114 in range [0.003058, 0.003169]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.021564826882475862, x5 : 0.9390622576160664, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.035459665456236904, x10 : 1.6582194730991282, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4984692633152008, x5 : 0.8003817200660706, x6 : 1, x7 : 6, x8 : 0, x9 : -0.035459665456236904, x10 : 1.6540543601268687, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135920 in range [0.000000, 0.271840]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067960 in range [0.000000, 0.135921]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030425 in range [0.000000, 0.060850]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015168 in range [0.000000, 0.030337]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006857 in range [0.000000, 0.013715]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003429 in range [0.000000, 0.006858]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001347 in range [0.000000, 0.002694]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000251 in range [0.000000, 0.000503]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000126 in range [0.000000, 0.000252]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000064 in range [0.000000, 0.000127]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.6838163912115257, x5 : -0.376166025540068, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.68267589321288, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147945 in range [0.000000, 0.295890]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073518 in range [0.000000, 0.147036]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036759 in range [0.000000, 0.073519]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018302 in range [0.000000, 0.036605]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009152 in range [0.000000, 0.018303]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001613 in range [0.000000, 0.003226]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000274 in range [0.000000, 0.000547]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : -0.3526272153991789, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107978 in range [0.000000, 0.215955]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053757 in range [0.000000, 0.107515]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026630 in range [0.000000, 0.053259]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012656 in range [0.000000, 0.025313]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006329 in range [0.000000, 0.012657]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002742 in range [0.000000, 0.005484]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001371 in range [0.000000, 0.002743]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000448 in range [0.000000, 0.000896]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000225 in range [0.000000, 0.000449]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	no solution exists.
	Iteration #012: testing norm threshold 0.000169 in range [0.000113, 0.000226]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.43770216511562265, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5220227956069573, x5 : -0.2962873122827385, x6 : 0, x7 : 0, x8 : 4, x9 : -0.45317302644252777, x10 : -0.21940113484547438, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000169


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117308 in range [0.000000, 0.234617]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058655 in range [0.000000, 0.117309]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026363 in range [0.000000, 0.052725]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013182 in range [0.000000, 0.026364]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006591 in range [0.000000, 0.013183]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002094 in range [0.000000, 0.004187]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001047 in range [0.000000, 0.002095]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000524 in range [0.000000, 0.001048]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000263 in range [0.000000, 0.000525]...	no solution exists.
	Iteration #011: testing norm threshold 0.000394 in range [0.000263, 0.000525]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000329 in range [0.000263, 0.000395]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.127628929053309, x5 : 5.716830306632228, x6 : 2.0, x7 : 2.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 2.1258784191490188, x5 : 5.71580902885124, x6 : 2, x7 : 2, x8 : 0, x9 : -0.6360019813942076, x10 : -0.34158146381378174, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000394


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105566 in range [0.000000, 0.211132]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049725 in range [0.000000, 0.099449]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024863 in range [0.000000, 0.049726]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012432 in range [0.000000, 0.024864]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006020 in range [0.000000, 0.012040]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002037 in range [0.000000, 0.004073]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001018 in range [0.000000, 0.002035]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000509 in range [0.000000, 0.001019]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	no solution exists.
	Iteration #011: testing norm threshold 0.000383 in range [0.000255, 0.000510]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000319 in range [0.000255, 0.000384]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.20482941072196134, x5 : -0.3940602878959337, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : -0.09734312694229624, x10 : -0.2863383490338839, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.21030547310513673, x5 : -0.37516352048921536, x6 : 0, x7 : 3, x8 : 3, x9 : -0.13933547586202621, x10 : -0.2836003178422962, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000319


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168948 in range [0.000000, 0.337896]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084474 in range [0.000000, 0.168949]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033669 in range [0.000000, 0.067338]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016702 in range [0.000000, 0.033405]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007343 in range [0.000000, 0.014686]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003672 in range [0.000000, 0.007344]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001445 in range [0.000000, 0.002889]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000331 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000166 in range [0.000000, 0.000332]...	no solution exists.
	Iteration #011: testing norm threshold 0.000249 in range [0.000166, 0.000332]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.2131596190783016, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.10176337419130048, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.2141761296090357, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.0929228775203228, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168500 in range [0.000000, 0.337000]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084090 in range [0.000000, 0.168180]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038444 in range [0.000000, 0.076888]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019108 in range [0.000000, 0.038217]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008517 in range [0.000000, 0.017034]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004258 in range [0.000000, 0.008516]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002130 in range [0.000000, 0.004259]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000944 in range [0.000000, 0.001888]...	no solution exists.
	Iteration #010: testing norm threshold 0.001416 in range [0.000944, 0.001888]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001181 in range [0.000944, 0.001417]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001063 in range [0.000944, 0.001181]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001004 in range [0.000944, 0.001064]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4172497238086377, x5 : -0.15248774609174578, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3316162311395209, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5817713439464569, x5 : -0.19274983555078506, x6 : 0, x7 : 6, x8 : 0, x9 : -0.33445834521768475, x10 : -0.04184756422817545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140672 in range [0.000000, 0.281343]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067908 in range [0.000000, 0.135817]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033955 in range [0.000000, 0.067909]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014684 in range [0.000000, 0.029369]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006884 in range [0.000000, 0.013768]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003442 in range [0.000000, 0.006885]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001722 in range [0.000000, 0.003443]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000861 in range [0.000000, 0.001723]...	no solution exists.
	Iteration #010: testing norm threshold 0.001292 in range [0.000861, 0.001723]...	no solution exists.
	Iteration #011: testing norm threshold 0.001507 in range [0.001292, 0.001723]...	no solution exists.
	Iteration #012: testing norm threshold 0.001615 in range [0.001507, 0.001723]...	no solution exists.
	Iteration #013: testing norm threshold 0.001669 in range [0.001615, 0.001723]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 1.0, x4 : 0.9613997591656736, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 1.0, x9 : 1.144746350027895, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 1, x4 : 1.1522266244151376, x5 : -0.17145844049670478, x6 : 0, x7 : 4, x8 : 1, x9 : 1.1413492155591227, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001669


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117153 in range [0.000000, 0.234305]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058033 in range [0.000000, 0.116066]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025363 in range [0.000000, 0.050726]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012682 in range [0.000000, 0.025364]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006341 in range [0.000000, 0.012683]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003171 in range [0.000000, 0.006342]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001147 in range [0.000000, 0.002294]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000437 in range [0.000000, 0.000873]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.4509629068626354, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5182402430200355, x5 : -0.3427179876245443, x6 : 0, x7 : 0, x8 : 4, x9 : -0.45044889739497807, x10 : -0.1637754636567912, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162133 in range [0.000000, 0.324266]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081067 in range [0.000000, 0.162134]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040534 in range [0.000000, 0.081068]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019519 in range [0.000000, 0.039038]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009146 in range [0.000000, 0.018293]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004401 in range [0.000000, 0.008803]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002201 in range [0.000000, 0.004402]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001101 in range [0.000000, 0.002202]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000414 in range [0.000000, 0.000828]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000208 in range [0.000000, 0.000415]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.40475441127412737, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.3581377146335463, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.41308462619781494, x5 : -0.30906254053115845, x6 : 0, x7 : 0, x8 : 4, x9 : -0.3602202562185149, x10 : -0.2663236426400682, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189339 in range [0.000000, 0.378677]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093899 in range [0.000000, 0.187797]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045263 in range [0.000000, 0.090526]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022395 in range [0.000000, 0.044790]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011198 in range [0.000000, 0.022396]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000853 in range [0.000000, 0.001707]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000427 in range [0.000000, 0.000854]...	no solution exists.
	Iteration #009: testing norm threshold 0.000641 in range [0.000427, 0.000854]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000534 in range [0.000427, 0.000642]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000481 in range [0.000427, 0.000535]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5157336121014703, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.6717798943844413, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.5146624654536672, x5 : -0.21852008350623447, x6 : 0, x7 : 0, x8 : 3, x9 : 0.7148433839486759, x10 : -0.031148850028045946, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000481


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101491 in range [0.000000, 0.202982]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050746 in range [0.000000, 0.101492]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025080 in range [0.000000, 0.050159]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012540 in range [0.000000, 0.025081]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003527 in range [0.000000, 0.007053]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001700 in range [0.000000, 0.003399]...	no solution exists.
	Iteration #008: testing norm threshold 0.002549 in range [0.001700, 0.003399]...	solution exists & found.
	Iteration #009: testing norm threshold 0.002125 in range [0.001700, 0.002550]...	no solution exists.
	Iteration #010: testing norm threshold 0.002338 in range [0.002125, 0.002550]...	no solution exists.
	Iteration #011: testing norm threshold 0.002444 in range [0.002338, 0.002550]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002391 in range [0.002338, 0.002445]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4797262864811897, x5 : -0.15248774609174578, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.38465919812757177, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5651109218597412, x5 : -0.32248324155807495, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.13940930214005248, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002391


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168099 in range [0.000000, 0.336199]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084050 in range [0.000000, 0.168100]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040971 in range [0.000000, 0.081943]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019056 in range [0.000000, 0.038111]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008078 in range [0.000000, 0.016156]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003387 in range [0.000000, 0.006775]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000556 in range [0.000000, 0.001112]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000273 in range [0.000000, 0.000547]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5338726407974013, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4907451321036735, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5305679628592637, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4907451321036735, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000137


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100474 in range [0.000000, 0.200948]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050236 in range [0.000000, 0.100472]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022395 in range [0.000000, 0.044789]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010333 in range [0.000000, 0.020666]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004992 in range [0.000000, 0.009984]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002479 in range [0.000000, 0.004959]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000510 in range [0.000000, 0.001020]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000256 in range [0.000000, 0.000511]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6963117037460361, x5 : -0.4030074190738666, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6974167594772593, x5 : -0.4063759291950006, x6 : 0, x7 : 5, x8 : 0, x9 : -0.6156171108070154, x10 : -0.33053283393383026, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074067 in range [0.000000, 0.148133]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036337 in range [0.000000, 0.072674]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016235 in range [0.000000, 0.032470]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008118 in range [0.000000, 0.016236]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003902 in range [0.000000, 0.007804]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000641 in range [0.000000, 0.001282]...	no solution exists.
	Iteration #008: testing norm threshold 0.000961 in range [0.000641, 0.001282]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000802 in range [0.000641, 0.000962]...	no solution exists.
	Iteration #010: testing norm threshold 0.000882 in range [0.000802, 0.000962]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.5115685079233001, x5 : -0.16143487726967867, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.6010559384003735, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.5104510891356047, x5 : -0.1379496350071654, x6 : 0, x7 : 0, x8 : 6, x9 : 0.5999385196126781, x10 : 0.16777265378019957, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000882


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156842 in range [0.000000, 0.313684]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078235 in range [0.000000, 0.156469]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039118 in range [0.000000, 0.078236]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019559 in range [0.000000, 0.039119]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009780 in range [0.000000, 0.019560]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004841 in range [0.000000, 0.009681]...	no solution exists.
	Iteration #008: testing norm threshold 0.007261 in range [0.004841, 0.009681]...	no solution exists.
	Iteration #009: testing norm threshold 0.008471 in range [0.007261, 0.009681]...	solution exists & found.
	Iteration #010: testing norm threshold 0.007431 in range [0.007261, 0.007600]...	solution exists & found.
	Iteration #011: testing norm threshold 0.007316 in range [0.007261, 0.007370]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.02008621489922539, x5 : 0.7690667652353416, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : 0.1457704717529369, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.03197759389877319, x5 : -0.32248324155807495, x6 : 1, x7 : 3, x8 : 0, x9 : 0.13682333773499256, x10 : -0.2531924769282341, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.007369


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148179 in range [0.000000, 0.296358]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073423 in range [0.000000, 0.146845]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036216 in range [0.000000, 0.072432]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018109 in range [0.000000, 0.036217]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008805 in range [0.000000, 0.017610]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000295 in range [0.000000, 0.000591]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000145 in range [0.000000, 0.000290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000065 in range [0.000000, 0.000129]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7173410132472229, x5 : -0.29991161790287796, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6784018572846682, x10 : -0.07641449198126793, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103391 in range [0.000000, 0.206782]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051696 in range [0.000000, 0.103392]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025834 in range [0.000000, 0.051668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012505 in range [0.000000, 0.025009]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006253 in range [0.000000, 0.012506]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003127 in range [0.000000, 0.006254]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001564 in range [0.000000, 0.003128]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000444 in range [0.000000, 0.000888]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000223 in range [0.000000, 0.000445]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000103 in range [0.000000, 0.000205]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000052 in range [0.000000, 0.000104]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7397973802581266, x5 : -0.35851966219052567, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6628868845000699, x10 : -0.20875008075384646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000103


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161071 in range [0.000000, 0.322142]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077111 in range [0.000000, 0.154221]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037251 in range [0.000000, 0.074501]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016484 in range [0.000000, 0.032968]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007402 in range [0.000000, 0.014805]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002519 in range [0.000000, 0.005039]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000464 in range [0.000000, 0.000928]...	no solution exists.
	Iteration #009: testing norm threshold 0.000696 in range [0.000464, 0.000928]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000580 in range [0.000464, 0.000697]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000523 in range [0.000464, 0.000581]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : 0.6438069287442811, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.769201010465622, x5 : 0.6432265534840343, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6382430445490946, x10 : -0.04326862126725737, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000580


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149326 in range [0.000000, 0.298652]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071438 in range [0.000000, 0.142876]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035719 in range [0.000000, 0.071439]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017776 in range [0.000000, 0.035551]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008888 in range [0.000000, 0.017777]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004420 in range [0.000000, 0.008841]...	no solution exists.
	Iteration #008: testing norm threshold 0.006631 in range [0.004420, 0.008841]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005491 in range [0.004420, 0.006562]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004956 in range [0.004420, 0.005492]...	no solution exists.
	Iteration #011: testing norm threshold 0.005224 in range [0.004956, 0.005492]...	solution exists & found.
	Iteration #012: testing norm threshold 0.005091 in range [0.004956, 0.005225]...	solution exists & found.
	Iteration #013: testing norm threshold 0.005024 in range [0.004956, 0.005092]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.37828517422185615, x5 : 2.0485065236797446, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : 1.5256359852264227, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.47972629964351654, x5 : 2.0485065236797446, x6 : 2, x7 : 4, x8 : 0, x9 : -0.6949181616172563, x10 : 1.5256359852264227, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005024


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165126 in range [0.000000, 0.330251]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081985 in range [0.000000, 0.163970]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040924 in range [0.000000, 0.081849]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019757 in range [0.000000, 0.039514]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008491 in range [0.000000, 0.016982]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001306 in range [0.000000, 0.002611]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000653 in range [0.000000, 0.001307]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000327 in range [0.000000, 0.000654]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000164 in range [0.000000, 0.000328]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000083 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7754486831312685, x5 : -0.42463588861746315, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6933371439389658, x10 : -0.3629393443278742, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105926 in range [0.000000, 0.211852]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052777 in range [0.000000, 0.105553]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026294 in range [0.000000, 0.052587]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012106 in range [0.000000, 0.024211]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000216 in range [0.000000, 0.000433]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000109 in range [0.000000, 0.000217]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7681597426202751, x5 : -0.42968784322691744, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146839 in range [0.000000, 0.293678]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059830 in range [0.000000, 0.119660]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029476 in range [0.000000, 0.058953]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014739 in range [0.000000, 0.029477]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007370 in range [0.000000, 0.014740]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001569 in range [0.000000, 0.003138]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000785 in range [0.000000, 0.001570]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000393 in range [0.000000, 0.000786]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	no solution exists.
	Iteration #011: testing norm threshold 0.000295 in range [0.000197, 0.000394]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.525542432441061, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4686438958586523, x10 : -0.3747273409490208, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.509158478258094, x5 : -0.39316692034795303, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4686438958586523, x10 : -0.3224790852050392, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000295


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149089 in range [0.000000, 0.298178]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072370 in range [0.000000, 0.144740]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035734 in range [0.000000, 0.071468]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017652 in range [0.000000, 0.035303]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008826 in range [0.000000, 0.017653]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004414 in range [0.000000, 0.008827]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002207 in range [0.000000, 0.004415]...	no solution exists.
	Iteration #009: testing norm threshold 0.003311 in range [0.002207, 0.004415]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002760 in range [0.002207, 0.003312]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002484 in range [0.002207, 0.002761]...	no solution exists.
	Iteration #012: testing norm threshold 0.002622 in range [0.002484, 0.002761]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002554 in range [0.002484, 0.002623]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 3.5812502872346825, x5 : 0.6259126663884154, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 3.1382778593288068, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : 3.5803555095725272, x5 : -0.3985338509082794, x6 : 0, x7 : 2, x8 : 0, x9 : 3.138015583210776, x10 : 0.06695534250863301, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002622


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.201091 in range [0.000000, 0.402183]...	solution exists & found.
	Iteration #003: testing norm threshold 0.100158 in range [0.000000, 0.200317]...	solution exists & found.
	Iteration #004: testing norm threshold 0.050080 in range [0.000000, 0.100159]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024870 in range [0.000000, 0.049740]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012436 in range [0.000000, 0.024871]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006218 in range [0.000000, 0.012437]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002651 in range [0.000000, 0.005302]...	no solution exists.
	Iteration #009: testing norm threshold 0.003977 in range [0.002651, 0.005302]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003314 in range [0.002651, 0.003978]...	no solution exists.
	Iteration #011: testing norm threshold 0.003646 in range [0.003314, 0.003978]...	no solution exists.
	Iteration #012: testing norm threshold 0.003812 in range [0.003646, 0.003978]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003729 in range [0.003646, 0.003813]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5532195497050014, x5 : 1.4669429971141068, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 0.10598824651189874, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.9843376063296868, x5 : 1.9164118551204279, x6 : 1, x7 : 1, x8 : 0, x9 : 0.10387593906374265, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003812


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101253 in range [0.000000, 0.202505]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050627 in range [0.000000, 0.101254]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024952 in range [0.000000, 0.049903]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012361 in range [0.000000, 0.024723]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006181 in range [0.000000, 0.012362]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002473 in range [0.000000, 0.004947]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001237 in range [0.000000, 0.002474]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4030074190738666, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7673220445517362, x5 : -0.4164281189441681, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962068790559947, x10 : -0.30851533666623765, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000048


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166803 in range [0.000000, 0.333606]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077904 in range [0.000000, 0.155808]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038049 in range [0.000000, 0.076097]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019025 in range [0.000000, 0.038050]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009346 in range [0.000000, 0.018691]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002612 in range [0.000000, 0.005224]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001167 in range [0.000000, 0.002335]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000496 in range [0.000000, 0.000992]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000249 in range [0.000000, 0.000497]...	no solution exists.
	Iteration #011: testing norm threshold 0.000373 in range [0.000249, 0.000497]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000311 in range [0.000249, 0.000374]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7004768079242063, x5 : -0.376166025540068, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7171372175216675, x5 : -0.29848927905936395, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.30680946162123834, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000311


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136883 in range [0.000000, 0.273766]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068442 in range [0.000000, 0.136884]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034221 in range [0.000000, 0.068443]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016923 in range [0.000000, 0.033846]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008454 in range [0.000000, 0.016907]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004227 in range [0.000000, 0.008455]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002049 in range [0.000000, 0.004099]...	no solution exists.
	Iteration #009: testing norm threshold 0.003074 in range [0.002049, 0.004099]...	no solution exists.
	Iteration #010: testing norm threshold 0.003586 in range [0.003074, 0.004099]...	no solution exists.
	Iteration #011: testing norm threshold 0.003842 in range [0.003586, 0.004099]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003715 in range [0.003586, 0.003843]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003651 in range [0.003586, 0.003716]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.046555451951496615, x5 : 1.1358991435305898, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.4686438958586523, x10 : 1.1499827695870908, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.47972629964351654, x5 : 1.1355898648646259, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6830258965492249, x10 : 1.1496734909211268, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003651


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144567 in range [0.000000, 0.289135]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071892 in range [0.000000, 0.143783]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035728 in range [0.000000, 0.071455]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017557 in range [0.000000, 0.035113]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007366 in range [0.000000, 0.014732]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002652 in range [0.000000, 0.005305]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000574 in range [0.000000, 0.001148]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000230 in range [0.000000, 0.000460]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000115 in range [0.000000, 0.000230]...	no solution exists.
	Iteration #011: testing norm threshold 0.000172 in range [0.000115, 0.000230]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.6754861828551855, x5 : -0.215117664337276, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6742320554375331, x5 : -0.21386353691962362, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6628366390970377, x10 : -0.36117045383721874, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000229


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120838 in range [0.000000, 0.241677]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059621 in range [0.000000, 0.119241]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029735 in range [0.000000, 0.059471]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013928 in range [0.000000, 0.027855]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006958 in range [0.000000, 0.013915]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003136 in range [0.000000, 0.006272]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001557 in range [0.000000, 0.003114]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000593 in range [0.000000, 0.001186]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000297 in range [0.000000, 0.000594]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000149 in range [0.000000, 0.000298]...	no solution exists.
	Iteration #012: testing norm threshold 0.000223 in range [0.000149, 0.000298]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : -0.2777475825828062, x6 : 1.0, x7 : 1.0, x8 : 4.0, x9 : -0.32277573664151243, x10 : -0.13165761318239427, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.3880940094626081, x5 : -0.35379819571971893, x6 : 1, x7 : 1, x8 : 4, x9 : -0.32565668487525423, x10 : -0.13556737744214598, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000223


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151986 in range [0.000000, 0.303973]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075538 in range [0.000000, 0.151076]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037571 in range [0.000000, 0.075141]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018786 in range [0.000000, 0.037572]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009393 in range [0.000000, 0.018787]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004697 in range [0.000000, 0.009394]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002234 in range [0.000000, 0.004468]...	no solution exists.
	Iteration #009: testing norm threshold 0.003351 in range [0.002234, 0.004468]...	no solution exists.
	Iteration #010: testing norm threshold 0.003910 in range [0.003351, 0.004468]...	no solution exists.
	Iteration #011: testing norm threshold 0.004189 in range [0.003910, 0.004468]...	no solution exists.
	Iteration #012: testing norm threshold 0.004329 in range [0.004189, 0.004468]...	no solution exists.
	Iteration #013: testing norm threshold 0.004398 in range [0.004329, 0.004468]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.14920444442249928, x5 : 1.4579958659361738, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.15019259138410454, x5 : 1.4566260036544194, x6 : 1, x7 : 3, x8 : 0, x9 : -0.6299829185009003, x10 : -0.3623088463907691, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004396


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122693 in range [0.000000, 0.245385]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059219 in range [0.000000, 0.118438]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028724 in range [0.000000, 0.057449]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013435 in range [0.000000, 0.026870]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006718 in range [0.000000, 0.013436]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003000 in range [0.000000, 0.006000]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001501 in range [0.000000, 0.003001]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000751 in range [0.000000, 0.001502]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000234 in range [0.000000, 0.000468]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.13818774387123936, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.07082164344827081, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.14443539828062057, x5 : -0.30682575832388165, x6 : 0, x7 : 0, x8 : 0, x9 : -0.06970325234463241, x10 : -0.07641449198126793, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.190465 in range [0.000000, 0.380930]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090196 in range [0.000000, 0.180392]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045099 in range [0.000000, 0.090197]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021408 in range [0.000000, 0.042816]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005455 in range [0.000000, 0.010911]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002728 in range [0.000000, 0.005456]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001342 in range [0.000000, 0.002685]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000672 in range [0.000000, 0.001343]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000336 in range [0.000000, 0.000673]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000169 in range [0.000000, 0.000337]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.1881689940092809, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.10618362144030473, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.18868091629202893, x5 : -0.2682885300688221, x6 : 0, x7 : 0, x8 : 0, x9 : -0.10669554372305276, x10 : -0.15426678344392655, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000169


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150589 in range [0.000000, 0.301179]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075295 in range [0.000000, 0.150590]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037543 in range [0.000000, 0.075087]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018624 in range [0.000000, 0.037249]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008222 in range [0.000000, 0.016444]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003901 in range [0.000000, 0.007801]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001457 in range [0.000000, 0.002914]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000503 in range [0.000000, 0.001006]...	no solution exists.
	Iteration #010: testing norm threshold 0.000755 in range [0.000503, 0.001006]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000614 in range [0.000503, 0.000725]...	no solution exists.
	Iteration #012: testing norm threshold 0.000670 in range [0.000614, 0.000725]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7400452792644501, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6132885302732624, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000670


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123204 in range [0.000000, 0.246407]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061602 in range [0.000000, 0.123205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029471 in range [0.000000, 0.058943]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014736 in range [0.000000, 0.029472]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006954 in range [0.000000, 0.013909]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003231 in range [0.000000, 0.006462]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001616 in range [0.000000, 0.003232]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000809 in range [0.000000, 0.001617]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000319 in range [0.000000, 0.000638]...	no solution exists.
	Iteration #011: testing norm threshold 0.000479 in range [0.000319, 0.000638]...	no solution exists.
	Iteration #012: testing norm threshold 0.000558 in range [0.000479, 0.000638]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.23398513996915224, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1990088136693937, x10 : -0.13165761318239427, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.25272810459136963, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 0, x9 : -0.20376927325432515, x10 : -0.23109523206949234, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000558


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102721 in range [0.000000, 0.205443]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051361 in range [0.000000, 0.102722]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025403 in range [0.000000, 0.050805]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012702 in range [0.000000, 0.025404]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003717 in range [0.000000, 0.007433]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001859 in range [0.000000, 0.003718]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000710 in range [0.000000, 0.001421]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000356 in range [0.000000, 0.000711]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000178 in range [0.000000, 0.000357]...	no solution exists.
	Iteration #011: testing norm threshold 0.000267 in range [0.000178, 0.000357]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.10486691044587836, x5 : -0.3672188943621351, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.004517934713207234, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.10983285250333989, x5 : -0.38063958287239075, x6 : 0, x7 : 1, x8 : 0, x9 : -0.050930531695485115, x10 : -0.3636787086725235, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000356


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105656 in range [0.000000, 0.211311]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051949 in range [0.000000, 0.103899]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025024 in range [0.000000, 0.050049]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012513 in range [0.000000, 0.025025]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006257 in range [0.000000, 0.012514]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003023 in range [0.000000, 0.006045]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001413 in range [0.000000, 0.002826]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000533 in range [0.000000, 0.001067]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000267 in range [0.000000, 0.000534]...	no solution exists.
	Iteration #011: testing norm threshold 0.000401 in range [0.000267, 0.000534]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000326 in range [0.000267, 0.000384]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6754861828551855, x5 : -0.2061705331593431, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6754861828551855, x5 : -0.21959123015403748, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6896562576293945, x10 : 0.23374114044601854, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000326


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.179774 in range [0.000000, 0.359549]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077874 in range [0.000000, 0.155748]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038022 in range [0.000000, 0.076044]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019011 in range [0.000000, 0.038023]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009331 in range [0.000000, 0.018661]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004666 in range [0.000000, 0.009332]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002328 in range [0.000000, 0.004657]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001131 in range [0.000000, 0.002261]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000566 in range [0.000000, 0.001132]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000283 in range [0.000000, 0.000567]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000142 in range [0.000000, 0.000284]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000072 in range [0.000000, 0.000143]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.20751590291688105, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2606969002270471, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.20751590291688105, x5 : -0.29564183950424194, x6 : 0, x7 : 0, x8 : 0, x9 : 0.2601330865775445, x10 : -0.37472734094902077, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127740 in range [0.000000, 0.255479]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059958 in range [0.000000, 0.119916]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029979 in range [0.000000, 0.059959]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010548 in range [0.000000, 0.021096]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002656 in range [0.000000, 0.005312]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001122 in range [0.000000, 0.002243]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000561 in range [0.000000, 0.001123]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000141 in range [0.000000, 0.000282]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.6963117037460361, x5 : -0.3851131567180008, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6968832195116593, x5 : -0.3755945149989565, x6 : 0, x7 : 4, x8 : 0, x9 : -0.6150835708414154, x10 : -0.25262096116261085, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114243 in range [0.000000, 0.228486]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050898 in range [0.000000, 0.101796]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025450 in range [0.000000, 0.050899]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012725 in range [0.000000, 0.025451]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006363 in range [0.000000, 0.012726]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003182 in range [0.000000, 0.006364]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001541 in range [0.000000, 0.003083]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000771 in range [0.000000, 0.001542]...	no solution exists.
	Iteration #010: testing norm threshold 0.001157 in range [0.000771, 0.001542]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000964 in range [0.000771, 0.001158]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000868 in range [0.000771, 0.000965]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.658825766142505, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3084355970126681, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5918756425380707, x5 : -0.34932464361190796, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5803515083907054, x10 : -0.24871890991926193, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000868


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171429 in range [0.000000, 0.342857]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082506 in range [0.000000, 0.165012]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040488 in range [0.000000, 0.080977]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020210 in range [0.000000, 0.040420]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010047 in range [0.000000, 0.020094]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003581 in range [0.000000, 0.007163]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001791 in range [0.000000, 0.003582]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000149 in range [0.000000, 0.000299]...	no solution exists.
	Iteration #010: testing norm threshold 0.000224 in range [0.000149, 0.000299]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.15068305640574975, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.035459665456236904, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.1517243328648641, x5 : -0.376166025540068, x6 : 0, x7 : 0, x8 : 4, x9 : -0.04028741839375037, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000224


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133818 in range [0.000000, 0.267635]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066704 in range [0.000000, 0.133409]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032758 in range [0.000000, 0.065515]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016104 in range [0.000000, 0.032208]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007952 in range [0.000000, 0.015903]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003799 in range [0.000000, 0.007598]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001900 in range [0.000000, 0.003800]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000703 in range [0.000000, 0.001405]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000352 in range [0.000000, 0.000704]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000176 in range [0.000000, 0.000353]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000089 in range [0.000000, 0.000177]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6281914249120637, x5 : -0.1435406149138129, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6408381636414117, x10 : 0.06721761862666377, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6281914249120637, x5 : -0.11222565546631813, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6424289185662598, x10 : 0.09249637852337848, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000176


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162093 in range [0.000000, 0.324186]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080278 in range [0.000000, 0.160556]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038800 in range [0.000000, 0.077601]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019194 in range [0.000000, 0.038387]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008374 in range [0.000000, 0.016748]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004188 in range [0.000000, 0.008375]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001041 in range [0.000000, 0.002083]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000266 in range [0.000000, 0.000531]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 18.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7733661234378815, x5 : -0.4153230640709284, x6 : 0, x7 : 6, x8 : 0, x9 : -0.690761313182104, x10 : -0.37472734094902077, x11 : 1, x12 : 18, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140107 in range [0.000000, 0.280214]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069729 in range [0.000000, 0.139458]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034543 in range [0.000000, 0.069086]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017272 in range [0.000000, 0.034544]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008422 in range [0.000000, 0.016844]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004212 in range [0.000000, 0.008423]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002106 in range [0.000000, 0.004213]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001054 in range [0.000000, 0.002107]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000527 in range [0.000000, 0.001055]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000264 in range [0.000000, 0.000528]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000133 in range [0.000000, 0.000265]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.4445518438334082, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 1.4143814322171533, x10 : 0.31028734639329025, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.4445518438334082, x5 : -0.06709430840440635, x6 : 0, x7 : 0, x8 : 2, x9 : 1.41348892456116, x10 : 0.30939483873729695, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000133


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142408 in range [0.000000, 0.284816]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058760 in range [0.000000, 0.117520]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029380 in range [0.000000, 0.058761]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014691 in range [0.000000, 0.029381]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007068 in range [0.000000, 0.014137]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002824 in range [0.000000, 0.005648]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001413 in range [0.000000, 0.002825]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000484 in range [0.000000, 0.000968]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000243 in range [0.000000, 0.000485]...	no solution exists.
	Iteration #011: testing norm threshold 0.000364 in range [0.000243, 0.000485]...	no solution exists.
	Iteration #012: testing norm threshold 0.000425 in range [0.000364, 0.000485]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.12985753551489912, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.031039418207232668, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.13404923552502565, x5 : -0.4032892849160972, x6 : 0, x7 : 0, x8 : 0, x9 : -0.035231118217359185, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000484


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158443 in range [0.000000, 0.316886]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068803 in range [0.000000, 0.137606]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034139 in range [0.000000, 0.068279]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014723 in range [0.000000, 0.029445]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007362 in range [0.000000, 0.014724]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003681 in range [0.000000, 0.007363]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001841 in range [0.000000, 0.003682]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000921 in range [0.000000, 0.001842]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000374 in range [0.000000, 0.000748]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000187 in range [0.000000, 0.000375]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000094 in range [0.000000, 0.000188]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7462929538840777, x5 : -0.4119545502517995, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7473342295465234, x5 : -0.4153868432817224, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.3692888587821228, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000094


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110849 in range [0.000000, 0.221698]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050530 in range [0.000000, 0.101061]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023855 in range [0.000000, 0.047710]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011928 in range [0.000000, 0.023856]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004828 in range [0.000000, 0.009655]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002222 in range [0.000000, 0.004443]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001111 in range [0.000000, 0.002223]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000556 in range [0.000000, 0.001112]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000279 in range [0.000000, 0.000557]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000140 in range [0.000000, 0.000280]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000070 in range [0.000000, 0.000141]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.17983878565294062, x5 : -0.3493246320062693, x6 : 0.0, x7 : 2.0, x8 : 4.0, x9 : -0.06640139619926658, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.1714298002558115, x5 : -0.38063958287239075, x6 : 0, x7 : 2, x8 : 4, x9 : -0.06856272542524752, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000140


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144147 in range [0.000000, 0.288294]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072074 in range [0.000000, 0.144148]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036037 in range [0.000000, 0.072075]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017477 in range [0.000000, 0.034953]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008739 in range [0.000000, 0.017478]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004363 in range [0.000000, 0.008726]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002182 in range [0.000000, 0.004364]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001092 in range [0.000000, 0.002183]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000546 in range [0.000000, 0.001093]...	no solution exists.
	Iteration #011: testing norm threshold 0.000819 in range [0.000546, 0.001093]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000680 in range [0.000546, 0.000813]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000613 in range [0.000546, 0.000681]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.2574971530549225, x5 : -0.16143487726967867, x6 : 0.0, x7 : 1.0, x8 : 5.0, x9 : 0.3270006089621107, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.25712439728168435, x5 : -0.3985338509082794, x6 : 0, x7 : 1, x8 : 5, x9 : 0.32662785318887255, x10 : -0.1313853638485433, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000610


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136476 in range [0.000000, 0.272952]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068126 in range [0.000000, 0.136251]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034050 in range [0.000000, 0.068101]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014786 in range [0.000000, 0.029573]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007394 in range [0.000000, 0.014787]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003568 in range [0.000000, 0.007136]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001195 in range [0.000000, 0.002390]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000435 in range [0.000000, 0.000870]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000109 in range [0.000000, 0.000219]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000107]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.4255799321649779, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.4465426596136311, x10 : -0.04326862126725737, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.4255799321649779, x5 : -0.28055732335462646, x6 : 0, x7 : 0, x8 : 4, x9 : -0.4482064747363301, x10 : -0.04493243638995632, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160563 in range [0.000000, 0.321126]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076962 in range [0.000000, 0.153924]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036453 in range [0.000000, 0.072906]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018227 in range [0.000000, 0.036454]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005619 in range [0.000000, 0.011238]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002810 in range [0.000000, 0.005620]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001405 in range [0.000000, 0.002811]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000415 in range [0.000000, 0.000831]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000208 in range [0.000000, 0.000416]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000209]...	no solution exists.
	Iteration #012: testing norm threshold 0.000157 in range [0.000105, 0.000209]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.021564826882475862, x5 : -0.19722340198141025, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.08830725751588178, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.010357452395098334, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 0, x9 : 0.08609713241457939, x10 : -0.19863335564640983, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000208


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125981 in range [0.000000, 0.251963]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062991 in range [0.000000, 0.125982]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031285 in range [0.000000, 0.062571]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013452 in range [0.000000, 0.026903]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005323 in range [0.000000, 0.010646]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002662 in range [0.000000, 0.005324]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001331 in range [0.000000, 0.002663]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000226 in range [0.000000, 0.000452]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	no solution exists.
	Iteration #011: testing norm threshold 0.000170 in range [0.000114, 0.000227]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7296325371713971, x5 : -0.3314303696504035, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.17585210913996274, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7363611685422872, x5 : -0.3310511944576251, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6958721206159515, x10 : -0.14229173591446106, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000170


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.191508 in range [0.000000, 0.383015]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095754 in range [0.000000, 0.191509]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047878 in range [0.000000, 0.095755]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023934 in range [0.000000, 0.047869]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010631 in range [0.000000, 0.021262]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002465 in range [0.000000, 0.004931]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001233 in range [0.000000, 0.002466]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000617 in range [0.000000, 0.001234]...	no solution exists.
	Iteration #010: testing norm threshold 0.000926 in range [0.000617, 0.001234]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000772 in range [0.000617, 0.000927]...	no solution exists.
	Iteration #012: testing norm threshold 0.000849 in range [0.000772, 0.000927]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.8447768421769102, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.0209794270557762, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.9202629341640614, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 1.0163001034263828, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000926


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185090 in range [0.000000, 0.370180]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089314 in range [0.000000, 0.178628]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044124 in range [0.000000, 0.088248]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020446 in range [0.000000, 0.040892]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010168 in range [0.000000, 0.020336]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002315 in range [0.000000, 0.004629]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001076 in range [0.000000, 0.002152]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000496 in range [0.000000, 0.000993]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000249 in range [0.000000, 0.000497]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000125 in range [0.000000, 0.000250]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000063 in range [0.000000, 0.000126]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4421224123646269, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5172122240847208, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.4397284660837635, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164335 in range [0.000000, 0.328670]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080584 in range [0.000000, 0.161169]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040097 in range [0.000000, 0.080194]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020049 in range [0.000000, 0.040098]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009996 in range [0.000000, 0.019993]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004999 in range [0.000000, 0.009997]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002347 in range [0.000000, 0.004695]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000811 in range [0.000000, 0.001622]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000266 in range [0.000000, 0.000532]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000267]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4963867031938701, x5 : -0.3940602878959337, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.4023401871235887, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.49722346312501936, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : -0.40192180715801407, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000134


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176617 in range [0.000000, 0.353234]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087550 in range [0.000000, 0.175100]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043776 in range [0.000000, 0.087551]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021584 in range [0.000000, 0.043168]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010793 in range [0.000000, 0.021585]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004924 in range [0.000000, 0.009847]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002462 in range [0.000000, 0.004925]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000895 in range [0.000000, 0.001791]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000448 in range [0.000000, 0.000896]...	no solution exists.
	Iteration #011: testing norm threshold 0.000672 in range [0.000448, 0.000896]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000561 in range [0.000448, 0.000673]...	no solution exists.
	Iteration #013: testing norm threshold 0.000617 in range [0.000561, 0.000673]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.4862028856151095, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.405540937719145, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.5406403460237312, x5 : -0.3269568085670471, x6 : 0, x7 : 0, x8 : 1, x9 : 1.4031673100830175, x10 : 0.08063986829250336, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000672


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.228621 in range [0.000000, 0.457242]...	solution exists & found.
	Iteration #003: testing norm threshold 0.113430 in range [0.000000, 0.226860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.056716 in range [0.000000, 0.113431]...	solution exists & found.
	Iteration #005: testing norm threshold 0.028104 in range [0.000000, 0.056209]...	solution exists & found.
	Iteration #006: testing norm threshold 0.014053 in range [0.000000, 0.028105]...	solution exists & found.
	Iteration #007: testing norm threshold 0.007027 in range [0.000000, 0.014054]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003514 in range [0.000000, 0.007028]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001757 in range [0.000000, 0.003515]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000879 in range [0.000000, 0.001758]...	no solution exists.
	Iteration #011: testing norm threshold 0.001319 in range [0.000879, 0.001758]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001100 in range [0.000879, 0.001320]...	no solution exists.
	Iteration #013: testing norm threshold 0.001210 in range [0.001100, 0.001320]...	solution exists & found.
	Iteration #014: testing norm threshold 0.001155 in range [0.001100, 0.001211]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.06321586866417711, x5 : -0.295641844938672, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.057365526772852116, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.06386476839079507, x5 : -0.19416678869571907, x6 : 0, x7 : 3, x8 : 0, x9 : 0.1530497435257322, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001210


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139096 in range [0.000000, 0.278193]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066759 in range [0.000000, 0.133518]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031028 in range [0.000000, 0.062056]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015164 in range [0.000000, 0.030329]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007583 in range [0.000000, 0.015165]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003469 in range [0.000000, 0.006937]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001735 in range [0.000000, 0.003470]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000807 in range [0.000000, 0.001614]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000369 in range [0.000000, 0.000737]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000183 in range [0.000000, 0.000367]...	no solution exists.
	Iteration #012: testing norm threshold 0.000275 in range [0.000183, 0.000367]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 2.0859778872716075, x5 : 0.07119053335657638, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.028795799828743, x10 : 0.8627185458628959, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 2.0855566728282855, x5 : -0.03170147631317377, x6 : 0, x7 : 0, x8 : 0, x9 : 2.028374585385421, x10 : 0.8605178739136148, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000275


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.078319 in range [0.000000, 0.156639]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037600 in range [0.000000, 0.075199]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018800 in range [0.000000, 0.037601]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007564 in range [0.000000, 0.015129]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002956 in range [0.000000, 0.005911]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001478 in range [0.000000, 0.002957]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000740 in range [0.000000, 0.001479]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000370 in range [0.000000, 0.000741]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000181 in range [0.000000, 0.000363]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7046419121023764, x5 : -0.15248774609174578, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3305328449914524, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7046419121023764, x5 : -0.21959123015403748, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3334737020436885, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000181


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128129 in range [0.000000, 0.256258]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063908 in range [0.000000, 0.127815]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031954 in range [0.000000, 0.063909]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013277 in range [0.000000, 0.026554]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002514 in range [0.000000, 0.005028]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001258 in range [0.000000, 0.002515]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000427 in range [0.000000, 0.000853]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000214 in range [0.000000, 0.000428]...	no solution exists.
	Iteration #010: testing norm threshold 0.000321 in range [0.000214, 0.000428]...	no solution exists.
	Iteration #011: testing norm threshold 0.000374 in range [0.000321, 0.000428]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7171372246368868, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7171372246368868, x5 : -0.41504819185780406, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000427


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150033 in range [0.000000, 0.300066]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075017 in range [0.000000, 0.150034]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037509 in range [0.000000, 0.075018]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016252 in range [0.000000, 0.032503]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007519 in range [0.000000, 0.015038]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003760 in range [0.000000, 0.007520]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000501 in range [0.000000, 0.001001]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000251 in range [0.000000, 0.000502]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000126 in range [0.000000, 0.000252]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000063 in range [0.000000, 0.000127]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7732152762996927, x5 : -0.4252244058239236, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3635278615343347, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139617 in range [0.000000, 0.279233]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067042 in range [0.000000, 0.134084]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033521 in range [0.000000, 0.067043]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016761 in range [0.000000, 0.033522]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007955 in range [0.000000, 0.015909]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003003 in range [0.000000, 0.006005]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001502 in range [0.000000, 0.003004]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000680 in range [0.000000, 0.001360]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000341 in range [0.000000, 0.000681]...	no solution exists.
	Iteration #011: testing norm threshold 0.000511 in range [0.000341, 0.000681]...	no solution exists.
	Iteration #012: testing norm threshold 0.000596 in range [0.000511, 0.000681]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.8398617435204003, x5 : -0.13459348373588, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 3.085234892340756, x10 : 0.3323845943720745, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 2.8394240020443373, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 3.084797150864693, x10 : 0.33194685289601167, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000680


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125231 in range [0.000000, 0.250462]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062616 in range [0.000000, 0.125232]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030561 in range [0.000000, 0.061121]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015281 in range [0.000000, 0.030562]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007602 in range [0.000000, 0.015205]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001870 in range [0.000000, 0.003740]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000936 in range [0.000000, 0.001871]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000452 in range [0.000000, 0.000904]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000226 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000115]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7754486831312685, x5 : -0.4241148532768632, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3624183089872743, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125562 in range [0.000000, 0.251125]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062759 in range [0.000000, 0.125518]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031356 in range [0.000000, 0.062713]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015679 in range [0.000000, 0.031357]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002446 in range [0.000000, 0.004893]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001047 in range [0.000000, 0.002095]...	no solution exists.
	Iteration #008: testing norm threshold 0.001571 in range [0.001047, 0.002095]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001310 in range [0.001047, 0.001572]...	no solution exists.
	Iteration #010: testing norm threshold 0.001441 in range [0.001310, 0.001572]...	no solution exists.
	Iteration #011: testing norm threshold 0.001506 in range [0.001441, 0.001572]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 2.0693174705589272, x5 : 0.2501331569152341, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.9403908548486581, x10 : 0.19980110649936916, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 2.0717001254354757, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 3, x9 : 1.935625545095561, x10 : 0.19503579674627203, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001506


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124946 in range [0.000000, 0.249891]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049398 in range [0.000000, 0.098796]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024661 in range [0.000000, 0.049321]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012331 in range [0.000000, 0.024662]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006166 in range [0.000000, 0.012332]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003083 in range [0.000000, 0.006167]...	no solution exists.
	Iteration #008: testing norm threshold 0.004625 in range [0.003083, 0.006167]...	no solution exists.
	Iteration #009: testing norm threshold 0.005396 in range [0.004625, 0.006167]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004973 in range [0.004625, 0.005320]...	no solution exists.
	Iteration #011: testing norm threshold 0.005147 in range [0.004973, 0.005320]...	no solution exists.
	Iteration #012: testing norm threshold 0.005234 in range [0.005147, 0.005320]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.4237263229425576, x5 : 2.299026196661865, x6 : 2.0, x7 : 2.0, x8 : 0.0, x9 : -0.3537174673845421, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 1.420278286528205, x5 : 2.2955781602475125, x6 : 2, x7 : 2, x8 : 0, x9 : -0.5769399404525757, x10 : -0.0467166576816098, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005234


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.046951 in range [0.000000, 0.093902]...	solution exists & found.
	Iteration #003: testing norm threshold 0.023476 in range [0.000000, 0.046952]...	solution exists & found.
	Iteration #004: testing norm threshold 0.011739 in range [0.000000, 0.023477]...	solution exists & found.
	Iteration #005: testing norm threshold 0.005870 in range [0.000000, 0.011740]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002019 in range [0.000000, 0.004038]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000943 in range [0.000000, 0.001886]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000156 in range [0.000000, 0.000311]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.16965496807418, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.2552525312530007, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 1.17436193187483, x5 : -0.17038200844761156, x6 : 0, x7 : 0, x8 : 6, x9 : 1.2547106479488037, x10 : -0.36313682536832637, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105269 in range [0.000000, 0.210537]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052161 in range [0.000000, 0.104322]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025944 in range [0.000000, 0.051888]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012972 in range [0.000000, 0.025945]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006305 in range [0.000000, 0.012610]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003153 in range [0.000000, 0.006306]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000485 in range [0.000000, 0.000969]...	no solution exists.
	Iteration #009: testing norm threshold 0.000727 in range [0.000485, 0.000969]...	no solution exists.
	Iteration #010: testing norm threshold 0.000848 in range [0.000727, 0.000969]...	no solution exists.
	Iteration #011: testing norm threshold 0.000909 in range [0.000848, 0.000969]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.4657523619634288, x5 : -0.2866947137607391, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : 0.4772890154282548, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.47022592897240095, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : 0.48010308278085606, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000902


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139962 in range [0.000000, 0.279925]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068462 in range [0.000000, 0.136924]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033750 in range [0.000000, 0.067500]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016842 in range [0.000000, 0.033684]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007983 in range [0.000000, 0.015966]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003318 in range [0.000000, 0.006636]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001111 in range [0.000000, 0.002221]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000435 in range [0.000000, 0.000871]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000089 in range [0.000000, 0.000179]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.15068305640574975, x5 : -0.3493246320062693, x6 : 0.0, x7 : 2.0, x8 : 2.0, x9 : -0.04430015995424538, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.1538597738988053, x5 : -0.3716924488544464, x6 : 0, x7 : 2, x8 : 2, x9 : -0.0427118012077176, x10 : -0.17426375039343497, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133026 in range [0.000000, 0.266052]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066118 in range [0.000000, 0.132236]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033060 in range [0.000000, 0.066119]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013343 in range [0.000000, 0.026686]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006367 in range [0.000000, 0.012735]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003184 in range [0.000000, 0.006368]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001547 in range [0.000000, 0.003094]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000392 in range [0.000000, 0.000784]...	no solution exists.
	Iteration #010: testing norm threshold 0.000588 in range [0.000392, 0.000784]...	no solution exists.
	Iteration #011: testing norm threshold 0.000686 in range [0.000588, 0.000784]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.7777601780870185, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.011114810832726, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 1.7757839592672826, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 2.0038558015052192, x10 : 0.30831112757355433, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000686


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161498 in range [0.000000, 0.322996]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076668 in range [0.000000, 0.153336]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038335 in range [0.000000, 0.076669]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019168 in range [0.000000, 0.038336]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008536 in range [0.000000, 0.017071]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001768 in range [0.000000, 0.003536]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000885 in range [0.000000, 0.001769]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000435 in range [0.000000, 0.000869]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	no solution exists.
	Iteration #011: testing norm threshold 0.000327 in range [0.000218, 0.000436]...	no solution exists.
	Iteration #012: testing norm threshold 0.000381 in range [0.000327, 0.000436]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.9776851786391845, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.223286678784929, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 1.9772732980411807, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 0, x9 : 2.222060695592338, x10 : 0.1105467832485407, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000435


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101904 in range [0.000000, 0.203808]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047501 in range [0.000000, 0.095002]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023146 in range [0.000000, 0.046293]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011302 in range [0.000000, 0.022604]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005652 in range [0.000000, 0.011303]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002826 in range [0.000000, 0.005653]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001058 in range [0.000000, 0.002116]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000529 in range [0.000000, 0.001059]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	no solution exists.
	Iteration #012: testing norm threshold 0.000200 in range [0.000133, 0.000266]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.4241013201817275, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.574534454906348, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.42283299522166556, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : 0.5732661299462861, x10 : -0.14966503564477926, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000200


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116149 in range [0.000000, 0.232299]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056973 in range [0.000000, 0.113946]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026379 in range [0.000000, 0.052758]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013190 in range [0.000000, 0.026380]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006432 in range [0.000000, 0.012865]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003187 in range [0.000000, 0.006374]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001594 in range [0.000000, 0.003188]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000798 in range [0.000000, 0.001595]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000399 in range [0.000000, 0.000799]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000200 in range [0.000000, 0.000400]...	no solution exists.
	Iteration #012: testing norm threshold 0.000300 in range [0.000200, 0.000400]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000251 in range [0.000200, 0.000301]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.32145232771072485, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.27857326415147005, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3212116589800414, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.2626210598612878, x10 : -0.2527111394668672, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000300


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134732 in range [0.000000, 0.269464]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067367 in range [0.000000, 0.134733]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032308 in range [0.000000, 0.064616]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013189 in range [0.000000, 0.026377]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006440 in range [0.000000, 0.012881]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002784 in range [0.000000, 0.005569]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001151 in range [0.000000, 0.002302]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000576 in range [0.000000, 0.001152]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000178 in range [0.000000, 0.000355]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000089 in range [0.000000, 0.000179]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6838163912115257, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.667001754623794, x5 : -0.4052442020000452, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6199620360283025, x10 : -0.29515019117011965, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000178


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144142 in range [0.000000, 0.288283]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071376 in range [0.000000, 0.142752]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032490 in range [0.000000, 0.064979]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015568 in range [0.000000, 0.031136]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007785 in range [0.000000, 0.015569]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002798 in range [0.000000, 0.005596]...	no solution exists.
	Iteration #008: testing norm threshold 0.004197 in range [0.002798, 0.005596]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003498 in range [0.002798, 0.004198]...	no solution exists.
	Iteration #010: testing norm threshold 0.003848 in range [0.003498, 0.004198]...	no solution exists.
	Iteration #011: testing norm threshold 0.004023 in range [0.003848, 0.004198]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003936 in range [0.003848, 0.004024]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.16094976247867, x5 : 0.11592618924624082, x6 : 0.0, x7 : 2.0, x8 : 1.0, x9 : 2.417777557741116, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 2.157061560852446, x5 : -0.3448510766029358, x6 : 0, x7 : 2, x8 : 1, x9 : 2.413889356114892, x10 : -0.02833179504962477, x11 : 0, x12 : 1, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004023


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143887 in range [0.000000, 0.287775]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070603 in range [0.000000, 0.141205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033794 in range [0.000000, 0.067588]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016276 in range [0.000000, 0.032551]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008138 in range [0.000000, 0.016277]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003106 in range [0.000000, 0.006212]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001554 in range [0.000000, 0.003107]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000777 in range [0.000000, 0.001555]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000283 in range [0.000000, 0.000566]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000142 in range [0.000000, 0.000284]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000072 in range [0.000000, 0.000143]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.17150857729660038, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.13270510493433016, x10 : -0.10956036520361004, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.1701290417693092, x5 : -0.2968002210493661, x6 : 0, x7 : 0, x8 : 6, x9 : -0.1360202903981782, x10 : -0.09502687359906566, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000142


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105075 in range [0.000000, 0.210150]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052205 in range [0.000000, 0.104410]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026103 in range [0.000000, 0.052206]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013052 in range [0.000000, 0.026104]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006374 in range [0.000000, 0.012748]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002126 in range [0.000000, 0.004252]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000496 in range [0.000000, 0.000993]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000092 in range [0.000000, 0.000183]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 2.6774226805717656, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.0651818995458184, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 2.679783963387177, x5 : -0.23771826611279276, x6 : 0, x7 : 0, x8 : 1, x9 : 1.0585514903068542, x10 : -0.0409073384518459, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126003 in range [0.000000, 0.252005]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062523 in range [0.000000, 0.125047]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031262 in range [0.000000, 0.062524]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015632 in range [0.000000, 0.031263]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006732 in range [0.000000, 0.013464]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003092 in range [0.000000, 0.006185]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001547 in range [0.000000, 0.003093]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000774 in range [0.000000, 0.001548]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000387 in range [0.000000, 0.000775]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000194 in range [0.000000, 0.000388]...	no solution exists.
	Iteration #012: testing norm threshold 0.000291 in range [0.000194, 0.000388]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.240461739103072, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.4409029157111788, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.233393314685443, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.43383449129355, x10 : 0.0009258746903110836, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000387


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107214 in range [0.000000, 0.214429]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053608 in range [0.000000, 0.107215]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024922 in range [0.000000, 0.049844]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011992 in range [0.000000, 0.023984]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005996 in range [0.000000, 0.011993]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002108 in range [0.000000, 0.004216]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001055 in range [0.000000, 0.002109]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000528 in range [0.000000, 0.001056]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000252 in range [0.000000, 0.000505]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000253]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5213773282628908, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.4332819178666184, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5241497760631927, x5 : -0.17038200844761156, x6 : 0, x7 : 0, x8 : 4, x9 : -0.4332819178666184, x10 : -0.36090626087222166, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.075451 in range [0.000000, 0.150902]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036930 in range [0.000000, 0.073860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018464 in range [0.000000, 0.036928]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008728 in range [0.000000, 0.017456]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004365 in range [0.000000, 0.008729]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002174 in range [0.000000, 0.004348]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001087 in range [0.000000, 0.002175]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000544 in range [0.000000, 0.001088]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000227 in range [0.000000, 0.000454]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000228]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4030074190738666, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.767888196072443, x5 : -0.4164281189441681, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6955168974120495, x10 : -0.3084355970126681, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088050 in range [0.000000, 0.176100]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041227 in range [0.000000, 0.082455]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020614 in range [0.000000, 0.041228]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010308 in range [0.000000, 0.020615]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005154 in range [0.000000, 0.010309]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001565 in range [0.000000, 0.003129]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000347 in range [0.000000, 0.000695]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000174 in range [0.000000, 0.000348]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000088 in range [0.000000, 0.000175]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7046419121023764, x5 : -0.1435406149138129, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.2863383490338839, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7044890774176158, x5 : -0.14384628428333399, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6830258667469025, x10 : -0.286644018403405, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155913 in range [0.000000, 0.311827]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077957 in range [0.000000, 0.155914]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035860 in range [0.000000, 0.071720]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017931 in range [0.000000, 0.035861]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008384 in range [0.000000, 0.016769]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004193 in range [0.000000, 0.008385]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002097 in range [0.000000, 0.004194]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001049 in range [0.000000, 0.002098]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000525 in range [0.000000, 0.001050]...	no solution exists.
	Iteration #011: testing norm threshold 0.000787 in range [0.000525, 0.001050]...	no solution exists.
	Iteration #012: testing norm threshold 0.000919 in range [0.000787, 0.001050]...	no solution exists.
	Iteration #013: testing norm threshold 0.000984 in range [0.000919, 0.001050]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.30062680681987425, x5 : -0.15248774609174578, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.30062680681987425, x5 : -0.21064409613609314, x6 : 0, x7 : 5, x8 : 0, x9 : -0.3461254993380825, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000984


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165646 in range [0.000000, 0.331292]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077597 in range [0.000000, 0.155194]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037964 in range [0.000000, 0.075927]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018311 in range [0.000000, 0.036623]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008726 in range [0.000000, 0.017452]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004364 in range [0.000000, 0.008727]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001759 in range [0.000000, 0.003517]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000844 in range [0.000000, 0.001687]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000342 in range [0.000000, 0.000685]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000172 in range [0.000000, 0.000343]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000086 in range [0.000000, 0.000173]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7233848869800568, x5 : -0.3489725440909386, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6296308189799309, x10 : -0.28669044855485326, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128504 in range [0.000000, 0.257009]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061285 in range [0.000000, 0.122570]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029981 in range [0.000000, 0.059962]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014065 in range [0.000000, 0.028130]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007033 in range [0.000000, 0.014066]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003082 in range [0.000000, 0.006164]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001083 in range [0.000000, 0.002167]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000542 in range [0.000000, 0.001084]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000167 in range [0.000000, 0.000334]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000071 in range [0.000000, 0.000141]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7503305077552795, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.288548459459833, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000140


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156136 in range [0.000000, 0.312271]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078068 in range [0.000000, 0.156137]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039035 in range [0.000000, 0.078069]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019518 in range [0.000000, 0.039036]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009759 in range [0.000000, 0.019519]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004880 in range [0.000000, 0.009760]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002441 in range [0.000000, 0.004881]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000597 in range [0.000000, 0.001195]...	no solution exists.
	Iteration #010: testing norm threshold 0.000896 in range [0.000597, 0.001195]...	no solution exists.
	Iteration #011: testing norm threshold 0.001045 in range [0.000896, 0.001195]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000971 in range [0.000896, 0.001046]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.13254402770981874, x5 : -0.01828077842275249, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 0.18555269699397506, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.13211196998295074, x5 : -0.4253752529621124, x6 : 0, x7 : 2, x8 : 0, x9 : 0.18512063926710706, x10 : 0.6413140083481856, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001045


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174263 in range [0.000000, 0.348527]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083598 in range [0.000000, 0.167197]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041800 in range [0.000000, 0.083599]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020900 in range [0.000000, 0.041801]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010451 in range [0.000000, 0.020901]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005160 in range [0.000000, 0.010319]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002509 in range [0.000000, 0.005018]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000940 in range [0.000000, 0.001880]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000471 in range [0.000000, 0.000941]...	no solution exists.
	Iteration #011: testing norm threshold 0.000706 in range [0.000471, 0.000941]...	no solution exists.
	Iteration #012: testing norm threshold 0.000823 in range [0.000706, 0.000941]...	no solution exists.
	Iteration #013: testing norm threshold 0.000882 in range [0.000823, 0.000941]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.7614747586135077, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8883720095856491, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.6885854303836823, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8882568236032241, x10 : 0.07838142663880085, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000940


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094462 in range [0.000000, 0.188923]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045986 in range [0.000000, 0.091973]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021355 in range [0.000000, 0.042710]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010511 in range [0.000000, 0.021022]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005256 in range [0.000000, 0.010512]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002529 in range [0.000000, 0.005057]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001265 in range [0.000000, 0.002530]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000633 in range [0.000000, 0.001266]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000317 in range [0.000000, 0.000634]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.12421381935347853, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.13250973000592414, x10 : -0.2200466050975312, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.12197703856620748, x5 : -0.29787862572594304, x6 : 0, x7 : 0, x8 : 4, x9 : 0.12970589548884023, x10 : -0.20676119897289894, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144837 in range [0.000000, 0.289674]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072419 in range [0.000000, 0.144838]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034543 in range [0.000000, 0.069086]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017272 in range [0.000000, 0.034544]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008636 in range [0.000000, 0.017273]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004319 in range [0.000000, 0.008637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002160 in range [0.000000, 0.004320]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001052 in range [0.000000, 0.002103]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000519 in range [0.000000, 0.001038]...	no solution exists.
	Iteration #011: testing norm threshold 0.000778 in range [0.000519, 0.001038]...	no solution exists.
	Iteration #012: testing norm threshold 0.000908 in range [0.000778, 0.001038]...	no solution exists.
	Iteration #013: testing norm threshold 0.000973 in range [0.000908, 0.001038]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.04924194414641626, x5 : 1.3416831606230464, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : 0.376579090329643, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.053662179899475644, x5 : 1.2298439741134644, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6476639211177826, x10 : 0.3866069969786103, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001037


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.211346 in range [0.000000, 0.422693]...	solution exists & found.
	Iteration #003: testing norm threshold 0.105674 in range [0.000000, 0.211347]...	solution exists & found.
	Iteration #004: testing norm threshold 0.052837 in range [0.000000, 0.105675]...	solution exists & found.
	Iteration #005: testing norm threshold 0.026414 in range [0.000000, 0.052829]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013208 in range [0.000000, 0.026415]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006604 in range [0.000000, 0.013209]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003116 in range [0.000000, 0.006232]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001558 in range [0.000000, 0.003117]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000780 in range [0.000000, 0.001559]...	no solution exists.
	Iteration #011: testing norm threshold 0.001170 in range [0.000780, 0.001559]...	no solution exists.
	Iteration #012: testing norm threshold 0.001365 in range [0.001170, 0.001559]...	no solution exists.
	Iteration #013: testing norm threshold 0.001462 in range [0.001365, 0.001559]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.2071409056777112, x5 : 0.03540200864484483, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.0784426412928312, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.205164650087544, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.076466385702664, x10 : 0.0802424962465431, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001558


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186776 in range [0.000000, 0.373551]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091760 in range [0.000000, 0.183520]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045842 in range [0.000000, 0.091683]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022883 in range [0.000000, 0.045766]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011296 in range [0.000000, 0.022593]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004797 in range [0.000000, 0.009595]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002399 in range [0.000000, 0.004798]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001200 in range [0.000000, 0.002400]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000236 in range [0.000000, 0.000473]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000119 in range [0.000000, 0.000237]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000120]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3657898616873458, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.4596080264322378, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.3651102062580231, x5 : -0.3314303696504035, x6 : 0, x7 : 0, x8 : 3, x9 : 0.47354842579026935, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000119


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168006 in range [0.000000, 0.336013]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083969 in range [0.000000, 0.167938]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041985 in range [0.000000, 0.083970]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020784 in range [0.000000, 0.041568]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008223 in range [0.000000, 0.016446]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003762 in range [0.000000, 0.007524]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000983 in range [0.000000, 0.001967]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000492 in range [0.000000, 0.000984]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000247 in range [0.000000, 0.000493]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000248]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000062 in range [0.000000, 0.000125]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 1.0, x3 : 2.0, x4 : -0.5963492034699531, x5 : -0.4030074190738666, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.5172666155976989, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 1, x3 : 2, x4 : -0.597548849176001, x5 : -0.38838707118428717, x6 : 1, x7 : 4, x8 : 0, x9 : -0.5168051317107789, x10 : -0.3129599100745822, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188646 in range [0.000000, 0.377292]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091102 in range [0.000000, 0.182204]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045551 in range [0.000000, 0.091103]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022628 in range [0.000000, 0.045255]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011314 in range [0.000000, 0.022629]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002525 in range [0.000000, 0.005051]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001243 in range [0.000000, 0.002485]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000177 in range [0.000000, 0.000354]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000089 in range [0.000000, 0.000178]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 1.0, x12 : 28.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7733661234378815, x5 : -0.40403500529359837, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6920224037630219, x10 : -0.37472734094902077, x11 : 1, x12 : 28, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098931 in range [0.000000, 0.197861]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049213 in range [0.000000, 0.098427]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024607 in range [0.000000, 0.049214]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011719 in range [0.000000, 0.023438]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005860 in range [0.000000, 0.011720]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002469 in range [0.000000, 0.004938]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001235 in range [0.000000, 0.002470]...	no solution exists.
	Iteration #009: testing norm threshold 0.001852 in range [0.001235, 0.002470]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001544 in range [0.001235, 0.001853]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001390 in range [0.001235, 0.001545]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001313 in range [0.001235, 0.001391]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4449268410725782, x5 : 0.16960897631383814, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5435927241633184, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.501951131534341, x5 : 0.35829413266158405, x6 : 0, x7 : 0, x8 : 0, x9 : 0.5427973266911722, x10 : 0.10115888671255414, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001313


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133212 in range [0.000000, 0.266423]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066606 in range [0.000000, 0.133213]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033000 in range [0.000000, 0.065999]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015367 in range [0.000000, 0.030734]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007684 in range [0.000000, 0.015368]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003745 in range [0.000000, 0.007491]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001565 in range [0.000000, 0.003130]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000376 in range [0.000000, 0.000752]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000188 in range [0.000000, 0.000377]...	no solution exists.
	Iteration #011: testing norm threshold 0.000283 in range [0.000188, 0.000377]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.44076173689440795, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.592215443902365, x10 : -0.10956036520361004, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.43802991828055476, x5 : -0.3135361072945377, x6 : 0, x7 : 0, x8 : 6, x9 : 0.5894836252885118, x10 : -0.20899797976016998, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000376


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102891 in range [0.000000, 0.205782]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048006 in range [0.000000, 0.096012]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024003 in range [0.000000, 0.048007]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012002 in range [0.000000, 0.024004]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005992 in range [0.000000, 0.011984]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002997 in range [0.000000, 0.005993]...	no solution exists.
	Iteration #008: testing norm threshold 0.004495 in range [0.002997, 0.005993]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003398 in range [0.002997, 0.003800]...	no solution exists.
	Iteration #010: testing norm threshold 0.003599 in range [0.003398, 0.003800]...	no solution exists.
	Iteration #011: testing norm threshold 0.003700 in range [0.003599, 0.003800]...	no solution exists.
	Iteration #012: testing norm threshold 0.003750 in range [0.003700, 0.003800]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.1779851764305205, x5 : 3.4979417745048718, x6 : 1.0, x7 : 1.0, x8 : 4.0, x9 : 1.3745992069761153, x10 : 1.1057882736295224, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.1467469334602356, x5 : 3.4979417745048718, x6 : 1, x7 : 1, x8 : 4, x9 : 1.2530423998832703, x10 : 0.25504422187805176, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003799


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106139 in range [0.000000, 0.212279]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050124 in range [0.000000, 0.100249]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021877 in range [0.000000, 0.043754]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007984 in range [0.000000, 0.015968]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003992 in range [0.000000, 0.007985]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001972 in range [0.000000, 0.003943]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000607 in range [0.000000, 0.001214]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000295 in range [0.000000, 0.000589]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000148 in range [0.000000, 0.000296]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4089195154522975, x5 : 0.35749873105042873, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.40872578729550063, x5 : 0.3546315340248725, x6 : 2, x7 : 4, x8 : 0, x9 : -0.6470649461250199, x10 : -0.2648400760478623, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161098 in range [0.000000, 0.322197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080550 in range [0.000000, 0.161099]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039105 in range [0.000000, 0.078210]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017984 in range [0.000000, 0.035969]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007522 in range [0.000000, 0.015043]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002019 in range [0.000000, 0.004038]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001010 in range [0.000000, 0.002020]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000506 in range [0.000000, 0.001011]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000253 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7754486831312685, x5 : -0.40474543483167236, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116741 in range [0.000000, 0.233483]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052683 in range [0.000000, 0.105367]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025549 in range [0.000000, 0.051097]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012587 in range [0.000000, 0.025174]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006268 in range [0.000000, 0.012536]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002588 in range [0.000000, 0.005175]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000750 in range [0.000000, 0.001499]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000375 in range [0.000000, 0.000751]...	no solution exists.
	Iteration #010: testing norm threshold 0.000563 in range [0.000375, 0.000751]...	no solution exists.
	Iteration #011: testing norm threshold 0.000657 in range [0.000563, 0.000751]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6380002452516543, x5 : 1.440101603580308, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : 0.3544818423508587, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7504580616950989, x5 : 1.4323043517083656, x6 : 3, x7 : 6, x8 : 0, x9 : -0.594620943069458, x10 : 0.3466845904789163, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000750


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098362 in range [0.000000, 0.196723]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049181 in range [0.000000, 0.098363]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024591 in range [0.000000, 0.049182]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011306 in range [0.000000, 0.022611]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005419 in range [0.000000, 0.010839]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002710 in range [0.000000, 0.005420]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000593 in range [0.000000, 0.001186]...	no solution exists.
	Iteration #009: testing norm threshold 0.000890 in range [0.000593, 0.001186]...	no solution exists.
	Iteration #010: testing norm threshold 0.001038 in range [0.000890, 0.001186]...	no solution exists.
	Iteration #011: testing norm threshold 0.001112 in range [0.001038, 0.001186]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.1071784054016278, x5 : 3.6142544798180003, x6 : 3.0, x7 : 5.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 1.1027581547474072, x5 : 3.6098342291637797, x6 : 3, x7 : 5, x8 : 0, x9 : -0.6830258965492249, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001185


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132850 in range [0.000000, 0.265700]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065477 in range [0.000000, 0.130953]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029100 in range [0.000000, 0.058201]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014551 in range [0.000000, 0.029101]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007276 in range [0.000000, 0.014552]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003638 in range [0.000000, 0.007277]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001447 in range [0.000000, 0.002893]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000664 in range [0.000000, 0.001328]...	no solution exists.
	Iteration #010: testing norm threshold 0.000996 in range [0.000664, 0.001328]...	no solution exists.
	Iteration #011: testing norm threshold 0.001162 in range [0.000996, 0.001328]...	no solution exists.
	Iteration #012: testing norm threshold 0.001245 in range [0.001162, 0.001328]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 3.881137788062932, x5 : 0.08908479571244217, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 4.004646320133636, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 3.8811266445307697, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 4.004635176601474, x10 : 0.5754431786065389, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.208737 in range [0.000000, 0.417474]...	solution exists & found.
	Iteration #003: testing norm threshold 0.104369 in range [0.000000, 0.208738]...	solution exists & found.
	Iteration #004: testing norm threshold 0.051329 in range [0.000000, 0.102658]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025451 in range [0.000000, 0.050902]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012726 in range [0.000000, 0.025452]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004944 in range [0.000000, 0.009888]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002473 in range [0.000000, 0.004945]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001237 in range [0.000000, 0.002474]...	no solution exists.
	Iteration #010: testing norm threshold 0.001855 in range [0.001237, 0.002474]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001546 in range [0.001237, 0.001856]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001392 in range [0.001237, 0.001547]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001315 in range [0.001237, 0.001393]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.50740340374513, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5568534659103311, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.6358208221825978, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.5533891681952016, x10 : 0.3068230486781606, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001392


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.075582 in range [0.000000, 0.151165]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037792 in range [0.000000, 0.075583]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014495 in range [0.000000, 0.028990]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007201 in range [0.000000, 0.014403]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001831 in range [0.000000, 0.003662]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000865 in range [0.000000, 0.001729]...	no solution exists.
	Iteration #008: testing norm threshold 0.001297 in range [0.000865, 0.001729]...	no solution exists.
	Iteration #009: testing norm threshold 0.001513 in range [0.001297, 0.001729]...	no solution exists.
	Iteration #010: testing norm threshold 0.001621 in range [0.001513, 0.001729]...	no solution exists.
	Iteration #011: testing norm threshold 0.001675 in range [0.001621, 0.001729]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 1.1821502806086903, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.3392372289840813, x10 : 0.06721761862666377, x11 : 1.0, x12 : 17.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 1.18497542429709, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 6, x9 : 1.3335869416072819, x10 : -0.31948421895504, x11 : 1, x12 : 17, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001675


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176488 in range [0.000000, 0.352976]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088244 in range [0.000000, 0.176489]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040931 in range [0.000000, 0.081862]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020466 in range [0.000000, 0.040932]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008122 in range [0.000000, 0.016244]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002818 in range [0.000000, 0.005637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001410 in range [0.000000, 0.002819]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000705 in range [0.000000, 0.001411]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000258 in range [0.000000, 0.000517]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000130 in range [0.000000, 0.000259]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.2381502441473224, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.1282848576853259, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2387222385185745, x5 : -0.353226216249628, x6 : 0, x7 : 0, x8 : 2, x9 : -0.12799886049969986, x10 : -0.24271584744756755, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143535 in range [0.000000, 0.287070]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071250 in range [0.000000, 0.142499]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032755 in range [0.000000, 0.065509]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016298 in range [0.000000, 0.032596]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007760 in range [0.000000, 0.015519]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001807 in range [0.000000, 0.003615]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000613 in range [0.000000, 0.001226]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000251 in range [0.000000, 0.000502]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.558863265866422, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.4686438958586523, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.559904552278113, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 1, x9 : -0.4708540141582489, x10 : -0.2642411010550996, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128929 in range [0.000000, 0.257858]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063674 in range [0.000000, 0.127348]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031688 in range [0.000000, 0.063376]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015799 in range [0.000000, 0.031599]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007899 in range [0.000000, 0.015797]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003464 in range [0.000000, 0.006928]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001639 in range [0.000000, 0.003278]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000515 in range [0.000000, 0.001030]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000224 in range [0.000000, 0.000449]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000113 in range [0.000000, 0.000225]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.19649920236562116, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.08408238519528352, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.19735730976489943, x5 : -0.3001154065132141, x6 : 0, x7 : 6, x8 : 0, x9 : -0.08432279557429898, x10 : -0.36343829829350804, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164143 in range [0.000000, 0.328287]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078905 in range [0.000000, 0.157810]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039390 in range [0.000000, 0.078780]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019264 in range [0.000000, 0.038528]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008830 in range [0.000000, 0.017661]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004416 in range [0.000000, 0.008831]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002192 in range [0.000000, 0.004384]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001096 in range [0.000000, 0.002193]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000549 in range [0.000000, 0.001097]...	no solution exists.
	Iteration #011: testing norm threshold 0.000823 in range [0.000549, 0.001097]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000686 in range [0.000549, 0.000824]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000618 in range [0.000549, 0.000687]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 1.5195237190404705, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 1.72379873964745, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 1.5228189145764373, x5 : -0.3269568085670471, x6 : 0, x7 : 0, x8 : 5, x9 : 1.6773861646652222, x10 : 0.14577063821163389, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000686


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126116 in range [0.000000, 0.252232]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060599 in range [0.000000, 0.121198]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030284 in range [0.000000, 0.060567]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015140 in range [0.000000, 0.030281]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007571 in range [0.000000, 0.015141]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003121 in range [0.000000, 0.006241]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000925 in range [0.000000, 0.001851]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000185 in range [0.000000, 0.000369]...	no solution exists.
	Iteration #010: testing norm threshold 0.000277 in range [0.000185, 0.000369]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7004768079242063, x5 : 0.20539750102556967, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7275499999523163, x5 : 0.20539750102556967, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.2932218611240387, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000368


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148499 in range [0.000000, 0.296999]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074250 in range [0.000000, 0.148500]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036270 in range [0.000000, 0.072540]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018136 in range [0.000000, 0.036271]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009038 in range [0.000000, 0.018076]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004196 in range [0.000000, 0.008392]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002098 in range [0.000000, 0.004197]...	no solution exists.
	Iteration #009: testing norm threshold 0.003148 in range [0.002098, 0.004197]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002508 in range [0.002098, 0.002918]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002304 in range [0.002098, 0.002509]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002202 in range [0.002098, 0.002305]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002151 in range [0.002098, 0.002203]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.5944955942475327, x5 : 0.062243402178643485, x6 : 0.0, x7 : 2.0, x8 : 3.0, x9 : 1.8166239318765396, x10 : 0.8406212978841117, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.5935515748324318, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 3, x9 : 1.9874145465205046, x10 : 0.8400101638010459, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002143


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.061914 in range [0.000000, 0.123827]...	solution exists & found.
	Iteration #003: testing norm threshold 0.030738 in range [0.000000, 0.061476]...	solution exists & found.
	Iteration #004: testing norm threshold 0.015093 in range [0.000000, 0.030186]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007268 in range [0.000000, 0.014535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001144 in range [0.000000, 0.002289]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000544 in range [0.000000, 0.001088]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.025729931060645986, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.08388701026687755, x10 : -0.19794935711874695, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.027309501945032358, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : 0.08230743938249117, x10 : -0.20899797976016998, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089958 in range [0.000000, 0.179917]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037641 in range [0.000000, 0.075281]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018821 in range [0.000000, 0.037642]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009370 in range [0.000000, 0.018741]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004555 in range [0.000000, 0.009109]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002236 in range [0.000000, 0.004473]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001119 in range [0.000000, 0.002237]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000531 in range [0.000000, 0.001061]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000198 in range [0.000000, 0.000395]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7213023288150568, x5 : -0.24195905787107466, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 2.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7224073968868496, x5 : -0.23638041521697223, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6863410791316527, x10 : -0.360473605172113, x11 : 2, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119373 in range [0.000000, 0.238745]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059681 in range [0.000000, 0.119362]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029506 in range [0.000000, 0.059012]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014077 in range [0.000000, 0.028153]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007039 in range [0.000000, 0.014078]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002468 in range [0.000000, 0.004935]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001124 in range [0.000000, 0.002249]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000562 in range [0.000000, 0.001123]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000193 in range [0.000000, 0.000387]...	no solution exists.
	Iteration #011: testing norm threshold 0.000290 in range [0.000193, 0.000387]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.717960578268364, x5 : -0.3985338509082794, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6904796119403415, x10 : -0.31866086532356275, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000290


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133280 in range [0.000000, 0.266560]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066641 in range [0.000000, 0.133281]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033180 in range [0.000000, 0.066360]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016590 in range [0.000000, 0.033181]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008296 in range [0.000000, 0.016591]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002577 in range [0.000000, 0.005154]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001233 in range [0.000000, 0.002466]...	no solution exists.
	Iteration #009: testing norm threshold 0.001850 in range [0.001233, 0.002466]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001517 in range [0.001233, 0.001801]...	no solution exists.
	Iteration #011: testing norm threshold 0.001659 in range [0.001517, 0.001801]...	no solution exists.
	Iteration #012: testing norm threshold 0.001730 in range [0.001659, 0.001801]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.2714710775726833, x5 : -0.4030074190738666, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.16364683567735985, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.4713960736989975, x5 : -0.3777734968351514, x6 : 0, x7 : 5, x8 : 0, x9 : -0.16651292171459925, x10 : -0.16193739655486647, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001730


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165745 in range [0.000000, 0.331490]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080348 in range [0.000000, 0.160695]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039051 in range [0.000000, 0.078102]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019483 in range [0.000000, 0.038965]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009742 in range [0.000000, 0.019484]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004871 in range [0.000000, 0.009743]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002074 in range [0.000000, 0.004148]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000551 in range [0.000000, 0.001103]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	no solution exists.
	Iteration #011: testing norm threshold 0.000382 in range [0.000255, 0.000510]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000319 in range [0.000255, 0.000383]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.8114560087515492, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.9856174490637424, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.8110408830958659, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.985202323408059, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000382


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175794 in range [0.000000, 0.351588]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087436 in range [0.000000, 0.174871]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043718 in range [0.000000, 0.087437]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021860 in range [0.000000, 0.043719]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010768 in range [0.000000, 0.021536]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005384 in range [0.000000, 0.010769]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002601 in range [0.000000, 0.005202]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001276 in range [0.000000, 0.002552]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000639 in range [0.000000, 0.001277]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000141 in range [0.000000, 0.000282]...	no solution exists.
	Iteration #013: testing norm threshold 0.000212 in range [0.000141, 0.000282]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 1.0, x4 : 1.040536738550906, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.140326102778891, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 1, x4 : 1.039274167467653, x5 : -0.174855574965477, x6 : 0, x7 : 0, x8 : 0, x9 : 1.1390635316956381, x10 : -0.04453119235051017, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000281


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105580 in range [0.000000, 0.211159]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052790 in range [0.000000, 0.105581]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026396 in range [0.000000, 0.052791]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013036 in range [0.000000, 0.026072]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006499 in range [0.000000, 0.012998]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003237 in range [0.000000, 0.006474]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001104 in range [0.000000, 0.002208]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000337 in range [0.000000, 0.000674]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000169 in range [0.000000, 0.000338]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 2.0, x4 : -0.7129721204587166, x5 : -0.4030074190738666, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 2, x4 : -0.7141284616650264, x5 : -0.40748098492622375, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6199860759861493, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142045 in range [0.000000, 0.284090]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069461 in range [0.000000, 0.138922]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030241 in range [0.000000, 0.060483]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014908 in range [0.000000, 0.029817]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007455 in range [0.000000, 0.014909]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003211 in range [0.000000, 0.006422]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001606 in range [0.000000, 0.003212]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000803 in range [0.000000, 0.001607]...	no solution exists.
	Iteration #010: testing norm threshold 0.001205 in range [0.000803, 0.001607]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001005 in range [0.000803, 0.001206]...	no solution exists.
	Iteration #012: testing norm threshold 0.001106 in range [0.001005, 0.001206]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001056 in range [0.001005, 0.001107]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.2089945149001315, x5 : 1.8069339818755563, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.27980127930641174, x5 : 1.801893254775941, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 1.0003427784053862, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001106


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160036 in range [0.000000, 0.320072]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080019 in range [0.000000, 0.160037]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040010 in range [0.000000, 0.080020]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020005 in range [0.000000, 0.040011]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009961 in range [0.000000, 0.019922]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002113 in range [0.000000, 0.004225]...	no solution exists.
	Iteration #008: testing norm threshold 0.003169 in range [0.002113, 0.004225]...	no solution exists.
	Iteration #009: testing norm threshold 0.003697 in range [0.003169, 0.004225]...	no solution exists.
	Iteration #010: testing norm threshold 0.003961 in range [0.003697, 0.004225]...	no solution exists.
	Iteration #011: testing norm threshold 0.004093 in range [0.003961, 0.004225]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004020 in range [0.003961, 0.004079]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.7989606962170388, x5 : 5.654200388386697, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : -0.5614690880877413, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.7971914190314875, x5 : 5.662994841139308, x6 : 1, x7 : 3, x8 : 0, x9 : -0.5638773339729409, x10 : 0.30851806920773894, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004020


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110626 in range [0.000000, 0.221252]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049604 in range [0.000000, 0.099207]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021048 in range [0.000000, 0.042096]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007596 in range [0.000000, 0.015192]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002603 in range [0.000000, 0.005206]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001302 in range [0.000000, 0.002604]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000652 in range [0.000000, 0.001303]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000326 in range [0.000000, 0.000653]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000157 in range [0.000000, 0.000313]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000077 in range [0.000000, 0.000154]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6338351410734843, x5 : -0.24195905787107466, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6335149289214245, x5 : -0.24259948217519428, x6 : 1, x7 : 5, x8 : 0, x9 : -0.5541982926796756, x10 : -0.36303828436840385, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188962 in range [0.000000, 0.377924]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086160 in range [0.000000, 0.172321]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042965 in range [0.000000, 0.085930]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021483 in range [0.000000, 0.042966]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010705 in range [0.000000, 0.021411]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004338 in range [0.000000, 0.008676]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002104 in range [0.000000, 0.004208]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000929 in range [0.000000, 0.001859]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000408 in range [0.000000, 0.000815]...	no solution exists.
	Iteration #011: testing norm threshold 0.000611 in range [0.000408, 0.000815]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000510 in range [0.000408, 0.000612]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000459 in range [0.000408, 0.000511]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.22417631962956155, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3623625869541446, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2222994782307866, x5 : -0.40560414352744883, x6 : 0, x7 : 0, x8 : 0, x9 : 0.36048574555536966, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000510


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107999 in range [0.000000, 0.215999]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053373 in range [0.000000, 0.106747]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026687 in range [0.000000, 0.053374]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013337 in range [0.000000, 0.026674]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006669 in range [0.000000, 0.013338]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003325 in range [0.000000, 0.006649]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001663 in range [0.000000, 0.003326]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000832 in range [0.000000, 0.001664]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000416 in range [0.000000, 0.000833]...	no solution exists.
	Iteration #011: testing norm threshold 0.000625 in range [0.000416, 0.000833]...	no solution exists.
	Iteration #012: testing norm threshold 0.000729 in range [0.000625, 0.000833]...	no solution exists.
	Iteration #013: testing norm threshold 0.000781 in range [0.000729, 0.000833]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.26730597339451323, x5 : 0.5811770104987509, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.17416526126166612, x5 : 0.5775860367569456, x6 : 2, x7 : 4, x8 : 0, x9 : -0.6440729473759773, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000781


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147096 in range [0.000000, 0.294191]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069731 in range [0.000000, 0.139462]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034026 in range [0.000000, 0.068052]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014307 in range [0.000000, 0.028615]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007066 in range [0.000000, 0.014131]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003509 in range [0.000000, 0.007019]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001755 in range [0.000000, 0.003510]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000878 in range [0.000000, 0.001756]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000390 in range [0.000000, 0.000781]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000125 in range [0.000000, 0.000251]...	no solution exists.
	Iteration #012: testing norm threshold 0.000188 in range [0.000125, 0.000251]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4380752446994884, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3404567256375294, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4379648369465144, x5 : -0.33590394258499146, x6 : 0, x7 : 6, x8 : 0, x9 : -0.3403463178845554, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000188


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136054 in range [0.000000, 0.272107]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067843 in range [0.000000, 0.135685]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033922 in range [0.000000, 0.067844]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016961 in range [0.000000, 0.033923]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008398 in range [0.000000, 0.016795]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004047 in range [0.000000, 0.008094]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002024 in range [0.000000, 0.004048]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000930 in range [0.000000, 0.001860]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000419 in range [0.000000, 0.000838]...	no solution exists.
	Iteration #011: testing norm threshold 0.000629 in range [0.000419, 0.000838]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000524 in range [0.000419, 0.000630]...	no solution exists.
	Iteration #013: testing norm threshold 0.000577 in range [0.000524, 0.000630]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.9280789257403128, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.0872831357908397, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 0.9272668140874374, x5 : -0.15614919527671287, x6 : 0, x7 : 0, x8 : 6, x9 : 1.0839223591882736, x10 : 0.2006132139334922, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000629


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108965 in range [0.000000, 0.217929]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054466 in range [0.000000, 0.108931]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027139 in range [0.000000, 0.054278]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013538 in range [0.000000, 0.027075]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006292 in range [0.000000, 0.012585]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003093 in range [0.000000, 0.006185]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001547 in range [0.000000, 0.003094]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000664 in range [0.000000, 0.001328]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000303 in range [0.000000, 0.000606]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000152 in range [0.000000, 0.000304]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000077 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.458900765590339, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.464223648609648, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4651484340429306, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 1, x9 : -0.464223648609648, x10 : -0.18433465712990763, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140162 in range [0.000000, 0.280324]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059319 in range [0.000000, 0.118638]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029660 in range [0.000000, 0.059320]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013267 in range [0.000000, 0.026535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006634 in range [0.000000, 0.013268]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002525 in range [0.000000, 0.005050]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000723 in range [0.000000, 0.001445]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000362 in range [0.000000, 0.000724]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000181 in range [0.000000, 0.000363]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5963492034699531, x5 : -0.4209016814297324, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.5084261210996904, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6007225108388724, x5 : -0.42272695194641746, x6 : 2, x7 : 5, x8 : 0, x9 : -0.5075134858413479, x10 : -0.3584325399502738, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117874 in range [0.000000, 0.235749]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056189 in range [0.000000, 0.112377]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027715 in range [0.000000, 0.055430]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013168 in range [0.000000, 0.026336]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006541 in range [0.000000, 0.013081]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003271 in range [0.000000, 0.006542]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001636 in range [0.000000, 0.003272]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000390 in range [0.000000, 0.000780]...	no solution exists.
	Iteration #010: testing norm threshold 0.000585 in range [0.000390, 0.000780]...	no solution exists.
	Iteration #011: testing norm threshold 0.000683 in range [0.000585, 0.000780]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.03822524359515636, x5 : -0.295641844938672, x6 : 0.0, x7 : 4.0, x8 : 2.0, x9 : 0.044104785025839394, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.11944477632641792, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 2, x9 : 0.03993968322945077, x10 : -0.041186070369063056, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000779


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103772 in range [0.000000, 0.207544]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048874 in range [0.000000, 0.097748]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024438 in range [0.000000, 0.048875]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012219 in range [0.000000, 0.024439]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006110 in range [0.000000, 0.012220]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003056 in range [0.000000, 0.006111]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001474 in range [0.000000, 0.002949]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000449 in range [0.000000, 0.000899]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000225 in range [0.000000, 0.000450]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 2.7065784098189565, x5 : 0.008560615111046171, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.789078326657472, x10 : 0.3323845943720745, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 2.703537804645823, x5 : -0.018280779011547565, x6 : 0, x7 : 0, x8 : 6, x9 : 2.786037721484339, x10 : 0.3293439891989412, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000113


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152224 in range [0.000000, 0.304447]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075422 in range [0.000000, 0.150844]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037711 in range [0.000000, 0.075423]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018736 in range [0.000000, 0.037471]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009368 in range [0.000000, 0.018737]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004583 in range [0.000000, 0.009165]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001093 in range [0.000000, 0.002185]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000484 in range [0.000000, 0.000968]...	no solution exists.
	Iteration #010: testing norm threshold 0.000726 in range [0.000484, 0.000968]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000606 in range [0.000484, 0.000727]...	no solution exists.
	Iteration #012: testing norm threshold 0.000666 in range [0.000606, 0.000727]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 1.1946455931432007, x5 : -0.4298488126076653, x6 : 0.0, x7 : 5.0, x8 : 1.0, x9 : 1.3922801959721325, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 1.1924979316637527, x5 : -0.15481364545014029, x6 : 0, x7 : 5, x8 : 1, x9 : 1.3901325344926845, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000726


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101489 in range [0.000000, 0.202979]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050745 in range [0.000000, 0.101490]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025373 in range [0.000000, 0.050746]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012687 in range [0.000000, 0.025374]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005108 in range [0.000000, 0.010216]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002099 in range [0.000000, 0.004198]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000969 in range [0.000000, 0.001937]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000245 in range [0.000000, 0.000489]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	no solution exists.
	Iteration #011: testing norm threshold 0.000184 in range [0.000123, 0.000246]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5505330575100817, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4951653793526778, x10 : -0.3747273409490208, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5505330575100817, x5 : -0.2715086266902833, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4969307571217756, x10 : -0.3619133309034257, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000184


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181217 in range [0.000000, 0.362435]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090402 in range [0.000000, 0.180804]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038681 in range [0.000000, 0.077362]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019341 in range [0.000000, 0.038682]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009671 in range [0.000000, 0.019342]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003868 in range [0.000000, 0.007735]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001934 in range [0.000000, 0.003869]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000968 in range [0.000000, 0.001935]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000472 in range [0.000000, 0.000944]...	no solution exists.
	Iteration #011: testing norm threshold 0.000708 in range [0.000472, 0.000944]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000591 in range [0.000472, 0.000709]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000532 in range [0.000472, 0.000592]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3131221193543846, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2078493081674022, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3134269248378628, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.22332017123699188, x10 : -0.2642411010550996, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000532


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121068 in range [0.000000, 0.242136]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060534 in range [0.000000, 0.121069]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030268 in range [0.000000, 0.060535]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013897 in range [0.000000, 0.027794]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006948 in range [0.000000, 0.013896]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003475 in range [0.000000, 0.006949]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001654 in range [0.000000, 0.003308]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000785 in range [0.000000, 0.001570]...	no solution exists.
	Iteration #010: testing norm threshold 0.001178 in range [0.000785, 0.001570]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000918 in range [0.000785, 0.001052]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000849 in range [0.000785, 0.000913]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 4.543389352391982, x5 : 0.14276758278003948, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 4.526235495516137, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 4.542719896695509, x5 : -0.19722339883446693, x6 : 0, x7 : 0, x8 : 6, x9 : 4.526241320142842, x10 : -0.363009252976051, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000912


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.081021 in range [0.000000, 0.162042]...	solution exists & found.
	Iteration #003: testing norm threshold 0.040511 in range [0.000000, 0.081022]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020140 in range [0.000000, 0.040280]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009921 in range [0.000000, 0.019842]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004088 in range [0.000000, 0.008176]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002045 in range [0.000000, 0.004089]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001023 in range [0.000000, 0.002046]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000512 in range [0.000000, 0.001024]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000513]...	no solution exists.
	Iteration #011: testing norm threshold 0.000385 in range [0.000256, 0.000513]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000321 in range [0.000256, 0.000386]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.21168100709505114, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.31373986721509795, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.2560331640418383, x5 : -0.32633824221531427, x6 : 0, x7 : 0, x8 : 3, x9 : 0.3131213008633651, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000385


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127450 in range [0.000000, 0.254901]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061567 in range [0.000000, 0.123135]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030102 in range [0.000000, 0.060204]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014999 in range [0.000000, 0.029998]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007500 in range [0.000000, 0.015000]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003750 in range [0.000000, 0.007501]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001226 in range [0.000000, 0.002453]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000529 in range [0.000000, 0.001057]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7358801960945129, x5 : -0.36274532973766327, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6565043926239014, x10 : -0.3532358451001962, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000133


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147742 in range [0.000000, 0.295485]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073730 in range [0.000000, 0.147460]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034481 in range [0.000000, 0.068961]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016579 in range [0.000000, 0.033157]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008290 in range [0.000000, 0.016580]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001801 in range [0.000000, 0.003603]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000621 in range [0.000000, 0.001242]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000267 in range [0.000000, 0.000534]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3755986820269365, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.32277573664151243, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3755986820269365, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.32487350887638244, x10 : -0.37472734094902077, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119337 in range [0.000000, 0.238674]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059669 in range [0.000000, 0.119338]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028020 in range [0.000000, 0.056039]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013877 in range [0.000000, 0.027754]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006131 in range [0.000000, 0.012262]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002406 in range [0.000000, 0.004811]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000935 in range [0.000000, 0.001870]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000408 in range [0.000000, 0.000815]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000204 in range [0.000000, 0.000409]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000103 in range [0.000000, 0.000205]...	no solution exists.
	Iteration #012: testing norm threshold 0.000154 in range [0.000103, 0.000205]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.3493246320062693, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7233848869800568, x5 : -0.33369380235671997, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6388234198093414, x10 : -0.36947053236214916, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000154


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135156 in range [0.000000, 0.270312]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067578 in range [0.000000, 0.135157]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032184 in range [0.000000, 0.064367]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012650 in range [0.000000, 0.025299]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006215 in range [0.000000, 0.012430]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003106 in range [0.000000, 0.006211]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001428 in range [0.000000, 0.002857]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000172 in range [0.000000, 0.000344]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000087 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.727153138913795, x5 : -0.3586686242227235, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141204 in range [0.000000, 0.282409]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070603 in range [0.000000, 0.141205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035302 in range [0.000000, 0.070604]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016457 in range [0.000000, 0.032913]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007165 in range [0.000000, 0.014330]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003583 in range [0.000000, 0.007166]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001792 in range [0.000000, 0.003584]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000589 in range [0.000000, 0.001178]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000295 in range [0.000000, 0.000590]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000148 in range [0.000000, 0.000296]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.758788266418588, x5 : -0.3403775008283364, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7601823762404234, x5 : -0.34177161065017175, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6948925088877288, x10 : -0.36228459885068814, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108011 in range [0.000000, 0.216021]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050353 in range [0.000000, 0.100706]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025177 in range [0.000000, 0.050354]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012099 in range [0.000000, 0.024198]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006038 in range [0.000000, 0.012075]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002478 in range [0.000000, 0.004956]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001226 in range [0.000000, 0.002451]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000378 in range [0.000000, 0.000756]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000379]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6796512870333556, x5 : -0.2240647955152089, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7025593817234039, x5 : -0.24195906519889832, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.06560015740309166, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000189


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120922 in range [0.000000, 0.241845]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060462 in range [0.000000, 0.120923]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029884 in range [0.000000, 0.059768]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014188 in range [0.000000, 0.028375]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006649 in range [0.000000, 0.013299]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003210 in range [0.000000, 0.006420]...	no solution exists.
	Iteration #008: testing norm threshold 0.004815 in range [0.003210, 0.006420]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004013 in range [0.003210, 0.004816]...	no solution exists.
	Iteration #010: testing norm threshold 0.004414 in range [0.004013, 0.004816]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004142 in range [0.004013, 0.004270]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004078 in range [0.004013, 0.004143]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 2.8523570560549105, x5 : 14.010820908576012, x6 : 2.0, x7 : 3.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 2.8517507825317354, x5 : 14.010214635052836, x6 : 2, x7 : 3, x8 : 0, x9 : -0.6337968956319459, x10 : -0.36307243514934845, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137512 in range [0.000000, 0.275024]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066541 in range [0.000000, 0.133081]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033271 in range [0.000000, 0.066542]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016082 in range [0.000000, 0.032164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007598 in range [0.000000, 0.015195]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002458 in range [0.000000, 0.004916]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000294 in range [0.000000, 0.000588]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000148 in range [0.000000, 0.000295]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.004904410169795361, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.11924898825891145, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.005052354058404935, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 3, x9 : 0.11910104437030188, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115436 in range [0.000000, 0.230873]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057134 in range [0.000000, 0.114268]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027894 in range [0.000000, 0.055789]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011433 in range [0.000000, 0.022866]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005163 in range [0.000000, 0.010326]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002582 in range [0.000000, 0.005164]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001291 in range [0.000000, 0.002583]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000457 in range [0.000000, 0.000914]...	no solution exists.
	Iteration #010: testing norm threshold 0.000685 in range [0.000457, 0.000914]...	no solution exists.
	Iteration #011: testing norm threshold 0.000799 in range [0.000685, 0.000914]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000743 in range [0.000685, 0.000800]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.9613997591656736, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.0298199215537849, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.9613997591656736, x5 : -0.09949651403435665, x6 : 0, x7 : 0, x8 : 6, x9 : 1.0260379104144774, x10 : 0.19253449099055334, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000743


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102254 in range [0.000000, 0.204508]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051127 in range [0.000000, 0.102255]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025564 in range [0.000000, 0.051128]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012600 in range [0.000000, 0.025201]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006301 in range [0.000000, 0.012601]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003151 in range [0.000000, 0.006302]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001517 in range [0.000000, 0.003033]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000725 in range [0.000000, 0.001451]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000342 in range [0.000000, 0.000685]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000144 in range [0.000000, 0.000287]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000072 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4672309739466792, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4156009288706015, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.46423828890173524, x5 : -0.34394093146174043, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4156009288706015, x10 : -0.1638933374509105, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.183805 in range [0.000000, 0.367609]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091903 in range [0.000000, 0.183806]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040787 in range [0.000000, 0.081574]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020394 in range [0.000000, 0.040788]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007030 in range [0.000000, 0.014060]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003515 in range [0.000000, 0.007031]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001758 in range [0.000000, 0.003516]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000825 in range [0.000000, 0.001650]...	no solution exists.
	Iteration #010: testing norm threshold 0.001237 in range [0.000825, 0.001650]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001032 in range [0.000825, 0.001238]...	no solution exists.
	Iteration #012: testing norm threshold 0.001135 in range [0.001032, 0.001238]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001084 in range [0.001032, 0.001136]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : 0.11592618924624082, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : 0.31028734639329025, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4219064118369504, x5 : -0.25090619921684265, x6 : 2, x7 : 6, x8 : 0, x9 : -0.623191359444543, x10 : 0.31012614841710257, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112920 in range [0.000000, 0.225840]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054800 in range [0.000000, 0.109600]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027247 in range [0.000000, 0.054494]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013286 in range [0.000000, 0.026572]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006642 in range [0.000000, 0.013284]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003322 in range [0.000000, 0.006643]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001299 in range [0.000000, 0.002597]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000471 in range [0.000000, 0.000943]...	no solution exists.
	Iteration #010: testing norm threshold 0.000707 in range [0.000471, 0.000943]...	no solution exists.
	Iteration #011: testing norm threshold 0.000825 in range [0.000707, 0.000943]...	no solution exists.
	Iteration #012: testing norm threshold 0.000884 in range [0.000825, 0.000943]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5755236825791025, x5 : 0.03540200864484483, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6380002498626709, x5 : -0.09126283981178338, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5813601911067963, x10 : -0.05431724339723587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000884


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141582 in range [0.000000, 0.283165]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069381 in range [0.000000, 0.138761]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034691 in range [0.000000, 0.069382]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017346 in range [0.000000, 0.034692]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008621 in range [0.000000, 0.017241]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003825 in range [0.000000, 0.007650]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001913 in range [0.000000, 0.003826]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000957 in range [0.000000, 0.001914]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000436 in range [0.000000, 0.000872]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000219 in range [0.000000, 0.000437]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000110 in range [0.000000, 0.000220]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000055 in range [0.000000, 0.000111]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.41279950558472883, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153802 in range [0.000000, 0.307605]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076902 in range [0.000000, 0.153803]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037083 in range [0.000000, 0.074167]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018463 in range [0.000000, 0.036927]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008955 in range [0.000000, 0.017910]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004264 in range [0.000000, 0.008528]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002132 in range [0.000000, 0.004265]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001067 in range [0.000000, 0.002133]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000534 in range [0.000000, 0.001068]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000267 in range [0.000000, 0.000535]...	no solution exists.
	Iteration #012: testing norm threshold 0.000401 in range [0.000267, 0.000535]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000335 in range [0.000267, 0.000402]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.35893826531425604, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.27857326415147005, x10 : -0.2200466050975312, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.3524428041150976, x5 : -0.3535504074266363, x6 : 0, x7 : 0, x8 : 6, x9 : -0.25180397494344003, x10 : -0.1866529242566038, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000335


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128225 in range [0.000000, 0.256451]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064113 in range [0.000000, 0.128226]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031858 in range [0.000000, 0.063717]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012205 in range [0.000000, 0.024411]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006103 in range [0.000000, 0.012206]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001746 in range [0.000000, 0.003493]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000570 in range [0.000000, 0.001141]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000238 in range [0.000000, 0.000477]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7723248511954899, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167186 in range [0.000000, 0.334373]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083594 in range [0.000000, 0.167187]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041797 in range [0.000000, 0.083595]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020899 in range [0.000000, 0.041798]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010450 in range [0.000000, 0.020900]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004900 in range [0.000000, 0.009801]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002451 in range [0.000000, 0.004901]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000774 in range [0.000000, 0.001547]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000368 in range [0.000000, 0.000737]...	no solution exists.
	Iteration #011: testing norm threshold 0.000552 in range [0.000368, 0.000737]...	no solution exists.
	Iteration #012: testing norm threshold 0.000645 in range [0.000552, 0.000737]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.743733504299222, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6140351681748019, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000645


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.077320 in range [0.000000, 0.154641]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038658 in range [0.000000, 0.077315]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017919 in range [0.000000, 0.035837]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008424 in range [0.000000, 0.016848]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000483 in range [0.000000, 0.000966]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000236 in range [0.000000, 0.000472]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000118 in range [0.000000, 0.000237]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000060 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7732613809560444, x5 : -0.41632337646233103, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6961818762277271, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125192 in range [0.000000, 0.250383]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060237 in range [0.000000, 0.120474]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027167 in range [0.000000, 0.054333]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012226 in range [0.000000, 0.024452]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006113 in range [0.000000, 0.012227]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002063 in range [0.000000, 0.004126]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001032 in range [0.000000, 0.002064]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000510 in range [0.000000, 0.001021]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000511]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4130846196304676, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.3758187036295633, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4005210047776168, x5 : -0.34927520890561825, x6 : 0, x7 : 0, x8 : 5, x9 : -0.3758870010341441, x10 : -0.2646118010693312, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115509 in range [0.000000, 0.231018]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057524 in range [0.000000, 0.115047]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027297 in range [0.000000, 0.054595]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013015 in range [0.000000, 0.026030]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006508 in range [0.000000, 0.013016]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001990 in range [0.000000, 0.003979]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000236 in range [0.000000, 0.000472]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000119 in range [0.000000, 0.000237]...	no solution exists.
	Iteration #010: testing norm threshold 0.000178 in range [0.000119, 0.000237]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7254674329932271, x5 : -0.3224832384724706, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7608708143234253, x5 : -0.32613035494741155, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.11320748167855096, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000236


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110327 in range [0.000000, 0.220655]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053861 in range [0.000000, 0.107723]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026929 in range [0.000000, 0.053858]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012898 in range [0.000000, 0.025797]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006450 in range [0.000000, 0.012899]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002946 in range [0.000000, 0.005893]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001474 in range [0.000000, 0.002947]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000737 in range [0.000000, 0.001475]...	no solution exists.
	Iteration #010: testing norm threshold 0.001106 in range [0.000737, 0.001475]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000922 in range [0.000737, 0.001107]...	no solution exists.
	Iteration #012: testing norm threshold 0.001015 in range [0.000922, 0.001107]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.0655273636199267, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.2552525312530007, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.0654964601447459, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.2552216277778199, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001106


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.204645 in range [0.000000, 0.409291]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098336 in range [0.000000, 0.196671]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049168 in range [0.000000, 0.098337]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024585 in range [0.000000, 0.049169]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012293 in range [0.000000, 0.024586]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004458 in range [0.000000, 0.008915]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002170 in range [0.000000, 0.004341]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001081 in range [0.000000, 0.002162]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000541 in range [0.000000, 0.001082]...	no solution exists.
	Iteration #011: testing norm threshold 0.000811 in range [0.000541, 0.001082]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000662 in range [0.000541, 0.000784]...	no solution exists.
	Iteration #013: testing norm threshold 0.000723 in range [0.000662, 0.000784]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.3422778486015755, x5 : -0.4209016814297324, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.2387910389104319, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.4484879970550537, x5 : -0.3762193385858751, x6 : 0, x7 : 5, x8 : 0, x9 : -0.2432112831969476, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000783


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128814 in range [0.000000, 0.257628]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063068 in range [0.000000, 0.126136]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030616 in range [0.000000, 0.061232]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014198 in range [0.000000, 0.028396]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007068 in range [0.000000, 0.014137]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002620 in range [0.000000, 0.005239]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000522 in range [0.000000, 0.001044]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000262 in range [0.000000, 0.000523]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000131 in range [0.000000, 0.000263]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.004904410169795361, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.030844043278826675, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.005180890145161404, x5 : -0.3356274626096254, x6 : 0, x7 : 0, x8 : 0, x9 : 0.03056756330346063, x10 : -0.20872149978480395, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.190910 in range [0.000000, 0.381820]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093204 in range [0.000000, 0.186409]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046603 in range [0.000000, 0.093205]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023302 in range [0.000000, 0.046604]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011651 in range [0.000000, 0.023303]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005826 in range [0.000000, 0.011652]...	no solution exists.
	Iteration #008: testing norm threshold 0.008739 in range [0.005826, 0.011652]...	no solution exists.
	Iteration #009: testing norm threshold 0.010196 in range [0.008739, 0.011652]...	solution exists & found.
	Iteration #010: testing norm threshold 0.009468 in range [0.008739, 0.010197]...	no solution exists.
	Iteration #011: testing norm threshold 0.009832 in range [0.009468, 0.010197]...	no solution exists.
	Iteration #012: testing norm threshold 0.010015 in range [0.009832, 0.010197]...	no solution exists.
	Iteration #013: testing norm threshold 0.010106 in range [0.010015, 0.010197]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.4699174661415989, x5 : 2.299026196661865, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : 0.02642379602982244, x10 : 6.36493329258017, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.769201010465622, x5 : 2.297510918899091, x6 : 2, x7 : 4, x8 : 0, x9 : 0.5937307263807091, x10 : 6.3634180148173956, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.010196


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143226 in range [0.000000, 0.286452]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071614 in range [0.000000, 0.143227]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035522 in range [0.000000, 0.071043]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014805 in range [0.000000, 0.029611]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004002 in range [0.000000, 0.008003]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001952 in range [0.000000, 0.003903]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000389 in range [0.000000, 0.000778]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4005893070959573, x5 : -0.3851131567180008, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.30067450039649124, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4016305828821423, x5 : -0.4024746754224106, x6 : 0, x7 : 5, x8 : 0, x9 : -0.30171577618267625, x10 : -0.3626374328863385, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131930 in range [0.000000, 0.263860]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049201 in range [0.000000, 0.098402]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024468 in range [0.000000, 0.048935]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010157 in range [0.000000, 0.020314]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004831 in range [0.000000, 0.009661]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002368 in range [0.000000, 0.004736]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000645 in range [0.000000, 0.001290]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000254 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000255]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7669642261194376, x5 : -0.4141913345979838, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6896295837091593, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140635 in range [0.000000, 0.281270]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067510 in range [0.000000, 0.135021]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033616 in range [0.000000, 0.067231]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015619 in range [0.000000, 0.031238]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007295 in range [0.000000, 0.014589]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002976 in range [0.000000, 0.005952]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000912 in range [0.000000, 0.001824]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000457 in range [0.000000, 0.000913]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4005893070959573, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3050947476454955, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.40069196681056285, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 6, x9 : -0.30519740736010104, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159947 in range [0.000000, 0.319894]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079974 in range [0.000000, 0.159948]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037767 in range [0.000000, 0.075533]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017364 in range [0.000000, 0.034727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007026 in range [0.000000, 0.014053]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003514 in range [0.000000, 0.007027]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001348 in range [0.000000, 0.002696]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7598295403710067, x5 : -0.4064397109738051, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3184429450026213, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148155 in range [0.000000, 0.296309]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070999 in range [0.000000, 0.141999]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035500 in range [0.000000, 0.071000]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017751 in range [0.000000, 0.035501]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008833 in range [0.000000, 0.017665]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004329 in range [0.000000, 0.008657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002165 in range [0.000000, 0.004330]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000996 in range [0.000000, 0.001992]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000419 in range [0.000000, 0.000838]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000355]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000089 in range [0.000000, 0.000179]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7725382552990905, x5 : -0.41560025080537705, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000089


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151299 in range [0.000000, 0.302598]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072655 in range [0.000000, 0.145309]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036181 in range [0.000000, 0.072362]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017897 in range [0.000000, 0.035794]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008161 in range [0.000000, 0.016321]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002550 in range [0.000000, 0.005100]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001209 in range [0.000000, 0.002418]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000472 in range [0.000000, 0.000945]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000196 in range [0.000000, 0.000392]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000197]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6754861828551855, x5 : -0.215117664337276, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7011132585071255, x5 : -0.21064408540219548, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6410335493037153, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000196


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180829 in range [0.000000, 0.361657]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090415 in range [0.000000, 0.180830]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045208 in range [0.000000, 0.090416]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020907 in range [0.000000, 0.041813]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008589 in range [0.000000, 0.017178]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002574 in range [0.000000, 0.005148]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001287 in range [0.000000, 0.002575]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000580 in range [0.000000, 0.001159]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000269 in range [0.000000, 0.000539]...	no solution exists.
	Iteration #011: testing norm threshold 0.000404 in range [0.000269, 0.000539]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000333 in range [0.000269, 0.000396]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6838163912115257, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6378726959228516, x5 : -0.3537982106208801, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6587145328521729, x10 : -0.17585210913996274, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000395


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112424 in range [0.000000, 0.224848]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056213 in range [0.000000, 0.112425]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027789 in range [0.000000, 0.055578]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013457 in range [0.000000, 0.026915]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006729 in range [0.000000, 0.013458]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002421 in range [0.000000, 0.004843]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001084 in range [0.000000, 0.002169]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000543 in range [0.000000, 0.001085]...	no solution exists.
	Iteration #010: testing norm threshold 0.000814 in range [0.000543, 0.001085]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000670 in range [0.000543, 0.000796]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000607 in range [0.000543, 0.000671]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6338351410734843, x5 : -0.3403775008283364, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6331845757801914, x5 : -0.4030074179172516, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.31818308836845427, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000607


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.236399 in range [0.000000, 0.472797]...	solution exists & found.
	Iteration #003: testing norm threshold 0.118200 in range [0.000000, 0.236400]...	solution exists & found.
	Iteration #004: testing norm threshold 0.055237 in range [0.000000, 0.110475]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027260 in range [0.000000, 0.054520]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013602 in range [0.000000, 0.027204]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006797 in range [0.000000, 0.013594]...	no solution exists.
	Iteration #008: testing norm threshold 0.010196 in range [0.006797, 0.013594]...	no solution exists.
	Iteration #009: testing norm threshold 0.011895 in range [0.010196, 0.013594]...	solution exists & found.
	Iteration #010: testing norm threshold 0.010429 in range [0.010196, 0.010663]...	no solution exists.
	Iteration #011: testing norm threshold 0.010546 in range [0.010429, 0.010663]...	solution exists & found.
	Iteration #012: testing norm threshold 0.010488 in range [0.010429, 0.010547]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.0447018427290762, x5 : 0.9390622576160664, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 1.0298199215537849, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.5509732144431467, x5 : 0.5274942219257355, x6 : 1, x7 : 4, x8 : 0, x9 : 1.0271511457016416, x10 : 0.7190864384174347, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.010546


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145173 in range [0.000000, 0.290346]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072582 in range [0.000000, 0.145163]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036141 in range [0.000000, 0.072282]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018071 in range [0.000000, 0.036142]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008753 in range [0.000000, 0.017505]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004286 in range [0.000000, 0.008571]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001508 in range [0.000000, 0.003017]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000726 in range [0.000000, 0.001452]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000363 in range [0.000000, 0.000727]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000228]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4089195154522975, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.31393524214350393, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4120433416175405, x5 : -0.3596215035724203, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3161453753709793, x10 : -0.26736492722034266, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079397 in range [0.000000, 0.158795]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039699 in range [0.000000, 0.079398]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019850 in range [0.000000, 0.039700]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009926 in range [0.000000, 0.019851]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004963 in range [0.000000, 0.009927]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002188 in range [0.000000, 0.004375]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000773 in range [0.000000, 0.001546]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000387 in range [0.000000, 0.000774]...	no solution exists.
	Iteration #010: testing norm threshold 0.000580 in range [0.000387, 0.000774]...	no solution exists.
	Iteration #011: testing norm threshold 0.000677 in range [0.000580, 0.000774]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.83190653240323, x5 : -0.1435406149138129, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : 1.9580718438446751, x10 : 0.3323845943720745, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.8320811687865564, x5 : -0.40748098492622375, x6 : 0, x7 : 3, x8 : 3, x9 : 1.9577225710780222, x10 : 0.33255923075540095, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000677


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156804 in range [0.000000, 0.313608]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078403 in range [0.000000, 0.156805]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039033 in range [0.000000, 0.078066]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019337 in range [0.000000, 0.038674]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009669 in range [0.000000, 0.019338]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003321 in range [0.000000, 0.006643]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001661 in range [0.000000, 0.003322]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000106 in range [0.000000, 0.000212]...	no solution exists.
	Iteration #010: testing norm threshold 0.000159 in range [0.000106, 0.000212]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.769201010465622, x5 : -0.35623370967257423, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000159


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142520 in range [0.000000, 0.285040]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070714 in range [0.000000, 0.141428]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035153 in range [0.000000, 0.070306]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017558 in range [0.000000, 0.035117]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008083 in range [0.000000, 0.016166]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002634 in range [0.000000, 0.005267]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001187 in range [0.000000, 0.002374]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000594 in range [0.000000, 0.001188]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	no solution exists.
	Iteration #011: testing norm threshold 0.000170 in range [0.000114, 0.000227]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.17983878565294062, x5 : -0.3851131567180008, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.06640139619926658, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.17983878565294062, x5 : -0.3985338509082794, x6 : 0, x7 : 3, x8 : 0, x9 : -0.06640139619926658, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000226


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136382 in range [0.000000, 0.272764]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068026 in range [0.000000, 0.136051]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033745 in range [0.000000, 0.067490]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015410 in range [0.000000, 0.030820]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007705 in range [0.000000, 0.015411]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003853 in range [0.000000, 0.007706]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001761 in range [0.000000, 0.003522]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000881 in range [0.000000, 0.001762]...	no solution exists.
	Iteration #010: testing norm threshold 0.001321 in range [0.000881, 0.001762]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001089 in range [0.000881, 0.001298]...	no solution exists.
	Iteration #012: testing norm threshold 0.001194 in range [0.001089, 0.001298]...	no solution exists.
	Iteration #013: testing norm threshold 0.001246 in range [0.001194, 0.001298]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3464429527797456, x5 : -0.17038200844761156, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.2432112861594361, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.4484879970550537, x5 : 0.08469366948127537, x6 : 1, x7 : 5, x8 : 0, x9 : -0.2454214068214497, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001246


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125539 in range [0.000000, 0.251079]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062146 in range [0.000000, 0.124293]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031062 in range [0.000000, 0.062125]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015214 in range [0.000000, 0.030427]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007588 in range [0.000000, 0.015177]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003231 in range [0.000000, 0.006462]...	no solution exists.
	Iteration #008: testing norm threshold 0.004847 in range [0.003231, 0.006462]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003960 in range [0.003231, 0.004689]...	no solution exists.
	Iteration #010: testing norm threshold 0.004324 in range [0.003960, 0.004689]...	no solution exists.
	Iteration #011: testing norm threshold 0.004506 in range [0.004324, 0.004689]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004416 in range [0.004324, 0.004507]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.14087423606615898, x5 : 0.2501331569152341, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.4332819178666184, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.585936427116394, x5 : 0.2501331569152341, x6 : 0, x7 : 4, x8 : 0, x9 : -0.44943415542289217, x10 : 0.2329469695687294, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004506


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128629 in range [0.000000, 0.257258]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058935 in range [0.000000, 0.117869]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029468 in range [0.000000, 0.058936]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014614 in range [0.000000, 0.029227]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007307 in range [0.000000, 0.014615]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003654 in range [0.000000, 0.007308]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001828 in range [0.000000, 0.003655]...	no solution exists.
	Iteration #009: testing norm threshold 0.002741 in range [0.001828, 0.003655]...	no solution exists.
	Iteration #010: testing norm threshold 0.003198 in range [0.002741, 0.003655]...	no solution exists.
	Iteration #011: testing norm threshold 0.003427 in range [0.003198, 0.003655]...	no solution exists.
	Iteration #012: testing norm threshold 0.003541 in range [0.003427, 0.003655]...	no solution exists.
	Iteration #013: testing norm threshold 0.003598 in range [0.003541, 0.003655]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.3631033694924261, x5 : 0.25908028809316697, x6 : 4.0, x7 : 5.0, x8 : 0.0, x9 : -0.2608922751554531, x10 : 0.5312598261811325, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.36596726102503785, x5 : -0.26432688534259796, x6 : 4, x7 : 5, x8 : 0, x9 : -0.6786056458950043, x10 : 0.5283959346485209, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003654


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106428 in range [0.000000, 0.212856]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053079 in range [0.000000, 0.106158]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026540 in range [0.000000, 0.053080]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013271 in range [0.000000, 0.026541]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006636 in range [0.000000, 0.013272]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003318 in range [0.000000, 0.006637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001660 in range [0.000000, 0.003319]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000830 in range [0.000000, 0.001661]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000416 in range [0.000000, 0.000831]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000208 in range [0.000000, 0.000417]...	no solution exists.
	Iteration #012: testing norm threshold 0.000313 in range [0.000208, 0.000417]...	no solution exists.
	Iteration #013: testing norm threshold 0.000365 in range [0.000313, 0.000417]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.14651795222757966, x5 : -0.3493246320062693, x6 : 0.0, x7 : 2.0, x8 : 3.0, x9 : -0.08408238519528352, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.14685882387388136, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 3, x9 : -0.04616941312025315, x10 : -0.1776330230716061, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000365


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112221 in range [0.000000, 0.224442]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056111 in range [0.000000, 0.112222]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026818 in range [0.000000, 0.053636]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013252 in range [0.000000, 0.026504]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006626 in range [0.000000, 0.013253]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002984 in range [0.000000, 0.005968]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001492 in range [0.000000, 0.002985]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000747 in range [0.000000, 0.001493]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000374 in range [0.000000, 0.000748]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000187 in range [0.000000, 0.000375]...	no solution exists.
	Iteration #012: testing norm threshold 0.000281 in range [0.000187, 0.000375]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.125692431336729, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.01777867646021995, x10 : -0.24214385307631545, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.1286922197771869, x5 : -0.30906254053115845, x6 : 0, x7 : 0, x8 : 4, x9 : -0.014336014806440112, x10 : -0.18390093901038973, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000272


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096878 in range [0.000000, 0.193757]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048440 in range [0.000000, 0.096879]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024149 in range [0.000000, 0.048297]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012068 in range [0.000000, 0.024136]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006035 in range [0.000000, 0.012069]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003018 in range [0.000000, 0.006036]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001087 in range [0.000000, 0.002174]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000544 in range [0.000000, 0.001088]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000253 in range [0.000000, 0.000507]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.7652648655525078, x5 : -0.054069303134484034, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.9403908548486581, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 1.7645365376055864, x5 : -0.05479763108140542, x6 : 0, x7 : 0, x8 : 6, x9 : 1.9396625269017367, x10 : 0.1673835629394255, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143076 in range [0.000000, 0.286153]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070510 in range [0.000000, 0.141020]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034443 in range [0.000000, 0.068885]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017068 in range [0.000000, 0.034135]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008354 in range [0.000000, 0.016708]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002435 in range [0.000000, 0.004871]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001218 in range [0.000000, 0.002436]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000532 in range [0.000000, 0.001064]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000266 in range [0.000000, 0.000531]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.39349969262558027, x10 : -0.24214385307631545, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.41657566754324105, x5 : -0.31577289092182026, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4156009256839752, x10 : -0.23109523206949234, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116552 in range [0.000000, 0.233104]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057636 in range [0.000000, 0.115272]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028819 in range [0.000000, 0.057637]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014410 in range [0.000000, 0.028820]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007205 in range [0.000000, 0.014411]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003532 in range [0.000000, 0.007063]...	no solution exists.
	Iteration #008: testing norm threshold 0.005297 in range [0.003532, 0.007063]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004415 in range [0.003532, 0.005298]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003974 in range [0.003532, 0.004416]...	no solution exists.
	Iteration #011: testing norm threshold 0.004195 in range [0.003974, 0.004416]...	no solution exists.
	Iteration #012: testing norm threshold 0.004306 in range [0.004195, 0.004416]...	no solution exists.
	Iteration #013: testing norm threshold 0.004361 in range [0.004306, 0.004416]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.3824502784000263, x5 : 0.11592618924624082, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 0.2783778892230641, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.1486005038022995, x5 : -0.3985338509082794, x6 : 1, x7 : 1, x8 : 0, x9 : 0.2761487930010829, x10 : 0.9743193338678077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004361


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165367 in range [0.000000, 0.330734]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082684 in range [0.000000, 0.165368]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041325 in range [0.000000, 0.082651]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020663 in range [0.000000, 0.041326]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009509 in range [0.000000, 0.019018]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004360 in range [0.000000, 0.008719]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000660 in range [0.000000, 0.001320]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000303 in range [0.000000, 0.000605]...	no solution exists.
	Iteration #010: testing norm threshold 0.000454 in range [0.000303, 0.000605]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000379 in range [0.000303, 0.000455]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 1.0863528845107775, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.2685132730000137, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 1.0859663426567525, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.2673380258490698, x10 : 0.13350936256301646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000454


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105073 in range [0.000000, 0.210147]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052378 in range [0.000000, 0.104757]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026190 in range [0.000000, 0.052379]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013095 in range [0.000000, 0.026191]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006548 in range [0.000000, 0.013096]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003047 in range [0.000000, 0.006095]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001406 in range [0.000000, 0.002812]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000529 in range [0.000000, 0.001059]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	no solution exists.
	Iteration #011: testing norm threshold 0.000398 in range [0.000265, 0.000530]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000332 in range [0.000265, 0.000399]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5546981616882519, x5 : 0.04434913982277772, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5603381847695021, x5 : 0.03540200786665082, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : 0.637325815420833, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000398


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137425 in range [0.000000, 0.274849]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067810 in range [0.000000, 0.135621]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031866 in range [0.000000, 0.063732]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014154 in range [0.000000, 0.028308]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006422 in range [0.000000, 0.012844]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002164 in range [0.000000, 0.004328]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001083 in range [0.000000, 0.002165]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000542 in range [0.000000, 0.001084]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000271 in range [0.000000, 0.000543]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.6504955577861647, x5 : -0.3493246320062693, x6 : 1.0, x7 : 0.0, x8 : 2.0, x9 : -0.6631347748148388, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.6546606421470642, x5 : -0.3515614213135747, x6 : 1, x7 : 0, x8 : 2, x9 : -0.6675550043582916, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148830 in range [0.000000, 0.297660]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074416 in range [0.000000, 0.148831]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033937 in range [0.000000, 0.067874]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015604 in range [0.000000, 0.031208]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006536 in range [0.000000, 0.013071]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003268 in range [0.000000, 0.006537]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001635 in range [0.000000, 0.003269]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000818 in range [0.000000, 0.001636]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000228 in range [0.000000, 0.000457]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000115 in range [0.000000, 0.000229]...	no solution exists.
	Iteration #012: testing norm threshold 0.000172 in range [0.000115, 0.000229]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.17150857729660038, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.07082164344827081, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.17150857729660038, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : -0.07726083518941955, x10 : -0.2389242572057411, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000172


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088814 in range [0.000000, 0.177629]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043391 in range [0.000000, 0.086782]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020058 in range [0.000000, 0.040116]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009783 in range [0.000000, 0.019567]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004710 in range [0.000000, 0.009420]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001683 in range [0.000000, 0.003366]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000842 in range [0.000000, 0.001684]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000420 in range [0.000000, 0.000841]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.6032007998430429, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.7248228613724922, x10 : 0.0009258746903110836, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.5990357100963593, x5 : -0.2794637520180557, x6 : 0, x7 : 0, x8 : 6, x9 : 0.7231066919372426, x10 : 0.013690668239442498, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103358 in range [0.000000, 0.206716]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051679 in range [0.000000, 0.103359]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022877 in range [0.000000, 0.045755]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011439 in range [0.000000, 0.022878]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005252 in range [0.000000, 0.010504]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002466 in range [0.000000, 0.004933]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001234 in range [0.000000, 0.002467]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000617 in range [0.000000, 0.001235]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000309 in range [0.000000, 0.000618]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000310]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000078 in range [0.000000, 0.000156]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7630767811865258, x5 : -0.4234161366552757, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6943275024027276, x10 : -0.3617195923656868, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000155


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111778 in range [0.000000, 0.223557]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054352 in range [0.000000, 0.108703]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027087 in range [0.000000, 0.054173]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013544 in range [0.000000, 0.027088]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006676 in range [0.000000, 0.013353]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003339 in range [0.000000, 0.006677]...	no solution exists.
	Iteration #008: testing norm threshold 0.005008 in range [0.003339, 0.006677]...	no solution exists.
	Iteration #009: testing norm threshold 0.005843 in range [0.005008, 0.006677]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005426 in range [0.005008, 0.005844]...	no solution exists.
	Iteration #011: testing norm threshold 0.005635 in range [0.005426, 0.005844]...	no solution exists.
	Iteration #012: testing norm threshold 0.005739 in range [0.005635, 0.005844]...	no solution exists.
	Iteration #013: testing norm threshold 0.005792 in range [0.005739, 0.005844]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.2616622572330927, x5 : 1.7979868506976235, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.3492972201355379, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.17775623500347137, x5 : 1.7892552622761544, x6 : 3, x7 : 6, x8 : 0, x9 : -0.3492972201355379, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005792


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138827 in range [0.000000, 0.277654]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069414 in range [0.000000, 0.138828]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033418 in range [0.000000, 0.066836]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016529 in range [0.000000, 0.033058]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007787 in range [0.000000, 0.015574]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003090 in range [0.000000, 0.006179]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001507 in range [0.000000, 0.003013]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000168 in range [0.000000, 0.000336]...	no solution exists.
	Iteration #010: testing norm threshold 0.000252 in range [0.000168, 0.000336]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5213773282628908, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.4421224123646269, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5234598815441132, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 3, x9 : -0.4462875253368864, x10 : -0.2905034620061434, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000335


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160296 in range [0.000000, 0.320592]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078992 in range [0.000000, 0.157985]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038686 in range [0.000000, 0.077371]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019053 in range [0.000000, 0.038106]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009527 in range [0.000000, 0.019054]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004764 in range [0.000000, 0.009528]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002293 in range [0.000000, 0.004586]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001144 in range [0.000000, 0.002288]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000472 in range [0.000000, 0.000945]...	no solution exists.
	Iteration #011: testing norm threshold 0.000709 in range [0.000472, 0.000945]...	no solution exists.
	Iteration #012: testing norm threshold 0.000827 in range [0.000709, 0.000945]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000764 in range [0.000709, 0.000820]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5047169115502104, x5 : 0.053296271000710604, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : 0.8185240499053275, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.507710931042, x5 : -0.21959123015403748, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6845456580182412, x10 : 0.8168160643854175, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000764


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155181 in range [0.000000, 0.310361]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077591 in range [0.000000, 0.155182]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038404 in range [0.000000, 0.076809]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019203 in range [0.000000, 0.038405]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007113 in range [0.000000, 0.014225]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001861 in range [0.000000, 0.003723]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000855 in range [0.000000, 0.001710]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000428 in range [0.000000, 0.000856]...	no solution exists.
	Iteration #010: testing norm threshold 0.000642 in range [0.000428, 0.000856]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000528 in range [0.000428, 0.000628]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000478 in range [0.000428, 0.000529]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.6380002452516543, x5 : -0.3940602878959337, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.634149212017975, x5 : -0.40748098492622375, x6 : 1, x7 : 5, x8 : 0, x9 : -0.594620943069458, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000478


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147655 in range [0.000000, 0.295310]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073828 in range [0.000000, 0.147656]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036914 in range [0.000000, 0.073829]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017228 in range [0.000000, 0.034457]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008430 in range [0.000000, 0.016859]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001776 in range [0.000000, 0.003552]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000889 in range [0.000000, 0.001777]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000445 in range [0.000000, 0.000890]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000223 in range [0.000000, 0.000446]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000224]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000056 in range [0.000000, 0.000113]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7690705053678458, x5 : -0.42524474786433636, x6 : 0, x7 : 6, x8 : 0, x9 : -0.693946003185839, x10 : -0.36354820357474743, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000112


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105439 in range [0.000000, 0.210877]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052664 in range [0.000000, 0.105327]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026321 in range [0.000000, 0.052641]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012235 in range [0.000000, 0.024470]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006118 in range [0.000000, 0.012236]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001015 in range [0.000000, 0.002029]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000508 in range [0.000000, 0.001016]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000254 in range [0.000000, 0.000509]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	no solution exists.
	Iteration #011: testing norm threshold 0.000191 in range [0.000127, 0.000254]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.558863265866422, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.4686438958586523, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.558863265866422, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.4652705721900413, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000191


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117990 in range [0.000000, 0.235980]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058996 in range [0.000000, 0.117991]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029498 in range [0.000000, 0.058997]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014039 in range [0.000000, 0.028078]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006608 in range [0.000000, 0.013215]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003304 in range [0.000000, 0.006609]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001643 in range [0.000000, 0.003285]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000770 in range [0.000000, 0.001540]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000248 in range [0.000000, 0.000496]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000249]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000063 in range [0.000000, 0.000125]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.3964242029177871, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.32277573664151243, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.39711209312769125, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 4, x9 : -0.322968458375672, x10 : -0.24233657481047502, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108005 in range [0.000000, 0.216009]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053766 in range [0.000000, 0.107532]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026884 in range [0.000000, 0.053767]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012961 in range [0.000000, 0.025922]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006348 in range [0.000000, 0.012696]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003066 in range [0.000000, 0.006132]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001336 in range [0.000000, 0.002672]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000249 in range [0.000000, 0.000499]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000059 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7608708143234253, x5 : -0.3930659441261104, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6813199742751271, x10 : -0.36317449820825215, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155142 in range [0.000000, 0.310284]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077571 in range [0.000000, 0.155143]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038492 in range [0.000000, 0.076985]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019106 in range [0.000000, 0.038212]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009554 in range [0.000000, 0.019107]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004777 in range [0.000000, 0.009555]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002389 in range [0.000000, 0.004778]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001195 in range [0.000000, 0.002390]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000589 in range [0.000000, 0.001179]...	no solution exists.
	Iteration #011: testing norm threshold 0.000884 in range [0.000589, 0.001179]...	no solution exists.
	Iteration #012: testing norm threshold 0.001031 in range [0.000884, 0.001179]...	no solution exists.
	Iteration #013: testing norm threshold 0.001105 in range [0.001031, 0.001179]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.8864278839586114, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8795315150876405, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.8821080772001844, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.9810967642703289, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001105


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173592 in range [0.000000, 0.347184]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086797 in range [0.000000, 0.173593]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042693 in range [0.000000, 0.085385]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021347 in range [0.000000, 0.042694]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010628 in range [0.000000, 0.021255]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005314 in range [0.000000, 0.010629]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002220 in range [0.000000, 0.004440]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000279 in range [0.000000, 0.000557]...	no solution exists.
	Iteration #010: testing norm threshold 0.000418 in range [0.000279, 0.000557]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000348 in range [0.000279, 0.000418]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6088445160044635, x5 : 3.7663557098428586, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : 0.5091625782023483, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5568105870706955, x5 : 3.7705587168398202, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.5091625782023483, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000417


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114632 in range [0.000000, 0.229264]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056411 in range [0.000000, 0.112823]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026208 in range [0.000000, 0.052416]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012332 in range [0.000000, 0.024663]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006166 in range [0.000000, 0.012333]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002179 in range [0.000000, 0.004359]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000347 in range [0.000000, 0.000694]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000174 in range [0.000000, 0.000348]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000086 in range [0.000000, 0.000172]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.3672188943621351, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.710236429967908, x5 : -0.3654824018289285, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6116487977886478, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000171


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135867 in range [0.000000, 0.271734]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067934 in range [0.000000, 0.135868]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030440 in range [0.000000, 0.060881]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015221 in range [0.000000, 0.030441]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007611 in range [0.000000, 0.015222]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002734 in range [0.000000, 0.005467]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001322 in range [0.000000, 0.002643]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000515 in range [0.000000, 0.001030]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000222 in range [0.000000, 0.000445]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000223]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000056 in range [0.000000, 0.000113]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.3192237212491347, x5 : -0.1435406149138129, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.515022997219209, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 2.3198022806046223, x5 : -0.14654513917494583, x6 : 0, x7 : 0, x8 : 6, x9 : 2.514242886035142, x10 : 0.23372708820337704, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142221 in range [0.000000, 0.284441]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069791 in range [0.000000, 0.139581]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034672 in range [0.000000, 0.069344]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017336 in range [0.000000, 0.034673]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008669 in range [0.000000, 0.017337]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002867 in range [0.000000, 0.005734]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000964 in range [0.000000, 0.001927]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000482 in range [0.000000, 0.000965]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000241 in range [0.000000, 0.000482]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	no solution exists.
	Iteration #012: testing norm threshold 0.000182 in range [0.000121, 0.000242]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.8656023630677608, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.0430806633007974, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.8655123557100418, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : 1.0429906559430784, x10 : -0.0875531245825449, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000241


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140870 in range [0.000000, 0.281740]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066586 in range [0.000000, 0.133171]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033221 in range [0.000000, 0.066442]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016329 in range [0.000000, 0.032658]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008041 in range [0.000000, 0.016082]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004021 in range [0.000000, 0.008042]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001920 in range [0.000000, 0.003839]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000960 in range [0.000000, 0.001921]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000481 in range [0.000000, 0.000961]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.5615497580613417, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.7204026141234879, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : 0.5609491265791743, x5 : -0.2912485659133252, x6 : 0, x7 : 0, x8 : 4, x9 : 0.7198019826413206, x10 : -0.3630780771903561, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126836 in range [0.000000, 0.253672]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063419 in range [0.000000, 0.126837]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031527 in range [0.000000, 0.063053]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014615 in range [0.000000, 0.029231]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007188 in range [0.000000, 0.014375]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003108 in range [0.000000, 0.006216]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001545 in range [0.000000, 0.003090]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000429 in range [0.000000, 0.000858]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000215 in range [0.000000, 0.000430]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000108 in range [0.000000, 0.000216]...	no solution exists.
	Iteration #012: testing norm threshold 0.000162 in range [0.000108, 0.000216]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.30062680681987425, x5 : -0.3493246320062693, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.2255302971634192, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.29909987414733974, x5 : -0.40442711958115474, x6 : 0, x7 : 1, x8 : 0, x9 : -0.22858416250848823, x10 : -0.2501386115831651, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000215


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157070 in range [0.000000, 0.314140]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078535 in range [0.000000, 0.157071]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038790 in range [0.000000, 0.077581]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019396 in range [0.000000, 0.038791]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009689 in range [0.000000, 0.019377]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003726 in range [0.000000, 0.007452]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001863 in range [0.000000, 0.003727]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000263 in range [0.000000, 0.000525]...	no solution exists.
	Iteration #010: testing norm threshold 0.000394 in range [0.000263, 0.000525]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000324 in range [0.000263, 0.000386]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.01777867646021995, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.13462045188123004, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.018376488648380755, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000324


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.122711 in range [0.000000, 0.245421]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061356 in range [0.000000, 0.122712]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030678 in range [0.000000, 0.061357]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015340 in range [0.000000, 0.030679]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007656 in range [0.000000, 0.015313]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003829 in range [0.000000, 0.007657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001349 in range [0.000000, 0.002697]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000462 in range [0.000000, 0.000923]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000231 in range [0.000000, 0.000463]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000116 in range [0.000000, 0.000232]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000059 in range [0.000000, 0.000117]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7754486831312685, x5 : -0.42391439860841473, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3622178543188258, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143454 in range [0.000000, 0.286909]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071695 in range [0.000000, 0.143390]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035848 in range [0.000000, 0.071696]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017925 in range [0.000000, 0.035849]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008963 in range [0.000000, 0.017926]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004277 in range [0.000000, 0.008554]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001618 in range [0.000000, 0.003236]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000697 in range [0.000000, 0.001393]...	no solution exists.
	Iteration #010: testing norm threshold 0.001045 in range [0.000697, 0.001393]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000796 in range [0.000697, 0.000895]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.03258152743373577, x5 : 1.3058946359113148, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.10070180706679821, x5 : 1.3058946359113148, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6476638913154602, x10 : -0.3084355821115069, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000894


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182848 in range [0.000000, 0.365696]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091425 in range [0.000000, 0.182849]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045713 in range [0.000000, 0.091426]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022281 in range [0.000000, 0.044562]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010874 in range [0.000000, 0.021747]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004830 in range [0.000000, 0.009660]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002416 in range [0.000000, 0.004831]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001208 in range [0.000000, 0.002417]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000551 in range [0.000000, 0.001102]...	no solution exists.
	Iteration #011: testing norm threshold 0.000827 in range [0.000551, 0.001102]...	no solution exists.
	Iteration #012: testing norm threshold 0.000964 in range [0.000827, 0.001102]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000896 in range [0.000827, 0.000965]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.0007393059916252349, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.12366923550791567, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.0028803369908891275, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.12152820450865177, x10 : -0.18690072745084763, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000964


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171789 in range [0.000000, 0.343578]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082436 in range [0.000000, 0.164872]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037649 in range [0.000000, 0.075297]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018825 in range [0.000000, 0.037650]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008289 in range [0.000000, 0.016578]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004094 in range [0.000000, 0.008189]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001748 in range [0.000000, 0.003496]...	no solution exists.
	Iteration #009: testing norm threshold 0.002622 in range [0.001748, 0.003496]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002185 in range [0.001748, 0.002623]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001967 in range [0.001748, 0.002186]...	no solution exists.
	Iteration #012: testing norm threshold 0.002077 in range [0.001967, 0.002186]...	no solution exists.
	Iteration #013: testing norm threshold 0.002132 in range [0.002077, 0.002186]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.23398513996915224, x5 : -0.3672188943621351, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.13270510493433016, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.2343817206625832, x5 : -0.3749528862108616, x6 : 0, x7 : 4, x8 : 0, x9 : -0.11683766052394384, x10 : -0.2531924769282341, x11 : 0, x12 : 1, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002132


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163705 in range [0.000000, 0.327411]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081853 in range [0.000000, 0.163706]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039837 in range [0.000000, 0.079674]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019918 in range [0.000000, 0.039836]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006722 in range [0.000000, 0.013443]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003361 in range [0.000000, 0.006723]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001440 in range [0.000000, 0.002880]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000378 in range [0.000000, 0.000756]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 2.202600804260371, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 2.461980030231158, x10 : 0.26609285043572184, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 2.202941178103184, x5 : -0.15780144378912508, x6 : 0, x7 : 0, x8 : 5, x9 : 2.4612351214990444, x10 : 0.25504422187805176, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096701 in range [0.000000, 0.193403]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046081 in range [0.000000, 0.092162]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023041 in range [0.000000, 0.046082]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009316 in range [0.000000, 0.018632]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004605 in range [0.000000, 0.009210]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001863 in range [0.000000, 0.003727]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000821 in range [0.000000, 0.001643]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000411 in range [0.000000, 0.000822]...	no solution exists.
	Iteration #010: testing norm threshold 0.000617 in range [0.000411, 0.000822]...	no solution exists.
	Iteration #011: testing norm threshold 0.000720 in range [0.000617, 0.000822]...	no solution exists.
	Iteration #012: testing norm threshold 0.000771 in range [0.000720, 0.000822]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 1.50702840650596, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.72379873964745, x10 : 0.11141211458423222, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 1.5039632070520241, x5 : -0.0213459778766884, x6 : 0, x7 : 0, x8 : 4, x9 : 1.720733540193514, x10 : -0.09851174056529999, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000771


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116728 in range [0.000000, 0.233457]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058142 in range [0.000000, 0.116283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028825 in range [0.000000, 0.057650]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014413 in range [0.000000, 0.028826]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006846 in range [0.000000, 0.013692]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003423 in range [0.000000, 0.006847]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001238 in range [0.000000, 0.002476]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000619 in range [0.000000, 0.001239]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000310 in range [0.000000, 0.000620]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000156 in range [0.000000, 0.000311]...	no solution exists.
	Iteration #012: testing norm threshold 0.000233 in range [0.000156, 0.000311]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.3616247575091757, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.5082307461712845, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.36363935069814485, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.5042015597933462, x10 : -0.04729780764519565, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000310


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184662 in range [0.000000, 0.369323]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092331 in range [0.000000, 0.184663]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046166 in range [0.000000, 0.092332]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022710 in range [0.000000, 0.045420]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009170 in range [0.000000, 0.018341]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002963 in range [0.000000, 0.005926]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001455 in range [0.000000, 0.002910]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000664 in range [0.000000, 0.001328]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000333 in range [0.000000, 0.000665]...	no solution exists.
	Iteration #011: testing norm threshold 0.000499 in range [0.000333, 0.000665]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000416 in range [0.000333, 0.000500]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.3089570151762145, x5 : -0.2866947137607391, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.203429060918398, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.3095427532961283, x5 : -0.40748098492622375, x6 : 0, x7 : 1, x8 : 0, x9 : -0.16969146996991466, x10 : -0.021757111408386962, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000499


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160421 in range [0.000000, 0.320842]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080015 in range [0.000000, 0.160030]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040008 in range [0.000000, 0.080016]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020005 in range [0.000000, 0.040009]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007465 in range [0.000000, 0.014930]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002893 in range [0.000000, 0.005786]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001364 in range [0.000000, 0.002728]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000647 in range [0.000000, 0.001295]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000324 in range [0.000000, 0.000648]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000325]...	no solution exists.
	Iteration #012: testing norm threshold 0.000244 in range [0.000163, 0.000325]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5880189951136129, x5 : -0.02722790960068537, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5879646882715126, x5 : -0.032968673192948585, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.1113048771723769, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000324


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110599 in range [0.000000, 0.221197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050033 in range [0.000000, 0.100067]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024135 in range [0.000000, 0.048269]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012059 in range [0.000000, 0.024118]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003807 in range [0.000000, 0.007613]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001904 in range [0.000000, 0.003808]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000917 in range [0.000000, 0.001833]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000371 in range [0.000000, 0.000742]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000186 in range [0.000000, 0.000372]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000187]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6629908703206752, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5791500770837583, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6671524374114309, x5 : -0.3857553629261161, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5879905521869659, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000093


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155134 in range [0.000000, 0.310269]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077568 in range [0.000000, 0.155135]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038423 in range [0.000000, 0.076845]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019212 in range [0.000000, 0.038424]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009297 in range [0.000000, 0.018594]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004577 in range [0.000000, 0.009153]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002289 in range [0.000000, 0.004578]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001064 in range [0.000000, 0.002129]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000533 in range [0.000000, 0.001065]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000267 in range [0.000000, 0.000534]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.3880939945614469, x5 : -0.3940602878959337, x6 : 0.0, x7 : 1.0, x8 : 3.0, x9 : -0.2874137586494785, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.3918823056895418, x5 : -0.3953002196293677, x6 : 0, x7 : 1, x8 : 3, x9 : -0.2874137586494785, x10 : -0.36243877693908955, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156529 in range [0.000000, 0.313058]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078075 in range [0.000000, 0.156149]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039038 in range [0.000000, 0.078076]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019351 in range [0.000000, 0.038701]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008459 in range [0.000000, 0.016918]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004230 in range [0.000000, 0.008460]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001819 in range [0.000000, 0.003639]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000910 in range [0.000000, 0.001820]...	no solution exists.
	Iteration #010: testing norm threshold 0.001365 in range [0.000910, 0.001820]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001138 in range [0.000910, 0.001366]...	no solution exists.
	Iteration #012: testing norm threshold 0.001252 in range [0.001138, 0.001366]...	no solution exists.
	Iteration #013: testing norm threshold 0.001309 in range [0.001252, 0.001366]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.7906304878606986, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.8132278063525771, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6885854303836823, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 0.8078311020116175, x10 : -0.09851174056529999, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001365


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149858 in range [0.000000, 0.299717]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073353 in range [0.000000, 0.146705]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036072 in range [0.000000, 0.072144]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017975 in range [0.000000, 0.035950]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007080 in range [0.000000, 0.014161]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002136 in range [0.000000, 0.004271]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001068 in range [0.000000, 0.002137]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000535 in range [0.000000, 0.001069]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000263 in range [0.000000, 0.000525]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.5338726407974013, x5 : -0.3940602878959337, x6 : 0.0, x7 : 2.0, x8 : 4.0, x9 : -0.464223648609648, x10 : -0.3084355970126681, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.5349139157279853, x5 : -0.3795983079418067, x6 : 0, x7 : 2, x8 : 4, x9 : -0.465264923540232, x10 : -0.3132848160611608, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186313 in range [0.000000, 0.372626]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084478 in range [0.000000, 0.168956]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041959 in range [0.000000, 0.083919]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020980 in range [0.000000, 0.041960]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010491 in range [0.000000, 0.020981]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002133 in range [0.000000, 0.004266]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001067 in range [0.000000, 0.002134]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000514 in range [0.000000, 0.001027]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000221 in range [0.000000, 0.000442]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000111 in range [0.000000, 0.000222]...	no solution exists.
	Iteration #012: testing norm threshold 0.000167 in range [0.000111, 0.000222]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7608708143234253, x5 : -0.41634494516866305, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6586313590766678, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000167


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110104 in range [0.000000, 0.220208]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048329 in range [0.000000, 0.096657]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024165 in range [0.000000, 0.048330]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011918 in range [0.000000, 0.023835]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005559 in range [0.000000, 0.011117]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002780 in range [0.000000, 0.005560]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001390 in range [0.000000, 0.002781]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000664 in range [0.000000, 0.001328]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000297 in range [0.000000, 0.000595]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000149 in range [0.000000, 0.000298]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.7337976413495673, x5 : -0.2598533202269404, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.7358801960945129, x5 : -0.2622547606516603, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.201705 in range [0.000000, 0.403411]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098019 in range [0.000000, 0.196038]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047239 in range [0.000000, 0.094478]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023620 in range [0.000000, 0.047240]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011729 in range [0.000000, 0.023458]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005229 in range [0.000000, 0.010458]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002359 in range [0.000000, 0.004718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001180 in range [0.000000, 0.002360]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000590 in range [0.000000, 0.001181]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000296 in range [0.000000, 0.000591]...	no solution exists.
	Iteration #012: testing norm threshold 0.000444 in range [0.000296, 0.000591]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000370 in range [0.000296, 0.000445]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6421653494298245, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6381669003605626, x5 : -0.376166025540068, x6 : 0, x7 : 4, x8 : 0, x9 : -0.5257693958099758, x10 : -0.18435288040002937, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000444


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145925 in range [0.000000, 0.291849]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070406 in range [0.000000, 0.140813]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030365 in range [0.000000, 0.060729]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012616 in range [0.000000, 0.025232]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006281 in range [0.000000, 0.012561]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001507 in range [0.000000, 0.003013]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000717 in range [0.000000, 0.001434]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000359 in range [0.000000, 0.000718]...	no solution exists.
	Iteration #010: testing norm threshold 0.000539 in range [0.000359, 0.000718]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6713210786770154, x5 : -0.2061705331593431, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7233848869800568, x5 : -0.21064406633377075, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000456


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152646 in range [0.000000, 0.305293]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076324 in range [0.000000, 0.152647]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038162 in range [0.000000, 0.076325]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017925 in range [0.000000, 0.035851]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008423 in range [0.000000, 0.016846]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003850 in range [0.000000, 0.007701]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001589 in range [0.000000, 0.003177]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000795 in range [0.000000, 0.001590]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000398 in range [0.000000, 0.000796]...	no solution exists.
	Iteration #011: testing norm threshold 0.000597 in range [0.000398, 0.000796]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.0905179886889476, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.2817740147470262, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.0869321568278145, x5 : -0.23748549818992615, x6 : 0, x7 : 0, x8 : 4, x9 : 1.2486221194267273, x10 : 0.056168993934988976, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000458


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159231 in range [0.000000, 0.318461]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079616 in range [0.000000, 0.159232]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039369 in range [0.000000, 0.078739]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019685 in range [0.000000, 0.039370]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009210 in range [0.000000, 0.018421]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003357 in range [0.000000, 0.006714]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001679 in range [0.000000, 0.003358]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000840 in range [0.000000, 0.001680]...	no solution exists.
	Iteration #010: testing norm threshold 0.001260 in range [0.000840, 0.001680]...	no solution exists.
	Iteration #011: testing norm threshold 0.001470 in range [0.001260, 0.001680]...	no solution exists.
	Iteration #012: testing norm threshold 0.001575 in range [0.001470, 0.001680]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001523 in range [0.001470, 0.001576]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3422778486015755, x5 : -0.3851131567180008, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.2387910389104319, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.12131391751157246, x5 : -0.40748098492622375, x6 : 0, x7 : 5, x8 : 0, x9 : -0.241086999521666, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001523


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.077051 in range [0.000000, 0.154103]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037907 in range [0.000000, 0.075815]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018954 in range [0.000000, 0.037908]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009397 in range [0.000000, 0.018793]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004304 in range [0.000000, 0.008608]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002152 in range [0.000000, 0.004305]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001077 in range [0.000000, 0.002153]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000539 in range [0.000000, 0.001078]...	no solution exists.
	Iteration #010: testing norm threshold 0.000808 in range [0.000539, 0.001078]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000674 in range [0.000539, 0.000809]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000607 in range [0.000539, 0.000675]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.6361466360292343, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.8608264043665816, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.634551795357558, x5 : -0.32893150921433695, x6 : 0, x7 : 0, x8 : 1, x9 : 1.8599896806612808, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000674


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.193882 in range [0.000000, 0.387764]...	solution exists & found.
	Iteration #003: testing norm threshold 0.096810 in range [0.000000, 0.193619]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048365 in range [0.000000, 0.096730]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020145 in range [0.000000, 0.040290]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010061 in range [0.000000, 0.020121]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003183 in range [0.000000, 0.006366]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001564 in range [0.000000, 0.003127]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000563 in range [0.000000, 0.001127]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000282 in range [0.000000, 0.000564]...	no solution exists.
	Iteration #011: testing norm threshold 0.000423 in range [0.000282, 0.000564]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000353 in range [0.000282, 0.000424]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5880189951136129, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5890445039304864, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.48087913197692694, x10 : -0.3626531998556501, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000353


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150979 in range [0.000000, 0.301957]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063841 in range [0.000000, 0.127682]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030903 in range [0.000000, 0.061806]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015240 in range [0.000000, 0.030480]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007581 in range [0.000000, 0.015162]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003697 in range [0.000000, 0.007393]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001848 in range [0.000000, 0.003695]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000924 in range [0.000000, 0.001849]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000227 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000228]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000115]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.4255799321649779, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.3271959838905167, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4250074859528524, x5 : -0.4164281189441681, x6 : 2, x7 : 6, x8 : 0, x9 : -0.3267507135957462, x10 : -0.3099791333582465, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000114


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079647 in range [0.000000, 0.159293]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038761 in range [0.000000, 0.077522]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018906 in range [0.000000, 0.037813]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008939 in range [0.000000, 0.017878]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002575 in range [0.000000, 0.005151]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001122 in range [0.000000, 0.002244]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000140 in range [0.000000, 0.000280]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.35263009297023656, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4230272171350722, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188117 in range [0.000000, 0.376233]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085608 in range [0.000000, 0.171215]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042323 in range [0.000000, 0.084645]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021162 in range [0.000000, 0.042324]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010260 in range [0.000000, 0.020520]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004234 in range [0.000000, 0.008469]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002118 in range [0.000000, 0.004235]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001059 in range [0.000000, 0.002119]...	no solution exists.
	Iteration #010: testing norm threshold 0.001589 in range [0.001059, 0.002119]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001325 in range [0.001059, 0.001590]...	no solution exists.
	Iteration #012: testing norm threshold 0.001457 in range [0.001325, 0.001590]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001392 in range [0.001325, 0.001458]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.35893826531425604, x5 : 0.30381594398283146, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.3611907625744931, x5 : -0.2285383641719818, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : 0.17545136126034785, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001392


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121443 in range [0.000000, 0.242885]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052894 in range [0.000000, 0.105787]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025349 in range [0.000000, 0.050698]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012508 in range [0.000000, 0.025017]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006255 in range [0.000000, 0.012509]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002995 in range [0.000000, 0.005989]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001493 in range [0.000000, 0.002987]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000663 in range [0.000000, 0.001326]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000332 in range [0.000000, 0.000664]...	no solution exists.
	Iteration #011: testing norm threshold 0.000498 in range [0.000332, 0.000664]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000406 in range [0.000332, 0.000481]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.7698049669698479, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.8220683008505854, x10 : -0.1537548611611785, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.7653646542176277, x5 : -0.21959123015403748, x6 : 0, x7 : 0, x8 : 6, x9 : 0.8176279880983651, x10 : -0.2531924769282341, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000406


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135714 in range [0.000000, 0.271428]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067569 in range [0.000000, 0.135138]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033785 in range [0.000000, 0.067570]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016878 in range [0.000000, 0.033756]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008439 in range [0.000000, 0.016879]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004220 in range [0.000000, 0.008440]...	no solution exists.
	Iteration #008: testing norm threshold 0.006330 in range [0.004220, 0.008440]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004949 in range [0.004220, 0.005678]...	no solution exists.
	Iteration #010: testing norm threshold 0.005313 in range [0.004949, 0.005678]...	solution exists & found.
	Iteration #011: testing norm threshold 0.005132 in range [0.004949, 0.005314]...	no solution exists.
	Iteration #012: testing norm threshold 0.005223 in range [0.005132, 0.005314]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.1529945513614994, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.2906145092450347, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.140499234199524, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.211050033569336, x10 : -0.032659607383224445, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005313


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147356 in range [0.000000, 0.294711]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073678 in range [0.000000, 0.147357]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036751 in range [0.000000, 0.073501]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018090 in range [0.000000, 0.036180]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008865 in range [0.000000, 0.017730]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003689 in range [0.000000, 0.007378]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001845 in range [0.000000, 0.003690]...	no solution exists.
	Iteration #009: testing norm threshold 0.002767 in range [0.001845, 0.003690]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002307 in range [0.001845, 0.002768]...	no solution exists.
	Iteration #011: testing norm threshold 0.002537 in range [0.002307, 0.002768]...	no solution exists.
	Iteration #012: testing norm threshold 0.002653 in range [0.002537, 0.002768]...	solution exists & found.
	Iteration #013: testing norm threshold 0.002596 in range [0.002537, 0.002654]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.11736222298038874, x5 : -0.4209016814297324, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -9.768746420299527e-05, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.12066765897669338, x5 : 0.5665881939938174, x6 : 0, x7 : 5, x8 : 0, x9 : -0.0034031234605076334, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002596


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161303 in range [0.000000, 0.322606]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080652 in range [0.000000, 0.161304]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039656 in range [0.000000, 0.079311]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019664 in range [0.000000, 0.039328]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009832 in range [0.000000, 0.019665]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002121 in range [0.000000, 0.004243]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000763 in range [0.000000, 0.001526]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000363 in range [0.000000, 0.000725]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000182 in range [0.000000, 0.000364]...	no solution exists.
	Iteration #011: testing norm threshold 0.000273 in range [0.000182, 0.000364]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6796512870333556, x5 : -0.17932913962554445, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6744778614358373, x5 : -0.21064409613609314, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6687567990140386, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000273


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119812 in range [0.000000, 0.239625]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059907 in range [0.000000, 0.119813]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029877 in range [0.000000, 0.059754]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014347 in range [0.000000, 0.028695]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006997 in range [0.000000, 0.013995]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003499 in range [0.000000, 0.006998]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001750 in range [0.000000, 0.003500]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000711 in range [0.000000, 0.001421]...	no solution exists.
	Iteration #010: testing norm threshold 0.001066 in range [0.000711, 0.001421]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 3.068942473319757, x5 : -0.11669922138001425, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 3.270885276798934, x10 : 0.376579090329643, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 3.068942473319757, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 3.260793248841123, x10 : 0.36763195631169865, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000806


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092793 in range [0.000000, 0.185585]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046318 in range [0.000000, 0.092636]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019538 in range [0.000000, 0.039075]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009597 in range [0.000000, 0.019194]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004799 in range [0.000000, 0.009598]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002400 in range [0.000000, 0.004800]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000617 in range [0.000000, 0.001233]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000309 in range [0.000000, 0.000618]...	no solution exists.
	Iteration #010: testing norm threshold 0.000463 in range [0.000309, 0.000618]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000381 in range [0.000309, 0.000454]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6421653494298245, x5 : -0.18827627080347734, x6 : 3.0, x7 : 4.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6411945958115931, x5 : -0.3269568085670471, x6 : 3, x7 : 4, x8 : 0, x9 : -0.5610167459242552, x10 : -0.0653658692460416, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000381


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098343 in range [0.000000, 0.196685]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048934 in range [0.000000, 0.097867]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024467 in range [0.000000, 0.048935]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010698 in range [0.000000, 0.021395]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005349 in range [0.000000, 0.010699]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002675 in range [0.000000, 0.005350]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001262 in range [0.000000, 0.002525]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000632 in range [0.000000, 0.001263]...	no solution exists.
	Iteration #010: testing norm threshold 0.000948 in range [0.000632, 0.001263]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000790 in range [0.000632, 0.000949]...	no solution exists.
	Iteration #012: testing norm threshold 0.000869 in range [0.000790, 0.000949]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 3.872807579706592, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 4.221238435334845, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 3.8739382604585386, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 4.218977073830952, x10 : 0.5831485458400677, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000948


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163260 in range [0.000000, 0.326520]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081631 in range [0.000000, 0.163261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040816 in range [0.000000, 0.081632]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020347 in range [0.000000, 0.040694]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010174 in range [0.000000, 0.020348]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003548 in range [0.000000, 0.007097]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001775 in range [0.000000, 0.003549]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000882 in range [0.000000, 0.001764]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000442 in range [0.000000, 0.000883]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000221 in range [0.000000, 0.000443]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000111 in range [0.000000, 0.000222]...	no solution exists.
	Iteration #013: testing norm threshold 0.000167 in range [0.000111, 0.000222]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.19233409818745095, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.1371253521833344, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.19568205211200784, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 5, x9 : -0.1404733061078913, x10 : -0.33823350988922485, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000221


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103576 in range [0.000000, 0.207151]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051641 in range [0.000000, 0.103283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025821 in range [0.000000, 0.051642]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012911 in range [0.000000, 0.025822]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006456 in range [0.000000, 0.012912]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003109 in range [0.000000, 0.006218]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001555 in range [0.000000, 0.003110]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000761 in range [0.000000, 0.001522]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000175 in range [0.000000, 0.000349]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.3657898616873458, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5082307461712845, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.3652152783690224, x5 : -0.20112237879982542, x6 : 0, x7 : 0, x8 : 0, x9 : 0.5076561628529611, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119878 in range [0.000000, 0.239756]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058908 in range [0.000000, 0.117817]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029455 in range [0.000000, 0.058909]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013312 in range [0.000000, 0.026625]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006657 in range [0.000000, 0.013313]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003319 in range [0.000000, 0.006638]...	no solution exists.
	Iteration #008: testing norm threshold 0.004979 in range [0.003319, 0.006638]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004149 in range [0.003319, 0.004980]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003735 in range [0.003319, 0.004150]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003527 in range [0.003319, 0.003736]...	no solution exists.
	Iteration #012: testing norm threshold 0.003632 in range [0.003527, 0.003736]...	no solution exists.
	Iteration #013: testing norm threshold 0.003684 in range [0.003632, 0.003736]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.013234618526135609, x5 : 1.216423324131986, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : 3.6911662871472775, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.32353487610816956, x5 : 0.5004263639752687, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : 3.6911662871472775, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003684


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123985 in range [0.000000, 0.247970]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061993 in range [0.000000, 0.123986]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030645 in range [0.000000, 0.061290]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015026 in range [0.000000, 0.030052]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007513 in range [0.000000, 0.015027]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003201 in range [0.000000, 0.006402]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001520 in range [0.000000, 0.003041]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000761 in range [0.000000, 0.001521]...	no solution exists.
	Iteration #010: testing norm threshold 0.001141 in range [0.000761, 0.001521]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000951 in range [0.000761, 0.001142]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000857 in range [0.000761, 0.000952]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.269617468350263, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.4718446464542083, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.2659413653289782, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 1.470814736536883, x10 : 0.16768514490982944, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000951


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113256 in range [0.000000, 0.226511]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055509 in range [0.000000, 0.111017]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025935 in range [0.000000, 0.051871]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012968 in range [0.000000, 0.025936]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006425 in range [0.000000, 0.012850]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002984 in range [0.000000, 0.005969]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001493 in range [0.000000, 0.002985]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000747 in range [0.000000, 0.001494]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000374 in range [0.000000, 0.000748]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000142 in range [0.000000, 0.000284]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000071 in range [0.000000, 0.000143]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5172122240847208, x5 : -0.3493246320062693, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.464223648609648, x10 : -0.2863383490338839, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5149815605713659, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : -0.46476762844656166, x10 : -0.28648644406211204, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000142


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140943 in range [0.000000, 0.281887]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068411 in range [0.000000, 0.136823]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033527 in range [0.000000, 0.067054]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016764 in range [0.000000, 0.033528]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007942 in range [0.000000, 0.015884]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003971 in range [0.000000, 0.007943]...	no solution exists.
	Iteration #008: testing norm threshold 0.005957 in range [0.003971, 0.007943]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004965 in range [0.003971, 0.005958]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004469 in range [0.003971, 0.004966]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004114 in range [0.003971, 0.004257]...	no solution exists.
	Iteration #012: testing norm threshold 0.004185 in range [0.004114, 0.004257]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.1131971188022186, x5 : -0.045122171956551146, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 0.004322559784801243, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6275874972343445, x5 : -0.40748098492622375, x6 : 1, x7 : 4, x8 : 0, x9 : -0.004624574233143093, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004256


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127050 in range [0.000000, 0.254100]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063520 in range [0.000000, 0.127040]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031760 in range [0.000000, 0.063521]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014889 in range [0.000000, 0.029777]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007143 in range [0.000000, 0.014285]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001843 in range [0.000000, 0.003686]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000811 in range [0.000000, 0.001622]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000406 in range [0.000000, 0.000812]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000203 in range [0.000000, 0.000407]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	no solution exists.
	Iteration #012: testing norm threshold 0.000153 in range [0.000102, 0.000204]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.6754861828551855, x5 : -0.15248774609174578, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.6751917627311479, x5 : -0.21064409613609314, x6 : 3, x7 : 6, x8 : 0, x9 : -0.646042626066897, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000153


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.177913 in range [0.000000, 0.355825]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088697 in range [0.000000, 0.177395]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044349 in range [0.000000, 0.088698]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020944 in range [0.000000, 0.041888]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009686 in range [0.000000, 0.019373]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004164 in range [0.000000, 0.008328]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000962 in range [0.000000, 0.001925]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000286 in range [0.000000, 0.000571]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000120 in range [0.000000, 0.000241]...	no solution exists.
	Iteration #011: testing norm threshold 0.000181 in range [0.000120, 0.000241]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.43770216511562265, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.5319176614154886, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4399122899118801, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000174


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147693 in range [0.000000, 0.295386]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073728 in range [0.000000, 0.147456]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036183 in range [0.000000, 0.072366]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018092 in range [0.000000, 0.036184]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008978 in range [0.000000, 0.017956]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003633 in range [0.000000, 0.007266]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000795 in range [0.000000, 0.001590]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000398 in range [0.000000, 0.000796]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000199 in range [0.000000, 0.000399]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7254674329932271, x5 : -0.3224832384724706, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7275499999523163, x5 : -0.2905521288458093, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6448376372400506, x10 : -0.10956036520361004, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118626 in range [0.000000, 0.237252]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048400 in range [0.000000, 0.096799]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023074 in range [0.000000, 0.046148]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008277 in range [0.000000, 0.016554]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003511 in range [0.000000, 0.007022]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001756 in range [0.000000, 0.003512]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000879 in range [0.000000, 0.001757]...	no solution exists.
	Iteration #009: testing norm threshold 0.001318 in range [0.000879, 0.001757]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001055 in range [0.000879, 0.001231]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000967 in range [0.000879, 0.001056]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4755611823030195, x5 : 0.21434463220350256, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5067994594573975, x5 : 0.20393780420926758, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.13229940973912913, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113683 in range [0.000000, 0.227366]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055169 in range [0.000000, 0.110337]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027525 in range [0.000000, 0.055050]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013589 in range [0.000000, 0.027178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006779 in range [0.000000, 0.013558]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003390 in range [0.000000, 0.006780]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001470 in range [0.000000, 0.002940]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000579 in range [0.000000, 0.001159]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000290 in range [0.000000, 0.000580]...	no solution exists.
	Iteration #011: testing norm threshold 0.000435 in range [0.000290, 0.000580]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000361 in range [0.000290, 0.000432]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7205093248062325, x5 : -0.21848616590977343, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6377183555650774, x10 : -0.17529957701783072, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000361


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185695 in range [0.000000, 0.371389]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092848 in range [0.000000, 0.185696]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046424 in range [0.000000, 0.092849]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023213 in range [0.000000, 0.046425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010170 in range [0.000000, 0.020340]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005085 in range [0.000000, 0.010171]...	no solution exists.
	Iteration #008: testing norm threshold 0.007628 in range [0.005085, 0.010171]...	solution exists & found.
	Iteration #009: testing norm threshold 0.006022 in range [0.005085, 0.006959]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005541 in range [0.005085, 0.005997]...	solution exists & found.
	Iteration #011: testing norm threshold 0.005314 in range [0.005085, 0.005542]...	solution exists & found.
	Iteration #012: testing norm threshold 0.005200 in range [0.005085, 0.005315]...	no solution exists.
	Iteration #013: testing norm threshold 0.005257 in range [0.005200, 0.005315]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.2366716321640719, x5 : 3.6679372668855965, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.33603647838852513, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.2343067818272388, x5 : 3.6655724165487635, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5769399404525757, x10 : -0.30725317184425155, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005314


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.187000 in range [0.000000, 0.374000]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093175 in range [0.000000, 0.186351]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045216 in range [0.000000, 0.090433]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022589 in range [0.000000, 0.045178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010111 in range [0.000000, 0.020222]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005002 in range [0.000000, 0.010003]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002501 in range [0.000000, 0.005003]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001251 in range [0.000000, 0.002502]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000620 in range [0.000000, 0.001240]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000288 in range [0.000000, 0.000576]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000145 in range [0.000000, 0.000289]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.23250652798590174, x5 : -0.2598533202269404, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2518564057290386, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : 0.2324936836281166, x5 : -0.24641978785008534, x6 : 0, x7 : 0, x8 : 0, x9 : 0.2518628279079312, x10 : -0.16479063823432072, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.089019 in range [0.000000, 0.178039]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043544 in range [0.000000, 0.087088]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021773 in range [0.000000, 0.043545]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010653 in range [0.000000, 0.021307]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000196 in range [0.000000, 0.000392]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000099 in range [0.000000, 0.000197]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.744170593441242, x5 : -0.38507688234619714, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6807819291338416, x10 : -0.36363890987705594, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097958 in range [0.000000, 0.195916]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048980 in range [0.000000, 0.097959]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021984 in range [0.000000, 0.043967]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010584 in range [0.000000, 0.021168]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004403 in range [0.000000, 0.008806]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002119 in range [0.000000, 0.004238]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000886 in range [0.000000, 0.001773]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000444 in range [0.000000, 0.000887]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000222 in range [0.000000, 0.000445]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000107 in range [0.000000, 0.000213]...	no solution exists.
	Iteration #012: testing norm threshold 0.000160 in range [0.000107, 0.000213]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5338726407974013, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5097259304271314, x5 : -0.3505632740087949, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5226583353028867, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000160


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145566 in range [0.000000, 0.291132]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067152 in range [0.000000, 0.134303]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033254 in range [0.000000, 0.066507]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011549 in range [0.000000, 0.023099]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001972 in range [0.000000, 0.003943]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000986 in range [0.000000, 0.001973]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000494 in range [0.000000, 0.000987]...	no solution exists.
	Iteration #009: testing norm threshold 0.000740 in range [0.000494, 0.000987]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000614 in range [0.000494, 0.000735]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000555 in range [0.000494, 0.000615]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6046794118262934, x5 : -0.3403775008283364, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.5172666155976989, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.604159505224699, x5 : -0.34011755059606613, x6 : 0, x7 : 5, x8 : 0, x9 : -0.6212633297819766, x10 : -0.14218633354353324, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000614


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121317 in range [0.000000, 0.242634]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060659 in range [0.000000, 0.121318]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030293 in range [0.000000, 0.060586]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013970 in range [0.000000, 0.027940]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006986 in range [0.000000, 0.013971]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001515 in range [0.000000, 0.003030]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000758 in range [0.000000, 0.001516]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000377 in range [0.000000, 0.000753]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.1131971188022186, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.004322559784801243, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.1131971188022186, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.0025705589156868173, x10 : -0.2642411010550996, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111840 in range [0.000000, 0.223680]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055877 in range [0.000000, 0.111754]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025034 in range [0.000000, 0.050067]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008404 in range [0.000000, 0.016808]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003949 in range [0.000000, 0.007897]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001975 in range [0.000000, 0.003950]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000988 in range [0.000000, 0.001976]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000494 in range [0.000000, 0.000989]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000067 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7754486831312685, x5 : -0.413818689334251, x6 : 0, x7 : 6, x8 : 0, x9 : -0.693677189099647, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.060444 in range [0.000000, 0.120889]...	solution exists & found.
	Iteration #003: testing norm threshold 0.028003 in range [0.000000, 0.056006]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013899 in range [0.000000, 0.027797]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006950 in range [0.000000, 0.013900]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003241 in range [0.000000, 0.006482]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001238 in range [0.000000, 0.002477]...	no solution exists.
	Iteration #008: testing norm threshold 0.001858 in range [0.001238, 0.002477]...	no solution exists.
	Iteration #009: testing norm threshold 0.002167 in range [0.001858, 0.002477]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001998 in range [0.001858, 0.002139]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001929 in range [0.001858, 0.001999]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 2.2859028878237737, x5 : 5.0279012059313954, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : 2.550384975211243, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 2.2810950473050817, x5 : 4.969744920730591, x6 : 1, x7 : 1, x8 : 0, x9 : 2.545577134692551, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001929


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093717 in range [0.000000, 0.187433]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043763 in range [0.000000, 0.087525]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021882 in range [0.000000, 0.043764]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010710 in range [0.000000, 0.021420]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005135 in range [0.000000, 0.010271]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002568 in range [0.000000, 0.005136]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001273 in range [0.000000, 0.002546]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000239 in range [0.000000, 0.000478]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000120 in range [0.000000, 0.000240]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000121]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.7739700711480181, x5 : -0.3851131567180008, x6 : 0.0, x7 : 3.0, x8 : 1.0, x9 : 0.945835223822704, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.7739700711480181, x5 : -0.3855491025054007, x6 : 0, x7 : 3, x8 : 1, x9 : 0.9453992780353041, x10 : -0.3411455180263818, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000120


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120885 in range [0.000000, 0.241771]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060443 in range [0.000000, 0.120886]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029817 in range [0.000000, 0.059635]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014909 in range [0.000000, 0.029818]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007356 in range [0.000000, 0.014711]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003212 in range [0.000000, 0.006425]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001607 in range [0.000000, 0.003213]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000804 in range [0.000000, 0.001608]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000181 in range [0.000000, 0.000362]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3520082722120908, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086456 in range [0.000000, 0.172911]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043228 in range [0.000000, 0.086457]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017328 in range [0.000000, 0.034655]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008664 in range [0.000000, 0.017329]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004333 in range [0.000000, 0.008665]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002167 in range [0.000000, 0.004334]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000703 in range [0.000000, 0.001406]...	no solution exists.
	Iteration #009: testing norm threshold 0.001054 in range [0.000703, 0.001406]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000849 in range [0.000703, 0.000996]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000777 in range [0.000703, 0.000850]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 1.0946830928671176, x5 : 0.008560615111046171, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.2331512950079797, x10 : 0.0009258746903110836, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 1.0950186382084963, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 6, x9 : 1.2310499563592239, x10 : 0.00025478400755367126, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000849


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162184 in range [0.000000, 0.324368]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079784 in range [0.000000, 0.159568]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039892 in range [0.000000, 0.079785]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019947 in range [0.000000, 0.039893]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008753 in range [0.000000, 0.017506]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003285 in range [0.000000, 0.006570]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001643 in range [0.000000, 0.003286]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000808 in range [0.000000, 0.001616]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000404 in range [0.000000, 0.000809]...	no solution exists.
	Iteration #011: testing norm threshold 0.000607 in range [0.000404, 0.000809]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000506 in range [0.000404, 0.000608]...	no solution exists.
	Iteration #013: testing norm threshold 0.000557 in range [0.000506, 0.000608]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.15484816058391987, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.15922658842835558, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.15291895772514463, x5 : -0.3895867168903351, x6 : 0, x7 : 6, x8 : 0, x9 : -0.16308499414590602, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000557


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131880 in range [0.000000, 0.263759]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058077 in range [0.000000, 0.116154]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018925 in range [0.000000, 0.037850]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009463 in range [0.000000, 0.018926]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003340 in range [0.000000, 0.006680]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001050 in range [0.000000, 0.002101]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000526 in range [0.000000, 0.001051]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000071 in range [0.000000, 0.000143]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7665659464870043, x5 : -0.3895867168903351, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6951815621337163, x10 : -0.3320166282442239, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154802 in range [0.000000, 0.309603]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076989 in range [0.000000, 0.153977]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038310 in range [0.000000, 0.076619]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018304 in range [0.000000, 0.036608]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009033 in range [0.000000, 0.018067]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002226 in range [0.000000, 0.004452]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000361 in range [0.000000, 0.000723]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000181 in range [0.000000, 0.000362]...	no solution exists.
	Iteration #010: testing norm threshold 0.000272 in range [0.000181, 0.000362]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.6629908703206752, x5 : -0.3224832384724706, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.6900640428066254, x5 : -0.29178521037101746, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6896562583088642, x10 : -0.25336144866449245, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000272


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.207111 in range [0.000000, 0.414222]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099498 in range [0.000000, 0.198996]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049480 in range [0.000000, 0.098960]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023940 in range [0.000000, 0.047880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011970 in range [0.000000, 0.023941]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005984 in range [0.000000, 0.011969]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002993 in range [0.000000, 0.005985]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001415 in range [0.000000, 0.002831]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000708 in range [0.000000, 0.001416]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000277 in range [0.000000, 0.000554]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000139 in range [0.000000, 0.000278]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.3964242029177871, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.296254253147487, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.39823538241006984, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2980654326397697, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142649 in range [0.000000, 0.285298]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056892 in range [0.000000, 0.113783]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028289 in range [0.000000, 0.056577]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013036 in range [0.000000, 0.026072]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006462 in range [0.000000, 0.012924]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003160 in range [0.000000, 0.006320]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001222 in range [0.000000, 0.002444]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000612 in range [0.000000, 0.001223]...	no solution exists.
	Iteration #010: testing norm threshold 0.000917 in range [0.000612, 0.001223]...	no solution exists.
	Iteration #011: testing norm threshold 0.001070 in range [0.000917, 0.001223]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000994 in range [0.000917, 0.001071]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.3880939945614469, x5 : -0.376166025540068, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.3050947476454955, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5026343613862991, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : -0.3077775914888295, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000994


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120552 in range [0.000000, 0.241104]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055530 in range [0.000000, 0.111059]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027378 in range [0.000000, 0.054756]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013361 in range [0.000000, 0.026723]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006681 in range [0.000000, 0.013362]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003341 in range [0.000000, 0.006682]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001671 in range [0.000000, 0.003342]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000836 in range [0.000000, 0.001672]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000419 in range [0.000000, 0.000837]...	no solution exists.
	Iteration #011: testing norm threshold 0.000628 in range [0.000419, 0.000837]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000500 in range [0.000419, 0.000581]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5505330575100817, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4863248848546693, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5522524711131406, x5 : -0.3073431269280996, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4580839739196386, x10 : -0.3288134352319326, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000500


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147762 in range [0.000000, 0.295523]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073881 in range [0.000000, 0.147763]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032793 in range [0.000000, 0.065586]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016152 in range [0.000000, 0.032304]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007838 in range [0.000000, 0.015676]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003206 in range [0.000000, 0.006413]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000834 in range [0.000000, 0.001668]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000418 in range [0.000000, 0.000835]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000209 in range [0.000000, 0.000419]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000210]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.1367091318879889, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.2385956639820259, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : 0.13641525677071537, x5 : -0.2732740044593811, x6 : 0, x7 : 0, x8 : 4, x9 : 0.23830178886475237, x10 : 0.01197449880419299, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129038 in range [0.000000, 0.258075]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060614 in range [0.000000, 0.121228]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030200 in range [0.000000, 0.060399]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015100 in range [0.000000, 0.030201]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007551 in range [0.000000, 0.015101]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003527 in range [0.000000, 0.007054]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001701 in range [0.000000, 0.003403]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000851 in range [0.000000, 0.001702]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000241 in range [0.000000, 0.000482]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000120]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4574221536070885, x5 : 2.2185020160604694, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : 0.4870653302235641, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.45677429676946385, x5 : 2.2200018966394244, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6741853952407837, x10 : 0.48641747338593944, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000119


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127797 in range [0.000000, 0.255593]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061267 in range [0.000000, 0.122533]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030634 in range [0.000000, 0.061268]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012317 in range [0.000000, 0.024633]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006152 in range [0.000000, 0.012303]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003058 in range [0.000000, 0.006116]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001074 in range [0.000000, 0.002147]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000365 in range [0.000000, 0.000730]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000183 in range [0.000000, 0.000366]...	no solution exists.
	Iteration #011: testing norm threshold 0.000275 in range [0.000183, 0.000366]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.4713960781248494, x5 : -0.3851131567180008, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.38465919812757177, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.4726040227385147, x5 : -0.40748098492622375, x6 : 0, x7 : 3, x8 : 0, x9 : -0.38124113096597795, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000275


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118275 in range [0.000000, 0.236551]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055178 in range [0.000000, 0.110357]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025826 in range [0.000000, 0.051652]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012622 in range [0.000000, 0.025243]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006311 in range [0.000000, 0.012623]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003032 in range [0.000000, 0.006064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000959 in range [0.000000, 0.001918]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000308 in range [0.000000, 0.000617]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.24083673634224206, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.3800435759501615, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.24083673634224206, x5 : -0.31890087141646756, x6 : 0, x7 : 0, x8 : 4, x9 : 0.3790230428036213, x10 : -0.18588019430430744, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113425 in range [0.000000, 0.226850]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056713 in range [0.000000, 0.113426]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025712 in range [0.000000, 0.051423]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012845 in range [0.000000, 0.025689]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006423 in range [0.000000, 0.012846]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002831 in range [0.000000, 0.005662]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001397 in range [0.000000, 0.002794]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000699 in range [0.000000, 0.001398]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000350 in range [0.000000, 0.000700]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000175 in range [0.000000, 0.000351]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6879814953896959, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.687597775714815, x5 : -0.36531658231541925, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6152794944255541, x10 : -0.36291126932276163, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149741 in range [0.000000, 0.299482]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074119 in range [0.000000, 0.148238]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035702 in range [0.000000, 0.071404]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015842 in range [0.000000, 0.031685]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007922 in range [0.000000, 0.015843]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003961 in range [0.000000, 0.007923]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001886 in range [0.000000, 0.003772]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000943 in range [0.000000, 0.001887]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000176 in range [0.000000, 0.000352]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000133]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.8239513212860595, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.9414149765737, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.8135385513305664, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 4, x9 : 0.9414149765737, x10 : 0.01197449880419299, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000132


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181267 in range [0.000000, 0.362534]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084956 in range [0.000000, 0.169912]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041741 in range [0.000000, 0.083482]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020534 in range [0.000000, 0.041068]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008637 in range [0.000000, 0.017274]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000876 in range [0.000000, 0.001753]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000426 in range [0.000000, 0.000852]...	no solution exists.
	Iteration #009: testing norm threshold 0.000639 in range [0.000426, 0.000852]...	no solution exists.
	Iteration #010: testing norm threshold 0.000745 in range [0.000639, 0.000852]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000693 in range [0.000639, 0.000746]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6296700368953141, x5 : -0.11669922138001425, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7504580616950989, x5 : -0.11696744304948331, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6589827492353036, x10 : -0.2645093227245687, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000693


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166374 in range [0.000000, 0.332749]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079797 in range [0.000000, 0.159594]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039899 in range [0.000000, 0.079798]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019950 in range [0.000000, 0.039900]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009433 in range [0.000000, 0.018865]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004717 in range [0.000000, 0.009434]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002250 in range [0.000000, 0.004501]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001102 in range [0.000000, 0.002203]...	no solution exists.
	Iteration #010: testing norm threshold 0.001652 in range [0.001102, 0.002203]...	no solution exists.
	Iteration #011: testing norm threshold 0.001928 in range [0.001652, 0.002203]...	no solution exists.
	Iteration #012: testing norm threshold 0.002065 in range [0.001928, 0.002203]...	no solution exists.
	Iteration #013: testing norm threshold 0.002134 in range [0.002065, 0.002203]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.20066430654379125, x5 : 0.8048552899470731, x6 : 1.0, x7 : 3.0, x8 : 1.0, x9 : -0.5393678518427201, x10 : 2.674692880123203, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.31312212347984314, x5 : 0.5274942219257355, x6 : 1, x7 : 3, x8 : 1, x9 : -0.6918663680553436, x10 : 2.670219313114231, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002202


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111876 in range [0.000000, 0.223751]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051144 in range [0.000000, 0.102288]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019976 in range [0.000000, 0.039953]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009372 in range [0.000000, 0.018744]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001487 in range [0.000000, 0.002974]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000220 in range [0.000000, 0.000440]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000110 in range [0.000000, 0.000221]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000056 in range [0.000000, 0.000111]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7004768079242063, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7008192624218667, x5 : -0.4164281189441681, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6199735056731852, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000110


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146186 in range [0.000000, 0.292373]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072960 in range [0.000000, 0.145920]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036480 in range [0.000000, 0.072961]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018241 in range [0.000000, 0.036481]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008431 in range [0.000000, 0.016862]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001000 in range [0.000000, 0.002001]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000496 in range [0.000000, 0.000992]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000249 in range [0.000000, 0.000497]...	no solution exists.
	Iteration #010: testing norm threshold 0.000373 in range [0.000249, 0.000497]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000306 in range [0.000249, 0.000362]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6213398285389738, x5 : -0.3851131567180008, x6 : 3.0, x7 : 4.0, x8 : 0.0, x9 : -0.5349476045937159, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6275874972343445, x5 : -0.40748098492622375, x6 : 3, x7 : 4, x8 : 0, x9 : -0.5387704392018036, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000306


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110309 in range [0.000000, 0.220618]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054061 in range [0.000000, 0.108123]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026952 in range [0.000000, 0.053904]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013322 in range [0.000000, 0.026644]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006561 in range [0.000000, 0.013122]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003281 in range [0.000000, 0.006562]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001456 in range [0.000000, 0.002912]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000497 in range [0.000000, 0.000994]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000202 in range [0.000000, 0.000405]...	no solution exists.
	Iteration #011: testing norm threshold 0.000304 in range [0.000202, 0.000405]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000254 in range [0.000202, 0.000305]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.7114935084754662, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.8795315150876405, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.7102494079269907, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : 0.8782874145391649, x10 : -0.04451272181573297, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000304


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186902 in range [0.000000, 0.373804]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088967 in range [0.000000, 0.177935]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044484 in range [0.000000, 0.088968]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021599 in range [0.000000, 0.043197]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010133 in range [0.000000, 0.020266]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004617 in range [0.000000, 0.009235]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002251 in range [0.000000, 0.004502]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001100 in range [0.000000, 0.002200]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000544 in range [0.000000, 0.001088]...	no solution exists.
	Iteration #011: testing norm threshold 0.000816 in range [0.000544, 0.001088]...	no solution exists.
	Iteration #012: testing norm threshold 0.000952 in range [0.000816, 0.001088]...	no solution exists.
	Iteration #013: testing norm threshold 0.001020 in range [0.000952, 0.001088]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.3547731611360859, x5 : -0.10775209020208136, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.40676043437259296, x10 : 0.4207735862872114, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.3547731611360859, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : -0.4509629160165787, x10 : 0.4172705539359081, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001020


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091820 in range [0.000000, 0.183641]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045355 in range [0.000000, 0.090710]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021694 in range [0.000000, 0.043388]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008390 in range [0.000000, 0.016780]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002948 in range [0.000000, 0.005897]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001475 in range [0.000000, 0.002949]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000738 in range [0.000000, 0.001476]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000369 in range [0.000000, 0.000739]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000185 in range [0.000000, 0.000370]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000093 in range [0.000000, 0.000186]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5796887867572726, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.4907451321036735, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5753694480480188, x5 : -0.4052442020000452, x6 : 1, x7 : 6, x8 : 0, x9 : -0.49298191502985206, x10 : -0.3636787086725235, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130784 in range [0.000000, 0.261567]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062749 in range [0.000000, 0.125498]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031375 in range [0.000000, 0.062750]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012067 in range [0.000000, 0.024135]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006034 in range [0.000000, 0.012068]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003018 in range [0.000000, 0.006035]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001509 in range [0.000000, 0.003019]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000755 in range [0.000000, 0.001510]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000344 in range [0.000000, 0.000688]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000173 in range [0.000000, 0.000345]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000087 in range [0.000000, 0.000174]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6905232825204327, x10 : -0.36233562313761264, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119519 in range [0.000000, 0.239037]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059760 in range [0.000000, 0.119520]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029863 in range [0.000000, 0.059726]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014176 in range [0.000000, 0.028352]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007089 in range [0.000000, 0.014177]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002123 in range [0.000000, 0.004246]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000393 in range [0.000000, 0.000785]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000157 in range [0.000000, 0.000315]...	no solution exists.
	Iteration #010: testing norm threshold 0.000236 in range [0.000157, 0.000315]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.3224832384724706, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7213023296544919, x5 : -0.30906253969172337, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6565043926239014, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000234


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100111 in range [0.000000, 0.200222]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050056 in range [0.000000, 0.100112]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024759 in range [0.000000, 0.049518]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012380 in range [0.000000, 0.024760]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006177 in range [0.000000, 0.012354]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002968 in range [0.000000, 0.005937]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001349 in range [0.000000, 0.002699]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000675 in range [0.000000, 0.001350]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000338 in range [0.000000, 0.000676]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000161 in range [0.000000, 0.000322]...	no solution exists.
	Iteration #012: testing norm threshold 0.000242 in range [0.000161, 0.000322]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5755236825791025, x5 : -0.0003865160668867154, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.610091807826788, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5821540436592721, x5 : 0.010628384915477148, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.05431724339723587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000242


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143157 in range [0.000000, 0.286314]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071579 in range [0.000000, 0.143158]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035698 in range [0.000000, 0.071397]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013023 in range [0.000000, 0.026046]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006512 in range [0.000000, 0.013024]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002112 in range [0.000000, 0.004223]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001042 in range [0.000000, 0.002084]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000498 in range [0.000000, 0.000996]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000249 in range [0.000000, 0.000499]...	no solution exists.
	Iteration #011: testing norm threshold 0.000374 in range [0.000249, 0.000499]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5505330575100817, x5 : 0.053296271000710604, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5713585913181305, x5 : 0.10250549390912056, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6388234198093414, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000343


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158458 in range [0.000000, 0.316916]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078849 in range [0.000000, 0.157697]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038191 in range [0.000000, 0.076383]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018447 in range [0.000000, 0.036894]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008436 in range [0.000000, 0.016873]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002846 in range [0.000000, 0.005691]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001021 in range [0.000000, 0.002042]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000511 in range [0.000000, 0.001022]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000229 in range [0.000000, 0.000459]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000115 in range [0.000000, 0.000230]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000058 in range [0.000000, 0.000116]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.3224832384724706, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7097966477027889, x5 : -0.32446250131695537, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6211424171924591, x10 : -0.10956036520361004, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000047


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126838 in range [0.000000, 0.253676]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063420 in range [0.000000, 0.126839]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031170 in range [0.000000, 0.062341]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015476 in range [0.000000, 0.030952]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002468 in range [0.000000, 0.004936]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000633 in range [0.000000, 0.001266]...	no solution exists.
	Iteration #008: testing norm threshold 0.000949 in range [0.000633, 0.001266]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000792 in range [0.000633, 0.000950]...	no solution exists.
	Iteration #010: testing norm threshold 0.000871 in range [0.000792, 0.000950]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.3547731611360859, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3316162311395209, x10 : -0.13165761318239427, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.3589382618665695, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 0, x9 : -0.29888894509616193, x10 : 0.06016467335309016, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000949


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126231 in range [0.000000, 0.252461]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062562 in range [0.000000, 0.125124]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031151 in range [0.000000, 0.062301]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015576 in range [0.000000, 0.031152]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004007 in range [0.000000, 0.008015]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001661 in range [0.000000, 0.003322]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000831 in range [0.000000, 0.001662]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000325 in range [0.000000, 0.000649]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000109 in range [0.000000, 0.000219]...	no solution exists.
	Iteration #011: testing norm threshold 0.000164 in range [0.000109, 0.000219]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.42974503634314815, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4421224123646269, x10 : -0.24214385307631545, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.42974503634314815, x5 : -0.32514329155534716, x6 : 0, x7 : 0, x8 : 0, x9 : -0.44393592937632687, x10 : -0.20899797976016998, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000164


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136534 in range [0.000000, 0.273068]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068177 in range [0.000000, 0.136354]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032320 in range [0.000000, 0.064639]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016160 in range [0.000000, 0.032321]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008081 in range [0.000000, 0.016161]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003631 in range [0.000000, 0.007262]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001678 in range [0.000000, 0.003357]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000840 in range [0.000000, 0.001679]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000420 in range [0.000000, 0.000841]...	no solution exists.
	Iteration #011: testing norm threshold 0.000631 in range [0.000420, 0.000841]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 1.8402367407595703, x5 : -0.12564635255794712, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.9669123383426836, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 1.8329477992909942, x5 : -0.19440802064957274, x6 : 0, x7 : 0, x8 : 4, x9 : 1.9669123383426836, x10 : 0.24023591848788606, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000511


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121146 in range [0.000000, 0.242292]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060574 in range [0.000000, 0.121147]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030287 in range [0.000000, 0.060575]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014088 in range [0.000000, 0.028176]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006574 in range [0.000000, 0.013149]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002548 in range [0.000000, 0.005095]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000558 in range [0.000000, 0.001116]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000269 in range [0.000000, 0.000539]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7524876224338013, x5 : -0.38953372114290774, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6939734847256, x10 : -0.3306021199474825, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135748 in range [0.000000, 0.271496]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067875 in range [0.000000, 0.135749]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033065 in range [0.000000, 0.066130]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014148 in range [0.000000, 0.028296]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006969 in range [0.000000, 0.013938]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003125 in range [0.000000, 0.006250]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001563 in range [0.000000, 0.003126]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000725 in range [0.000000, 0.001450]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000363 in range [0.000000, 0.000726]...	no solution exists.
	Iteration #011: testing norm threshold 0.000545 in range [0.000363, 0.000726]...	no solution exists.
	Iteration #012: testing norm threshold 0.000635 in range [0.000545, 0.000726]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.17932913962554445, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7639308294215696, x5 : -0.2016969621181488, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6863410791316527, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000616


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155128 in range [0.000000, 0.310256]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073932 in range [0.000000, 0.147863]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036966 in range [0.000000, 0.073933]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018387 in range [0.000000, 0.036774]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005315 in range [0.000000, 0.010629]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002465 in range [0.000000, 0.004931]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001224 in range [0.000000, 0.002448]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000612 in range [0.000000, 0.001225]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000307 in range [0.000000, 0.000613]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000154 in range [0.000000, 0.000308]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000077 in range [0.000000, 0.000155]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.0034257981865448896, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.044104785025839394, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.004205649114967472, x5 : -0.29855570465636894, x6 : 0, x7 : 0, x8 : 0, x9 : 0.04254508316899423, x10 : -0.23889911183549972, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000154


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097786 in range [0.000000, 0.195571]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048893 in range [0.000000, 0.097787]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020232 in range [0.000000, 0.040465]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009868 in range [0.000000, 0.019736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003346 in range [0.000000, 0.006693]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001674 in range [0.000000, 0.003347]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000806 in range [0.000000, 0.001612]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000404 in range [0.000000, 0.000807]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000168 in range [0.000000, 0.000336]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 1.2654523641720927, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.4674243992052045, x10 : -0.3747273409490208, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 1.264640566688374, x5 : -0.28222113847732544, x6 : 0, x7 : 0, x8 : 0, x9 : 1.4666126017214858, x10 : -0.3628669111888048, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154189 in range [0.000000, 0.308377]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077011 in range [0.000000, 0.154021]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038506 in range [0.000000, 0.077012]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015135 in range [0.000000, 0.030270]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007454 in range [0.000000, 0.014908]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003536 in range [0.000000, 0.007072]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001282 in range [0.000000, 0.002564]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000318 in range [0.000000, 0.000636]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000159 in range [0.000000, 0.000319]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.06173725668092664, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.1811324497449708, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.06173725668092664, x5 : -0.3497557147652133, x6 : 0, x7 : 0, x8 : 3, x9 : 0.1807013669860268, x10 : -0.1979493573307991, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121025 in range [0.000000, 0.242050]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053034 in range [0.000000, 0.106067]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026387 in range [0.000000, 0.052774]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013194 in range [0.000000, 0.026388]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006495 in range [0.000000, 0.012990]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003191 in range [0.000000, 0.006382]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001265 in range [0.000000, 0.002531]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000633 in range [0.000000, 0.001266]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000301 in range [0.000000, 0.000603]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000151 in range [0.000000, 0.000302]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.07987628537685762, x5 : -0.3314303696504035, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.03968453777683515, x10 : -0.13165761318239427, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.07987628537685762, x5 : -0.3448510766029358, x6 : 0, x7 : 4, x8 : 0, x9 : 0.035349358373614796, x10 : -0.13599279258561464, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171549 in range [0.000000, 0.343099]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081114 in range [0.000000, 0.162229]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040546 in range [0.000000, 0.081092]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020114 in range [0.000000, 0.040227]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009471 in range [0.000000, 0.018943]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004569 in range [0.000000, 0.009138]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000750 in range [0.000000, 0.001501]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000208 in range [0.000000, 0.000416]...	no solution exists.
	Iteration #010: testing norm threshold 0.000312 in range [0.000208, 0.000416]...	no solution exists.
	Iteration #011: testing norm threshold 0.000364 in range [0.000312, 0.000416]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.9155836132058024, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.0784426412928312, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.9155836118702352, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.0784426419606148, x10 : 0.0782662419919431, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000415


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156958 in range [0.000000, 0.313916]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078480 in range [0.000000, 0.156959]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039099 in range [0.000000, 0.078197]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019550 in range [0.000000, 0.039100]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009775 in range [0.000000, 0.019551]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004570 in range [0.000000, 0.009140]...	no solution exists.
	Iteration #008: testing norm threshold 0.006855 in range [0.004570, 0.009140]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005713 in range [0.004570, 0.006856]...	no solution exists.
	Iteration #010: testing norm threshold 0.006285 in range [0.005713, 0.006856]...	no solution exists.
	Iteration #011: testing norm threshold 0.006571 in range [0.006285, 0.006856]...	no solution exists.
	Iteration #012: testing norm threshold 0.006713 in range [0.006571, 0.006856]...	solution exists & found.
	Iteration #013: testing norm threshold 0.006642 in range [0.006571, 0.006714]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.548304451048492, x5 : 0.8853794705484691, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.638789920191328, x10 : 1.6582194730991282, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.547869278151022, x5 : 0.8849442976509997, x6 : 0, x7 : 0, x8 : 3, x9 : 2.6383547472938584, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.006642


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142709 in range [0.000000, 0.285419]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070448 in range [0.000000, 0.140896]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035196 in range [0.000000, 0.070392]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015762 in range [0.000000, 0.031524]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007764 in range [0.000000, 0.015529]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003813 in range [0.000000, 0.007626]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001749 in range [0.000000, 0.003497]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000732 in range [0.000000, 0.001464]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000367 in range [0.000000, 0.000733]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000184 in range [0.000000, 0.000368]...	no solution exists.
	Iteration #012: testing norm threshold 0.000276 in range [0.000184, 0.000368]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4130846196304676, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.34487697288653363, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4133702095244368, x5 : -0.3445654867089666, x6 : 0, x7 : 6, x8 : 0, x9 : -0.34516256278050284, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000276


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119037 in range [0.000000, 0.238073]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058469 in range [0.000000, 0.116938]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026791 in range [0.000000, 0.053581]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013396 in range [0.000000, 0.026792]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006524 in range [0.000000, 0.013048]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003023 in range [0.000000, 0.006046]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001512 in range [0.000000, 0.003024]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000383 in range [0.000000, 0.000766]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	no solution exists.
	Iteration #011: testing norm threshold 0.000204 in range [0.000136, 0.000272]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.6713210786770154, x5 : -0.19722340198141025, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.647965117934938, x5 : -0.21064409613609314, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6653448939323425, x10 : -0.10956036520361004, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000204


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154518 in range [0.000000, 0.309036]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072100 in range [0.000000, 0.144199]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036050 in range [0.000000, 0.072101]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018026 in range [0.000000, 0.036051]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008280 in range [0.000000, 0.016560]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001482 in range [0.000000, 0.002964]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000742 in range [0.000000, 0.001483]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000371 in range [0.000000, 0.000743]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000114 in range [0.000000, 0.000228]...	no solution exists.
	Iteration #011: testing norm threshold 0.000171 in range [0.000114, 0.000228]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 1.0, x4 : 0.9613997591656736, x5 : -0.30458897611660485, x6 : 0.0, x7 : 3.0, x8 : 2.0, x9 : 1.1226451137828737, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 1, x4 : 0.9568289761094857, x5 : -0.303201274825633, x6 : 0, x7 : 3, x8 : 2, x9 : 1.0983337759971619, x10 : -0.06308047771794767, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000171


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.213306 in range [0.000000, 0.426612]...	solution exists & found.
	Iteration #003: testing norm threshold 0.104024 in range [0.000000, 0.208047]...	solution exists & found.
	Iteration #004: testing norm threshold 0.051880 in range [0.000000, 0.103760]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025936 in range [0.000000, 0.051872]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012948 in range [0.000000, 0.025895]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006393 in range [0.000000, 0.012785]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003197 in range [0.000000, 0.006394]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001599 in range [0.000000, 0.003198]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000712 in range [0.000000, 0.001424]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000356 in range [0.000000, 0.000713]...	no solution exists.
	Iteration #012: testing norm threshold 0.000535 in range [0.000356, 0.000713]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000446 in range [0.000356, 0.000536]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.013234618526135609, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.03968453777683515, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.022181752544079947, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : 0.015373177826404572, x10 : -0.25369927450786106, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000535


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088517 in range [0.000000, 0.177034]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044259 in range [0.000000, 0.088518]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021644 in range [0.000000, 0.043287]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008995 in range [0.000000, 0.017990]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003161 in range [0.000000, 0.006321]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001277 in range [0.000000, 0.002554]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000639 in range [0.000000, 0.001278]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000215 in range [0.000000, 0.000431]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000087 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.15753465277883952, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.1369299772549284, x10 : -0.17585210913996274, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.156330135452073, x5 : -0.21632218166404252, x6 : 0, x7 : 0, x8 : 0, x9 : 0.1369299772549284, x10 : -0.1979493573307991, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142628 in range [0.000000, 0.285256]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070824 in range [0.000000, 0.141648]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034804 in range [0.000000, 0.069607]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016747 in range [0.000000, 0.033494]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008374 in range [0.000000, 0.016748]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003387 in range [0.000000, 0.006774]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001694 in range [0.000000, 0.003388]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000408 in range [0.000000, 0.000817]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7483755052089691, x5 : -0.3605085464609327, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169614 in range [0.000000, 0.339227]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080492 in range [0.000000, 0.160984]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039258 in range [0.000000, 0.078515]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019629 in range [0.000000, 0.039259]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009653 in range [0.000000, 0.019305]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004132 in range [0.000000, 0.008264]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002067 in range [0.000000, 0.004133]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000861 in range [0.000000, 0.001722]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000305 in range [0.000000, 0.000609]...	no solution exists.
	Iteration #011: testing norm threshold 0.000457 in range [0.000305, 0.000609]...	no solution exists.
	Iteration #012: testing norm threshold 0.000533 in range [0.000457, 0.000609]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.0007393059916252349, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.08388701026687755, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.0007584743405397831, x5 : -0.24643263220787048, x6 : 0, x7 : 0, x8 : 0, x9 : 0.08089144960254752, x10 : -0.12060898914933205, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000533


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152659 in range [0.000000, 0.305318]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076279 in range [0.000000, 0.152559]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037684 in range [0.000000, 0.075368]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018163 in range [0.000000, 0.036325]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008924 in range [0.000000, 0.017849]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004279 in range [0.000000, 0.008558]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002061 in range [0.000000, 0.004122]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001031 in range [0.000000, 0.002062]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000516 in range [0.000000, 0.001032]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000239 in range [0.000000, 0.000478]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3131221193543846, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.2741530169024658, x10 : -0.24214385307631545, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3131221193543846, x5 : -0.3627453299654188, x6 : 0, x7 : 0, x8 : 5, x9 : -0.2807300689113798, x10 : -0.2531924769282341, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091750 in range [0.000000, 0.183500]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045875 in range [0.000000, 0.091751]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022938 in range [0.000000, 0.045876]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008629 in range [0.000000, 0.017259]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000321 in range [0.000000, 0.000643]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000161 in range [0.000000, 0.000322]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000070 in range [0.000000, 0.000141]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7296325371713971, x5 : -0.4298488126076653, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7358801960945129, x5 : -0.3985338509082794, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6542942821979523, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000140


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170856 in range [0.000000, 0.341711]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078166 in range [0.000000, 0.156332]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039083 in range [0.000000, 0.078167]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019542 in range [0.000000, 0.039084]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009492 in range [0.000000, 0.018984]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004747 in range [0.000000, 0.009493]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002374 in range [0.000000, 0.004748]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001187 in range [0.000000, 0.002375]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000581 in range [0.000000, 0.001162]...	no solution exists.
	Iteration #011: testing norm threshold 0.000872 in range [0.000581, 0.001162]...	no solution exists.
	Iteration #012: testing norm threshold 0.001017 in range [0.000872, 0.001162]...	no solution exists.
	Iteration #013: testing norm threshold 0.001090 in range [0.001017, 0.001162]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.03258152743373577, x5 : -0.3493246320062693, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : 0.1590312134999496, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.02926634258331809, x5 : -0.19838178471831172, x6 : 0, x7 : 5, x8 : 0, x9 : 0.1557160286495319, x10 : -0.3680410393227901, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152593 in range [0.000000, 0.305187]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073516 in range [0.000000, 0.147033]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032923 in range [0.000000, 0.065846]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016457 in range [0.000000, 0.032914]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008209 in range [0.000000, 0.016418]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003801 in range [0.000000, 0.007602]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001901 in range [0.000000, 0.003802]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000951 in range [0.000000, 0.001902]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000091 in range [0.000000, 0.000183]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4505705572339988, x5 : -0.3672188943621351, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.45265311002731323, x5 : -0.3716924488544464, x6 : 0, x7 : 3, x8 : 0, x9 : -0.42886166274547577, x10 : -0.23805996151769515, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104410 in range [0.000000, 0.208819]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051672 in range [0.000000, 0.103345]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023829 in range [0.000000, 0.047658]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011915 in range [0.000000, 0.023830]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003008 in range [0.000000, 0.006015]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001018 in range [0.000000, 0.002036]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4209016836914363, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146771 in range [0.000000, 0.293542]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071795 in range [0.000000, 0.143589]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035898 in range [0.000000, 0.071796]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017657 in range [0.000000, 0.035315]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008248 in range [0.000000, 0.016496]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002517 in range [0.000000, 0.005035]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000565 in range [0.000000, 0.001131]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000260 in range [0.000000, 0.000519]...	no solution exists.
	Iteration #010: testing norm threshold 0.000389 in range [0.000260, 0.000519]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000325 in range [0.000260, 0.000390]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7483755052089691, x5 : -0.2995209314874971, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.23050075704377532, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000389


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153744 in range [0.000000, 0.307487]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073845 in range [0.000000, 0.147691]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036923 in range [0.000000, 0.073846]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018126 in range [0.000000, 0.036252]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009063 in range [0.000000, 0.018127]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004532 in range [0.000000, 0.009064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001513 in range [0.000000, 0.003026]...	no solution exists.
	Iteration #009: testing norm threshold 0.002269 in range [0.001513, 0.003026]...	no solution exists.
	Iteration #010: testing norm threshold 0.002648 in range [0.002269, 0.003026]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002459 in range [0.002269, 0.002649]...	no solution exists.
	Iteration #012: testing norm threshold 0.002554 in range [0.002459, 0.002649]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3339476402452353, x5 : 0.4201286492959589, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.2299505444124234, x10 : 1.6582194730991282, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3418220792659606, x5 : 0.4692845642566681, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : 1.6537992224449076, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002648


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154431 in range [0.000000, 0.308862]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075279 in range [0.000000, 0.150558]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037282 in range [0.000000, 0.074564]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018642 in range [0.000000, 0.037283]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008443 in range [0.000000, 0.016886]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003490 in range [0.000000, 0.006980]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000602 in range [0.000000, 0.001204]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000302 in range [0.000000, 0.000603]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000151 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.16734347311843026, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.05314065445225386, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.14825790417613086, x5 : -0.3586143628103708, x6 : 0, x7 : 0, x8 : 5, x9 : -0.05279805367113646, x10 : -0.2307526324433237, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000151


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175409 in range [0.000000, 0.350818]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084273 in range [0.000000, 0.168545]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040187 in range [0.000000, 0.080374]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020094 in range [0.000000, 0.040188]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009209 in range [0.000000, 0.018417]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004605 in range [0.000000, 0.009210]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002303 in range [0.000000, 0.004606]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000918 in range [0.000000, 0.001836]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000260 in range [0.000000, 0.000520]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000131 in range [0.000000, 0.000261]...	no solution exists.
	Iteration #012: testing norm threshold 0.000196 in range [0.000131, 0.000261]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.3033132990147939, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.4198258011911997, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.3033132990147939, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.4150102896581225, x10 : -0.11437587673668731, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000260


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125918 in range [0.000000, 0.251836]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062959 in range [0.000000, 0.125919]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031480 in range [0.000000, 0.062960]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014335 in range [0.000000, 0.028670]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007168 in range [0.000000, 0.014336]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003584 in range [0.000000, 0.007169]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001732 in range [0.000000, 0.003464]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6928368945581115, x10 : -0.36243909494701987, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167533 in range [0.000000, 0.335066]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083298 in range [0.000000, 0.166596]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037853 in range [0.000000, 0.075707]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018927 in range [0.000000, 0.037854]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009250 in range [0.000000, 0.018500]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004626 in range [0.000000, 0.009251]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002196 in range [0.000000, 0.004392]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001085 in range [0.000000, 0.002169]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000362 in range [0.000000, 0.000723]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000183]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.5713585784009324, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.5482083463407286, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 2, x4 : -0.5721396114516089, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 1, x9 : -0.548989379391405, x10 : -0.2650221341057761, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000091


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116785 in range [0.000000, 0.233569]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057971 in range [0.000000, 0.115942]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028986 in range [0.000000, 0.057972]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009968 in range [0.000000, 0.019937]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003517 in range [0.000000, 0.007035]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001759 in range [0.000000, 0.003518]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000851 in range [0.000000, 0.001703]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000259 in range [0.000000, 0.000519]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000130 in range [0.000000, 0.000260]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5921840992917831, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.17585210913996274, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5932253761763481, x5 : -0.3488039935639868, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5565929268701036, x10 : -0.18690072745084763, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000048


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095629 in range [0.000000, 0.191257]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047322 in range [0.000000, 0.094643]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012932 in range [0.000000, 0.025864]...	solution exists & found.
	Iteration #005: testing norm threshold 0.002751 in range [0.000000, 0.005502]...	solution exists & found.
	Iteration #006: testing norm threshold 0.000403 in range [0.000000, 0.000806]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000147 in range [0.000000, 0.000294]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000072 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.13402263969306924, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.0796621379462793, x10 : -0.24214385307631545, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.13572477552019432, x5 : -0.3314303696504035, x6 : 0, x7 : 0, x8 : 6, x9 : -0.08408238366246223, x10 : -0.2531924769282341, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.099515 in range [0.000000, 0.199030]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049758 in range [0.000000, 0.099516]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024880 in range [0.000000, 0.049759]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012440 in range [0.000000, 0.024881]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006221 in range [0.000000, 0.012441]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003111 in range [0.000000, 0.006222]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001556 in range [0.000000, 0.003112]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000778 in range [0.000000, 0.001557]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000385 in range [0.000000, 0.000770]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000193 in range [0.000000, 0.000386]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4630658697685091, x5 : 0.2411860257373012, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.2863383490338839, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4635801731466527, x5 : 0.24144317742637297, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6957723153314207, x10 : -0.2637267959794614, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116217 in range [0.000000, 0.232435]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056715 in range [0.000000, 0.113430]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028285 in range [0.000000, 0.056571]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014143 in range [0.000000, 0.028286]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007072 in range [0.000000, 0.014144]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003537 in range [0.000000, 0.007073]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001701 in range [0.000000, 0.003403]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000819 in range [0.000000, 0.001638]...	no solution exists.
	Iteration #010: testing norm threshold 0.001229 in range [0.000819, 0.001638]...	no solution exists.
	Iteration #011: testing norm threshold 0.001433 in range [0.001229, 0.001638]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001332 in range [0.001229, 0.001434]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.04924194414641626, x5 : 0.11592618924624082, x6 : 1.0, x7 : 0.0, x8 : 2.0, x9 : 0.17671220249596656, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.04823794412387831, x5 : -0.3985338509082794, x6 : 1, x7 : 0, x8 : 2, x9 : 0.1756797158290005, x10 : -0.2206798224508415, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001327


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143238 in range [0.000000, 0.286476]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068483 in range [0.000000, 0.136967]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034176 in range [0.000000, 0.068352]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015912 in range [0.000000, 0.031824]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007945 in range [0.000000, 0.015890]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003893 in range [0.000000, 0.007786]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001212 in range [0.000000, 0.002423]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000336 in range [0.000000, 0.000672]...	no solution exists.
	Iteration #010: testing norm threshold 0.000504 in range [0.000336, 0.000672]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000402 in range [0.000336, 0.000468]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.25064555668183275, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.17690757742437255, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.2513555997323068, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.17761762047484664, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000402


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120291 in range [0.000000, 0.240582]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060146 in range [0.000000, 0.120292]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030073 in range [0.000000, 0.060147]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013916 in range [0.000000, 0.027831]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006958 in range [0.000000, 0.013917]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003480 in range [0.000000, 0.006959]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001740 in range [0.000000, 0.003481]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000871 in range [0.000000, 0.001741]...	no solution exists.
	Iteration #010: testing norm threshold 0.001306 in range [0.000871, 0.001741]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001089 in range [0.000871, 0.001307]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000980 in range [0.000871, 0.001090]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000926 in range [0.000871, 0.000981]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.20482941072196134, x5 : 0.5095999610752878, x6 : 1.0, x7 : 1.0, x8 : 4.0, x9 : -0.6984967528068727, x10 : 1.9454836968233231, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.20498194862310992, x5 : 0.14724114537239075, x6 : 1, x7 : 1, x8 : 4, x9 : -0.6984967528068727, x10 : 1.9455599657738973, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000926


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163307 in range [0.000000, 0.326614]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079430 in range [0.000000, 0.158860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038897 in range [0.000000, 0.077793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019449 in range [0.000000, 0.038898]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009725 in range [0.000000, 0.019450]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004785 in range [0.000000, 0.009569]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002357 in range [0.000000, 0.004713]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001179 in range [0.000000, 0.002358]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000590 in range [0.000000, 0.001180]...	no solution exists.
	Iteration #011: testing norm threshold 0.000885 in range [0.000590, 0.001180]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000738 in range [0.000590, 0.000886]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000664 in range [0.000590, 0.000739]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.258975765038173, x5 : -0.18827627080347734, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4598034013606439, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.23336914925350216, x5 : -0.3895867168903351, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4604193930268271, x10 : 0.02333111850218691, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000664


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189602 in range [0.000000, 0.379204]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091642 in range [0.000000, 0.183285]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045822 in range [0.000000, 0.091643]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022911 in range [0.000000, 0.045823]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011310 in range [0.000000, 0.022621]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005399 in range [0.000000, 0.010798]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002700 in range [0.000000, 0.005400]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000986 in range [0.000000, 0.001972]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000437 in range [0.000000, 0.000874]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000189 in range [0.000000, 0.000377]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000095 in range [0.000000, 0.000190]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.2381502441473224, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.19016831917138527, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.2386587973506946, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.19068815584907303, x10 : -0.24478300211747228, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147851 in range [0.000000, 0.295701]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073926 in range [0.000000, 0.147852]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036626 in range [0.000000, 0.073252]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013800 in range [0.000000, 0.027600]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006901 in range [0.000000, 0.013801]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003422 in range [0.000000, 0.006844]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001605 in range [0.000000, 0.003210]...	no solution exists.
	Iteration #009: testing norm threshold 0.002407 in range [0.001605, 0.003210]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002007 in range [0.001605, 0.002408]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001806 in range [0.001605, 0.002008]...	no solution exists.
	Iteration #012: testing norm threshold 0.001907 in range [0.001806, 0.002008]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001857 in range [0.001806, 0.001908]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4255799321649779, x5 : 0.32171020633869724, x6 : 1.0, x7 : 0.0, x8 : 3.0, x9 : -0.33603647838852513, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4255799321649779, x5 : -0.3985338509082794, x6 : 1, x7 : 0, x8 : 3, x9 : -0.33603647838852513, x10 : -0.29179916613446616, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001857


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144507 in range [0.000000, 0.289014]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062281 in range [0.000000, 0.124561]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030618 in range [0.000000, 0.061237]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015310 in range [0.000000, 0.030619]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007655 in range [0.000000, 0.015311]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003828 in range [0.000000, 0.007656]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001915 in range [0.000000, 0.003829]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000958 in range [0.000000, 0.001916]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000479 in range [0.000000, 0.000959]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000195 in range [0.000000, 0.000391]...	no solution exists.
	Iteration #012: testing norm threshold 0.000293 in range [0.000195, 0.000391]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 2.3233888254273047, x5 : -0.12564635255794712, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.488501513725184, x10 : 0.376579090329643, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 2.3177680952647597, x5 : -0.174855574965477, x6 : 0, x7 : 0, x8 : 3, x9 : 2.5095931413182457, x10 : 0.3709583601670979, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000293


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157516 in range [0.000000, 0.315032]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073192 in range [0.000000, 0.146384]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035303 in range [0.000000, 0.070605]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015368 in range [0.000000, 0.030736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007684 in range [0.000000, 0.015369]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003843 in range [0.000000, 0.007685]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001486 in range [0.000000, 0.002972]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000687 in range [0.000000, 0.001373]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000336 in range [0.000000, 0.000671]...	no solution exists.
	Iteration #011: testing norm threshold 0.000504 in range [0.000336, 0.000671]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5963492034699531, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5984317362308502, x5 : -0.35442526501061417, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5128463683486947, x10 : -0.159702849587761, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000388


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113123 in range [0.000000, 0.226245]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056562 in range [0.000000, 0.113124]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025640 in range [0.000000, 0.051279]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012148 in range [0.000000, 0.024295]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006023 in range [0.000000, 0.012046]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002991 in range [0.000000, 0.005981]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001496 in range [0.000000, 0.002992]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000531 in range [0.000000, 0.001062]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000266 in range [0.000000, 0.000532]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000267]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4547356614121689, x5 : -0.376166025540068, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.3581377146335463, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.45412812615226966, x5 : -0.3985338509082794, x6 : 0, x7 : 3, x8 : 0, x9 : -0.3593527851533448, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.172723 in range [0.000000, 0.345445]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076781 in range [0.000000, 0.153563]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037929 in range [0.000000, 0.075858]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018247 in range [0.000000, 0.036494]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009124 in range [0.000000, 0.018248]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003938 in range [0.000000, 0.007875]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001428 in range [0.000000, 0.002856]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000715 in range [0.000000, 0.001429]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	no solution exists.
	Iteration #011: testing norm threshold 0.000537 in range [0.000358, 0.000716]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000448 in range [0.000358, 0.000538]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1908554862042005, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3093196199660937, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.18726690027351636, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.26953738927841187, x10 : -0.1794406950706469, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000537


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085951 in range [0.000000, 0.171903]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042976 in range [0.000000, 0.085952]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021489 in range [0.000000, 0.042977]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009466 in range [0.000000, 0.018932]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004733 in range [0.000000, 0.009467]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002115 in range [0.000000, 0.004231]...	no solution exists.
	Iteration #008: testing norm threshold 0.003173 in range [0.002115, 0.004231]...	no solution exists.
	Iteration #009: testing norm threshold 0.003702 in range [0.003173, 0.004231]...	no solution exists.
	Iteration #010: testing norm threshold 0.003966 in range [0.003702, 0.004231]...	no solution exists.
	Iteration #011: testing norm threshold 0.004098 in range [0.003966, 0.004231]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004033 in range [0.003966, 0.004099]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.15753465277883952, x5 : -0.3493246320062693, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : 0.29163863097007675, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.1581987003428156, x5 : -0.3985338509082794, x6 : 0, x7 : 3, x8 : 0, x9 : 0.29170582979505066, x10 : -0.17598650678991062, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104220 in range [0.000000, 0.208440]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050900 in range [0.000000, 0.101800]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025073 in range [0.000000, 0.050146]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012166 in range [0.000000, 0.024331]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005712 in range [0.000000, 0.011423]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002856 in range [0.000000, 0.005713]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001429 in range [0.000000, 0.002857]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000715 in range [0.000000, 0.001430]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000358 in range [0.000000, 0.000716]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000179 in range [0.000000, 0.000359]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.3493246320062693, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.3747273409490208, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7682178996655481, x5 : -0.35374488266048987, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3592584580183029, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000179


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121268 in range [0.000000, 0.242536]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050535 in range [0.000000, 0.101070]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025268 in range [0.000000, 0.050536]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012341 in range [0.000000, 0.024682]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006171 in range [0.000000, 0.012342]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003086 in range [0.000000, 0.006172]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001409 in range [0.000000, 0.002819]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000705 in range [0.000000, 0.001410]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000287 in range [0.000000, 0.000574]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000144 in range [0.000000, 0.000288]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000073 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6852790020417382, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142853 in range [0.000000, 0.285706]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070534 in range [0.000000, 0.141068]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032194 in range [0.000000, 0.064387]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015885 in range [0.000000, 0.031770]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007943 in range [0.000000, 0.015886]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003972 in range [0.000000, 0.007944]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001614 in range [0.000000, 0.003228]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000709 in range [0.000000, 0.001417]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000355 in range [0.000000, 0.000710]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000158 in range [0.000000, 0.000316]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6380002452516543, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5526285935897328, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6379941122104522, x5 : -0.4117668845886776, x6 : 0, x7 : 6, x8 : 0, x9 : -0.553390064532995, x10 : -0.3637158348479418, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.061184 in range [0.000000, 0.122368]...	solution exists & found.
	Iteration #003: testing norm threshold 0.027642 in range [0.000000, 0.055283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.013734 in range [0.000000, 0.027468]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006696 in range [0.000000, 0.013392]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003215 in range [0.000000, 0.006429]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001608 in range [0.000000, 0.003216]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000646 in range [0.000000, 0.001293]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000257 in range [0.000000, 0.000515]...	no solution exists.
	Iteration #010: testing norm threshold 0.000386 in range [0.000257, 0.000515]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000322 in range [0.000257, 0.000387]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.22834142380773165, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.013358429211215713, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : 0.227605894465905, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 4, x9 : -0.012593174402769232, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000386


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093538 in range [0.000000, 0.187077]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046770 in range [0.000000, 0.093539]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022824 in range [0.000000, 0.045648]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011413 in range [0.000000, 0.022825]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001359 in range [0.000000, 0.002719]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000680 in range [0.000000, 0.001360]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000341 in range [0.000000, 0.000681]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000139 in range [0.000000, 0.000278]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7649896271712345, x5 : -0.3895404465682072, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6939904172708458, x10 : -0.3526966747016505, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145250 in range [0.000000, 0.290499]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067620 in range [0.000000, 0.135240]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032198 in range [0.000000, 0.064395]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016099 in range [0.000000, 0.032199]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008049 in range [0.000000, 0.016098]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004025 in range [0.000000, 0.008050]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002013 in range [0.000000, 0.004026]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000738 in range [0.000000, 0.001476]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000354 in range [0.000000, 0.000708]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000144 in range [0.000000, 0.000288]...	no solution exists.
	Iteration #012: testing norm threshold 0.000216 in range [0.000144, 0.000288]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : 1.046427831751261, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.35263009297023656, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7504580616950989, x5 : 1.0523542409430688, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.339498907327652, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110952 in range [0.000000, 0.221903]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055358 in range [0.000000, 0.110716]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026652 in range [0.000000, 0.053303]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013326 in range [0.000000, 0.026653]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006114 in range [0.000000, 0.012229]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002916 in range [0.000000, 0.005832]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001389 in range [0.000000, 0.002778]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000695 in range [0.000000, 0.001390]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.376166025540068, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 3, x4 : -0.7565457218385797, x5 : -0.3752047457409871, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6783180761600133, x10 : -0.36175614907436165, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109850 in range [0.000000, 0.219701]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051400 in range [0.000000, 0.102801]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025494 in range [0.000000, 0.050987]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012230 in range [0.000000, 0.024460]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003004 in range [0.000000, 0.006007]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001010 in range [0.000000, 0.002020]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000505 in range [0.000000, 0.001011]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000253 in range [0.000000, 0.000506]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	no solution exists.
	Iteration #011: testing norm threshold 0.000191 in range [0.000127, 0.000254]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.2866947137607391, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7091976887739424, x5 : -0.2849809547392066, x6 : 2, x7 : 6, x8 : 0, x9 : -0.634012496661725, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000191


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119957 in range [0.000000, 0.239913]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059979 in range [0.000000, 0.119958]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029839 in range [0.000000, 0.059677]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014717 in range [0.000000, 0.029435]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007351 in range [0.000000, 0.014702]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003637 in range [0.000000, 0.007274]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001819 in range [0.000000, 0.003638]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000910 in range [0.000000, 0.001820]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000456 in range [0.000000, 0.000911]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000228 in range [0.000000, 0.000457]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.5240638204578105, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.6806203888824498, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.5213484463432214, x5 : -0.1896080642323837, x6 : 0, x7 : 0, x8 : 6, x9 : 0.6798786412082757, x10 : -0.36293696099834943, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109429 in range [0.000000, 0.218857]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048966 in range [0.000000, 0.097933]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024434 in range [0.000000, 0.048868]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008454 in range [0.000000, 0.016908]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001736 in range [0.000000, 0.003471]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000266 in range [0.000000, 0.000531]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000109 in range [0.000000, 0.000217]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000055 in range [0.000000, 0.000110]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7504580616950989, x5 : -0.3895867168903351, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6874461399377432, x10 : -0.37472734094902077, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000046


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130979 in range [0.000000, 0.261958]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065051 in range [0.000000, 0.130101]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032526 in range [0.000000, 0.065052]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016258 in range [0.000000, 0.032516]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008129 in range [0.000000, 0.016259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003202 in range [0.000000, 0.006404]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001601 in range [0.000000, 0.003203]...	no solution exists.
	Iteration #009: testing norm threshold 0.002402 in range [0.001601, 0.003203]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002002 in range [0.001601, 0.002403]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001653 in range [0.001601, 0.001704]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.2089945149001315, x5 : 0.7869610275912073, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : 1.1057882736295224, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.4484880119562149, x5 : 0.6930161714553833, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6012513041496277, x10 : 1.0991578827470303, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001703


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143071 in range [0.000000, 0.286141]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070458 in range [0.000000, 0.140917]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034662 in range [0.000000, 0.069324]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017332 in range [0.000000, 0.034663]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007750 in range [0.000000, 0.015501]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002943 in range [0.000000, 0.005886]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001472 in range [0.000000, 0.002944]...	no solution exists.
	Iteration #009: testing norm threshold 0.002208 in range [0.001472, 0.002944]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001840 in range [0.001472, 0.002209]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001657 in range [0.001472, 0.001841]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001565 in range [0.001472, 0.001658]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.9613997591656736, x5 : 0.08908479571244217, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.9325744820756914, x10 : 0.9069130418204644, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.9259963929653168, x5 : -0.3582717627286911, x6 : 0, x7 : 0, x8 : 1, x9 : 0.9889027048242425, x10 : 0.905837906242514, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001657


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.106742 in range [0.000000, 0.213483]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052633 in range [0.000000, 0.105266]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025684 in range [0.000000, 0.051368]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009110 in range [0.000000, 0.018220]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003729 in range [0.000000, 0.007458]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001865 in range [0.000000, 0.003730]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000301 in range [0.000000, 0.000601]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000151 in range [0.000000, 0.000302]...	no solution exists.
	Iteration #010: testing norm threshold 0.000226 in range [0.000151, 0.000302]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7650358974933624, x5 : -0.4285960869028152, x6 : 0, x7 : 6, x8 : 0, x9 : -0.632141064677362, x10 : -0.37472734094902077, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000301


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154513 in range [0.000000, 0.309025]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075661 in range [0.000000, 0.151323]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037286 in range [0.000000, 0.074571]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018643 in range [0.000000, 0.037287]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007225 in range [0.000000, 0.014451]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003580 in range [0.000000, 0.007161]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001791 in range [0.000000, 0.003581]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000769 in range [0.000000, 0.001538]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000280 in range [0.000000, 0.000559]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.25064555668183275, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.14154559943233866, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.2511071459884484, x5 : -0.38557474602461644, x6 : 0, x7 : 0, x8 : 1, x9 : -0.13003339269755, x10 : -0.2647026903617153, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178971 in range [0.000000, 0.357942]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089486 in range [0.000000, 0.178972]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044744 in range [0.000000, 0.089487]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022372 in range [0.000000, 0.044745]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010870 in range [0.000000, 0.021740]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005436 in range [0.000000, 0.010871]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002706 in range [0.000000, 0.005413]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001070 in range [0.000000, 0.002141]...	no solution exists.
	Iteration #010: testing norm threshold 0.001606 in range [0.001070, 0.002141]...	no solution exists.
	Iteration #011: testing norm threshold 0.001873 in range [0.001606, 0.002141]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001666 in range [0.001606, 0.001727]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.09653670208953813, x5 : -0.24195905787107466, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.0220035487808182, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.12360987812280655, x5 : -0.21064409613609314, x6 : 0, x7 : 4, x8 : 0, x9 : -0.1658569574356079, x10 : -0.04326862096786499, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001726


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133542 in range [0.000000, 0.267083]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057621 in range [0.000000, 0.115243]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028811 in range [0.000000, 0.057621]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014406 in range [0.000000, 0.028812]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007203 in range [0.000000, 0.014406]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003602 in range [0.000000, 0.007204]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000283 in range [0.000000, 0.000567]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000142 in range [0.000000, 0.000284]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000072 in range [0.000000, 0.000143]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.295641844938672, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7102183928307875, x5 : -0.29631302997348513, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6956154336747511, x10 : -0.31948421895504, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.179689 in range [0.000000, 0.359378]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089845 in range [0.000000, 0.179690]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044923 in range [0.000000, 0.089846]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022084 in range [0.000000, 0.044168]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010231 in range [0.000000, 0.020463]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005116 in range [0.000000, 0.010232]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002533 in range [0.000000, 0.005066]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001267 in range [0.000000, 0.002534]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000515 in range [0.000000, 0.001029]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.125692431336729, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.07524189069727505, x10 : -0.2200466050975312, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.12673370749060725, x5 : -0.3527569344670019, x6 : 0, x7 : 0, x8 : 0, x9 : -0.07966213673353195, x10 : -0.22004660218954086, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136080 in range [0.000000, 0.272161]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064513 in range [0.000000, 0.129026]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031956 in range [0.000000, 0.063912]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015969 in range [0.000000, 0.031939]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007985 in range [0.000000, 0.015970]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003984 in range [0.000000, 0.007967]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001984 in range [0.000000, 0.003969]...	no solution exists.
	Iteration #009: testing norm threshold 0.002977 in range [0.001984, 0.003969]...	no solution exists.
	Iteration #010: testing norm threshold 0.003473 in range [0.002977, 0.003969]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003225 in range [0.002977, 0.003474]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003085 in range [0.002977, 0.003193]...	no solution exists.
	Iteration #013: testing norm threshold 0.003139 in range [0.003085, 0.003193]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.015921110721055266, x5 : 1.2432647176657845, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : 3.7574580310836296, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.011500860066834685, x5 : 0.08908479918318335, x6 : 1, x7 : 1, x8 : 0, x9 : -0.6918663680553436, x10 : 3.753037780429409, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003192


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101992 in range [0.000000, 0.203984]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050997 in range [0.000000, 0.101993]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025499 in range [0.000000, 0.050998]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012642 in range [0.000000, 0.025284]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006321 in range [0.000000, 0.012643]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003161 in range [0.000000, 0.006322]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001581 in range [0.000000, 0.003162]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000779 in range [0.000000, 0.001558]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000390 in range [0.000000, 0.000780]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000195 in range [0.000000, 0.000391]...	no solution exists.
	Iteration #012: testing norm threshold 0.000293 in range [0.000195, 0.000391]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.6906679875846156, x5 : -0.16143487726967867, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6850406361314539, x10 : -0.021171373288473145, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : 0.6902693634008089, x5 : -0.12972129559310983, x6 : 0, x7 : 0, x8 : 0, x9 : 0.7406923356076806, x10 : -0.02156999747227981, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000390


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175724 in range [0.000000, 0.351449]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087863 in range [0.000000, 0.175725]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043932 in range [0.000000, 0.087864]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014916 in range [0.000000, 0.029831]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007456 in range [0.000000, 0.014913]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003666 in range [0.000000, 0.007333]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001819 in range [0.000000, 0.003638]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000450 in range [0.000000, 0.000900]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000225 in range [0.000000, 0.000451]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.5657148622395118, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6364179163924074, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.5668888092113226, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 0, x9 : 0.634070022448786, x10 : -0.37472734094902077, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119948 in range [0.000000, 0.239895]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059974 in range [0.000000, 0.119949]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029988 in range [0.000000, 0.059975]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014760 in range [0.000000, 0.029520]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007381 in range [0.000000, 0.014761]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002783 in range [0.000000, 0.005566]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001392 in range [0.000000, 0.002784]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000697 in range [0.000000, 0.001393]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000349 in range [0.000000, 0.000698]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000175 in range [0.000000, 0.000350]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000069 in range [0.000000, 0.000138]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6546606619643349, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : -0.3084355970126681, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6546606619643349, x5 : -0.34037749558935304, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5835703313350677, x10 : -0.3084355970126681, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000137


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123352 in range [0.000000, 0.246703]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060409 in range [0.000000, 0.120817]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029228 in range [0.000000, 0.058456]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013186 in range [0.000000, 0.026373]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006139 in range [0.000000, 0.012278]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002538 in range [0.000000, 0.005076]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001172 in range [0.000000, 0.002344]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000515 in range [0.000000, 0.001030]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000258 in range [0.000000, 0.000516]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000130 in range [0.000000, 0.000259]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7379627455277374, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.17585210913996274, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7380985418402787, x5 : -0.3494604283188105, x6 : 2, x7 : 6, x8 : 0, x9 : -0.696150822397023, x10 : -0.14257043769553254, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000130


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146804 in range [0.000000, 0.293609]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071603 in range [0.000000, 0.143206]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034450 in range [0.000000, 0.068901]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017226 in range [0.000000, 0.034451]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008215 in range [0.000000, 0.016430]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003276 in range [0.000000, 0.006552]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001130 in range [0.000000, 0.002259]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000548 in range [0.000000, 0.001095]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000274 in range [0.000000, 0.000549]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000138 in range [0.000000, 0.000275]...	no solution exists.
	Iteration #012: testing norm threshold 0.000206 in range [0.000138, 0.000275]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.14235284804940948, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.04430015995424538, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.14331931008647314, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 3, x9 : -0.04333369740238089, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000274


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.078231 in range [0.000000, 0.156462]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038019 in range [0.000000, 0.076039]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019010 in range [0.000000, 0.038020]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008314 in range [0.000000, 0.016628]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003886 in range [0.000000, 0.007772]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001092 in range [0.000000, 0.002184]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000545 in range [0.000000, 0.001090]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6463304536079947, x5 : -0.4030074190738666, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6469854449902671, x5 : -0.40366241045613904, x6 : 0, x7 : 2, x8 : 0, x9 : -0.5730201454801862, x10 : -0.36302371729025107, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097777 in range [0.000000, 0.195554]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048874 in range [0.000000, 0.097749]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024438 in range [0.000000, 0.048875]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012100 in range [0.000000, 0.024200]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004304 in range [0.000000, 0.008609]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001964 in range [0.000000, 0.003927]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000798 in range [0.000000, 0.001595]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000309 in range [0.000000, 0.000617]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000144 in range [0.000000, 0.000288]...	no solution exists.
	Iteration #011: testing norm threshold 0.000216 in range [0.000144, 0.000288]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 4.0, x4 : -0.392259098739617, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5879905715817667, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 4, x4 : -0.39430319561550903, x5 : -0.3985338509082794, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5897667101390489, x10 : -0.17496403986132167, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119696 in range [0.000000, 0.239392]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059721 in range [0.000000, 0.119441]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027995 in range [0.000000, 0.055991]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012678 in range [0.000000, 0.025357]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006182 in range [0.000000, 0.012363]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003091 in range [0.000000, 0.006183]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001546 in range [0.000000, 0.003092]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000770 in range [0.000000, 0.001540]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000386 in range [0.000000, 0.000771]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000193 in range [0.000000, 0.000387]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.8947580923149516, x5 : 1.4579958659361738, x6 : 1.0, x7 : 0.0, x8 : 3.0, x9 : 1.0740223940438272, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.8945899808388454, x5 : 1.4222073554992676, x6 : 1, x7 : 0, x8 : 3, x9 : 1.073854282567721, x10 : -0.0442705106335474, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109324 in range [0.000000, 0.218647]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054576 in range [0.000000, 0.109152]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025558 in range [0.000000, 0.051116]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012261 in range [0.000000, 0.024523]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006131 in range [0.000000, 0.012262]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002341 in range [0.000000, 0.004683]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000893 in range [0.000000, 0.001786]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000225 in range [0.000000, 0.000450]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000113 in range [0.000000, 0.000226]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000057 in range [0.000000, 0.000114]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.3135361072945377, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7423280511972624, x5 : -0.3071801994917113, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6830258965492249, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000113


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120971 in range [0.000000, 0.241941]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054756 in range [0.000000, 0.109513]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026273 in range [0.000000, 0.052547]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013129 in range [0.000000, 0.026259]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006545 in range [0.000000, 0.013091]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003273 in range [0.000000, 0.006546]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000712 in range [0.000000, 0.001423]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000141 in range [0.000000, 0.000282]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7337976413495673, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.24214385307631545, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7368631773771785, x5 : -0.3686269128268351, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6490186059420695, x10 : -0.24061108506250978, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153706 in range [0.000000, 0.307411]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075409 in range [0.000000, 0.150818]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037404 in range [0.000000, 0.074807]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018702 in range [0.000000, 0.037405]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009341 in range [0.000000, 0.018681]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001404 in range [0.000000, 0.002809]...	no solution exists.
	Iteration #008: testing norm threshold 0.002107 in range [0.001404, 0.002809]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001756 in range [0.001404, 0.002108]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001581 in range [0.001404, 0.001757]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001493 in range [0.001404, 0.001582]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4963867031938701, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.4023401871235887, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7067244648933411, x5 : -0.23679381406042208, x6 : 1, x7 : 6, x8 : 0, x9 : -0.4030318712530928, x10 : -0.1755062670752107, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001493


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147386 in range [0.000000, 0.294773]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073574 in range [0.000000, 0.147149]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036788 in range [0.000000, 0.073575]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018394 in range [0.000000, 0.036789]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009198 in range [0.000000, 0.018395]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003523 in range [0.000000, 0.007046]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001762 in range [0.000000, 0.003524]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000882 in range [0.000000, 0.001763]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000441 in range [0.000000, 0.000883]...	no solution exists.
	Iteration #011: testing norm threshold 0.000662 in range [0.000441, 0.000883]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000552 in range [0.000441, 0.000663]...	no solution exists.
	Iteration #013: testing norm threshold 0.000607 in range [0.000552, 0.000663]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.013234618526135609, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1503860939303471, x10 : -0.3747273409490208, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.015976286843258608, x5 : -0.16901117428905005, x6 : 0, x7 : 0, x8 : 0, x9 : -0.06586985109408325, x10 : -0.3388397954966587, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000607


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161586 in range [0.000000, 0.323171]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080274 in range [0.000000, 0.160549]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034165 in range [0.000000, 0.068329]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016681 in range [0.000000, 0.033363]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006247 in range [0.000000, 0.012495]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003028 in range [0.000000, 0.006057]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001515 in range [0.000000, 0.003029]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000758 in range [0.000000, 0.001516]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000379 in range [0.000000, 0.000759]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000190 in range [0.000000, 0.000380]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000096 in range [0.000000, 0.000191]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.22565493161281197, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.19016831917138527, x10 : -0.10956036520361004, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.22564631651043945, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : -0.19015970406901275, x10 : -0.09849451036055498, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115937 in range [0.000000, 0.231873]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057090 in range [0.000000, 0.114181]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028238 in range [0.000000, 0.056475]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014119 in range [0.000000, 0.028239]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007060 in range [0.000000, 0.014120]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003236 in range [0.000000, 0.006472]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001619 in range [0.000000, 0.003237]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000810 in range [0.000000, 0.001620]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000405 in range [0.000000, 0.000811]...	no solution exists.
	Iteration #011: testing norm threshold 0.000608 in range [0.000405, 0.000811]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000503 in range [0.000405, 0.000601]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.81941121986872, x5 : -0.19722340198141025, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.8740871461135944, x10 : 0.19980110649936916, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 1.81941121986872, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 1.865018619436122, x10 : 0.1958126999320071, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000600


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154748 in range [0.000000, 0.309495]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071783 in range [0.000000, 0.143565]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035892 in range [0.000000, 0.071784]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017946 in range [0.000000, 0.035893]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008974 in range [0.000000, 0.017947]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001419 in range [0.000000, 0.002838]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000341 in range [0.000000, 0.000681]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000149 in range [0.000000, 0.000299]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7546000227717423, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918871752775647, x10 : -0.26431203052055974, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157039 in range [0.000000, 0.314079]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078520 in range [0.000000, 0.157040]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037733 in range [0.000000, 0.075467]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018615 in range [0.000000, 0.037230]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008939 in range [0.000000, 0.017877]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001246 in range [0.000000, 0.002491]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000623 in range [0.000000, 0.001247]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000312 in range [0.000000, 0.000624]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000157 in range [0.000000, 0.000313]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000076 in range [0.000000, 0.000151]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5755236825791025, x5 : -0.3851131567180008, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.5349476045937159, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5859364569187164, x5 : -0.3889814040221196, x6 : 0, x7 : 2, x8 : 0, x9 : -0.5356496089294678, x10 : -0.28704035336963574, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163327 in range [0.000000, 0.326654]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080758 in range [0.000000, 0.161515]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040251 in range [0.000000, 0.080503]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019026 in range [0.000000, 0.038052]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009513 in range [0.000000, 0.019027]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004649 in range [0.000000, 0.009299]...	no solution exists.
	Iteration #008: testing norm threshold 0.006974 in range [0.004649, 0.009299]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005560 in range [0.004649, 0.006471]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005105 in range [0.004649, 0.005561]...	no solution exists.
	Iteration #011: testing norm threshold 0.005333 in range [0.005105, 0.005561]...	no solution exists.
	Iteration #012: testing norm threshold 0.005447 in range [0.005333, 0.005561]...	no solution exists.
	Iteration #013: testing norm threshold 0.005504 in range [0.005447, 0.005561]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.6323565290902338, x5 : -0.2688004514048733, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : 0.7955468173565601, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.630740842737569, x5 : 0.29648449831765344, x6 : 0, x7 : 5, x8 : 0, x9 : 0.16566158831119537, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005560


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.194542 in range [0.000000, 0.389084]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088685 in range [0.000000, 0.177370]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044343 in range [0.000000, 0.088686]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021489 in range [0.000000, 0.042978]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010745 in range [0.000000, 0.021490]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004481 in range [0.000000, 0.008961]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002241 in range [0.000000, 0.004482]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001111 in range [0.000000, 0.002222]...	no solution exists.
	Iteration #010: testing norm threshold 0.001666 in range [0.001111, 0.002222]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001389 in range [0.001111, 0.001667]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001250 in range [0.001111, 0.001390]...	no solution exists.
	Iteration #013: testing norm threshold 0.001320 in range [0.001250, 0.001390]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.4797262864811897, x5 : -0.295641844938672, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.5216868628467032, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.48001797960054976, x5 : -0.3582717627286911, x6 : 0, x7 : 3, x8 : 0, x9 : -0.6962866187095642, x10 : -0.18660903433148757, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001389


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124527 in range [0.000000, 0.249054]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062264 in range [0.000000, 0.124528]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029106 in range [0.000000, 0.058213]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014022 in range [0.000000, 0.028044]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007011 in range [0.000000, 0.014023]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001873 in range [0.000000, 0.003746]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000310 in range [0.000000, 0.000619]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000155 in range [0.000000, 0.000311]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000078 in range [0.000000, 0.000156]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.20066430654379125, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.16364683567735985, x10 : -0.10956036520361004, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.19940268073010423, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : -0.16617008730473387, x10 : -0.10956036520361004, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143194 in range [0.000000, 0.286388]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070937 in range [0.000000, 0.141873]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024072 in range [0.000000, 0.048143]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012036 in range [0.000000, 0.024073]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006019 in range [0.000000, 0.012037]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003010 in range [0.000000, 0.006020]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001480 in range [0.000000, 0.002961]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000381 in range [0.000000, 0.000762]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000191 in range [0.000000, 0.000382]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000096 in range [0.000000, 0.000192]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7046419121023764, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6233525495738007, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7048627449278759, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.616501333712739, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000096


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166893 in range [0.000000, 0.333787]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079661 in range [0.000000, 0.159322]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037000 in range [0.000000, 0.073999]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018486 in range [0.000000, 0.036971]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009002 in range [0.000000, 0.018004]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004502 in range [0.000000, 0.009003]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000471 in range [0.000000, 0.000942]...	no solution exists.
	Iteration #009: testing norm threshold 0.000707 in range [0.000471, 0.000942]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000589 in range [0.000471, 0.000708]...	no solution exists.
	Iteration #011: testing norm threshold 0.000649 in range [0.000589, 0.000708]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6296700368953141, x5 : -0.2509061890490075, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : -0.2509061890490075, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.3729050132138896, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000649


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149648 in range [0.000000, 0.299296]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074825 in range [0.000000, 0.149649]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037413 in range [0.000000, 0.074826]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018455 in range [0.000000, 0.036909]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009228 in range [0.000000, 0.018456]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002023 in range [0.000000, 0.004045]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001012 in range [0.000000, 0.002024]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000488 in range [0.000000, 0.000976]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000241 in range [0.000000, 0.000483]...	no solution exists.
	Iteration #011: testing norm threshold 0.000362 in range [0.000241, 0.000483]...	no solution exists.
	Iteration #012: testing norm threshold 0.000422 in range [0.000362, 0.000483]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 2.0693174705589272, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.1127804975598234, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 2.11112187039822, x5 : -0.2263024972680246, x6 : 0, x7 : 0, x8 : 0, x9 : 2.114322782535131, x10 : 0.32357183825939545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000482


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.183267 in range [0.000000, 0.366535]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085452 in range [0.000000, 0.170904]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042112 in range [0.000000, 0.084223]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020151 in range [0.000000, 0.040302]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009026 in range [0.000000, 0.018051]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003762 in range [0.000000, 0.007524]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001406 in range [0.000000, 0.002811]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000373 in range [0.000000, 0.000746]...	no solution exists.
	Iteration #010: testing norm threshold 0.000560 in range [0.000373, 0.000746]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000467 in range [0.000373, 0.000561]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5047169115502104, x5 : -0.3314303696504035, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.42886167061761415, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5692760050296783, x5 : -0.3317344733267251, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4465426653623581, x10 : -0.17570005730180194, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000467


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150145 in range [0.000000, 0.300291]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073884 in range [0.000000, 0.147768]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036943 in range [0.000000, 0.073885]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018199 in range [0.000000, 0.036399]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009100 in range [0.000000, 0.018200]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003166 in range [0.000000, 0.006332]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001472 in range [0.000000, 0.002943]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000736 in range [0.000000, 0.001473]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000314 in range [0.000000, 0.000628]...	no solution exists.
	Iteration #011: testing norm threshold 0.000471 in range [0.000314, 0.000628]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000393 in range [0.000314, 0.000472]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.2631408692163431, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.24214385307631545, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.2644431853444404, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 0, x9 : -0.21357187154450374, x10 : -0.3636787086725235, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000471


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130956 in range [0.000000, 0.261911]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065275 in range [0.000000, 0.130550]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032511 in range [0.000000, 0.065022]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016070 in range [0.000000, 0.032141]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008036 in range [0.000000, 0.016071]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001329 in range [0.000000, 0.002658]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000180 in range [0.000000, 0.000359]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000082 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.6879814953896959, x5 : -0.3135361072945377, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6542942803168303, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.6890221443339355, x5 : -0.31405674414877005, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6449331440352788, x10 : -0.36791254984370403, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135071 in range [0.000000, 0.270143]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066860 in range [0.000000, 0.133719]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030843 in range [0.000000, 0.061685]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015159 in range [0.000000, 0.030317]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007580 in range [0.000000, 0.015160]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002745 in range [0.000000, 0.005490]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001234 in range [0.000000, 0.002469]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000510 in range [0.000000, 0.001021]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000256 in range [0.000000, 0.000511]...	no solution exists.
	Iteration #011: testing norm threshold 0.000383 in range [0.000256, 0.000511]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000318 in range [0.000256, 0.000380]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.2598533202269404, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6979199359388553, x5 : -0.3985338509082794, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6392048277536084, x10 : -0.08907134941764493, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000379


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182229 in range [0.000000, 0.364458]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090561 in range [0.000000, 0.181122]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044481 in range [0.000000, 0.088962]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022042 in range [0.000000, 0.044085]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008477 in range [0.000000, 0.016953]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002468 in range [0.000000, 0.004937]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000670 in range [0.000000, 0.001341]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	no solution exists.
	Iteration #010: testing norm threshold 0.000225 in range [0.000150, 0.000300]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7504580562436056, x5 : -0.3943637446297591, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000225


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.080516 in range [0.000000, 0.161032]...	solution exists & found.
	Iteration #003: testing norm threshold 0.032838 in range [0.000000, 0.065677]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014871 in range [0.000000, 0.029742]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007243 in range [0.000000, 0.014487]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002244 in range [0.000000, 0.004487]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001122 in range [0.000000, 0.002245]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000562 in range [0.000000, 0.001123]...	no solution exists.
	Iteration #009: testing norm threshold 0.000843 in range [0.000562, 0.001123]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000703 in range [0.000562, 0.000844]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000631 in range [0.000562, 0.000701]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6171747243608038, x5 : 0.5453884857870194, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.5614690880877413, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7317151129245758, x5 : 0.5412234026170822, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5550938844680786, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000700


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161098 in range [0.000000, 0.322197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080550 in range [0.000000, 0.161099]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040275 in range [0.000000, 0.080551]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019959 in range [0.000000, 0.039918]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009980 in range [0.000000, 0.019960]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003960 in range [0.000000, 0.007920]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000224 in range [0.000000, 0.000448]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000078 in range [0.000000, 0.000155]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7723229430514973, x5 : -0.4064378045398396, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147214 in range [0.000000, 0.294428]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073502 in range [0.000000, 0.147004]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036711 in range [0.000000, 0.073422]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018356 in range [0.000000, 0.036712]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009175 in range [0.000000, 0.018350]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003807 in range [0.000000, 0.007613]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001452 in range [0.000000, 0.002905]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000700 in range [0.000000, 0.001400]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000265 in range [0.000000, 0.000530]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	no solution exists.
	Iteration #012: testing norm threshold 0.000200 in range [0.000133, 0.000266]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.12985753551489912, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.03987991270524115, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.13529601135266214, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 2, x9 : -0.04162576467587466, x10 : -0.17890195046202495, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000200


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088681 in range [0.000000, 0.177363]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044341 in range [0.000000, 0.088682]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022171 in range [0.000000, 0.044342]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007995 in range [0.000000, 0.015990]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001502 in range [0.000000, 0.003004]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000751 in range [0.000000, 0.001503]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000331 in range [0.000000, 0.000663]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000061 in range [0.000000, 0.000123]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7462929538840777, x5 : -0.3224832384724706, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.10956036520361004, x11 : 2.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7469414019039609, x5 : -0.34420262858305267, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.11020881322349317, x11 : 2, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143963 in range [0.000000, 0.287926]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071346 in range [0.000000, 0.142691]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033659 in range [0.000000, 0.067319]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015813 in range [0.000000, 0.031627]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007838 in range [0.000000, 0.015677]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003920 in range [0.000000, 0.007839]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001438 in range [0.000000, 0.002875]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000719 in range [0.000000, 0.001439]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000360 in range [0.000000, 0.000720]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000170 in range [0.000000, 0.000341]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000086 in range [0.000000, 0.000171]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.4713960781248494, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4421224123646269, x10 : -0.04326862126725737, x11 : 1.0, x12 : 22.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.4701833119109866, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 6, x9 : -0.44454794479235255, x10 : -0.045694153694983, x11 : 1, x12 : 22, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134282 in range [0.000000, 0.268563]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067141 in range [0.000000, 0.134283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032733 in range [0.000000, 0.065466]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016367 in range [0.000000, 0.032734]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008184 in range [0.000000, 0.016368]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002530 in range [0.000000, 0.005060]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000914 in range [0.000000, 0.001828]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000457 in range [0.000000, 0.000915]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000229 in range [0.000000, 0.000458]...	no solution exists.
	Iteration #011: testing norm threshold 0.000344 in range [0.000229, 0.000458]...	no solution exists.
	Iteration #012: testing norm threshold 0.000401 in range [0.000344, 0.000458]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7171372246368868, x5 : -0.045122171956551146, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7650358974933624, x5 : -0.11222565546631813, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6343011900050372, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000457


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165452 in range [0.000000, 0.330904]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075632 in range [0.000000, 0.151263]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037816 in range [0.000000, 0.075633]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018909 in range [0.000000, 0.037817]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008926 in range [0.000000, 0.017853]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004464 in range [0.000000, 0.008927]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002232 in range [0.000000, 0.004465]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000899 in range [0.000000, 0.001798]...	no solution exists.
	Iteration #010: testing norm threshold 0.001349 in range [0.000899, 0.001798]...	no solution exists.
	Iteration #011: testing norm threshold 0.001574 in range [0.001349, 0.001798]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001462 in range [0.001349, 0.001575]...	no solution exists.
	Iteration #013: testing norm threshold 0.001518 in range [0.001462, 0.001575]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.14920444442249928, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.2827981364720683, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.2432452157357788, x5 : -0.20584460941757202, x6 : 0, x7 : 0, x8 : 1, x9 : 0.35605813714061735, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001574


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153101 in range [0.000000, 0.306203]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074527 in range [0.000000, 0.149054]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036118 in range [0.000000, 0.072236]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018059 in range [0.000000, 0.036119]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008734 in range [0.000000, 0.017468]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004237 in range [0.000000, 0.008474]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002119 in range [0.000000, 0.004238]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001060 in range [0.000000, 0.002120]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000531 in range [0.000000, 0.001061]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000266 in range [0.000000, 0.000532]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000133 in range [0.000000, 0.000267]...	no solution exists.
	Iteration #013: testing norm threshold 0.000200 in range [0.000133, 0.000267]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.125692431336729, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.008938181962211472, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.12770030582046876, x5 : -0.4008703588433018, x6 : 0, x7 : 0, x8 : 4, x9 : -0.009793368857794629, x10 : -0.1639482956965227, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000266


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130694 in range [0.000000, 0.261388]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065348 in range [0.000000, 0.130695]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032478 in range [0.000000, 0.064955]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014139 in range [0.000000, 0.028279]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007070 in range [0.000000, 0.014140]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002725 in range [0.000000, 0.005449]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001363 in range [0.000000, 0.002726]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000682 in range [0.000000, 0.001364]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000320 in range [0.000000, 0.000640]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000146 in range [0.000000, 0.000292]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.4214148279868079, x5 : -0.3314303696504035, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.3758187036295633, x10 : -0.13165761318239427, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.42151552756093613, x5 : -0.3448510766029358, x6 : 0, x7 : 1, x8 : 0, x9 : -0.3690876240428533, x10 : -0.1320640579550218, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157597 in range [0.000000, 0.315194]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078799 in range [0.000000, 0.157598]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038827 in range [0.000000, 0.077655]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019361 in range [0.000000, 0.038722]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009681 in range [0.000000, 0.019362]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004841 in range [0.000000, 0.009682]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002319 in range [0.000000, 0.004638]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001145 in range [0.000000, 0.002289]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000487 in range [0.000000, 0.000973]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000205 in range [0.000000, 0.000410]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000103 in range [0.000000, 0.000206]...	no solution exists.
	Iteration #013: testing norm threshold 0.000154 in range [0.000103, 0.000206]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.18400388983111074, x5 : -0.3582717631842022, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.15480634117935135, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.18727348570320027, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : -0.1658569574356079, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000205


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131622 in range [0.000000, 0.263244]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065812 in range [0.000000, 0.131623]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032610 in range [0.000000, 0.065221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016306 in range [0.000000, 0.032611]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008038 in range [0.000000, 0.016075]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003425 in range [0.000000, 0.006850]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001713 in range [0.000000, 0.003426]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000804 in range [0.000000, 0.001608]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000403 in range [0.000000, 0.000805]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000180 in range [0.000000, 0.000360]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000088 in range [0.000000, 0.000177]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6171747243608038, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5305273573447117, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.618293116533896, x5 : -0.4153097267710759, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5349672942886401, x10 : -0.36062865500621916, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123969 in range [0.000000, 0.247937]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061310 in range [0.000000, 0.122620]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030655 in range [0.000000, 0.061311]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015328 in range [0.000000, 0.030656]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007368 in range [0.000000, 0.014736]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002773 in range [0.000000, 0.005546]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001363 in range [0.000000, 0.002727]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000363 in range [0.000000, 0.000725]...	no solution exists.
	Iteration #010: testing norm threshold 0.000544 in range [0.000363, 0.000725]...	no solution exists.
	Iteration #011: testing norm threshold 0.000635 in range [0.000544, 0.000725]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.16169975695700964, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.2827981364720683, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : 0.16169975695700964, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.28088664070015495, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000635


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143438 in range [0.000000, 0.286877]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071720 in range [0.000000, 0.143439]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028546 in range [0.000000, 0.057091]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014273 in range [0.000000, 0.028547]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007137 in range [0.000000, 0.014274]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002456 in range [0.000000, 0.004911]...	no solution exists.
	Iteration #008: testing norm threshold 0.003684 in range [0.002456, 0.004911]...	no solution exists.
	Iteration #009: testing norm threshold 0.004298 in range [0.003684, 0.004911]...	no solution exists.
	Iteration #010: testing norm threshold 0.004605 in range [0.004298, 0.004911]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004452 in range [0.004298, 0.004606]...	no solution exists.
	Iteration #012: testing norm threshold 0.004529 in range [0.004452, 0.004606]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.040911735790076016, x5 : 0.8048552899470731, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : 0.1678717079979581, x10 : 1.3709552493749328, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.036315280359921424, x5 : 0.8003817200660706, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : 1.3663587939447783, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004529


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167304 in range [0.000000, 0.334608]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080765 in range [0.000000, 0.161529]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040296 in range [0.000000, 0.080591]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019863 in range [0.000000, 0.039727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009932 in range [0.000000, 0.019864]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004967 in range [0.000000, 0.009933]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002418 in range [0.000000, 0.004837]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000928 in range [0.000000, 0.001856]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000464 in range [0.000000, 0.000929]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000213 in range [0.000000, 0.000425]...	no solution exists.
	Iteration #012: testing norm threshold 0.000319 in range [0.000213, 0.000425]...	no solution exists.
	Iteration #013: testing norm threshold 0.000372 in range [0.000319, 0.000425]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.5921840992917831, x5 : -0.07196356549034981, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6150921583175659, x5 : -0.08538426086306572, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.31053708866238594, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000424


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140234 in range [0.000000, 0.280467]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068140 in range [0.000000, 0.136279]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033060 in range [0.000000, 0.066119]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014196 in range [0.000000, 0.028391]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006893 in range [0.000000, 0.013787]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001437 in range [0.000000, 0.002874]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000719 in range [0.000000, 0.001438]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000325 in range [0.000000, 0.000651]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7546231622404179, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7608708143234253, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.36943692175120835, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116989 in range [0.000000, 0.233979]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058495 in range [0.000000, 0.116990]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029248 in range [0.000000, 0.058496]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014614 in range [0.000000, 0.029228]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007308 in range [0.000000, 0.014615]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002158 in range [0.000000, 0.004316]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000870 in range [0.000000, 0.001740]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000435 in range [0.000000, 0.000871]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000218 in range [0.000000, 0.000436]...	no solution exists.
	Iteration #011: testing norm threshold 0.000327 in range [0.000218, 0.000436]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000273 in range [0.000218, 0.000328]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.5796887867572726, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5570488408387371, x10 : -0.1537548611611785, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.5804002019718084, x5 : -0.28150972326278967, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5577602560532728, x10 : -0.18690073490142822, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000273


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.197243 in range [0.000000, 0.394485]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077701 in range [0.000000, 0.155402]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038813 in range [0.000000, 0.077627]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019345 in range [0.000000, 0.038689]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009562 in range [0.000000, 0.019124]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004697 in range [0.000000, 0.009394]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002349 in range [0.000000, 0.004698]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001175 in range [0.000000, 0.002350]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000588 in range [0.000000, 0.001176]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000286 in range [0.000000, 0.000572]...	no solution exists.
	Iteration #012: testing norm threshold 0.000429 in range [0.000286, 0.000572]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000350 in range [0.000286, 0.000414]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.3714335778487664, x5 : 0.4380229116518247, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.3714639909000276, x5 : 0.43787491491952946, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3194538059037788, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000350


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189613 in range [0.000000, 0.379227]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094390 in range [0.000000, 0.188779]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045927 in range [0.000000, 0.091854]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021277 in range [0.000000, 0.042554]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007106 in range [0.000000, 0.014213]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003018 in range [0.000000, 0.006036]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001510 in range [0.000000, 0.003019]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000755 in range [0.000000, 0.001511]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000338 in range [0.000000, 0.000677]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000146 in range [0.000000, 0.000291]...	no solution exists.
	Iteration #012: testing norm threshold 0.000219 in range [0.000146, 0.000291]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.5921840992917831, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5747298298347541, x10 : -0.17585210913996274, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.5932253761763481, x5 : -0.2543384744400886, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5747298298347541, x10 : -0.16376220570754085, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000290


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154059 in range [0.000000, 0.308118]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072467 in range [0.000000, 0.144934]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034199 in range [0.000000, 0.068398]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012731 in range [0.000000, 0.025462]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006366 in range [0.000000, 0.012732]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002847 in range [0.000000, 0.005694]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000581 in range [0.000000, 0.001162]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000244 in range [0.000000, 0.000488]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000059


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087814 in range [0.000000, 0.175627]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043907 in range [0.000000, 0.087815]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019435 in range [0.000000, 0.038870]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009484 in range [0.000000, 0.018967]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004686 in range [0.000000, 0.009371]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001943 in range [0.000000, 0.003887]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000305 in range [0.000000, 0.000609]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000153 in range [0.000000, 0.000306]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000077 in range [0.000000, 0.000154]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5422028491537415, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4907451321036735, x10 : -0.2642411010550996, x11 : 1.0, x12 : 10.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5427327615549213, x5 : -0.3716924488544464, x6 : 0, x7 : 0, x8 : 5, x9 : -0.5017957389354706, x10 : -0.2647710134562794, x11 : 1, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.221571 in range [0.000000, 0.443142]...	solution exists & found.
	Iteration #003: testing norm threshold 0.110031 in range [0.000000, 0.220061]...	solution exists & found.
	Iteration #004: testing norm threshold 0.055016 in range [0.000000, 0.110032]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024972 in range [0.000000, 0.049944]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012374 in range [0.000000, 0.024747]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005894 in range [0.000000, 0.011788]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002790 in range [0.000000, 0.005580]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001373 in range [0.000000, 0.002746]...	no solution exists.
	Iteration #010: testing norm threshold 0.002059 in range [0.001373, 0.002746]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001717 in range [0.001373, 0.002060]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001545 in range [0.001373, 0.001718]...	no solution exists.
	Iteration #013: testing norm threshold 0.001631 in range [0.001545, 0.001718]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.26730597339451323, x5 : 0.4022343869400932, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.203429060918398, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.5609458386898041, x5 : 0.4020762089969828, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2035872388615084, x10 : -0.20883980181705958, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001717


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118062 in range [0.000000, 0.236124]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059032 in range [0.000000, 0.118063]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028733 in range [0.000000, 0.057465]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014367 in range [0.000000, 0.028734]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007184 in range [0.000000, 0.014368]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003592 in range [0.000000, 0.007185]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001064 in range [0.000000, 0.002127]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000532 in range [0.000000, 0.001065]...	no solution exists.
	Iteration #010: testing norm threshold 0.000799 in range [0.000532, 0.001065]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000666 in range [0.000532, 0.000800]...	no solution exists.
	Iteration #012: testing norm threshold 0.000733 in range [0.000666, 0.000800]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.2029758014995409, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.2110500587629585, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.2012859829479576, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.2093602402113752, x10 : -0.07641449198126793, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000733


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.208478 in range [0.000000, 0.416955]...	solution exists & found.
	Iteration #003: testing norm threshold 0.103836 in range [0.000000, 0.207672]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049648 in range [0.000000, 0.099296]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024458 in range [0.000000, 0.048916]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012230 in range [0.000000, 0.024459]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006106 in range [0.000000, 0.012212]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003053 in range [0.000000, 0.006107]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001242 in range [0.000000, 0.002485]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000223 in range [0.000000, 0.000446]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000224]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.028416423255565638, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.07062626851986482, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 0.04330295309165674, x5 : -0.344542410376275, x6 : 0, x7 : 0, x8 : 0, x9 : 0.07314505785444933, x10 : -0.24245251930297623, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000112


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128712 in range [0.000000, 0.257423]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061674 in range [0.000000, 0.123347]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029313 in range [0.000000, 0.058627]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013052 in range [0.000000, 0.026103]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006227 in range [0.000000, 0.012454]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003114 in range [0.000000, 0.006228]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001185 in range [0.000000, 0.002370]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000200 in range [0.000000, 0.000401]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7088070162805465, x5 : -0.30458897611660485, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7098482821719123, x5 : -0.3001154065132141, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6299829185009003, x10 : -0.1326988790737601, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000033


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141661 in range [0.000000, 0.283321]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070602 in range [0.000000, 0.141204]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035130 in range [0.000000, 0.070260]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012922 in range [0.000000, 0.025844]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006461 in range [0.000000, 0.012923]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002798 in range [0.000000, 0.005595]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001324 in range [0.000000, 0.002647]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000525 in range [0.000000, 0.001050]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000263 in range [0.000000, 0.000526]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000132 in range [0.000000, 0.000264]...	no solution exists.
	Iteration #012: testing norm threshold 0.000198 in range [0.000132, 0.000264]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 1.0, x4 : -0.6421653494298245, x5 : -0.3940602878959337, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : -0.5747298298347541, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 1, x4 : -0.6692385375499725, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : -0.5791537003995078, x10 : -0.28412641375150705, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000198


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131924 in range [0.000000, 0.263849]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061987 in range [0.000000, 0.123974]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030994 in range [0.000000, 0.061988]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015497 in range [0.000000, 0.030995]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007050 in range [0.000000, 0.014100]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003524 in range [0.000000, 0.007048]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001355 in range [0.000000, 0.002710]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000678 in range [0.000000, 0.001356]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000319 in range [0.000000, 0.000637]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000160 in range [0.000000, 0.000320]...	no solution exists.
	Iteration #012: testing norm threshold 0.000240 in range [0.000160, 0.000320]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6713210786770154, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6712270787453228, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.31929621909165473, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000319


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159573 in range [0.000000, 0.319146]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079192 in range [0.000000, 0.158384]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039596 in range [0.000000, 0.079193]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019471 in range [0.000000, 0.038942]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009432 in range [0.000000, 0.018865]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004717 in range [0.000000, 0.009433]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002359 in range [0.000000, 0.004718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000601 in range [0.000000, 0.001202]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000301 in range [0.000000, 0.000602]...	no solution exists.
	Iteration #011: testing norm threshold 0.000452 in range [0.000301, 0.000602]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000377 in range [0.000301, 0.000453]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.2446268432812422, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.4011206904701408, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.241513639199518, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 1.3980074863884167, x10 : 0.0199099185873712, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000377


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110995 in range [0.000000, 0.221990]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053808 in range [0.000000, 0.107615]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026904 in range [0.000000, 0.053809]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013453 in range [0.000000, 0.026905]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006727 in range [0.000000, 0.013454]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003364 in range [0.000000, 0.006728]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001682 in range [0.000000, 0.003365]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000842 in range [0.000000, 0.001683]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000406 in range [0.000000, 0.000812]...	no solution exists.
	Iteration #011: testing norm threshold 0.000609 in range [0.000406, 0.000812]...	no solution exists.
	Iteration #012: testing norm threshold 0.000711 in range [0.000609, 0.000812]...	no solution exists.
	Iteration #013: testing norm threshold 0.000761 in range [0.000711, 0.000812]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.0863528845107775, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.2552525312530007, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.081849440802632, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 3, x9 : 1.3216394333741306, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000761


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145128 in range [0.000000, 0.290256]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068023 in range [0.000000, 0.136046]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032263 in range [0.000000, 0.064527]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016132 in range [0.000000, 0.032264]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008067 in range [0.000000, 0.016133]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002620 in range [0.000000, 0.005241]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000880 in range [0.000000, 0.001759]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000371 in range [0.000000, 0.000741]...	no solution exists.
	Iteration #010: testing norm threshold 0.000556 in range [0.000371, 0.000741]...	no solution exists.
	Iteration #011: testing norm threshold 0.000649 in range [0.000556, 0.000741]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.6713210786770154, x5 : -0.2061705331593431, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.7567057311534882, x5 : -0.14330652962039614, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : 0.17746977106243833, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000649


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102364 in range [0.000000, 0.204728]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050185 in range [0.000000, 0.100370]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024737 in range [0.000000, 0.049473]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012241 in range [0.000000, 0.024483]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006121 in range [0.000000, 0.012242]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003029 in range [0.000000, 0.006058]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001515 in range [0.000000, 0.003030]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000732 in range [0.000000, 0.001465]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000367 in range [0.000000, 0.000733]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000184 in range [0.000000, 0.000368]...	no solution exists.
	Iteration #012: testing norm threshold 0.000276 in range [0.000184, 0.000368]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.2598533202269404, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7069243719826562, x5 : -0.2911682724952698, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6694954530984117, x10 : -0.021073856527305673, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000276


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.192474 in range [0.000000, 0.384949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094990 in range [0.000000, 0.189980]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046435 in range [0.000000, 0.092871]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023218 in range [0.000000, 0.046436]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010974 in range [0.000000, 0.021948]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003666 in range [0.000000, 0.007333]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001834 in range [0.000000, 0.003667]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000917 in range [0.000000, 0.001835]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	no solution exists.
	Iteration #011: testing norm threshold 0.000689 in range [0.000459, 0.000918]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000548 in range [0.000459, 0.000636]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.3820752811608563, x5 : -0.17932913962554445, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.5911913221773228, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.3695799708366394, x5 : -0.16001717144347535, x6 : 0, x7 : 0, x8 : 0, x9 : 1.661122864543425, x10 : 0.190170182346331, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000548


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115277 in range [0.000000, 0.230554]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056249 in range [0.000000, 0.112498]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027803 in range [0.000000, 0.055606]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013902 in range [0.000000, 0.027804]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005174 in range [0.000000, 0.010347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001716 in range [0.000000, 0.003431]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000699 in range [0.000000, 0.001398]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000350 in range [0.000000, 0.000700]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000173 in range [0.000000, 0.000347]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000087 in range [0.000000, 0.000174]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4241013201817275, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.574534454906348, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.4241013201817275, x5 : -0.30824177255098667, x6 : 0, x7 : 0, x8 : 3, x9 : 0.574534454906348, x10 : -0.24214385307631545, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000173


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125913 in range [0.000000, 0.251826]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062684 in range [0.000000, 0.125368]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031076 in range [0.000000, 0.062152]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013576 in range [0.000000, 0.027152]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006788 in range [0.000000, 0.013577]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002825 in range [0.000000, 0.005651]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001413 in range [0.000000, 0.002826]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000509 in range [0.000000, 0.001018]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	no solution exists.
	Iteration #011: testing norm threshold 0.000382 in range [0.000255, 0.000510]...	no solution exists.
	Iteration #012: testing norm threshold 0.000446 in range [0.000382, 0.000510]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.22417631962956155, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.34468159795812764, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.2259256411133522, x5 : -0.2966167635456328, x6 : 0, x7 : 0, x8 : 2, x9 : 0.34118295499054635, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000509


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098192 in range [0.000000, 0.196383]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049093 in range [0.000000, 0.098185]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024547 in range [0.000000, 0.049094]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012274 in range [0.000000, 0.024548]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006121 in range [0.000000, 0.012241]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002995 in range [0.000000, 0.005991]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001498 in range [0.000000, 0.002996]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000313 in range [0.000000, 0.000626]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000157 in range [0.000000, 0.000314]...	no solution exists.
	Iteration #011: testing norm threshold 0.000235 in range [0.000157, 0.000314]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : 0.6531820499810844, x5 : -0.11669922138001425, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.6673596471354369, x10 : -0.0653658692460416, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : 0.6514852625735239, x5 : -0.016583986947374223, x6 : 0, x7 : 0, x8 : 6, x9 : 0.6656628597278764, x10 : -0.07641449198126793, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000313


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.076668 in range [0.000000, 0.153337]...	solution exists & found.
	Iteration #003: testing norm threshold 0.035891 in range [0.000000, 0.071782]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017946 in range [0.000000, 0.035892]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008970 in range [0.000000, 0.017941]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004486 in range [0.000000, 0.008971]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002235 in range [0.000000, 0.004470]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001118 in range [0.000000, 0.002236]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000475 in range [0.000000, 0.000951]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000238 in range [0.000000, 0.000476]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000121]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7296325371713971, x5 : -0.4119545502517995, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6498740330678261, x10 : -0.3747273409490208, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7211467896146125, x5 : -0.4141926178149213, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6487549992862652, x10 : -0.37472734094902077, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.047716 in range [0.000000, 0.095432]...	solution exists & found.
	Iteration #003: testing norm threshold 0.023858 in range [0.000000, 0.047717]...	solution exists & found.
	Iteration #004: testing norm threshold 0.011930 in range [0.000000, 0.023859]...	solution exists & found.
	Iteration #005: testing norm threshold 0.003677 in range [0.000000, 0.007354]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001839 in range [0.000000, 0.003678]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000920 in range [0.000000, 0.001840]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000461 in range [0.000000, 0.000921]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000231 in range [0.000000, 0.000462]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000116 in range [0.000000, 0.000232]...	no solution exists.
	Iteration #011: testing norm threshold 0.000174 in range [0.000116, 0.000232]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.6338351410734843, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.6012513133287795, x10 : -0.3747273409490208, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.6341558847436272, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 0, x9 : -0.6015720569989224, x10 : -0.3191634752848971, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000231


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.187116 in range [0.000000, 0.374233]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078995 in range [0.000000, 0.157990]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039498 in range [0.000000, 0.078996]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019523 in range [0.000000, 0.039046]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008874 in range [0.000000, 0.017747]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004275 in range [0.000000, 0.008550]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001959 in range [0.000000, 0.003918]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000980 in range [0.000000, 0.001960]...	no solution exists.
	Iteration #010: testing norm threshold 0.001470 in range [0.000980, 0.001960]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001225 in range [0.000980, 0.001471]...	no solution exists.
	Iteration #012: testing norm threshold 0.001348 in range [0.001225, 0.001471]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001287 in range [0.001225, 0.001349]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3089570151762145, x5 : 0.3932872557621603, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3119490771333522, x5 : 0.7049553674304654, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6844540852463077, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100593 in range [0.000000, 0.201187]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050297 in range [0.000000, 0.100594]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025018 in range [0.000000, 0.050036]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012150 in range [0.000000, 0.024300]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005784 in range [0.000000, 0.011568]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002511 in range [0.000000, 0.005022]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001256 in range [0.000000, 0.002512]...	no solution exists.
	Iteration #009: testing norm threshold 0.001884 in range [0.001256, 0.002512]...	no solution exists.
	Iteration #010: testing norm threshold 0.002198 in range [0.001884, 0.002512]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002041 in range [0.001884, 0.002199]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001963 in range [0.001884, 0.002042]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.13402263969306924, x5 : -0.4030074190738666, x6 : 0.0, x7 : 4.0, x8 : 2.0, x9 : -0.01777867646021995, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.46931351721286774, x5 : -0.4253752529621124, x6 : 0, x7 : 4, x8 : 2, x9 : -0.01777867646021995, x10 : -0.2882170819669449, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002041


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127122 in range [0.000000, 0.254244]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059539 in range [0.000000, 0.119078]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029770 in range [0.000000, 0.059540]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014886 in range [0.000000, 0.029771]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007443 in range [0.000000, 0.014885]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002246 in range [0.000000, 0.004491]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001034 in range [0.000000, 0.002069]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000518 in range [0.000000, 0.001035]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000259 in range [0.000000, 0.000519]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000130 in range [0.000000, 0.000260]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000066 in range [0.000000, 0.000131]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.392259098739617, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.3802389508785675, x10 : -0.2642411010550996, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : -0.39425253352226663, x5 : -0.2981219717305645, x6 : 0, x7 : 0, x8 : 5, x9 : -0.38223238566121714, x10 : -0.2642411010550996, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000130


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.078677 in range [0.000000, 0.157354]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039339 in range [0.000000, 0.078678]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019186 in range [0.000000, 0.038372]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009594 in range [0.000000, 0.019187]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004761 in range [0.000000, 0.009523]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002381 in range [0.000000, 0.004762]...	no solution exists.
	Iteration #008: testing norm threshold 0.003572 in range [0.002381, 0.004762]...	solution exists & found.
	Iteration #009: testing norm threshold 0.002500 in range [0.002381, 0.002620]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002441 in range [0.002381, 0.002501]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4907429870324495, x5 : 0.4738114363635562, x6 : 1.0, x7 : 0.0, x8 : 6.0, x9 : 0.6452584108904159, x10 : 1.8570947049081858, x11 : 2.0, x12 : 10.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.4905000634694079, x5 : -0.3001154065132141, x6 : 1, x7 : 0, x8 : 6, x9 : 0.7294219949221737, x10 : 1.8569158096754959, x11 : 2, x12 : 10, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002439


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140494 in range [0.000000, 0.280988]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067761 in range [0.000000, 0.135523]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032110 in range [0.000000, 0.064221]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016049 in range [0.000000, 0.032098]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008025 in range [0.000000, 0.016050]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002979 in range [0.000000, 0.005958]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001285 in range [0.000000, 0.002571]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000643 in range [0.000000, 0.001286]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000322 in range [0.000000, 0.000644]...	no solution exists.
	Iteration #011: testing norm threshold 0.000483 in range [0.000322, 0.000644]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000403 in range [0.000322, 0.000484]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.5463679533319117, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.5817713439464569, x5 : -0.332715371766669, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4973755031824112, x10 : -0.16161491177378343, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000403


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157542 in range [0.000000, 0.315084]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078772 in range [0.000000, 0.157543]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038575 in range [0.000000, 0.077149]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019288 in range [0.000000, 0.038576]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009644 in range [0.000000, 0.019289]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004823 in range [0.000000, 0.009645]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002378 in range [0.000000, 0.004755]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001085 in range [0.000000, 0.002170]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000543 in range [0.000000, 0.001086]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000272 in range [0.000000, 0.000544]...	no solution exists.
	Iteration #012: testing norm threshold 0.000408 in range [0.000272, 0.000544]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000341 in range [0.000272, 0.000409]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.07423256921543701, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.0794667630178733, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.09437097591278039, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.07807132905436506, x10 : -0.2200466050975312, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000408


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126611 in range [0.000000, 0.253221]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063306 in range [0.000000, 0.126612]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031647 in range [0.000000, 0.063293]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015824 in range [0.000000, 0.031648]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007912 in range [0.000000, 0.015825]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003957 in range [0.000000, 0.007913]...	no solution exists.
	Iteration #008: testing norm threshold 0.005935 in range [0.003957, 0.007913]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004544 in range [0.003957, 0.005132]...	no solution exists.
	Iteration #010: testing norm threshold 0.004838 in range [0.004544, 0.005132]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004692 in range [0.004544, 0.004839]...	no solution exists.
	Iteration #012: testing norm threshold 0.004765 in range [0.004692, 0.004839]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.9939705981126945, x5 : 5.976297110792283, x6 : 1.0, x7 : 0.0, x8 : 4.0, x9 : 3.2001613208148663, x10 : 0.4649680822447799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 2.7732200622558594, x5 : 5.0279014110565186, x6 : 1, x7 : 0, x8 : 4, x9 : 3.397466730717588, x10 : 0.46436361997506787, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004765


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142700 in range [0.000000, 0.285400]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071351 in range [0.000000, 0.142701]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032224 in range [0.000000, 0.064449]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016067 in range [0.000000, 0.032135]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007506 in range [0.000000, 0.015011]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001609 in range [0.000000, 0.003218]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000735 in range [0.000000, 0.001471]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000349 in range [0.000000, 0.000697]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000175 in range [0.000000, 0.000350]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5838538909354427, x5 : -0.3493246320062693, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5873847549126276, x5 : -0.3537982106208801, x6 : 0, x7 : 1, x8 : 0, x9 : -0.6321930587291718, x10 : -0.31196646098985303, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142966 in range [0.000000, 0.285932]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067430 in range [0.000000, 0.134860]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033715 in range [0.000000, 0.067431]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016179 in range [0.000000, 0.032359]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006634 in range [0.000000, 0.013269]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003271 in range [0.000000, 0.006542]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001623 in range [0.000000, 0.003246]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000806 in range [0.000000, 0.001611]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000403 in range [0.000000, 0.000807]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000149 in range [0.000000, 0.000297]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000150]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.4298488126076653, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6982714076070309, x5 : -0.4142227013139248, x6 : 0, x7 : 5, x8 : 0, x9 : -0.6189369995622158, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000149


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121452 in range [0.000000, 0.242905]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060294 in range [0.000000, 0.120587]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029364 in range [0.000000, 0.058728]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014430 in range [0.000000, 0.028860]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006421 in range [0.000000, 0.012843]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002761 in range [0.000000, 0.005522]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001381 in range [0.000000, 0.002762]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000509 in range [0.000000, 0.001019]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	no solution exists.
	Iteration #011: testing norm threshold 0.000383 in range [0.000255, 0.000510]...	no solution exists.
	Iteration #012: testing norm threshold 0.000447 in range [0.000383, 0.000510]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.8905929881367816, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.069602146794823, x10 : 0.045120370647879535, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.8902376146533756, x5 : -0.21858676015883005, x6 : 0, x7 : 0, x8 : 4, x9 : 1.0698352606557668, x10 : -0.06536586955189705, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000447


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134162 in range [0.000000, 0.268323]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067081 in range [0.000000, 0.134163]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033501 in range [0.000000, 0.067001]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016751 in range [0.000000, 0.033502]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004589 in range [0.000000, 0.009178]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002295 in range [0.000000, 0.004590]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001148 in range [0.000000, 0.002296]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000574 in range [0.000000, 0.001149]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000288 in range [0.000000, 0.000575]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000144 in range [0.000000, 0.000289]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000073 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3381127444234054, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2741530169024658, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.33394764363765717, x5 : -0.3432054398301504, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2680871365312002, x10 : -0.37472734094902077, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000073


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150158 in range [0.000000, 0.300317]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074033 in range [0.000000, 0.148066]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037017 in range [0.000000, 0.074034]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018509 in range [0.000000, 0.037018]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009242 in range [0.000000, 0.018484]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003836 in range [0.000000, 0.007673]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001919 in range [0.000000, 0.003837]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000802 in range [0.000000, 0.001604]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000304 in range [0.000000, 0.000607]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000152 in range [0.000000, 0.000305]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000056 in range [0.000000, 0.000113]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.5240638204578105, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.6762001416334456, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.5267751428664225, x5 : -0.2860659149109824, x6 : 0, x7 : 0, x8 : 6, x9 : 0.674039245971107, x10 : -0.04389741184257263, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000054


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140604 in range [0.000000, 0.281208]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067818 in range [0.000000, 0.135636]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033282 in range [0.000000, 0.066563]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016637 in range [0.000000, 0.033273]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007956 in range [0.000000, 0.015911]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002819 in range [0.000000, 0.005637]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001410 in range [0.000000, 0.002820]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000705 in range [0.000000, 0.001411]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000353 in range [0.000000, 0.000706]...	no solution exists.
	Iteration #011: testing norm threshold 0.000530 in range [0.000353, 0.000706]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000442 in range [0.000353, 0.000531]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.021564826882475862, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.10176337419130048, x10 : -0.04326862126725737, x11 : 1.0, x12 : 17.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.021564826882475862, x5 : -0.10262907933695903, x6 : 0, x7 : 0, x8 : 5, x9 : -0.06036715216946541, x10 : 0.015798619117003542, x11 : 1, x12 : 17, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000442


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121011 in range [0.000000, 0.242023]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059972 in range [0.000000, 0.119944]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026688 in range [0.000000, 0.053377]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013345 in range [0.000000, 0.026689]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006589 in range [0.000000, 0.013177]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002334 in range [0.000000, 0.004667]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001167 in range [0.000000, 0.002335]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000361 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000181 in range [0.000000, 0.000361]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000083 in range [0.000000, 0.000167]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5921840992917831, x5 : -0.295641844938672, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.04326862126725737, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5921840965747833, x5 : -0.295641844938672, x6 : 0, x7 : 1, x8 : 0, x9 : -0.5710604122969225, x10 : -0.020420543429359818, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126463 in range [0.000000, 0.252925]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060736 in range [0.000000, 0.121472]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030369 in range [0.000000, 0.060737]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014852 in range [0.000000, 0.029705]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007411 in range [0.000000, 0.014823]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003419 in range [0.000000, 0.006839]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001488 in range [0.000000, 0.002976]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000728 in range [0.000000, 0.001455]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000253 in range [0.000000, 0.000506]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5463679533319117, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.5040058738506862, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5498724996124671, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 3, x9 : -0.5150564908981323, x10 : -0.26774564733565503, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000127


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162015 in range [0.000000, 0.324030]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081008 in range [0.000000, 0.162016]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040183 in range [0.000000, 0.080367]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020092 in range [0.000000, 0.040184]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008293 in range [0.000000, 0.016586]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003925 in range [0.000000, 0.007849]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001702 in range [0.000000, 0.003404]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000851 in range [0.000000, 0.001703]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000426 in range [0.000000, 0.000852]...	no solution exists.
	Iteration #011: testing norm threshold 0.000639 in range [0.000426, 0.000852]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000533 in range [0.000426, 0.000640]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000480 in range [0.000426, 0.000534]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.2908179864802835, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.15461096625094534, x10 : -0.3747273409490208, x11 : 1.0, x12 : 18.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 0.29130222029118197, x5 : -0.22406479716300964, x6 : 0, x7 : 0, x8 : 4, x9 : 0.15364249862914842, x10 : -0.37472734094902077, x11 : 1, x12 : 18, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000533


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166108 in range [0.000000, 0.332216]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083055 in range [0.000000, 0.166109]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041349 in range [0.000000, 0.082699]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019993 in range [0.000000, 0.039986]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007507 in range [0.000000, 0.015014]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003321 in range [0.000000, 0.006642]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001569 in range [0.000000, 0.003139]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000484 in range [0.000000, 0.000968]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000243 in range [0.000000, 0.000485]...	no solution exists.
	Iteration #011: testing norm threshold 0.000364 in range [0.000243, 0.000485]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000304 in range [0.000243, 0.000365]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.15901326476209, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.04430015995424538, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.1588405152614847, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 1, x9 : -0.04430015995424538, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000304


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119881 in range [0.000000, 0.239763]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059941 in range [0.000000, 0.119882]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029851 in range [0.000000, 0.059701]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014926 in range [0.000000, 0.029852]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007434 in range [0.000000, 0.014868]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003718 in range [0.000000, 0.007435]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001859 in range [0.000000, 0.003719]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000737 in range [0.000000, 0.001474]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000214 in range [0.000000, 0.000428]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000107 in range [0.000000, 0.000215]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000054 in range [0.000000, 0.000108]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.3089570151762145, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.2520517806574446, x10 : -0.3747273409490208, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.311411283751145, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 0, x9 : -0.25868214666843414, x10 : -0.37472734094902077, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000107


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152429 in range [0.000000, 0.304858]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073888 in range [0.000000, 0.147776]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036862 in range [0.000000, 0.073724]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018297 in range [0.000000, 0.036595]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009117 in range [0.000000, 0.018234]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000730 in range [0.000000, 0.001461]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000272 in range [0.000000, 0.000545]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000085 in range [0.000000, 0.000169]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.08404138955502774, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.03526429052783092, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.11111456528306007, x5 : -0.3784028042062294, x6 : 0, x7 : 0, x8 : 2, x9 : 0.03526429052783092, x10 : -0.24438063174247682, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000168


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160921 in range [0.000000, 0.321842]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079254 in range [0.000000, 0.158508]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039577 in range [0.000000, 0.079154]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019400 in range [0.000000, 0.038799]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009700 in range [0.000000, 0.019401]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004851 in range [0.000000, 0.009701]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002295 in range [0.000000, 0.004590]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000936 in range [0.000000, 0.001872]...	no solution exists.
	Iteration #010: testing norm threshold 0.001404 in range [0.000936, 0.001872]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001170 in range [0.000936, 0.001405]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001054 in range [0.000936, 0.001171]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000995 in range [0.000936, 0.001055]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.4278914271207277, x5 : -0.01828077842275249, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 1.6398140419163696, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.425677253601134, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 5, x9 : 1.6375998683967758, x10 : 0.15560661054180067, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000995


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109313 in range [0.000000, 0.218627]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054087 in range [0.000000, 0.108175]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026896 in range [0.000000, 0.053793]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013098 in range [0.000000, 0.026195]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006549 in range [0.000000, 0.013099]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003275 in range [0.000000, 0.006550]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001558 in range [0.000000, 0.003116]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000779 in range [0.000000, 0.001559]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000319 in range [0.000000, 0.000638]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000135 in range [0.000000, 0.000269]...	no solution exists.
	Iteration #012: testing norm threshold 0.000202 in range [0.000135, 0.000269]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.15068305640574975, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.035459665456236904, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.15176501876272644, x5 : -0.36274532973766327, x6 : 0, x7 : 0, x8 : 1, x9 : -0.06419127434492111, x10 : -0.26532306341207634, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000202


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131883 in range [0.000000, 0.263766]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065911 in range [0.000000, 0.131821]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032956 in range [0.000000, 0.065912]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014717 in range [0.000000, 0.029435]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006723 in range [0.000000, 0.013446]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000601 in range [0.000000, 0.001202]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000301 in range [0.000000, 0.000602]...	no solution exists.
	Iteration #009: testing norm threshold 0.000451 in range [0.000301, 0.000602]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000377 in range [0.000301, 0.000452]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.6879814953896959, x5 : -0.3493246320062693, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6855203155086736, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.660924643278122, x10 : -0.1733909292589405, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000451


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130803 in range [0.000000, 0.261606]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064040 in range [0.000000, 0.128080]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032021 in range [0.000000, 0.064041]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014482 in range [0.000000, 0.028965]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007242 in range [0.000000, 0.014483]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003146 in range [0.000000, 0.006293]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001509 in range [0.000000, 0.003019]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000723 in range [0.000000, 0.001446]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000362 in range [0.000000, 0.000724]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000181 in range [0.000000, 0.000363]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4172497238086377, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.3758187036295633, x10 : -0.13165761318239427, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.42086847632703783, x5 : -0.30906254053115845, x6 : 0, x7 : 0, x8 : 5, x9 : -0.3751125772207603, x10 : -0.1330698660000003, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144310 in range [0.000000, 0.288619]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071686 in range [0.000000, 0.143371]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035843 in range [0.000000, 0.071687]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017922 in range [0.000000, 0.035844]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007882 in range [0.000000, 0.015764]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003941 in range [0.000000, 0.007883]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001723 in range [0.000000, 0.003445]...	no solution exists.
	Iteration #009: testing norm threshold 0.002584 in range [0.001723, 0.003445]...	no solution exists.
	Iteration #010: testing norm threshold 0.003015 in range [0.002584, 0.003445]...	no solution exists.
	Iteration #011: testing norm threshold 0.003230 in range [0.003015, 0.003445]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003123 in range [0.003015, 0.003231]...	no solution exists.
	Iteration #013: testing norm threshold 0.003177 in range [0.003123, 0.003231]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.1280039262924786, x5 : 3.417417593903476, x6 : 2.0, x7 : 2.0, x8 : 4.0, x9 : -0.6984967528068727, x10 : 9.127089289928195, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.125646775878788, x5 : 3.4150604434897853, x6 : 2, x7 : 2, x8 : 4, x9 : -0.4861778514602795, x10 : 9.124732139514505, x11 : 1, x12 : 0, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132481 in range [0.000000, 0.264962]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065987 in range [0.000000, 0.131974]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032932 in range [0.000000, 0.065864]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015992 in range [0.000000, 0.031984]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007996 in range [0.000000, 0.015993]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003999 in range [0.000000, 0.007997]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001266 in range [0.000000, 0.002532]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000537 in range [0.000000, 0.001074]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000269 in range [0.000000, 0.000538]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000096 in range [0.000000, 0.000193]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6879814953896959, x5 : -0.295641844938672, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6900640428066254, x5 : -0.28222113847732544, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6056715605777837, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.173619 in range [0.000000, 0.347237]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086385 in range [0.000000, 0.172770]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043193 in range [0.000000, 0.086386]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020963 in range [0.000000, 0.041927]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002054 in range [0.000000, 0.004107]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001018 in range [0.000000, 0.002035]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000509 in range [0.000000, 0.001019]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000255 in range [0.000000, 0.000510]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000128 in range [0.000000, 0.000256]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000065 in range [0.000000, 0.000129]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2366716321640719, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.3756233287011573, x10 : -0.3747273409490208, x11 : 1.0, x12 : 18.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2366716321640719, x5 : -0.27774757146835327, x6 : 0, x7 : 0, x8 : 0, x9 : 0.3756233287011573, x10 : -0.37472734094902077, x11 : 1, x12 : 18, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000046


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178786 in range [0.000000, 0.357572]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089394 in range [0.000000, 0.178787]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044688 in range [0.000000, 0.089376]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022262 in range [0.000000, 0.044523]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010570 in range [0.000000, 0.021139]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004880 in range [0.000000, 0.009759]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002440 in range [0.000000, 0.004881]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000565 in range [0.000000, 0.001131]...	no solution exists.
	Iteration #010: testing norm threshold 0.000848 in range [0.000565, 0.001131]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000707 in range [0.000565, 0.000849]...	no solution exists.
	Iteration #012: testing norm threshold 0.000778 in range [0.000707, 0.000849]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.4657523619634288, x5 : -0.3314303696504035, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 0.6187369273963904, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.46557826147748477, x5 : -0.40748098492622375, x6 : 0, x7 : 1, x8 : 0, x9 : 0.6185628269104464, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000848


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134231 in range [0.000000, 0.268462]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065137 in range [0.000000, 0.130274]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032539 in range [0.000000, 0.065077]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015090 in range [0.000000, 0.030179]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007545 in range [0.000000, 0.015091]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003069 in range [0.000000, 0.006137]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001268 in range [0.000000, 0.002537]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000583 in range [0.000000, 0.001166]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000292 in range [0.000000, 0.000584]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000146 in range [0.000000, 0.000293]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000147]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.40475441127412737, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3581377146335463, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4035027501304019, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.36064103692099725, x10 : -0.17585210913996274, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000146


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101906 in range [0.000000, 0.203813]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050948 in range [0.000000, 0.101896]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025141 in range [0.000000, 0.050282]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012541 in range [0.000000, 0.025082]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004934 in range [0.000000, 0.009868]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002205 in range [0.000000, 0.004410]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001103 in range [0.000000, 0.002206]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000451 in range [0.000000, 0.000903]...	no solution exists.
	Iteration #010: testing norm threshold 0.000677 in range [0.000451, 0.000903]...	no solution exists.
	Iteration #011: testing norm threshold 0.000790 in range [0.000677, 0.000903]...	no solution exists.
	Iteration #012: testing norm threshold 0.000846 in range [0.000790, 0.000903]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.19233409818745095, x5 : -0.295641844938672, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3183554893925082, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.19545792667436818, x5 : -0.3954100224213622, x6 : 0, x7 : 6, x8 : 0, x9 : -0.43107180297374725, x10 : -0.17897593762687997, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000902


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.110444 in range [0.000000, 0.220887]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054847 in range [0.000000, 0.109694]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025107 in range [0.000000, 0.050215]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011241 in range [0.000000, 0.022483]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005194 in range [0.000000, 0.010389]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002565 in range [0.000000, 0.005130]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001283 in range [0.000000, 0.002566]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000416 in range [0.000000, 0.000832]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000202 in range [0.000000, 0.000405]...	no solution exists.
	Iteration #011: testing norm threshold 0.000304 in range [0.000202, 0.000405]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000253 in range [0.000202, 0.000305]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : -0.7504580580622477, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 28.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 2, x4 : -0.7733661234378815, x5 : -0.4294544519899591, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3636787086725235, x11 : 1, x12 : 28, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000304


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163122 in range [0.000000, 0.326245]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080609 in range [0.000000, 0.161218]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040305 in range [0.000000, 0.080610]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020153 in range [0.000000, 0.040306]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009301 in range [0.000000, 0.018601]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004651 in range [0.000000, 0.009302]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002326 in range [0.000000, 0.004652]...	no solution exists.
	Iteration #009: testing norm threshold 0.003489 in range [0.002326, 0.004652]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002793 in range [0.002326, 0.003261]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002560 in range [0.002326, 0.002794]...	no solution exists.
	Iteration #012: testing norm threshold 0.002677 in range [0.002560, 0.002794]...	no solution exists.
	Iteration #013: testing norm threshold 0.002736 in range [0.002677, 0.002794]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.6615122583374247, x5 : 2.630070050245382, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : 7.182531467795185, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 0.224176324903965, x5 : 2.624586485586047, x6 : 1, x7 : 1, x8 : 0, x9 : -0.6962866187095642, x10 : 7.17704790313585, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002736


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100947 in range [0.000000, 0.201894]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049176 in range [0.000000, 0.098351]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023834 in range [0.000000, 0.047668]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011210 in range [0.000000, 0.022420]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005160 in range [0.000000, 0.010319]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002580 in range [0.000000, 0.005161]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001223 in range [0.000000, 0.002446]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000219 in range [0.000000, 0.000439]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000104 in range [0.000000, 0.000208]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.3839288903832768, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.34487697288653363, x10 : -0.2642411010550996, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.38448142219869363, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 6, x9 : -0.34581892912545625, x10 : -0.2526399451128173, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000083


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129613 in range [0.000000, 0.259226]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064807 in range [0.000000, 0.129614]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032404 in range [0.000000, 0.064808]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015339 in range [0.000000, 0.030678]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005964 in range [0.000000, 0.011927]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002378 in range [0.000000, 0.004756]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001189 in range [0.000000, 0.002379]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000538 in range [0.000000, 0.001076]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000267 in range [0.000000, 0.000534]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000068 in range [0.000000, 0.000135]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7643891077168604, x5 : -0.3970981137881771, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6904306309352414, x10 : -0.3084355970126681, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148842 in range [0.000000, 0.297685]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074422 in range [0.000000, 0.148843]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037177 in range [0.000000, 0.074354]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018348 in range [0.000000, 0.036697]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008688 in range [0.000000, 0.017376]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004344 in range [0.000000, 0.008689]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002148 in range [0.000000, 0.004295]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001074 in range [0.000000, 0.002149]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000328 in range [0.000000, 0.000655]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000164 in range [0.000000, 0.000329]...	no solution exists.
	Iteration #012: testing norm threshold 0.000246 in range [0.000164, 0.000329]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.9530695508093334, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.1359058555298864, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.9495200663961577, x5 : -0.28761878808209407, x6 : 0, x7 : 0, x8 : 0, x9 : 1.1770274321251202, x10 : -0.07641449198126793, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000328


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144407 in range [0.000000, 0.288815]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070569 in range [0.000000, 0.141137]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035285 in range [0.000000, 0.070570]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014484 in range [0.000000, 0.028967]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007046 in range [0.000000, 0.014092]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003462 in range [0.000000, 0.006923]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001731 in range [0.000000, 0.003463]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000854 in range [0.000000, 0.001708]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000428 in range [0.000000, 0.000855]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000214 in range [0.000000, 0.000429]...	no solution exists.
	Iteration #012: testing norm threshold 0.000321 in range [0.000214, 0.000429]...	no solution exists.
	Iteration #013: testing norm threshold 0.000375 in range [0.000321, 0.000429]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4797262864811897, x5 : -0.07196356549034981, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5067994594573975, x5 : -0.04291324392403387, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.13602374382759355, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000428


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161098 in range [0.000000, 0.322197]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080458 in range [0.000000, 0.160916]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040014 in range [0.000000, 0.080028]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020008 in range [0.000000, 0.040015]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009945 in range [0.000000, 0.019891]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000765 in range [0.000000, 0.001530]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000383 in range [0.000000, 0.000766]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000192 in range [0.000000, 0.000384]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000075 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7726922923564469, x5 : -0.40680715384478916, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136123 in range [0.000000, 0.272246]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068062 in range [0.000000, 0.136124]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033964 in range [0.000000, 0.067928]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016532 in range [0.000000, 0.033064]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008053 in range [0.000000, 0.016106]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003877 in range [0.000000, 0.007754]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001774 in range [0.000000, 0.003548]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000738 in range [0.000000, 0.001476]...	no solution exists.
	Iteration #010: testing norm threshold 0.001107 in range [0.000738, 0.001476]...	no solution exists.
	Iteration #011: testing norm threshold 0.001291 in range [0.001107, 0.001476]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001199 in range [0.001107, 0.001292]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 2.5816252844738528, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 2.864222529890544, x10 : 0.376579090329643, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 2, x4 : 2.5759947001680574, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 1, x9 : 2.858591945584749, x10 : 0.14455799013376236, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001291


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136937 in range [0.000000, 0.273874]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061378 in range [0.000000, 0.122756]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030327 in range [0.000000, 0.060653]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014829 in range [0.000000, 0.029659]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007415 in range [0.000000, 0.014830]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001451 in range [0.000000, 0.002902]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000317 in range [0.000000, 0.000634]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000062 in range [0.000000, 0.000124]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5463679533319117, x5 : -0.1435406149138129, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.5172666155976989, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.5496921252770968, x5 : -0.14187852894122036, x6 : 0, x7 : 2, x8 : 0, x9 : -0.5194767415523529, x10 : -0.05099307145205081, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000062


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135504 in range [0.000000, 0.271008]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067752 in range [0.000000, 0.135505]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033667 in range [0.000000, 0.067333]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015637 in range [0.000000, 0.031275]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007440 in range [0.000000, 0.014879]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002597 in range [0.000000, 0.005194]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001299 in range [0.000000, 0.002598]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000454 in range [0.000000, 0.000908]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000194 in range [0.000000, 0.000388]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000195]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.3403775008283364, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7722194582823386, x5 : -0.40748098492622375, x6 : 4, x7 : 6, x8 : 0, x9 : -0.695350739380324, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101348 in range [0.000000, 0.202695]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044426 in range [0.000000, 0.088853]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019893 in range [0.000000, 0.039786]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008563 in range [0.000000, 0.017126]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002143 in range [0.000000, 0.004285]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001072 in range [0.000000, 0.002144]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000530 in range [0.000000, 0.001060]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000265 in range [0.000000, 0.000531]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000133 in range [0.000000, 0.000266]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000067 in range [0.000000, 0.000134]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7711560130119324, x5 : -0.42316514253616333, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.3743544808300809, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150064 in range [0.000000, 0.300127]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074777 in range [0.000000, 0.149555]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037389 in range [0.000000, 0.074778]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013645 in range [0.000000, 0.027291]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006823 in range [0.000000, 0.013646]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003390 in range [0.000000, 0.006780]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001423 in range [0.000000, 0.002845]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000712 in range [0.000000, 0.001424]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000179 in range [0.000000, 0.000357]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.045076839968246143, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.08388701026687755, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.04091173520668443, x5 : -0.2959503017516524, x6 : 0, x7 : 0, x8 : 0, x9 : 0.08388701026687755, x10 : -0.36907965533083603, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000090


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105112 in range [0.000000, 0.210223]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052556 in range [0.000000, 0.105113]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022430 in range [0.000000, 0.044860]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009438 in range [0.000000, 0.018877]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003812 in range [0.000000, 0.007623]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001742 in range [0.000000, 0.003484]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000872 in range [0.000000, 0.001743]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000436 in range [0.000000, 0.000873]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000219 in range [0.000000, 0.000437]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000110 in range [0.000000, 0.000220]...	no solution exists.
	Iteration #012: testing norm threshold 0.000165 in range [0.000110, 0.000220]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1533695486006694, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 0.15461096625094534, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.158825374538894, x5 : -0.28222113847732544, x6 : 0, x7 : 0, x8 : 5, x9 : 0.15332024317031473, x10 : -0.20899797976016998, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000165


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107948 in range [0.000000, 0.215895]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053974 in range [0.000000, 0.107949]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026812 in range [0.000000, 0.053624]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013216 in range [0.000000, 0.026432]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006608 in range [0.000000, 0.013217]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003305 in range [0.000000, 0.006609]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001653 in range [0.000000, 0.003305]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000827 in range [0.000000, 0.001654]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000414 in range [0.000000, 0.000828]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	no solution exists.
	Iteration #012: testing norm threshold 0.000295 in range [0.000197, 0.000394]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.6281914249120637, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.7911265701075557, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.6458109128732272, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 3, x9 : 0.7880849641324456, x10 : -0.061633953290361594, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000393


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176339 in range [0.000000, 0.352678]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087461 in range [0.000000, 0.174922]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043523 in range [0.000000, 0.087046]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021578 in range [0.000000, 0.043156]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010789 in range [0.000000, 0.021579]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005395 in range [0.000000, 0.010790]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002698 in range [0.000000, 0.005396]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001350 in range [0.000000, 0.002699]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000675 in range [0.000000, 0.001351]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000269 in range [0.000000, 0.000538]...	no solution exists.
	Iteration #012: testing norm threshold 0.000403 in range [0.000269, 0.000538]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000337 in range [0.000269, 0.000404]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.21168100709505114, x5 : -0.3135361072945377, x6 : 0.0, x7 : 1.0, x8 : 4.0, x9 : 0.3181601144641022, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.22863702725111096, x5 : -0.3180096745491028, x6 : 0, x7 : 1, x8 : 4, x9 : 0.27837788313627243, x10 : -0.10956036299467087, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000403


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109879 in range [0.000000, 0.219757]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054940 in range [0.000000, 0.109880]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027403 in range [0.000000, 0.054807]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013702 in range [0.000000, 0.027404]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006463 in range [0.000000, 0.012926]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003232 in range [0.000000, 0.006464]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001617 in range [0.000000, 0.003233]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000524 in range [0.000000, 0.001048]...	no solution exists.
	Iteration #010: testing norm threshold 0.000786 in range [0.000524, 0.001048]...	no solution exists.
	Iteration #011: testing norm threshold 0.000917 in range [0.000786, 0.001048]...	no solution exists.
	Iteration #012: testing norm threshold 0.000983 in range [0.000917, 0.001048]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.07571118119868749, x5 : 1.046427831751261, x6 : 1.0, x7 : 2.0, x8 : 0.0, x9 : -0.11944436318731745, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.19233409315347672, x5 : 1.0256944312980327, x6 : 1, x7 : 2, x8 : 0, x9 : -0.07833616111018647, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000983


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118482 in range [0.000000, 0.236964]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056656 in range [0.000000, 0.113312]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020814 in range [0.000000, 0.041628]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010408 in range [0.000000, 0.020815]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005125 in range [0.000000, 0.010249]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002550 in range [0.000000, 0.005100]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001137 in range [0.000000, 0.002274]...	no solution exists.
	Iteration #009: testing norm threshold 0.001705 in range [0.001137, 0.002274]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001422 in range [0.001137, 0.001706]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001280 in range [0.001137, 0.001423]...	no solution exists.
	Iteration #012: testing norm threshold 0.001351 in range [0.001280, 0.001423]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.19649920236562116, x5 : 0.8138024211250059, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : 0.8627185458628959, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.23347192075806275, x5 : 0.8070920705955382, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : 0.5644056797027588, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001422


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131187 in range [0.000000, 0.262373]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065288 in range [0.000000, 0.130577]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032645 in range [0.000000, 0.065289]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016323 in range [0.000000, 0.032646]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008162 in range [0.000000, 0.016324]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003707 in range [0.000000, 0.007414]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001854 in range [0.000000, 0.003708]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000555 in range [0.000000, 0.001110]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000278 in range [0.000000, 0.000556]...	no solution exists.
	Iteration #011: testing norm threshold 0.000417 in range [0.000278, 0.000556]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000348 in range [0.000278, 0.000418]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.03822524359515636, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.08388701026687755, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.040215139725716685, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.08189711413631723, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000348


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176470 in range [0.000000, 0.352941]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088236 in range [0.000000, 0.176471]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043811 in range [0.000000, 0.087623]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020194 in range [0.000000, 0.040388]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006349 in range [0.000000, 0.012698]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001934 in range [0.000000, 0.003868]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000968 in range [0.000000, 0.001935]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000056 in range [0.000000, 0.000111]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7004768079242063, x5 : -0.3493246320062693, x6 : 2.0, x7 : 2.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7067244648933411, x5 : -0.3504296894401006, x6 : 2, x7 : 2, x8 : 0, x9 : -0.6200373597586277, x10 : -0.2895109243649379, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137591 in range [0.000000, 0.275183]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068796 in range [0.000000, 0.137592]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034303 in range [0.000000, 0.068605]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014317 in range [0.000000, 0.028633]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004465 in range [0.000000, 0.008930]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001447 in range [0.000000, 0.002894]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000410 in range [0.000000, 0.000820]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7577469882819217, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.2673649270966033, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135502 in range [0.000000, 0.271004]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063740 in range [0.000000, 0.127480]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031780 in range [0.000000, 0.063560]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015890 in range [0.000000, 0.031781]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007946 in range [0.000000, 0.015891]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003652 in range [0.000000, 0.007304]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001606 in range [0.000000, 0.003212]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000797 in range [0.000000, 0.001595]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000207 in range [0.000000, 0.000414]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000207]...	no solution exists.
	Iteration #012: testing norm threshold 0.000155 in range [0.000104, 0.000207]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.14651795222757966, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.092922879693292, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.14417216210334802, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 6, x9 : -0.092922879693292, x10 : -0.2689326813035629, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000155


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163983 in range [0.000000, 0.327967]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077371 in range [0.000000, 0.154741]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038686 in range [0.000000, 0.077372]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018351 in range [0.000000, 0.036703]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009176 in range [0.000000, 0.018352]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003362 in range [0.000000, 0.006725]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001618 in range [0.000000, 0.003236]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000734 in range [0.000000, 0.001468]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000367 in range [0.000000, 0.000735]...	no solution exists.
	Iteration #011: testing norm threshold 0.000551 in range [0.000367, 0.000735]...	no solution exists.
	Iteration #012: testing norm threshold 0.000643 in range [0.000551, 0.000735]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.907253404849462, x5 : 2.3884975084411937, x6 : 1.0, x7 : 0.0, x8 : 3.0, x9 : 0.9281542348266872, x10 : 0.0009258746903110836, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : 0.9101739457547237, x5 : 2.3857298995757157, x6 : 1, x7 : 0, x8 : 3, x9 : 0.9193137586116791, x10 : 0.191520088716724, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000734


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170234 in range [0.000000, 0.340469]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084578 in range [0.000000, 0.169156]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039723 in range [0.000000, 0.079446]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019862 in range [0.000000, 0.039724]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007818 in range [0.000000, 0.015636]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002562 in range [0.000000, 0.005124]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000910 in range [0.000000, 0.001820]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000456 in range [0.000000, 0.000911]...	no solution exists.
	Iteration #010: testing norm threshold 0.000683 in range [0.000456, 0.000911]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000554 in range [0.000456, 0.000652]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.21584611127322129, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.3535220924561361, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.2112261793853776, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 3, x9 : 0.3489021605682924, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000554


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093923 in range [0.000000, 0.187846]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046962 in range [0.000000, 0.093924]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022481 in range [0.000000, 0.044961]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010727 in range [0.000000, 0.021454]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005364 in range [0.000000, 0.010728]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002653 in range [0.000000, 0.005306]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000587 in range [0.000000, 0.001174]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000277 in range [0.000000, 0.000553]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000139 in range [0.000000, 0.000278]...	no solution exists.
	Iteration #011: testing norm threshold 0.000208 in range [0.000139, 0.000278]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6629908703206752, x5 : -0.18827627080347734, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6942291557788849, x5 : -0.21064409613609314, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6592246698225258, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000277


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.158231 in range [0.000000, 0.316462]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079116 in range [0.000000, 0.158232]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038597 in range [0.000000, 0.077195]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018405 in range [0.000000, 0.036810]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009203 in range [0.000000, 0.018406]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001800 in range [0.000000, 0.003601]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000901 in range [0.000000, 0.001801]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000442 in range [0.000000, 0.000884]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000221 in range [0.000000, 0.000443]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000210]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5713585784009324, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.5791500770837583, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.572811416837016, x5 : -0.3895867168903351, x6 : 0, x7 : 0, x8 : 1, x9 : -0.5806029155198419, x10 : -0.24141743385827366, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000053


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.097195 in range [0.000000, 0.194390]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048018 in range [0.000000, 0.096035]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023968 in range [0.000000, 0.047936]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011984 in range [0.000000, 0.023969]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005993 in range [0.000000, 0.011985]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002997 in range [0.000000, 0.005994]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001471 in range [0.000000, 0.002941]...	no solution exists.
	Iteration #009: testing norm threshold 0.002206 in range [0.001471, 0.002941]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001839 in range [0.001471, 0.002207]...	no solution exists.
	Iteration #011: testing norm threshold 0.002023 in range [0.001839, 0.002207]...	no solution exists.
	Iteration #012: testing norm threshold 0.002115 in range [0.002023, 0.002207]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 2.15261955412233, x5 : 2.4511274266867247, x6 : 2.0, x7 : 0.0, x8 : 3.0, x9 : 2.4089370632431075, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : 2.153633655197735, x5 : 2.4521415277621297, x6 : 2, x7 : 0, x8 : 3, x9 : 2.406908861092298, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002206


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178464 in range [0.000000, 0.356929]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088251 in range [0.000000, 0.176502]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044126 in range [0.000000, 0.088252]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020918 in range [0.000000, 0.041835]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010199 in range [0.000000, 0.020398]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001293 in range [0.000000, 0.002586]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000647 in range [0.000000, 0.001294]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000270 in range [0.000000, 0.000540]...	no solution exists.
	Iteration #010: testing norm threshold 0.000405 in range [0.000270, 0.000540]...	no solution exists.
	Iteration #011: testing norm threshold 0.000473 in range [0.000405, 0.000540]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2366716321640719, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.18997294424297928, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2366716321640719, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.19444651125195145, x10 : -0.23109523206949234, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000539


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112010 in range [0.000000, 0.224021]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056006 in range [0.000000, 0.112011]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025455 in range [0.000000, 0.050911]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012728 in range [0.000000, 0.025456]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006307 in range [0.000000, 0.012613]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002954 in range [0.000000, 0.005907]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001477 in range [0.000000, 0.002955]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000739 in range [0.000000, 0.001478]...	no solution exists.
	Iteration #010: testing norm threshold 0.001109 in range [0.000739, 0.001478]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000924 in range [0.000739, 0.001110]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000832 in range [0.000739, 0.000925]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5005518073720403, x5 : -0.3672188943621351, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4332819178666184, x10 : -0.3747273409490208, x11 : 1.0, x12 : 13.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.6130096316337585, x5 : -0.32027310132980347, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4443325251340866, x10 : -0.3453626960817095, x11 : 1, x12 : 13, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000924


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165075 in range [0.000000, 0.330149]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082538 in range [0.000000, 0.165076]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041004 in range [0.000000, 0.082008]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020258 in range [0.000000, 0.040517]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009245 in range [0.000000, 0.018490]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004532 in range [0.000000, 0.009064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002224 in range [0.000000, 0.004449]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001113 in range [0.000000, 0.002225]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000340 in range [0.000000, 0.000680]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000082 in range [0.000000, 0.000165]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.4672309739466792, x5 : -0.3940602878959337, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : -0.3713984563805591, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.4719652719006906, x5 : -0.40748098492622375, x6 : 0, x7 : 1, x8 : 0, x9 : -0.36903130740355344, x10 : -0.2839712000568782, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.114774 in range [0.000000, 0.229548]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057018 in range [0.000000, 0.114036]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027647 in range [0.000000, 0.055295]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013824 in range [0.000000, 0.027648]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006913 in range [0.000000, 0.013825]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003457 in range [0.000000, 0.006914]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001729 in range [0.000000, 0.003458]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000713 in range [0.000000, 0.001427]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000357 in range [0.000000, 0.000714]...	no solution exists.
	Iteration #011: testing norm threshold 0.000536 in range [0.000357, 0.000714]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000440 in range [0.000357, 0.000523]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 1.1196737179361385, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.127065361031878, x10 : 0.4428708342659957, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 1.1198163990193517, x5 : -0.19415021341440614, x6 : 0, x7 : 0, x8 : 3, x9 : 1.160843292078807, x10 : 0.4398344948165925, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000440


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.075519 in range [0.000000, 0.151037]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037760 in range [0.000000, 0.075520]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018880 in range [0.000000, 0.037761]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008741 in range [0.000000, 0.017482]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002403 in range [0.000000, 0.004806]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001126 in range [0.000000, 0.002252]...	no solution exists.
	Iteration #008: testing norm threshold 0.001689 in range [0.001126, 0.002252]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001389 in range [0.001126, 0.001652]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001258 in range [0.001126, 0.001390]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001193 in range [0.001126, 0.001259]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.37976378620510665, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3492972201355379, x10 : -0.10956036520361004, x11 : 1.0, x12 : 17.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 3, x4 : -0.3798079393906606, x5 : -0.33590394258499146, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5393678545951843, x10 : -0.07637033879571398, x11 : 1, x12 : 17, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.107488 in range [0.000000, 0.214976]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053712 in range [0.000000, 0.107425]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024657 in range [0.000000, 0.049314]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012071 in range [0.000000, 0.024142]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006019 in range [0.000000, 0.012037]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002754 in range [0.000000, 0.005509]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001378 in range [0.000000, 0.002755]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000380 in range [0.000000, 0.000759]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000136 in range [0.000000, 0.000273]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000069 in range [0.000000, 0.000137]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.4005893070959573, x5 : -0.3672188943621351, x6 : 0.0, x7 : 2.0, x8 : 4.0, x9 : -0.3050947476454955, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.4044372555804912, x5 : -0.3985338509082794, x6 : 0, x7 : 2, x8 : 4, x9 : -0.3089426961300294, x10 : -0.24599180156084935, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000136


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155191 in range [0.000000, 0.310382]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077543 in range [0.000000, 0.155086]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038701 in range [0.000000, 0.077402]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019080 in range [0.000000, 0.038160]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006966 in range [0.000000, 0.013931]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003472 in range [0.000000, 0.006945]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001117 in range [0.000000, 0.002234]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000419 in range [0.000000, 0.000839]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000208 in range [0.000000, 0.000417]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000209]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000052 in range [0.000000, 0.000103]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4130846196304676, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3537174673845421, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.4127418707930149, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3542306313542075, x10 : -0.25267931295856866, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000102


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160371 in range [0.000000, 0.320742]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075144 in range [0.000000, 0.150289]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037005 in range [0.000000, 0.074009]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018460 in range [0.000000, 0.036920]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007355 in range [0.000000, 0.014710]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002316 in range [0.000000, 0.004632]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001157 in range [0.000000, 0.002314]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4255799321649779, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.5570488408387371, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.42671196177350873, x5 : -0.3884488398176776, x6 : 0, x7 : 0, x8 : 1, x9 : -0.5835703313350677, x10 : -0.28708736878246094, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104950 in range [0.000000, 0.209901]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052476 in range [0.000000, 0.104951]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024315 in range [0.000000, 0.048631]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012118 in range [0.000000, 0.024236]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006060 in range [0.000000, 0.012119]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002258 in range [0.000000, 0.004516]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000909 in range [0.000000, 0.001819]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000455 in range [0.000000, 0.000910]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6504955577861647, x5 : -0.16143487726967867, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6525780856609344, x5 : -0.17932914197444916, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5995514566051624, x10 : -0.2180916112111628, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000098


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166376 in range [0.000000, 0.332752]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078987 in range [0.000000, 0.157975]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038777 in range [0.000000, 0.077554]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019364 in range [0.000000, 0.038727]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009682 in range [0.000000, 0.019365]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004149 in range [0.000000, 0.008299]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002066 in range [0.000000, 0.004131]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000712 in range [0.000000, 0.001424]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000356 in range [0.000000, 0.000713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000179 in range [0.000000, 0.000357]...	no solution exists.
	Iteration #012: testing norm threshold 0.000268 in range [0.000179, 0.000357]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6296700368953141, x5 : -0.0809106966682827, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6380002498626709, x5 : -0.0447798187329873, x6 : 3, x7 : 6, x8 : 0, x9 : -0.5900028592823624, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000268


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129655 in range [0.000000, 0.259309]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064272 in range [0.000000, 0.128544]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031559 in range [0.000000, 0.063119]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015287 in range [0.000000, 0.030574]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007644 in range [0.000000, 0.015288]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003379 in range [0.000000, 0.006758]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001650 in range [0.000000, 0.003301]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000826 in range [0.000000, 0.001651]...	no solution exists.
	Iteration #010: testing norm threshold 0.001238 in range [0.000826, 0.001651]...	no solution exists.
	Iteration #011: testing norm threshold 0.001445 in range [0.001238, 0.001651]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001342 in range [0.001238, 0.001446]...	no solution exists.
	Iteration #013: testing norm threshold 0.001394 in range [0.001342, 0.001446]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5005518073720403, x5 : 0.16066184513590526, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : 1.0836910256507382, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7317151129245758, x5 : 0.1755511653353634, x6 : 1, x7 : 5, x8 : 0, x9 : -0.6815572786400852, x10 : 1.0822224077415985, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001391


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.190503 in range [0.000000, 0.381007]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095252 in range [0.000000, 0.190504]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047627 in range [0.000000, 0.095253]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023545 in range [0.000000, 0.047089]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011773 in range [0.000000, 0.023546]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005624 in range [0.000000, 0.011248]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002529 in range [0.000000, 0.005058]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001157 in range [0.000000, 0.002314]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000293 in range [0.000000, 0.000586]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000084 in range [0.000000, 0.000168]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 2.0, x4 : -0.09653670208953813, x5 : -0.3493246320062693, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 0.0220035487808182, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 2, x4 : -0.10070180520415306, x5 : -0.3716924488544464, x6 : 0, x7 : 2, x8 : 0, x9 : 0.021671109965595823, x10 : -0.17618454795518512, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135880 in range [0.000000, 0.271760]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067941 in range [0.000000, 0.135881]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030423 in range [0.000000, 0.060847]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014836 in range [0.000000, 0.029671]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007139 in range [0.000000, 0.014279]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003570 in range [0.000000, 0.007140]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001587 in range [0.000000, 0.003174]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000612 in range [0.000000, 0.001223]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000199 in range [0.000000, 0.000399]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.23301192669314175, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7358801960945129, x5 : -0.21064409613609314, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6611798107624054, x10 : -0.15167231957620994, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000111


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141111 in range [0.000000, 0.282223]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070556 in range [0.000000, 0.141112]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034776 in range [0.000000, 0.069553]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017031 in range [0.000000, 0.034062]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008332 in range [0.000000, 0.016664]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004167 in range [0.000000, 0.008333]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002081 in range [0.000000, 0.004163]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000580 in range [0.000000, 0.001160]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000291 in range [0.000000, 0.000581]...	no solution exists.
	Iteration #011: testing norm threshold 0.000436 in range [0.000291, 0.000581]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000361 in range [0.000291, 0.000432]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.30458897611660485, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7348389187220401, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.24318513044878828, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000431


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.115059 in range [0.000000, 0.230117]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057530 in range [0.000000, 0.115060]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027374 in range [0.000000, 0.054749]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013688 in range [0.000000, 0.027375]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006144 in range [0.000000, 0.012289]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003073 in range [0.000000, 0.006145]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001537 in range [0.000000, 0.003074]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000769 in range [0.000000, 0.001538]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000385 in range [0.000000, 0.000770]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000193 in range [0.000000, 0.000386]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.017399722704305738, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.013358429211215713, x10 : -0.19794935711874695, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : -0.01749121673095367, x5 : -0.2552882572980057, x6 : 0, x7 : 0, x8 : 3, x9 : -0.04209003783762455, x10 : -0.19804085114539488, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156257 in range [0.000000, 0.312513]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074522 in range [0.000000, 0.149045]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036360 in range [0.000000, 0.072720]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013108 in range [0.000000, 0.026215]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006554 in range [0.000000, 0.013109]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003231 in range [0.000000, 0.006463]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001113 in range [0.000000, 0.002225]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000079 in range [0.000000, 0.000158]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7546231761675811, x5 : -0.385113170645164, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663541281804, x10 : -0.3084356039762497, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000012


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161570 in range [0.000000, 0.323140]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076079 in range [0.000000, 0.152157]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037965 in range [0.000000, 0.075930]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018657 in range [0.000000, 0.037315]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009329 in range [0.000000, 0.018658]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004582 in range [0.000000, 0.009165]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002292 in range [0.000000, 0.004583]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001083 in range [0.000000, 0.002166]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000129 in range [0.000000, 0.000258]...	no solution exists.
	Iteration #011: testing norm threshold 0.000193 in range [0.000129, 0.000258]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.1700299653133499, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.3048993727170895, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : 0.16943338029219357, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.30430278769593316, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140395 in range [0.000000, 0.280790]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068907 in range [0.000000, 0.137814]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034454 in range [0.000000, 0.068908]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017228 in range [0.000000, 0.034455]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007551 in range [0.000000, 0.015103]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003658 in range [0.000000, 0.007316]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001830 in range [0.000000, 0.003659]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000915 in range [0.000000, 0.001831]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000211 in range [0.000000, 0.000421]...	no solution exists.
	Iteration #011: testing norm threshold 0.000316 in range [0.000211, 0.000421]...	no solution exists.
	Iteration #012: testing norm threshold 0.000369 in range [0.000316, 0.000421]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.4907429870324495, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.07524189069727505, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.4877264352979519, x5 : -0.3686758971199488, x6 : 0, x7 : 0, x8 : 1, x9 : -0.08850263059139252, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000369


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137323 in range [0.000000, 0.274646]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068662 in range [0.000000, 0.137324]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034332 in range [0.000000, 0.068663]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017166 in range [0.000000, 0.034333]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008377 in range [0.000000, 0.016754]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004168 in range [0.000000, 0.008336]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002021 in range [0.000000, 0.004042]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001011 in range [0.000000, 0.002022]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000221 in range [0.000000, 0.000441]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000111 in range [0.000000, 0.000222]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 1.0030508009473749, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.1889488225179372, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : 1.0031509331386959, x5 : -0.22429418283314628, x6 : 0, x7 : 0, x8 : 3, x9 : 1.1905778727020542, x10 : 0.08931486660544799, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139910 in range [0.000000, 0.279820]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069955 in range [0.000000, 0.139911]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031171 in range [0.000000, 0.062343]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014948 in range [0.000000, 0.029896]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006099 in range [0.000000, 0.012198]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003050 in range [0.000000, 0.006100]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001523 in range [0.000000, 0.003045]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000061 in range [0.000000, 0.000121]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7648844248252158, x5 : -0.39838237824013273, x6 : 2, x7 : 6, x8 : 0, x9 : -0.691714895387197, x10 : -0.3304571086573791, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.094586 in range [0.000000, 0.189171]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046103 in range [0.000000, 0.092205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022652 in range [0.000000, 0.045304]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010310 in range [0.000000, 0.020620]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004501 in range [0.000000, 0.009002]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002251 in range [0.000000, 0.004502]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001126 in range [0.000000, 0.002252]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000406 in range [0.000000, 0.000812]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000195 in range [0.000000, 0.000390]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000098 in range [0.000000, 0.000196]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.046555451951496615, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.04852503227484363, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.04397532046550707, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 2, x9 : 0.051105163760833176, x10 : -0.18101237211194185, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000195


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109001 in range [0.000000, 0.218001]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053945 in range [0.000000, 0.107890]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026595 in range [0.000000, 0.053190]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012333 in range [0.000000, 0.024666]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005907 in range [0.000000, 0.011813]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002336 in range [0.000000, 0.004672]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000749 in range [0.000000, 0.001497]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000375 in range [0.000000, 0.000750]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000188 in range [0.000000, 0.000376]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000058 in range [0.000000, 0.000115]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5380377449755713, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4907451321036735, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5380746939588009, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4907820810869031, x10 : -0.2642780500383292, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000058


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164892 in range [0.000000, 0.329784]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081217 in range [0.000000, 0.162434]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040603 in range [0.000000, 0.081206]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020191 in range [0.000000, 0.040382]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009157 in range [0.000000, 0.018314]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004579 in range [0.000000, 0.009158]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001684 in range [0.000000, 0.003368]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000687 in range [0.000000, 0.001375]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000315 in range [0.000000, 0.000630]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000137 in range [0.000000, 0.000274]...	no solution exists.
	Iteration #012: testing norm threshold 0.000205 in range [0.000137, 0.000274]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7421278497059075, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3747273409490208, x11 : 1.0, x12 : 32.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7525406181812286, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.37472734094902077, x11 : 1, x12 : 32, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000201


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088610 in range [0.000000, 0.177221]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042761 in range [0.000000, 0.085521]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020512 in range [0.000000, 0.041024]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010257 in range [0.000000, 0.020513]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003579 in range [0.000000, 0.007157]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001790 in range [0.000000, 0.003580]...	no solution exists.
	Iteration #008: testing norm threshold 0.002685 in range [0.001790, 0.003580]...	solution exists & found.
	Iteration #009: testing norm threshold 0.002238 in range [0.001790, 0.002686]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002014 in range [0.001790, 0.002239]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001903 in range [0.001790, 0.002015]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001847 in range [0.001790, 0.001904]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.702788302879956, x5 : 4.866852844728603, x6 : 1.0, x7 : 2.0, x8 : 3.0, x9 : -0.4111806816215972, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 1.7014709212187877, x5 : 4.8655354630674355, x6 : 1, x7 : 2, x8 : 3, x9 : -0.2662052663157072, x10 : -0.00880536718734836, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001847


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150557 in range [0.000000, 0.301113]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075279 in range [0.000000, 0.150558]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033889 in range [0.000000, 0.067778]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016945 in range [0.000000, 0.033890]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008142 in range [0.000000, 0.016283]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003853 in range [0.000000, 0.007706]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001927 in range [0.000000, 0.003854]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000527 in range [0.000000, 0.001054]...	no solution exists.
	Iteration #010: testing norm threshold 0.000790 in range [0.000527, 0.001054]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000659 in range [0.000527, 0.000791]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000594 in range [0.000527, 0.000660]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.4116060076472172, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.008938181962211472, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : 0.40374481276327473, x5 : -0.1222587211676837, x6 : 0, x7 : 0, x8 : 6, x9 : -0.03324954118579626, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000659


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.111175 in range [0.000000, 0.222351]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055588 in range [0.000000, 0.111176]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027212 in range [0.000000, 0.054423]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013571 in range [0.000000, 0.027141]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006078 in range [0.000000, 0.012155]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002504 in range [0.000000, 0.005008]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001202 in range [0.000000, 0.002403]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000601 in range [0.000000, 0.001203]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000224 in range [0.000000, 0.000447]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000112 in range [0.000000, 0.000225]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 1.0, x4 : -0.2548106608600029, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.14596584668134288, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 1, x4 : -0.25425797660720606, x5 : -0.3418196769320775, x6 : 0, x7 : 0, x8 : 6, x9 : -0.14548475185898918, x10 : -0.2522302872835267, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000112


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167249 in range [0.000000, 0.334498]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083625 in range [0.000000, 0.167250]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041630 in range [0.000000, 0.083259]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020104 in range [0.000000, 0.040209]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010053 in range [0.000000, 0.020105]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004210 in range [0.000000, 0.008421]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001737 in range [0.000000, 0.003474]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000303 in range [0.000000, 0.000607]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000152 in range [0.000000, 0.000304]...	no solution exists.
	Iteration #011: testing norm threshold 0.000228 in range [0.000152, 0.000304]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.4030074190738666, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.716302521216103, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6642398343735907, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000228


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113234 in range [0.000000, 0.226467]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056617 in range [0.000000, 0.113235]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027527 in range [0.000000, 0.055054]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013764 in range [0.000000, 0.027528]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006882 in range [0.000000, 0.013765]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003442 in range [0.000000, 0.006883]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001721 in range [0.000000, 0.003443]...	no solution exists.
	Iteration #009: testing norm threshold 0.002582 in range [0.001721, 0.003443]...	no solution exists.
	Iteration #010: testing norm threshold 0.003012 in range [0.002582, 0.003443]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002798 in range [0.002582, 0.003013]...	no solution exists.
	Iteration #012: testing norm threshold 0.002906 in range [0.002798, 0.003013]...	no solution exists.
	Iteration #013: testing norm threshold 0.002959 in range [0.002906, 0.003013]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.28396639010719377, x5 : 0.6617011911001469, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.2874137586494785, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7608708143234253, x5 : 0.6590511004283877, x6 : 3, x7 : 6, x8 : 0, x9 : -0.29006384932123774, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003012


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113260 in range [0.000000, 0.226520]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051995 in range [0.000000, 0.103990]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025042 in range [0.000000, 0.050084]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012477 in range [0.000000, 0.024955]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006239 in range [0.000000, 0.012478]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003097 in range [0.000000, 0.006194]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001386 in range [0.000000, 0.002772]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000654 in range [0.000000, 0.001307]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000327 in range [0.000000, 0.000655]...	no solution exists.
	Iteration #011: testing norm threshold 0.000491 in range [0.000327, 0.000655]...	no solution exists.
	Iteration #012: testing norm threshold 0.000573 in range [0.000491, 0.000655]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6338351410734843, x5 : -0.215117664337276, x6 : 4.0, x7 : 4.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7275499999523163, x5 : -0.20125205502191798, x6 : 4, x7 : 4, x8 : 0, x9 : -0.5486532534369594, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000573


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.174550 in range [0.000000, 0.349100]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086962 in range [0.000000, 0.173923]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040708 in range [0.000000, 0.081415]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020323 in range [0.000000, 0.040646]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008747 in range [0.000000, 0.017494]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003005 in range [0.000000, 0.006009]...	no solution exists.
	Iteration #008: testing norm threshold 0.004507 in range [0.003005, 0.006009]...	no solution exists.
	Iteration #009: testing norm threshold 0.005258 in range [0.004507, 0.006009]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004852 in range [0.004507, 0.005197]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004646 in range [0.004507, 0.004785]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004577 in range [0.004507, 0.004647]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.13818774387123936, x5 : 0.4648643051856234, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.022198923709224192, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.13289729860459468, x5 : -0.40748098492622375, x6 : 2, x7 : 5, x8 : 0, x9 : -0.4509629160165787, x10 : -0.031752263821762536, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004646


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133822 in range [0.000000, 0.267644]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066912 in range [0.000000, 0.133823]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033187 in range [0.000000, 0.066375]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015901 in range [0.000000, 0.031802]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007247 in range [0.000000, 0.014495]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003624 in range [0.000000, 0.007248]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000508 in range [0.000000, 0.001017]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000052 in range [0.000000, 0.000103]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.19233409818745095, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.1503860939303471, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.19292918971324427, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.15098118545614042, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000102


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.182931 in range [0.000000, 0.365862]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091271 in range [0.000000, 0.182542]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043845 in range [0.000000, 0.087691]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021626 in range [0.000000, 0.043253]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010483 in range [0.000000, 0.020967]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005242 in range [0.000000, 0.010484]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002622 in range [0.000000, 0.005243]...	no solution exists.
	Iteration #009: testing norm threshold 0.003932 in range [0.002622, 0.005243]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003278 in range [0.002622, 0.003933]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002825 in range [0.002622, 0.003028]...	no solution exists.
	Iteration #012: testing norm threshold 0.002926 in range [0.002825, 0.003028]...	no solution exists.
	Iteration #013: testing norm threshold 0.002977 in range [0.002926, 0.003028]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.3907804867563665, x5 : -0.036175040778618266, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.5347522296653099, x10 : 0.1777038585205849, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.367872416973114, x5 : -0.4038051126892376, x6 : 0, x7 : 0, x8 : 2, x9 : 0.5016003847122192, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002977


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124666 in range [0.000000, 0.249332]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055797 in range [0.000000, 0.111594]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027543 in range [0.000000, 0.055086]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012926 in range [0.000000, 0.025852]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001476 in range [0.000000, 0.002953]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000467 in range [0.000000, 0.000933]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000234 in range [0.000000, 0.000468]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000117 in range [0.000000, 0.000235]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7213023288150568, x5 : -0.3135361072945377, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.13165761318239427, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7235391124423394, x5 : -0.31577289092182026, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.1183722017967592, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121680 in range [0.000000, 0.243359]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060840 in range [0.000000, 0.121681]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030421 in range [0.000000, 0.060841]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013019 in range [0.000000, 0.026038]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006510 in range [0.000000, 0.013020]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002837 in range [0.000000, 0.005674]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001419 in range [0.000000, 0.002838]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000643 in range [0.000000, 0.001285]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000322 in range [0.000000, 0.000644]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000161 in range [0.000000, 0.000323]...	no solution exists.
	Iteration #012: testing norm threshold 0.000242 in range [0.000161, 0.000323]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.5698799664176819, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6231571746453947, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.5649929803309561, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6231571746453947, x10 : -0.0629223762026787, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000322


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161958 in range [0.000000, 0.323915]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080457 in range [0.000000, 0.160913]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037082 in range [0.000000, 0.074164]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018320 in range [0.000000, 0.036639]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007995 in range [0.000000, 0.015989]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002084 in range [0.000000, 0.004167]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000783 in range [0.000000, 0.001566]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000392 in range [0.000000, 0.000784]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000393]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7608708143234253, x5 : -0.3985338509082794, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6888215138443804, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000099


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164888 in range [0.000000, 0.329775]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082444 in range [0.000000, 0.164889]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041223 in range [0.000000, 0.082445]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020612 in range [0.000000, 0.041224]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010290 in range [0.000000, 0.020581]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002266 in range [0.000000, 0.004532]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001133 in range [0.000000, 0.002267]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000567 in range [0.000000, 0.001134]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000284 in range [0.000000, 0.000568]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000143 in range [0.000000, 0.000285]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000072 in range [0.000000, 0.000144]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6879814953896959, x5 : -0.4298488126076653, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6885958301797186, x5 : -0.42028735116311755, x6 : 0, x7 : 5, x8 : 0, x9 : -0.6062858953678064, x10 : -0.3630643738825008, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160611 in range [0.000000, 0.321222]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079325 in range [0.000000, 0.158650]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039651 in range [0.000000, 0.079301]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019826 in range [0.000000, 0.039652]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009819 in range [0.000000, 0.019637]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004517 in range [0.000000, 0.009034]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002166 in range [0.000000, 0.004332]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001083 in range [0.000000, 0.002167]...	no solution exists.
	Iteration #010: testing norm threshold 0.001625 in range [0.001083, 0.002167]...	no solution exists.
	Iteration #011: testing norm threshold 0.001896 in range [0.001625, 0.002167]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001742 in range [0.001625, 0.001860]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001684 in range [0.001625, 0.001743]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.4422403488776585, x5 : -0.13459348373588, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.34487697288653363, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.445709211057313, x5 : -0.09212125092744827, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6277727782726288, x10 : 0.22300342459228908, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001684


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105035 in range [0.000000, 0.210070]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049098 in range [0.000000, 0.098196]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022101 in range [0.000000, 0.044202]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010312 in range [0.000000, 0.020624]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004454 in range [0.000000, 0.008909]...	no solution exists.
	Iteration #007: testing norm threshold 0.006681 in range [0.004454, 0.008909]...	solution exists & found.
	Iteration #008: testing norm threshold 0.004989 in range [0.004454, 0.005525]...	solution exists & found.
	Iteration #009: testing norm threshold 0.004722 in range [0.004454, 0.004990]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004589 in range [0.004454, 0.004723]...	no solution exists.
	Iteration #011: testing norm threshold 0.004656 in range [0.004589, 0.004723]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.08672788174994739, x5 : 0.4201286492959589, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.092922879693292, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.1715085804462433, x5 : 0.7324690631760609, x6 : 1, x7 : 6, x8 : 0, x9 : -0.10106083215348673, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004656


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142442 in range [0.000000, 0.284883]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070788 in range [0.000000, 0.141576]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035394 in range [0.000000, 0.070789]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015680 in range [0.000000, 0.031359]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007760 in range [0.000000, 0.015521]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001388 in range [0.000000, 0.002776]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000695 in range [0.000000, 0.001389]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000348 in range [0.000000, 0.000696]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000163 in range [0.000000, 0.000326]...	no solution exists.
	Iteration #011: testing norm threshold 0.000245 in range [0.000163, 0.000326]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.215117664337276, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.772348845682835, x5 : -0.2096268183810467, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6952693409545178, x10 : -0.3184669411999935, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180789 in range [0.000000, 0.361578]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090395 in range [0.000000, 0.180790]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044535 in range [0.000000, 0.089070]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022258 in range [0.000000, 0.044516]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011129 in range [0.000000, 0.022259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005565 in range [0.000000, 0.011130]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001836 in range [0.000000, 0.003673]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000630 in range [0.000000, 0.001260]...	no solution exists.
	Iteration #010: testing norm threshold 0.000945 in range [0.000630, 0.001260]...	no solution exists.
	Iteration #011: testing norm threshold 0.001102 in range [0.000945, 0.001260]...	no solution exists.
	Iteration #012: testing norm threshold 0.001181 in range [0.001102, 0.001260]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : 0.2866528823021134, x5 : 1.8069339818755563, x6 : 3.0, x7 : 4.0, x8 : 0.0, x9 : -0.39349969262558027, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : 0.2778123809936722, x5 : 1.8694573044776917, x6 : 3, x7 : 4, x8 : 0, x9 : -0.5216868817806244, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001259


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150794 in range [0.000000, 0.301587]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075397 in range [0.000000, 0.150795]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037699 in range [0.000000, 0.075398]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018798 in range [0.000000, 0.037596]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008867 in range [0.000000, 0.017734]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004421 in range [0.000000, 0.008842]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002126 in range [0.000000, 0.004252]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000850 in range [0.000000, 0.001700]...	no solution exists.
	Iteration #010: testing norm threshold 0.001275 in range [0.000850, 0.001700]...	no solution exists.
	Iteration #011: testing norm threshold 0.001488 in range [0.001275, 0.001700]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001382 in range [0.001275, 0.001489]...	no solution exists.
	Iteration #013: testing norm threshold 0.001435 in range [0.001382, 0.001489]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.13818774387123936, x5 : 0.9032737329043348, x6 : 1.0, x7 : 3.0, x8 : 3.0, x9 : -0.6763955165618515, x10 : 2.9177626078898293, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.13830690342219537, x5 : 0.3217102140188217, x6 : 1, x7 : 3, x8 : 3, x9 : -0.6765356038650654, x10 : 2.9171731217042622, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001488


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102625 in range [0.000000, 0.205251]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048780 in range [0.000000, 0.097561]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024072 in range [0.000000, 0.048143]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012036 in range [0.000000, 0.024073]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006019 in range [0.000000, 0.012037]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001893 in range [0.000000, 0.003786]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000710 in range [0.000000, 0.001421]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000356 in range [0.000000, 0.000711]...	no solution exists.
	Iteration #010: testing norm threshold 0.000533 in range [0.000356, 0.000711]...	no solution exists.
	Iteration #011: testing norm threshold 0.000622 in range [0.000533, 0.000711]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6796512870333556, x5 : -0.2240647955152089, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : 0.13350936256301646, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : -0.769201010465622, x5 : -0.21959123015403748, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6786576588437484, x10 : 0.12914112485754, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000622


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161886 in range [0.000000, 0.323772]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079108 in range [0.000000, 0.158216]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038655 in range [0.000000, 0.077310]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019285 in range [0.000000, 0.038569]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008789 in range [0.000000, 0.017578]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002138 in range [0.000000, 0.004277]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000588 in range [0.000000, 0.001177]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000295 in range [0.000000, 0.000589]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000253]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.5963492034699531, x5 : -0.3403775008283364, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5482083463407286, x10 : -0.1537548611611785, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.5981358122042454, x5 : -0.3448510766029358, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5524574237781055, x10 : -0.15919756895429915, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139403 in range [0.000000, 0.278806]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069702 in range [0.000000, 0.139404]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034649 in range [0.000000, 0.069298]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014654 in range [0.000000, 0.029309]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002476 in range [0.000000, 0.004952]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001239 in range [0.000000, 0.002477]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000546 in range [0.000000, 0.001092]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000274 in range [0.000000, 0.000547]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000120 in range [0.000000, 0.000240]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000060 in range [0.000000, 0.000121]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.40475441127412737, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3581377146335463, x10 : -0.3747273409490208, x11 : 2.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.406047177069502, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 0, x9 : -0.3584999004334889, x10 : -0.3633165228725809, x11 : 2, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166311 in range [0.000000, 0.332622]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083156 in range [0.000000, 0.166312]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039970 in range [0.000000, 0.079940]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018258 in range [0.000000, 0.036515]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009129 in range [0.000000, 0.018259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002248 in range [0.000000, 0.004495]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001074 in range [0.000000, 0.002148]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000538 in range [0.000000, 0.001075]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000111 in range [0.000000, 0.000222]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000053 in range [0.000000, 0.000105]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 3.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 3, x4 : -0.7421278576294048, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.19746415906509582, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000104


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167674 in range [0.000000, 0.335348]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083550 in range [0.000000, 0.167100]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041776 in range [0.000000, 0.083551]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020536 in range [0.000000, 0.041072]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009386 in range [0.000000, 0.018771]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004527 in range [0.000000, 0.009054]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000669 in range [0.000000, 0.001339]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000335 in range [0.000000, 0.000670]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000168 in range [0.000000, 0.000336]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6950853918023862, x10 : -0.36247748176534544, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117455 in range [0.000000, 0.234911]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058543 in range [0.000000, 0.117087]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029272 in range [0.000000, 0.058544]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014637 in range [0.000000, 0.029273]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007175 in range [0.000000, 0.014349]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003588 in range [0.000000, 0.007176]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001641 in range [0.000000, 0.003283]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000503 in range [0.000000, 0.001006]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000252 in range [0.000000, 0.000504]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000079 in range [0.000000, 0.000158]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6671559744988452, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.2642411010550996, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6671559744988452, x5 : -0.28343508100432396, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6653448939323425, x10 : -0.26750072553707327, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000079


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123538 in range [0.000000, 0.247076]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060641 in range [0.000000, 0.121282]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030291 in range [0.000000, 0.060581]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015146 in range [0.000000, 0.030292]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007512 in range [0.000000, 0.015024]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003071 in range [0.000000, 0.006142]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001478 in range [0.000000, 0.002955]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000739 in range [0.000000, 0.001479]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000370 in range [0.000000, 0.000740]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.16734347311843026, x5 : -0.215117664337276, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.1503860939303471, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.1666706894696832, x5 : -0.2285383641719818, x6 : 0, x7 : 0, x8 : 6, x9 : -0.15173166122784124, x10 : -0.21870103489204673, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000127


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144448 in range [0.000000, 0.288896]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072225 in range [0.000000, 0.144449]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035845 in range [0.000000, 0.071690]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017923 in range [0.000000, 0.035846]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008612 in range [0.000000, 0.017224]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001208 in range [0.000000, 0.002417]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000384 in range [0.000000, 0.000767]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000192 in range [0.000000, 0.000385]...	no solution exists.
	Iteration #010: testing norm threshold 0.000288 in range [0.000192, 0.000385]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7462929538840777, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.769201010465622, x5 : -0.40748098492622375, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3268306238463725, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000288


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.199466 in range [0.000000, 0.398932]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091315 in range [0.000000, 0.182630]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044013 in range [0.000000, 0.088025]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021664 in range [0.000000, 0.043329]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010560 in range [0.000000, 0.021121]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002928 in range [0.000000, 0.005856]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001465 in range [0.000000, 0.002929]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000733 in range [0.000000, 0.001466]...	no solution exists.
	Iteration #010: testing norm threshold 0.001099 in range [0.000733, 0.001466]...	no solution exists.
	Iteration #011: testing norm threshold 0.001282 in range [0.001099, 0.001466]...	no solution exists.
	Iteration #012: testing norm threshold 0.001374 in range [0.001282, 0.001466]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.1631783689402601, x5 : 0.4201286492959589, x6 : 1.0, x7 : 1.0, x8 : 2.0, x9 : -0.04872040720324962, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.1756736859679222, x5 : 0.021981311962008476, x6 : 1, x7 : 1, x8 : 2, x9 : -0.050720605573069295, x10 : -0.14070603936354442, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001374


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113475 in range [0.000000, 0.226951]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056494 in range [0.000000, 0.112988]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028248 in range [0.000000, 0.056495]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014124 in range [0.000000, 0.028249]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007061 in range [0.000000, 0.014122]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003034 in range [0.000000, 0.006068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001518 in range [0.000000, 0.003035]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000552 in range [0.000000, 0.001104]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000276 in range [0.000000, 0.000553]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000139 in range [0.000000, 0.000277]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.5948705914867026, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.7380836031195048, x10 : -0.08746311722482583, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.5954342591728362, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 3, x9 : 0.7405107269779141, x10 : -0.07528715660900072, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000139


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085685 in range [0.000000, 0.171371]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042738 in range [0.000000, 0.085476]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020781 in range [0.000000, 0.041561]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010055 in range [0.000000, 0.020110]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004654 in range [0.000000, 0.009308]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002327 in range [0.000000, 0.004655]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000189 in range [0.000000, 0.000378]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7733661234378815, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.693035233315477, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000067


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144944 in range [0.000000, 0.289888]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071936 in range [0.000000, 0.143873]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035724 in range [0.000000, 0.071449]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017863 in range [0.000000, 0.035725]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008517 in range [0.000000, 0.017033]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004057 in range [0.000000, 0.008115]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002029 in range [0.000000, 0.004058]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000657 in range [0.000000, 0.001314]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000195 in range [0.000000, 0.000389]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000086 in range [0.000000, 0.000171]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 0.24083673634224206, x5 : -0.3493246320062693, x6 : 0.0, x7 : 3.0, x8 : 3.0, x9 : 0.3667828342031488, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : 0.23964457731890307, x5 : -0.326034748967278, x6 : 0, x7 : 3, x8 : 3, x9 : 0.3658607746033797, x10 : -0.1717231004310768, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156643 in range [0.000000, 0.313286]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078322 in range [0.000000, 0.156644]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039045 in range [0.000000, 0.078090]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018981 in range [0.000000, 0.037963]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008736 in range [0.000000, 0.017472]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002208 in range [0.000000, 0.004417]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000252 in range [0.000000, 0.000504]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000104 in range [0.000000, 0.000207]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000052 in range [0.000000, 0.000105]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.15068305640574975, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.05314065445225386, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.1517243328648641, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 3, x9 : -0.0541819309113682, x10 : -0.21821473204128042, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000052


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128136 in range [0.000000, 0.256273]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064069 in range [0.000000, 0.128137]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031451 in range [0.000000, 0.062901]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015726 in range [0.000000, 0.031452]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007863 in range [0.000000, 0.015727]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003426 in range [0.000000, 0.006851]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001675 in range [0.000000, 0.003350]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000838 in range [0.000000, 0.001676]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000419 in range [0.000000, 0.000839]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000102 in range [0.000000, 0.000204]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.08672788174994739, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : 0.2164944277370047, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 0.08533367907554777, x5 : -0.28222113847732544, x6 : 0, x7 : 0, x8 : 5, x9 : 0.2164944128358435, x10 : -0.17585212404112394, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000042


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.181109 in range [0.000000, 0.362218]...	solution exists & found.
	Iteration #003: testing norm threshold 0.090314 in range [0.000000, 0.180628]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042833 in range [0.000000, 0.085667]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021378 in range [0.000000, 0.042756]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008800 in range [0.000000, 0.017600]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004000 in range [0.000000, 0.008000]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002000 in range [0.000000, 0.004001]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001001 in range [0.000000, 0.002001]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000501 in range [0.000000, 0.001002]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000235 in range [0.000000, 0.000470]...	no solution exists.
	Iteration #012: testing norm threshold 0.000353 in range [0.000235, 0.000470]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000294 in range [0.000235, 0.000354]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4339101405213183, x5 : 0.30381594398283146, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.4024884459747329, x5 : 0.303632531289237, x6 : 2, x7 : 5, x8 : 0, x9 : -0.6519007292760863, x10 : -0.27528972923755646, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000353


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153369 in range [0.000000, 0.306739]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072936 in range [0.000000, 0.145872]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036434 in range [0.000000, 0.072868]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018217 in range [0.000000, 0.036435]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008850 in range [0.000000, 0.017700]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004425 in range [0.000000, 0.008851]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002213 in range [0.000000, 0.004426]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001107 in range [0.000000, 0.002214]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000554 in range [0.000000, 0.001108]...	no solution exists.
	Iteration #011: testing norm threshold 0.000831 in range [0.000554, 0.001108]...	no solution exists.
	Iteration #012: testing norm threshold 0.000970 in range [0.000831, 0.001108]...	no solution exists.
	Iteration #013: testing norm threshold 0.001039 in range [0.000970, 0.001108]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.21584611127322129, x5 : -0.30458897611660485, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 0.3270006089621107, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.21252430489456128, x5 : -0.40748098492622375, x6 : 0, x7 : 2, x8 : 0, x9 : 0.26953738927841187, x10 : 0.08158804703503589, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001107


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155321 in range [0.000000, 0.310642]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042145 in range [0.000000, 0.084289]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021073 in range [0.000000, 0.042146]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009582 in range [0.000000, 0.019164]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002670 in range [0.000000, 0.005340]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001213 in range [0.000000, 0.002427]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000565 in range [0.000000, 0.001131]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000243 in range [0.000000, 0.000485]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000122 in range [0.000000, 0.000244]...	no solution exists.
	Iteration #011: testing norm threshold 0.000183 in range [0.000122, 0.000244]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7092084754130981, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6605231841455704, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000243


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135220 in range [0.000000, 0.270440]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065004 in range [0.000000, 0.130008]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032503 in range [0.000000, 0.065005]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013765 in range [0.000000, 0.027529]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006128 in range [0.000000, 0.012256]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003064 in range [0.000000, 0.006128]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001532 in range [0.000000, 0.003065]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000728 in range [0.000000, 0.001457]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000365 in range [0.000000, 0.000729]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000183 in range [0.000000, 0.000366]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000092 in range [0.000000, 0.000184]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6240263207338935, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.7867063228585515, x10 : -0.13165761318239427, x11 : 2.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6244322565561271, x5 : -0.24195905787107466, x6 : 0, x7 : 0, x8 : 3, x9 : 0.7822861075401306, x10 : -0.08665124276617162, x11 : 2, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000183


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.117892 in range [0.000000, 0.235784]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058946 in range [0.000000, 0.117893]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025954 in range [0.000000, 0.051909]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012978 in range [0.000000, 0.025955]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006382 in range [0.000000, 0.012764]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002888 in range [0.000000, 0.005776]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001424 in range [0.000000, 0.002847]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000712 in range [0.000000, 0.001425]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000357 in range [0.000000, 0.000713]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	no solution exists.
	Iteration #012: testing norm threshold 0.000268 in range [0.000179, 0.000358]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6130096201826336, x5 : -0.0809106966682827, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5703095825857498, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6038616890366529, x5 : -0.0879760827792585, x6 : 2, x7 : 6, x8 : 0, x9 : -0.5924108326435089, x10 : -0.3084355965256691, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000268


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087946 in range [0.000000, 0.175892]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042777 in range [0.000000, 0.085554]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021389 in range [0.000000, 0.042778]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010695 in range [0.000000, 0.021390]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005332 in range [0.000000, 0.010663]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002666 in range [0.000000, 0.005333]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001334 in range [0.000000, 0.002667]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000667 in range [0.000000, 0.001335]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000334 in range [0.000000, 0.000668]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000168 in range [0.000000, 0.000335]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000084 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.3672684736705962, x5 : 0.4469700428297576, x6 : 4.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : 0.7964268019265432, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.37075319159865977, x5 : 0.443485324901694, x6 : 4, x7 : 6, x8 : 0, x9 : -0.6795411786211613, x10 : 0.7964268019265432, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129127 in range [0.000000, 0.258254]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064464 in range [0.000000, 0.128928]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032232 in range [0.000000, 0.064465]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014424 in range [0.000000, 0.028848]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007213 in range [0.000000, 0.014425]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003607 in range [0.000000, 0.007214]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001716 in range [0.000000, 0.003431]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000790 in range [0.000000, 0.001580]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000351 in range [0.000000, 0.000701]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000051 in range [0.000000, 0.000102]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5546981616882519, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.4951653793526778, x10 : -0.2642411010550996, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5551882162926128, x5 : -0.36672884214227447, x6 : 0, x7 : 0, x8 : 5, x9 : -0.49492035205049734, x10 : -0.2642411010550996, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.083167 in range [0.000000, 0.166335]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041584 in range [0.000000, 0.083168]...	solution exists & found.
	Iteration #004: testing norm threshold 0.016611 in range [0.000000, 0.033222]...	solution exists & found.
	Iteration #005: testing norm threshold 0.007449 in range [0.000000, 0.014899]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003539 in range [0.000000, 0.007077]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001561 in range [0.000000, 0.003123]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000781 in range [0.000000, 0.001562]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000391 in range [0.000000, 0.000782]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000092 in range [0.000000, 0.000184]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7712835669517517, x5 : -0.35618920624256134, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6874461472034454, x10 : -0.37472734094902077, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000183


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151457 in range [0.000000, 0.302914]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073431 in range [0.000000, 0.146862]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035339 in range [0.000000, 0.070678]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017670 in range [0.000000, 0.035340]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008295 in range [0.000000, 0.016590]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004148 in range [0.000000, 0.008296]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002075 in range [0.000000, 0.004149]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001038 in range [0.000000, 0.002076]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000403 in range [0.000000, 0.000806]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000196 in range [0.000000, 0.000392]...	no solution exists.
	Iteration #012: testing norm threshold 0.000294 in range [0.000196, 0.000392]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.22148982743464188, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.11060386868930897, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.216101618590163, x5 : -0.3257337008736599, x6 : 0, x7 : 0, x8 : 1, x9 : -0.11182697638269623, x10 : -0.11938588145594478, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000294


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.074980 in range [0.000000, 0.149961]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037491 in range [0.000000, 0.074981]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017891 in range [0.000000, 0.035782]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008895 in range [0.000000, 0.017791]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004448 in range [0.000000, 0.008896]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002225 in range [0.000000, 0.004449]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001081 in range [0.000000, 0.002162]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000539 in range [0.000000, 0.001078]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000252 in range [0.000000, 0.000504]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000126 in range [0.000000, 0.000253]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000064 in range [0.000000, 0.000127]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.2491669446985823, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.38888407044817, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.2491145950821811, x5 : -0.28222113847732544, x6 : 0, x7 : 0, x8 : 6, x9 : 0.3888317208317688, x10 : -0.17585210913996274, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000126


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120749 in range [0.000000, 0.241498]...	solution exists & found.
	Iteration #003: testing norm threshold 0.057697 in range [0.000000, 0.115394]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028339 in range [0.000000, 0.056678]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013510 in range [0.000000, 0.027021]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006478 in range [0.000000, 0.012956]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002450 in range [0.000000, 0.004900]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001226 in range [0.000000, 0.002451]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000613 in range [0.000000, 0.001227]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000307 in range [0.000000, 0.000614]...	no solution exists.
	Iteration #011: testing norm threshold 0.000461 in range [0.000307, 0.000614]...	no solution exists.
	Iteration #012: testing norm threshold 0.000537 in range [0.000461, 0.000614]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5047169115502104, x5 : 0.08908479571244217, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.519294798374176, x5 : 0.08687468528649307, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6808157861232758, x10 : -0.140496127307415, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000490


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112745 in range [0.000000, 0.225491]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050160 in range [0.000000, 0.100321]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022231 in range [0.000000, 0.044461]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010518 in range [0.000000, 0.021035]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004150 in range [0.000000, 0.008301]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001647 in range [0.000000, 0.003295]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000452 in range [0.000000, 0.000904]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000226 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000057 in range [0.000000, 0.000115]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.14651795222757966, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.07082164344827081, x10 : -0.10956036520361004, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.14650690182392673, x5 : -0.30009330570590825, x6 : 0, x7 : 0, x8 : 0, x9 : -0.0708437442555767, x10 : -0.1095559627227947, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142830 in range [0.000000, 0.285659]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069726 in range [0.000000, 0.139453]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031430 in range [0.000000, 0.062860]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015099 in range [0.000000, 0.030198]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004514 in range [0.000000, 0.009027]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001036 in range [0.000000, 0.002072]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000327 in range [0.000000, 0.000653]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000164 in range [0.000000, 0.000328]...	no solution exists.
	Iteration #010: testing norm threshold 0.000246 in range [0.000164, 0.000328]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6546606619643349, x5 : -0.16143487726967867, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6587145275658346, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6546606619643349, x5 : -0.21064409613609314, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.15058325295354133, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000246


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.188958 in range [0.000000, 0.377916]...	solution exists & found.
	Iteration #003: testing norm threshold 0.094355 in range [0.000000, 0.188709]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043684 in range [0.000000, 0.087368]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021843 in range [0.000000, 0.043685]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010871 in range [0.000000, 0.021743]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004272 in range [0.000000, 0.008544]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002136 in range [0.000000, 0.004273]...	no solution exists.
	Iteration #009: testing norm threshold 0.003205 in range [0.002136, 0.004273]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002624 in range [0.002136, 0.003112]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002381 in range [0.002136, 0.002625]...	no solution exists.
	Iteration #012: testing norm threshold 0.002503 in range [0.002381, 0.002625]...	no solution exists.
	Iteration #013: testing norm threshold 0.002564 in range [0.002503, 0.002625]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.25064555668183275, x5 : 0.22329176338143544, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5658893353367456, x10 : 0.08931486660544799, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.47972626984119415, x5 : 0.22329176338143544, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.2450404511136419, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002564


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135494 in range [0.000000, 0.270988]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062284 in range [0.000000, 0.124567]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031142 in range [0.000000, 0.062285]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015572 in range [0.000000, 0.031143]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007786 in range [0.000000, 0.015573]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002897 in range [0.000000, 0.005793]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001449 in range [0.000000, 0.002898]...	no solution exists.
	Iteration #009: testing norm threshold 0.002173 in range [0.001449, 0.002898]...	no solution exists.
	Iteration #010: testing norm threshold 0.002535 in range [0.002173, 0.002898]...	no solution exists.
	Iteration #011: testing norm threshold 0.002716 in range [0.002535, 0.002898]...	solution exists & found.
	Iteration #012: testing norm threshold 0.002598 in range [0.002535, 0.002661]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4547356614121689, x5 : -0.01828077842275249, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.3581377146335463, x10 : 0.6417460660750536, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.4547356614121689, x5 : -0.3716924488544464, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : 0.6417460660750536, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002660


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.095201 in range [0.000000, 0.190403]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047029 in range [0.000000, 0.094058]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023460 in range [0.000000, 0.046921]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009289 in range [0.000000, 0.018579]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004565 in range [0.000000, 0.009129]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001405 in range [0.000000, 0.002809]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000534 in range [0.000000, 0.001068]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000259 in range [0.000000, 0.000518]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000130 in range [0.000000, 0.000259]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000065 in range [0.000000, 0.000131]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.16734347311843026, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.092922879693292, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.1720638910540898, x5 : -0.36721889674663544, x6 : 0, x7 : 0, x8 : 6, x9 : -0.092922879693292, x10 : -0.36367870390352286, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000065


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145831 in range [0.000000, 0.291662]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063541 in range [0.000000, 0.127081]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031505 in range [0.000000, 0.063010]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015661 in range [0.000000, 0.031322]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007690 in range [0.000000, 0.015380]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003690 in range [0.000000, 0.007380]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001626 in range [0.000000, 0.003251]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000789 in range [0.000000, 0.001579]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000395 in range [0.000000, 0.000790]...	no solution exists.
	Iteration #011: testing norm threshold 0.000593 in range [0.000395, 0.000790]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000494 in range [0.000395, 0.000594]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.31728722353255473, x5 : -0.215117664337276, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.3050947476454955, x10 : 0.15560661054180067, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.3188726237570134, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.3066801478699542, x10 : 0.14455799013376236, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000593


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100344 in range [0.000000, 0.200687]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050172 in range [0.000000, 0.100345]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025087 in range [0.000000, 0.050173]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012544 in range [0.000000, 0.025088]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006185 in range [0.000000, 0.012371]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003067 in range [0.000000, 0.006135]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001534 in range [0.000000, 0.003068]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000768 in range [0.000000, 0.001535]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000238 in range [0.000000, 0.000477]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000120 in range [0.000000, 0.000239]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000121]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6796512870333556, x5 : -0.215117664337276, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 0.15560661054180067, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6963117122650146, x5 : -0.2194336569665707, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6961290455220974, x10 : 0.15544903735433388, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000120


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120992 in range [0.000000, 0.241983]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049758 in range [0.000000, 0.099516]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024879 in range [0.000000, 0.049759]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012440 in range [0.000000, 0.024880]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001912 in range [0.000000, 0.003824]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000957 in range [0.000000, 0.001913]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000462 in range [0.000000, 0.000925]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000232 in range [0.000000, 0.000463]...	no solution exists.
	Iteration #010: testing norm threshold 0.000348 in range [0.000232, 0.000463]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4672309739466792, x5 : -0.4298488126076653, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3713984563805591, x10 : -0.3747273409490208, x11 : 1.0, x12 : 33.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.46754026832021545, x5 : -0.3087532461576222, x6 : 0, x7 : 0, x8 : 6, x9 : -0.3717077507540954, x10 : -0.37472734094902077, x11 : 1, x12 : 33, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000313


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132367 in range [0.000000, 0.264735]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065687 in range [0.000000, 0.131374]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031007 in range [0.000000, 0.062014]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012693 in range [0.000000, 0.025387]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006347 in range [0.000000, 0.012694]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003174 in range [0.000000, 0.006348]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001588 in range [0.000000, 0.003175]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000210 in range [0.000000, 0.000420]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5463679533319117, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.546624450288348, x5 : -0.33582712935788783, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5129231815757983, x10 : -0.2422971192638295, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000105


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.219974 in range [0.000000, 0.439949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.108646 in range [0.000000, 0.217292]...	solution exists & found.
	Iteration #004: testing norm threshold 0.054270 in range [0.000000, 0.108539]...	solution exists & found.
	Iteration #005: testing norm threshold 0.027135 in range [0.000000, 0.054271]...	solution exists & found.
	Iteration #006: testing norm threshold 0.013568 in range [0.000000, 0.027136]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006785 in range [0.000000, 0.013569]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003393 in range [0.000000, 0.006786]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001697 in range [0.000000, 0.003394]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000597 in range [0.000000, 0.001193]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000219 in range [0.000000, 0.000439]...	no solution exists.
	Iteration #012: testing norm threshold 0.000329 in range [0.000219, 0.000439]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000275 in range [0.000219, 0.000330]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6906679875846156, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8574302788426194, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.6867731328840498, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8535354241420536, x10 : -0.021171373288473145, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000329


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113784 in range [0.000000, 0.227567]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056435 in range [0.000000, 0.112870]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028202 in range [0.000000, 0.056403]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014101 in range [0.000000, 0.028203]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007051 in range [0.000000, 0.014102]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003499 in range [0.000000, 0.006997]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001750 in range [0.000000, 0.003500]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000199 in range [0.000000, 0.000398]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000100 in range [0.000000, 0.000200]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7671184747749282, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7480752187635542, x5 : -0.4298488126076653, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6850633042719008, x10 : -0.3691624805825435, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000199


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126676 in range [0.000000, 0.253352]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063339 in range [0.000000, 0.126677]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031586 in range [0.000000, 0.063171]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015216 in range [0.000000, 0.030432]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007541 in range [0.000000, 0.015081]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003771 in range [0.000000, 0.007542]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001597 in range [0.000000, 0.003195]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000766 in range [0.000000, 0.001533]...	no solution exists.
	Iteration #010: testing norm threshold 0.001150 in range [0.000766, 0.001533]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000959 in range [0.000766, 0.001151]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000863 in range [0.000766, 0.000960]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 3.1022633067451184, x5 : -0.045122171956551146, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 3.416753436016074, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 3.098405532488999, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 3.4128956617599546, x10 : 0.5715965478825816, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000959


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.108942 in range [0.000000, 0.217883]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050419 in range [0.000000, 0.100837]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025198 in range [0.000000, 0.050397]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011918 in range [0.000000, 0.023836]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005957 in range [0.000000, 0.011914]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002979 in range [0.000000, 0.005958]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001166 in range [0.000000, 0.002332]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000561 in range [0.000000, 0.001121]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000281 in range [0.000000, 0.000562]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000141 in range [0.000000, 0.000282]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 1.9401992410356528, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 2.139301981053849, x10 : 0.31028734639329025, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 1.937404333064143, x5 : -0.1407457053817426, x6 : 0, x7 : 0, x8 : 3, x9 : 2.1365070730823392, x10 : 0.3074924384217804, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.163896 in range [0.000000, 0.327792]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081649 in range [0.000000, 0.163298]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038087 in range [0.000000, 0.076174]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018538 in range [0.000000, 0.037075]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008785 in range [0.000000, 0.017569]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004129 in range [0.000000, 0.008258]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001929 in range [0.000000, 0.003858]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000492 in range [0.000000, 0.000984]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000247 in range [0.000000, 0.000493]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000124 in range [0.000000, 0.000248]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000120]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7171372246368868, x5 : -0.2777475825828062, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7162896151690376, x5 : -0.2777475825828062, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6338630649183289, x10 : -0.07587438774447598, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149536 in range [0.000000, 0.299072]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074235 in range [0.000000, 0.148470]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035884 in range [0.000000, 0.071767]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017572 in range [0.000000, 0.035145]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008787 in range [0.000000, 0.017573]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004379 in range [0.000000, 0.008758]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002190 in range [0.000000, 0.004380]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001095 in range [0.000000, 0.002191]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000548 in range [0.000000, 0.001096]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000127 in range [0.000000, 0.000255]...	no solution exists.
	Iteration #012: testing norm threshold 0.000191 in range [0.000127, 0.000255]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 0.4699174661415989, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.6231571746453947, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 0.46838388280405396, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.6216235913078497, x10 : -0.1308908215136218, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000191


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148768 in range [0.000000, 0.297537]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074385 in range [0.000000, 0.148769]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036976 in range [0.000000, 0.073953]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015822 in range [0.000000, 0.031645]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003254 in range [0.000000, 0.006508]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001628 in range [0.000000, 0.003255]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000616 in range [0.000000, 0.001232]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000309 in range [0.000000, 0.000617]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000132 in range [0.000000, 0.000263]...	no solution exists.
	Iteration #011: testing norm threshold 0.000197 in range [0.000132, 0.000263]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5297075366192311, x5 : -0.2688004514048733, x6 : 0.0, x7 : 1.0, x8 : 2.0, x9 : -0.4951653793526778, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5338726341724396, x5 : -0.2688004518782217, x6 : 0, x7 : 1, x8 : 2, x9 : -0.5106362402439117, x10 : -0.33053283346048185, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000262


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160950 in range [0.000000, 0.321900]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079571 in range [0.000000, 0.159141]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039552 in range [0.000000, 0.079104]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019685 in range [0.000000, 0.039370]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009474 in range [0.000000, 0.018949]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004274 in range [0.000000, 0.008548]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002137 in range [0.000000, 0.004275]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000949 in range [0.000000, 0.001899]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000475 in range [0.000000, 0.000950]...	no solution exists.
	Iteration #011: testing norm threshold 0.000713 in range [0.000475, 0.000950]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000594 in range [0.000475, 0.000714]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000535 in range [0.000475, 0.000595]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.08820649373319786, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.02642379602982244, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.009892080313347634, x5 : -0.20147833567223664, x6 : 0, x7 : 0, x8 : 0, x9 : 0.026519507458053166, x10 : -0.2199991007836462, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000594


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092772 in range [0.000000, 0.185544]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046022 in range [0.000000, 0.092045]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020424 in range [0.000000, 0.040848]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010212 in range [0.000000, 0.020425]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001189 in range [0.000000, 0.002377]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000595 in range [0.000000, 0.001190]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000298 in range [0.000000, 0.000596]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000112 in range [0.000000, 0.000224]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000056 in range [0.000000, 0.000112]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7685951441365304, x5 : -0.42150754775882393, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6956807523804727, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171198 in range [0.000000, 0.342397]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082571 in range [0.000000, 0.165142]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040678 in range [0.000000, 0.081357]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020340 in range [0.000000, 0.040679]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008025 in range [0.000000, 0.016050]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001063 in range [0.000000, 0.002127]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7723248511954899, x5 : -0.41538684670177656, x6 : 1, x7 : 6, x8 : 0, x9 : -0.69511777780026, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000026


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124158 in range [0.000000, 0.248316]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055882 in range [0.000000, 0.111764]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027941 in range [0.000000, 0.055883]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013947 in range [0.000000, 0.027895]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006690 in range [0.000000, 0.013380]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003345 in range [0.000000, 0.006691]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001603 in range [0.000000, 0.003206]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000548 in range [0.000000, 0.001095]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000197 in range [0.000000, 0.000394]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7504580580622477, x5 : 0.9390622576160664, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7431194290591923, x5 : 0.9379712944385491, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.3625877454950062, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000099


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.152169 in range [0.000000, 0.304338]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073982 in range [0.000000, 0.147964]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036991 in range [0.000000, 0.073983]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018496 in range [0.000000, 0.036992]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008657 in range [0.000000, 0.017315]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004218 in range [0.000000, 0.008435]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002109 in range [0.000000, 0.004219]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001055 in range [0.000000, 0.002110]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000528 in range [0.000000, 0.001056]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000265 in range [0.000000, 0.000529]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000100 in range [0.000000, 0.000199]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000050 in range [0.000000, 0.000101]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.25064555668183275, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.203429060918398, x10 : -0.0653658692460416, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.2510805589719046, x5 : -0.3056664899822323, x6 : 0, x7 : 0, x8 : 2, x9 : -0.20465512750231973, x10 : -0.07641449198126793, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000050


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.096025 in range [0.000000, 0.192051]...	solution exists & found.
	Iteration #003: testing norm threshold 0.048013 in range [0.000000, 0.096026]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020515 in range [0.000000, 0.041029]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009590 in range [0.000000, 0.019180]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004618 in range [0.000000, 0.009236]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002105 in range [0.000000, 0.004210]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001015 in range [0.000000, 0.002029]...	no solution exists.
	Iteration #009: testing norm threshold 0.001522 in range [0.001015, 0.002029]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001269 in range [0.001015, 0.001523]...	no solution exists.
	Iteration #011: testing norm threshold 0.001396 in range [0.001269, 0.001523]...	no solution exists.
	Iteration #012: testing norm threshold 0.001459 in range [0.001396, 0.001523]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.5130471199065506, x5 : -0.045122171956551146, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.4200211761196057, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5173704631052599, x5 : -0.4253752529621124, x6 : 3, x7 : 6, x8 : 0, x9 : -0.38696623368937516, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001522


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.073474 in range [0.000000, 0.146949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.036274 in range [0.000000, 0.072549]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018035 in range [0.000000, 0.036069]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008381 in range [0.000000, 0.016762]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004027 in range [0.000000, 0.008055]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001719 in range [0.000000, 0.003439]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000580 in range [0.000000, 0.001161]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000291 in range [0.000000, 0.000581]...	no solution exists.
	Iteration #010: testing norm threshold 0.000436 in range [0.000291, 0.000581]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000364 in range [0.000291, 0.000437]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.7860903864433586, x5 : -0.17932913962554445, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.971332585591688, x10 : 0.2439956024569376, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.78609038121394, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 3, x9 : 1.970663871365948, x10 : 0.24399559722751896, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000358


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.132259 in range [0.000000, 0.264518]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066130 in range [0.000000, 0.132260]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032998 in range [0.000000, 0.065996]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014584 in range [0.000000, 0.029167]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007292 in range [0.000000, 0.014585]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000274 in range [0.000000, 0.000548]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000090 in range [0.000000, 0.000180]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.4755611823030195, x5 : 0.22329176338143544, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.5128463683486947, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.4984692633152008, x5 : 0.21912665040917592, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5170114813209542, x10 : -0.24630896604857497, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000179


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178776 in range [0.000000, 0.357553]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084060 in range [0.000000, 0.168119]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042030 in range [0.000000, 0.084061]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021016 in range [0.000000, 0.042031]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007136 in range [0.000000, 0.014273]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001910 in range [0.000000, 0.003820]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000344 in range [0.000000, 0.000687]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000172 in range [0.000000, 0.000345]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000087 in range [0.000000, 0.000173]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7171372246368868, x5 : -0.30458897611660485, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7022539496663676, x5 : -0.30458897611660485, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6943819376149049, x10 : -0.37472734094902077, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146474 in range [0.000000, 0.292949]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072320 in range [0.000000, 0.144641]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036161 in range [0.000000, 0.072321]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018081 in range [0.000000, 0.036162]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008633 in range [0.000000, 0.017267]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004303 in range [0.000000, 0.008605]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002150 in range [0.000000, 0.004299]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001075 in range [0.000000, 0.002151]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000538 in range [0.000000, 0.001076]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000270 in range [0.000000, 0.000539]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000135 in range [0.000000, 0.000271]...	no solution exists.
	Iteration #013: testing norm threshold 0.000203 in range [0.000135, 0.000271]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.4838913906593598, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4509629068626354, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.48470001091945414, x5 : -0.3769746458001623, x6 : 0, x7 : 6, x8 : 0, x9 : -0.45015428085532316, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000203


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105891 in range [0.000000, 0.211782]...	solution exists & found.
	Iteration #003: testing norm threshold 0.052945 in range [0.000000, 0.105891]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024572 in range [0.000000, 0.049145]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012287 in range [0.000000, 0.024573]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006144 in range [0.000000, 0.012288]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002116 in range [0.000000, 0.004232]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000460 in range [0.000000, 0.000921]...	no solution exists.
	Iteration #009: testing norm threshold 0.000691 in range [0.000460, 0.000921]...	no solution exists.
	Iteration #010: testing norm threshold 0.000806 in range [0.000691, 0.000921]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000749 in range [0.000691, 0.000807]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.2381502441473224, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : -0.2432112861594361, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.19604443497653357, x5 : -0.2325571674823319, x6 : 0, x7 : 0, x8 : 1, x9 : -0.16982244439120642, x10 : -0.24259861677493752, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000806


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100519 in range [0.000000, 0.201037]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050171 in range [0.000000, 0.100342]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025086 in range [0.000000, 0.050172]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012543 in range [0.000000, 0.025087]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003811 in range [0.000000, 0.007621]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001906 in range [0.000000, 0.003812]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000880 in range [0.000000, 0.001761]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000441 in range [0.000000, 0.000881]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000221 in range [0.000000, 0.000442]...	no solution exists.
	Iteration #011: testing norm threshold 0.000331 in range [0.000221, 0.000442]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000277 in range [0.000221, 0.000332]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6463304536079947, x5 : -0.15248774609174578, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : 0.31028734639329025, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6235280727219158, x5 : -0.21959123015403748, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6943097506832653, x10 : 0.3083104783669914, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000331


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.149035 in range [0.000000, 0.298071]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060556 in range [0.000000, 0.121112]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024487 in range [0.000000, 0.048974]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010034 in range [0.000000, 0.020068]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005018 in range [0.000000, 0.010035]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002458 in range [0.000000, 0.004916]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000759 in range [0.000000, 0.001518]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000063 in range [0.000000, 0.000126]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7716178959035314, x5 : -0.3981995339578465, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6944108225083014, x10 : -0.35296440992066946, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120768 in range [0.000000, 0.241535]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058694 in range [0.000000, 0.117389]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029348 in range [0.000000, 0.058695]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014180 in range [0.000000, 0.028359]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007090 in range [0.000000, 0.014181]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000534 in range [0.000000, 0.001068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000268 in range [0.000000, 0.000535]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.769201010465622, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.36304267334253304, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171195 in range [0.000000, 0.342391]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083190 in range [0.000000, 0.166380]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037669 in range [0.000000, 0.075339]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018648 in range [0.000000, 0.037295]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007855 in range [0.000000, 0.015710]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002769 in range [0.000000, 0.005537]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001334 in range [0.000000, 0.002668]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000602 in range [0.000000, 0.001203]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000301 in range [0.000000, 0.000603]...	no solution exists.
	Iteration #011: testing norm threshold 0.000452 in range [0.000301, 0.000603]...	no solution exists.
	Iteration #012: testing norm threshold 0.000527 in range [0.000452, 0.000603]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.625504932717144, x5 : -0.10775209020208136, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6317525804042816, x5 : -0.2998965915971784, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6324118589878448, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000527


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131826 in range [0.000000, 0.263652]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062523 in range [0.000000, 0.125045]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030506 in range [0.000000, 0.061012]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014544 in range [0.000000, 0.029087]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007173 in range [0.000000, 0.014345]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003587 in range [0.000000, 0.007174]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001406 in range [0.000000, 0.002813]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000657 in range [0.000000, 0.001314]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000329 in range [0.000000, 0.000658]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000165 in range [0.000000, 0.000330]...	no solution exists.
	Iteration #012: testing norm threshold 0.000248 in range [0.000165, 0.000330]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.125692431336729, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.013358429211215713, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.12777498364448547, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : -0.014975042553854873, x10 : -0.2200466050975312, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000329


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.192710 in range [0.000000, 0.385420]...	solution exists & found.
	Iteration #003: testing norm threshold 0.096299 in range [0.000000, 0.192599]...	solution exists & found.
	Iteration #004: testing norm threshold 0.048150 in range [0.000000, 0.096300]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023931 in range [0.000000, 0.047862]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011966 in range [0.000000, 0.023932]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005983 in range [0.000000, 0.011967]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002424 in range [0.000000, 0.004849]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000898 in range [0.000000, 0.001795]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000449 in range [0.000000, 0.000899]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000225 in range [0.000000, 0.000450]...	no solution exists.
	Iteration #012: testing norm threshold 0.000338 in range [0.000225, 0.000450]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000281 in range [0.000225, 0.000337]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 1.2071409056777112, x5 : -0.2777475825828062, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.405540937719145, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : 1.2067105850559128, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 1.4053163109961244, x10 : -0.0216166020723369, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000336


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.119240 in range [0.000000, 0.238480]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059621 in range [0.000000, 0.119241]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029811 in range [0.000000, 0.059622]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014906 in range [0.000000, 0.029812]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007434 in range [0.000000, 0.014869]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001271 in range [0.000000, 0.002543]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000486 in range [0.000000, 0.000972]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000244 in range [0.000000, 0.000487]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000122 in range [0.000000, 0.000245]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000062 in range [0.000000, 0.000123]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7754486831312685, x5 : -0.40725682547416847, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6938523488315599, x10 : -0.3634545492204682, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000122


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141741 in range [0.000000, 0.283483]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067622 in range [0.000000, 0.135243]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033174 in range [0.000000, 0.066348]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016504 in range [0.000000, 0.033007]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007795 in range [0.000000, 0.015589]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003626 in range [0.000000, 0.007253]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001814 in range [0.000000, 0.003627]...	no solution exists.
	Iteration #009: testing norm threshold 0.002720 in range [0.001814, 0.003627]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002259 in range [0.001814, 0.002705]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002037 in range [0.001814, 0.002260]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001926 in range [0.001814, 0.002038]...	no solution exists.
	Iteration #013: testing norm threshold 0.001982 in range [0.001926, 0.002038]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.4615872577852586, x5 : 0.30381594398283146, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.5391724769143141, x10 : -0.021171373288473145, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : 0.45881425274537146, x5 : -0.3180096745491028, x6 : 0, x7 : 0, x8 : 4, x9 : 0.5369623601436615, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002037


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153651 in range [0.000000, 0.307301]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076826 in range [0.000000, 0.153652]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036886 in range [0.000000, 0.073771]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018443 in range [0.000000, 0.036887]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008401 in range [0.000000, 0.016803]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003782 in range [0.000000, 0.007565]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000451 in range [0.000000, 0.000903]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000211 in range [0.000000, 0.000422]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000096 in range [0.000000, 0.000193]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6900640428066254, x5 : -0.4253752529621124, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5881181359291077, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000192


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101074 in range [0.000000, 0.202147]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049880 in range [0.000000, 0.099760]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024941 in range [0.000000, 0.049881]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012471 in range [0.000000, 0.024942]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006236 in range [0.000000, 0.012472]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003118 in range [0.000000, 0.006237]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001560 in range [0.000000, 0.003119]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000654 in range [0.000000, 0.001307]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000233 in range [0.000000, 0.000466]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000117 in range [0.000000, 0.000234]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000059 in range [0.000000, 0.000118]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.13402263969306924, x5 : -0.295641844938672, x6 : 0.0, x7 : 2.0, x8 : 3.0, x9 : -0.01777867646021995, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.1486005038022995, x5 : -0.3001154065132141, x6 : 0, x7 : 2, x8 : 3, x9 : -0.019988800161845253, x10 : -0.24511101859006937, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000117


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.145438 in range [0.000000, 0.290876]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072720 in range [0.000000, 0.145439]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036360 in range [0.000000, 0.072721]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017177 in range [0.000000, 0.034354]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008020 in range [0.000000, 0.016041]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002964 in range [0.000000, 0.005928]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001300 in range [0.000000, 0.002600]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000253 in range [0.000000, 0.000505]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.3866153825781964, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.4109853066931912, x10 : -0.19794935711874695, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.38913499312441663, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 6, x9 : 0.4182346523248929, x10 : -0.20899797976016998, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000127


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120006 in range [0.000000, 0.240011]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059799 in range [0.000000, 0.119598]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029463 in range [0.000000, 0.058926]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014732 in range [0.000000, 0.029464]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007366 in range [0.000000, 0.014733]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003135 in range [0.000000, 0.006270]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000679 in range [0.000000, 0.001358]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000303 in range [0.000000, 0.000605]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000118 in range [0.000000, 0.000235]...	no solution exists.
	Iteration #011: testing norm threshold 0.000176 in range [0.000118, 0.000235]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.43243152853806777, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5833749494043565, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.4286474952413013, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.5767445862293243, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000176


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170682 in range [0.000000, 0.341365]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084704 in range [0.000000, 0.169408]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040781 in range [0.000000, 0.081561]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020391 in range [0.000000, 0.040782]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010196 in range [0.000000, 0.020392]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003895 in range [0.000000, 0.007791]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001948 in range [0.000000, 0.003896]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000905 in range [0.000000, 0.001811]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000438 in range [0.000000, 0.000875]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000219 in range [0.000000, 0.000439]...	no solution exists.
	Iteration #012: testing norm threshold 0.000329 in range [0.000219, 0.000439]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000275 in range [0.000219, 0.000330]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6754861828551855, x5 : -0.215117664337276, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : 0.15560661054180067, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.6754861828551855, x5 : -0.15243181562766756, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 0.17118472629442488, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000275


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.178146 in range [0.000000, 0.356293]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089074 in range [0.000000, 0.178147]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044371 in range [0.000000, 0.088741]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021195 in range [0.000000, 0.042389]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009313 in range [0.000000, 0.018626]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004657 in range [0.000000, 0.009314]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001743 in range [0.000000, 0.003486]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000428 in range [0.000000, 0.000856]...	no solution exists.
	Iteration #010: testing norm threshold 0.000642 in range [0.000428, 0.000856]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000534 in range [0.000428, 0.000640]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000481 in range [0.000428, 0.000535]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 3.1022633067451184, x5 : -0.07196356549034981, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 3.416753436016074, x10 : 0.5091625782023483, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 3.181650342357532, x5 : -0.07643713057041168, x6 : 0, x7 : 0, x8 : 0, x9 : 3.414420925651645, x10 : 0.5103288333845627, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000481


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143151 in range [0.000000, 0.286302]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071509 in range [0.000000, 0.143018]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031567 in range [0.000000, 0.063135]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013726 in range [0.000000, 0.027451]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006839 in range [0.000000, 0.013677]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003420 in range [0.000000, 0.006840]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001328 in range [0.000000, 0.002656]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000664 in range [0.000000, 0.001329]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000333 in range [0.000000, 0.000665]...	no solution exists.
	Iteration #011: testing norm threshold 0.000499 in range [0.000333, 0.000665]...	no solution exists.
	Iteration #012: testing norm threshold 0.000582 in range [0.000499, 0.000665]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4963867031938701, x5 : -0.3493246320062693, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : -0.4244414233686099, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5734411180019379, x5 : -0.3493246320062693, x6 : 0, x7 : 2, x8 : 0, x9 : -0.4280894196122499, x10 : -0.18325273120720767, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000664


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169874 in range [0.000000, 0.339748]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084549 in range [0.000000, 0.169098]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038426 in range [0.000000, 0.076853]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019214 in range [0.000000, 0.038427]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008337 in range [0.000000, 0.016674]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003338 in range [0.000000, 0.006676]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001415 in range [0.000000, 0.002829]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000594 in range [0.000000, 0.001187]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000297 in range [0.000000, 0.000595]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000148 in range [0.000000, 0.000297]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.525542432441061, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4951653793526778, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.5238284233025008, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4985933976297982, x10 : -0.2897663673110043, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000075


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090163 in range [0.000000, 0.180326]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041090 in range [0.000000, 0.082180]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019838 in range [0.000000, 0.039676]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009919 in range [0.000000, 0.019839]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004783 in range [0.000000, 0.009566]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001298 in range [0.000000, 0.002597]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000587 in range [0.000000, 0.001174]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000294 in range [0.000000, 0.000588]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000148 in range [0.000000, 0.000295]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.2866947137607391, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7098482970730735, x5 : -0.30906254053115845, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.36087500290549085, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000148


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196862 in range [0.000000, 0.393724]...	solution exists & found.
	Iteration #003: testing norm threshold 0.095497 in range [0.000000, 0.190993]...	solution exists & found.
	Iteration #004: testing norm threshold 0.047745 in range [0.000000, 0.095490]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023382 in range [0.000000, 0.046765]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011276 in range [0.000000, 0.022553]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005573 in range [0.000000, 0.011147]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001397 in range [0.000000, 0.002794]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000631 in range [0.000000, 0.001262]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000316 in range [0.000000, 0.000632]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000158 in range [0.000000, 0.000317]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000080 in range [0.000000, 0.000159]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.6921465995678661, x5 : -0.2509061890490075, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.68523601105986, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7108895480632782, x5 : -0.2552824966815174, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.3537649162514505, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000158


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154122 in range [0.000000, 0.308244]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077062 in range [0.000000, 0.154123]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038531 in range [0.000000, 0.077063]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019266 in range [0.000000, 0.038532]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009634 in range [0.000000, 0.019267]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004817 in range [0.000000, 0.009635]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002103 in range [0.000000, 0.004205]...	no solution exists.
	Iteration #009: testing norm threshold 0.003154 in range [0.002103, 0.004205]...	no solution exists.
	Iteration #010: testing norm threshold 0.003680 in range [0.003154, 0.004205]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003417 in range [0.003154, 0.003681]...	no solution exists.
	Iteration #012: testing norm threshold 0.003549 in range [0.003417, 0.003681]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003480 in range [0.003417, 0.003543]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.15484816058391987, x5 : 0.6617011911001469, x6 : 0.0, x7 : 1.0, x8 : 2.0, x9 : -0.11060386868930897, x10 : 2.3211369124626557, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.5213773250579834, x5 : 0.6628556377104823, x6 : 0, x7 : 1, x8 : 2, x9 : -0.3669781982898712, x10 : 2.3324910252896918, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003542


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.196668 in range [0.000000, 0.393336]...	solution exists & found.
	Iteration #003: testing norm threshold 0.098262 in range [0.000000, 0.196523]...	solution exists & found.
	Iteration #004: testing norm threshold 0.049131 in range [0.000000, 0.098263]...	solution exists & found.
	Iteration #005: testing norm threshold 0.024566 in range [0.000000, 0.049132]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012284 in range [0.000000, 0.024567]...	solution exists & found.
	Iteration #007: testing norm threshold 0.006142 in range [0.000000, 0.012285]...	solution exists & found.
	Iteration #008: testing norm threshold 0.003072 in range [0.000000, 0.006143]...	no solution exists.
	Iteration #009: testing norm threshold 0.004607 in range [0.003072, 0.006143]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003840 in range [0.003072, 0.004608]...	solution exists & found.
	Iteration #011: testing norm threshold 0.003456 in range [0.003072, 0.003841]...	no solution exists.
	Iteration #012: testing norm threshold 0.003649 in range [0.003456, 0.003841]...	no solution exists.
	Iteration #013: testing norm threshold 0.003745 in range [0.003649, 0.003841]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : 2.5941205970083634, x5 : 1.288000373555449, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.1746639590458825, x10 : 3.8679442709775516, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 2, x4 : 2.602653167752794, x5 : -0.174855574965477, x6 : 0, x7 : 0, x8 : 0, x9 : 2.1682138800534645, x10 : 3.8614941919851336, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003840


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186842 in range [0.000000, 0.373685]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093278 in range [0.000000, 0.186556]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042536 in range [0.000000, 0.085073]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020329 in range [0.000000, 0.040658]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010165 in range [0.000000, 0.020330]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002557 in range [0.000000, 0.005115]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000914 in range [0.000000, 0.001828]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000458 in range [0.000000, 0.000915]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000229 in range [0.000000, 0.000459]...	no solution exists.
	Iteration #011: testing norm threshold 0.000344 in range [0.000229, 0.000459]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000287 in range [0.000229, 0.000345]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.4880564948375299, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4774843903566608, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.4880564948375299, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : -0.480219393028034, x10 : -0.17858711181133596, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000287


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.172909 in range [0.000000, 0.345817]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086455 in range [0.000000, 0.172910]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043228 in range [0.000000, 0.086456]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021270 in range [0.000000, 0.042540]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010512 in range [0.000000, 0.021023]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005186 in range [0.000000, 0.010372]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002018 in range [0.000000, 0.004037]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001010 in range [0.000000, 0.002019]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000505 in range [0.000000, 0.001011]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000253 in range [0.000000, 0.000506]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000127 in range [0.000000, 0.000254]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000064 in range [0.000000, 0.000128]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.4214148279868079, x5 : 0.2948688128048986, x6 : 1.0, x7 : 1.0, x8 : 5.0, x9 : -0.464223648609648, x10 : -0.3747273409490208, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.42146458343648235, x5 : 0.2948190573552241, x6 : 1, x7 : 1, x8 : 5, x9 : -0.4597536469741842, x10 : -0.36362895322284905, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131213 in range [0.000000, 0.262426]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065607 in range [0.000000, 0.131214]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032299 in range [0.000000, 0.064598]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015531 in range [0.000000, 0.031063]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006614 in range [0.000000, 0.013229]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003277 in range [0.000000, 0.006553]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001417 in range [0.000000, 0.002834]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000443 in range [0.000000, 0.000886]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000222 in range [0.000000, 0.000444]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000104 in range [0.000000, 0.000209]...	no solution exists.
	Iteration #012: testing norm threshold 0.000156 in range [0.000104, 0.000209]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7213023288150568, x5 : -0.3493246320062693, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7213023296544919, x5 : -0.28222113763789036, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6344031691551208, x10 : -0.3305328458308875, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000208


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.176620 in range [0.000000, 0.353240]...	solution exists & found.
	Iteration #003: testing norm threshold 0.088310 in range [0.000000, 0.176621]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042154 in range [0.000000, 0.084309]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020818 in range [0.000000, 0.041636]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010410 in range [0.000000, 0.020819]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005032 in range [0.000000, 0.010064]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001820 in range [0.000000, 0.003640]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000247 in range [0.000000, 0.000494]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000121 in range [0.000000, 0.000242]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.7129721204587166, x5 : -0.295641844938672, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.7129721204587166, x5 : -0.27907557958006485, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6931410598123037, x10 : -0.3605331497752629, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000121


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121134 in range [0.000000, 0.242268]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060560 in range [0.000000, 0.121119]...	solution exists & found.
	Iteration #004: testing norm threshold 0.029819 in range [0.000000, 0.059638]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014910 in range [0.000000, 0.029820]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007455 in range [0.000000, 0.014911]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001877 in range [0.000000, 0.003753]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000939 in range [0.000000, 0.001878]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000470 in range [0.000000, 0.000940]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000235 in range [0.000000, 0.000471]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000118 in range [0.000000, 0.000236]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000060 in range [0.000000, 0.000119]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.558863265866422, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4730641431076565, x10 : -0.19794935711874695, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5605921908719004, x5 : -0.3716924488544464, x6 : 0, x7 : 6, x8 : 0, x9 : -0.4747930681131348, x10 : -0.19967828212422528, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.165530 in range [0.000000, 0.331061]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081143 in range [0.000000, 0.162287]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035640 in range [0.000000, 0.071280]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017633 in range [0.000000, 0.035267]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008799 in range [0.000000, 0.017597]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004145 in range [0.000000, 0.008289]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001965 in range [0.000000, 0.003930]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000983 in range [0.000000, 0.001966]...	no solution exists.
	Iteration #010: testing norm threshold 0.001475 in range [0.000983, 0.001966]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001229 in range [0.000983, 0.001476]...	no solution exists.
	Iteration #012: testing norm threshold 0.001352 in range [0.001229, 0.001476]...	no solution exists.
	Iteration #013: testing norm threshold 0.001414 in range [0.001352, 0.001476]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : 3.068942473319757, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 3.38139145802404, x10 : 0.31028734639329025, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : 3.067784451438358, x5 : -0.13906705379486084, x6 : 0, x7 : 0, x8 : 0, x9 : 3.3802334361426407, x10 : 0.3224939932368374, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001414


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.082930 in range [0.000000, 0.165860]...	solution exists & found.
	Iteration #003: testing norm threshold 0.041466 in range [0.000000, 0.082931]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020645 in range [0.000000, 0.041289]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010323 in range [0.000000, 0.020646]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004973 in range [0.000000, 0.009947]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002487 in range [0.000000, 0.004974]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000568 in range [0.000000, 0.001136]...	no solution exists.
	Iteration #009: testing norm threshold 0.000852 in range [0.000568, 0.001136]...	no solution exists.
	Iteration #010: testing norm threshold 0.000994 in range [0.000852, 0.001136]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000923 in range [0.000852, 0.000995]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 2.9731450772218437, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 3.2797257712969423, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 2.971555770077327, x5 : -0.26432688534259796, x6 : 0, x7 : 0, x8 : 0, x9 : 3.2781364641524258, x10 : 0.9716154786123007, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000994


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112149 in range [0.000000, 0.224297]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054572 in range [0.000000, 0.109144]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026480 in range [0.000000, 0.052959]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013240 in range [0.000000, 0.026481]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006411 in range [0.000000, 0.012821]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002891 in range [0.000000, 0.005783]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001406 in range [0.000000, 0.002813]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000704 in range [0.000000, 0.001407]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000342 in range [0.000000, 0.000685]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000172 in range [0.000000, 0.000343]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000085 in range [0.000000, 0.000171]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.08820649373319786, x5 : -0.3314303696504035, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 0.030844043278826675, x10 : -0.19794935711874695, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.08908095065710879, x5 : -0.3448510766029358, x6 : 0, x7 : 2, x8 : 0, x9 : 0.02996958635491575, x10 : -0.1860262705269367, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.092337 in range [0.000000, 0.184673]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046169 in range [0.000000, 0.092338]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022958 in range [0.000000, 0.045916]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011264 in range [0.000000, 0.022528]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005284 in range [0.000000, 0.010569]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002404 in range [0.000000, 0.004808]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001013 in range [0.000000, 0.002027]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000495 in range [0.000000, 0.000991]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000248 in range [0.000000, 0.000496]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000125 in range [0.000000, 0.000249]...	no solution exists.
	Iteration #012: testing norm threshold 0.000187 in range [0.000125, 0.000249]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.5005518073720403, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4421224123646269, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.5234598815441132, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : -0.44345338884761926, x10 : -0.28423492713658177, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000248


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101041 in range [0.000000, 0.202081]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049464 in range [0.000000, 0.098928]...	solution exists & found.
	Iteration #004: testing norm threshold 0.022975 in range [0.000000, 0.045950]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008606 in range [0.000000, 0.017211]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004011 in range [0.000000, 0.008022]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001761 in range [0.000000, 0.003522]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000881 in range [0.000000, 0.001762]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000441 in range [0.000000, 0.000882]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000221 in range [0.000000, 0.000442]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000072 in range [0.000000, 0.000144]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.6088445160044635, x5 : -0.07196356549034981, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.6062501964432485, x5 : -0.08538426086306572, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6476639211177826, x10 : -0.13165761318239427, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186317 in range [0.000000, 0.372634]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093159 in range [0.000000, 0.186318]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044095 in range [0.000000, 0.088190]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021173 in range [0.000000, 0.042346]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010353 in range [0.000000, 0.020705]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004581 in range [0.000000, 0.009162]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002151 in range [0.000000, 0.004301]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000916 in range [0.000000, 0.001832]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000245 in range [0.000000, 0.000489]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	no solution exists.
	Iteration #012: testing norm threshold 0.000184 in range [0.000123, 0.000246]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7213023288150568, x5 : -0.376166025540068, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7374551766537628, x5 : -0.3670162370579823, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6651422342436893, x10 : -0.20879532007151685, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000245


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169409 in range [0.000000, 0.338818]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084705 in range [0.000000, 0.169410]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040961 in range [0.000000, 0.081922]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020351 in range [0.000000, 0.040702]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010150 in range [0.000000, 0.020301]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005076 in range [0.000000, 0.010151]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002521 in range [0.000000, 0.005043]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001137 in range [0.000000, 0.002273]...	no solution exists.
	Iteration #010: testing norm threshold 0.001705 in range [0.001137, 0.002273]...	no solution exists.
	Iteration #011: testing norm threshold 0.001989 in range [0.001705, 0.002273]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001848 in range [0.001705, 0.001990]...	no solution exists.
	Iteration #013: testing norm threshold 0.001919 in range [0.001848, 0.001990]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.6365216332684039, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 0.7999670646055642, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.3699549734592438, x5 : -0.35013256440611723, x6 : 0, x7 : 0, x8 : 1, x9 : 0.7963014183908014, x10 : -0.18323508123608476, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001989


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146016 in range [0.000000, 0.292032]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072095 in range [0.000000, 0.144189]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032875 in range [0.000000, 0.065749]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016438 in range [0.000000, 0.032876]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007882 in range [0.000000, 0.015765]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003479 in range [0.000000, 0.006959]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001681 in range [0.000000, 0.003361]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000707 in range [0.000000, 0.001413]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000354 in range [0.000000, 0.000708]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000177 in range [0.000000, 0.000355]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000089 in range [0.000000, 0.000178]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.3131221193543846, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.21226955541640646, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.3147521917328192, x5 : -0.2716439320809465, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2138996277948411, x10 : -0.20736790738173536, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.116510 in range [0.000000, 0.233019]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058244 in range [0.000000, 0.116487]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026370 in range [0.000000, 0.052741]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013099 in range [0.000000, 0.026198]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006466 in range [0.000000, 0.012933]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003234 in range [0.000000, 0.006467]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001617 in range [0.000000, 0.003235]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000735 in range [0.000000, 0.001470]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000355 in range [0.000000, 0.000710]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000178 in range [0.000000, 0.000356]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000089 in range [0.000000, 0.000178]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 2.3275539296054752, x5 : -0.09880495902414847, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.594587447701285, x10 : 0.376579090329643, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 2.353572119374628, x5 : -0.09983253227145725, x6 : 0, x7 : 0, x8 : 6, x9 : 2.5905410904614388, x10 : 0.3755515170823342, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.087522 in range [0.000000, 0.175044]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043762 in range [0.000000, 0.087523]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021241 in range [0.000000, 0.042482]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009349 in range [0.000000, 0.018698]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001672 in range [0.000000, 0.003344]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000717 in range [0.000000, 0.001434]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000359 in range [0.000000, 0.000718]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000180 in range [0.000000, 0.000360]...	no solution exists.
	Iteration #010: testing norm threshold 0.000270 in range [0.000180, 0.000360]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.2548106608600029, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.2299505444124234, x10 : -0.13165761318239427, x11 : 1.0, x12 : 9.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : -0.254950648448195, x5 : -0.2957818325268641, x6 : 0, x7 : 0, x8 : 6, x9 : -0.22988055061832738, x10 : -0.20899797976016998, x11 : 1, x12 : 9, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000270


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.059410 in range [0.000000, 0.118820]...	solution exists & found.
	Iteration #003: testing norm threshold 0.028064 in range [0.000000, 0.056129]...	solution exists & found.
	Iteration #004: testing norm threshold 0.012113 in range [0.000000, 0.024226]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006057 in range [0.000000, 0.012114]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002940 in range [0.000000, 0.005880]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000304 in range [0.000000, 0.000608]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000153 in range [0.000000, 0.000305]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000077 in range [0.000000, 0.000154]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.7421278497059075, x5 : -0.3314303696504035, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : -0.7442103922367096, x5 : -0.3448510766029358, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6702537276004387, x10 : -0.24214385307631545, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000153


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142958 in range [0.000000, 0.285917]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070189 in range [0.000000, 0.140378]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034082 in range [0.000000, 0.068164]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014384 in range [0.000000, 0.028769]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007193 in range [0.000000, 0.014385]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003368 in range [0.000000, 0.006737]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001685 in range [0.000000, 0.003369]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000588 in range [0.000000, 0.001175]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000294 in range [0.000000, 0.000589]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000148 in range [0.000000, 0.000295]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6145120550757922, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : -0.697477417662309, x5 : -0.40417313299013946, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6255626678466797, x10 : -0.30960131092894094, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.113108 in range [0.000000, 0.226217]...	solution exists & found.
	Iteration #003: testing norm threshold 0.053741 in range [0.000000, 0.107481]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026776 in range [0.000000, 0.053553]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013389 in range [0.000000, 0.026777]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006653 in range [0.000000, 0.013306]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003115 in range [0.000000, 0.006230]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001428 in range [0.000000, 0.002855]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000713 in range [0.000000, 0.001426]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000302 in range [0.000000, 0.000603]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000151 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.19794935711874695, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7444280608063755, x5 : -0.40748098492622375, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6654349859153068, x10 : -0.19794935711874695, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000151


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.142064 in range [0.000000, 0.284128]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068682 in range [0.000000, 0.137365]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034342 in range [0.000000, 0.068683]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014580 in range [0.000000, 0.029160]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007290 in range [0.000000, 0.014581]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002260 in range [0.000000, 0.004520]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001119 in range [0.000000, 0.002237]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.7629533705967582, x5 : -0.4030074190738666, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3084355970126681, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.7711293405117029, x5 : -0.4052442020000452, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : -0.31067237993884667, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.126794 in range [0.000000, 0.253588]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063397 in range [0.000000, 0.126795]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031699 in range [0.000000, 0.063398]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015702 in range [0.000000, 0.031404]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007208 in range [0.000000, 0.014415]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002372 in range [0.000000, 0.004744]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001187 in range [0.000000, 0.002373]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000108 in range [0.000000, 0.000215]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000054 in range [0.000000, 0.000109]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : -0.7337976413495673, x5 : -0.3403775008283364, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.7348222005637107, x5 : -0.31698511533495927, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6908418088412002, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000108


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.085752 in range [0.000000, 0.171505]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038755 in range [0.000000, 0.077510]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019378 in range [0.000000, 0.038756]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009690 in range [0.000000, 0.019379]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003568 in range [0.000000, 0.007137]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001785 in range [0.000000, 0.003569]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000893 in range [0.000000, 0.001786]...	no solution exists.
	Iteration #009: testing norm threshold 0.001339 in range [0.000893, 0.001786]...	no solution exists.
	Iteration #010: testing norm threshold 0.001562 in range [0.001339, 0.001786]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001451 in range [0.001339, 0.001563]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.2964617026417041, x5 : -0.2240647955152089, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.19016831917138527, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.18161287158727646, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.20121894031763077, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001430


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.159288 in range [0.000000, 0.318576]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079644 in range [0.000000, 0.159289]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039050 in range [0.000000, 0.078100]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019526 in range [0.000000, 0.039051]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007145 in range [0.000000, 0.014289]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003110 in range [0.000000, 0.006220]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001485 in range [0.000000, 0.002971]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000589 in range [0.000000, 0.001178]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000242 in range [0.000000, 0.000484]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000170]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7714964997436689, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.3636787086725235, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.093164 in range [0.000000, 0.186328]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042199 in range [0.000000, 0.084397]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021100 in range [0.000000, 0.042200]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009747 in range [0.000000, 0.019494]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004444 in range [0.000000, 0.008888]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002208 in range [0.000000, 0.004416]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001070 in range [0.000000, 0.002140]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000536 in range [0.000000, 0.001071]...	no solution exists.
	Iteration #010: testing norm threshold 0.000803 in range [0.000536, 0.001071]...	no solution exists.
	Iteration #011: testing norm threshold 0.000937 in range [0.000803, 0.001071]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000871 in range [0.000803, 0.000938]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.5338726407974013, x5 : 0.08908479571244217, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.0653658692460416, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.536133513479204, x5 : 0.08682392303063939, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6940257460277615, x10 : -0.22004660218954086, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000871


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.167879 in range [0.000000, 0.335758]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083838 in range [0.000000, 0.167677]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039071 in range [0.000000, 0.078141]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019393 in range [0.000000, 0.038786]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007805 in range [0.000000, 0.015610]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003903 in range [0.000000, 0.007806]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001952 in range [0.000000, 0.003904]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000976 in range [0.000000, 0.001953]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000489 in range [0.000000, 0.000977]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	no solution exists.
	Iteration #012: testing norm threshold 0.000367 in range [0.000245, 0.000490]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000307 in range [0.000245, 0.000368]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.25064555668183275, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.25647202790644885, x10 : -0.021171373288473145, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.25396125648410245, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 0, x9 : -0.2631023973226547, x10 : -0.024487073090742828, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000307


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.186501 in range [0.000000, 0.373002]...	solution exists & found.
	Iteration #003: testing norm threshold 0.093242 in range [0.000000, 0.186484]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043712 in range [0.000000, 0.087425]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021154 in range [0.000000, 0.042308]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010578 in range [0.000000, 0.021155]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003508 in range [0.000000, 0.007017]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001070 in range [0.000000, 0.002141]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000536 in range [0.000000, 0.001071]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000268 in range [0.000000, 0.000537]...	no solution exists.
	Iteration #011: testing norm threshold 0.000403 in range [0.000268, 0.000537]...	no solution exists.
	Iteration #012: testing norm threshold 0.000470 in range [0.000403, 0.000537]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.16586486113517976, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.18555269699397506, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.16211158447272492, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.18179942033152022, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000536


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157708 in range [0.000000, 0.315417]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078855 in range [0.000000, 0.157709]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038994 in range [0.000000, 0.077987]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019497 in range [0.000000, 0.038995]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008941 in range [0.000000, 0.017883]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004471 in range [0.000000, 0.008942]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002236 in range [0.000000, 0.004472]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001093 in range [0.000000, 0.002186]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000547 in range [0.000000, 0.001094]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000182 in range [0.000000, 0.000365]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000092 in range [0.000000, 0.000183]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.1367091318879889, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.2253349222350132, x10 : -0.04326862126725737, x11 : 1.0, x12 : 5.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.13127859431293337, x5 : -0.3001154065132141, x6 : 0, x7 : 0, x8 : 3, x9 : 0.21990438465995768, x10 : -0.04888670582218035, x11 : 1, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000092


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153283 in range [0.000000, 0.306567]...	solution exists & found.
	Iteration #003: testing norm threshold 0.075205 in range [0.000000, 0.150409]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037142 in range [0.000000, 0.074285]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018306 in range [0.000000, 0.036612]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008345 in range [0.000000, 0.016690]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003350 in range [0.000000, 0.006700]...	no solution exists.
	Iteration #008: testing norm threshold 0.005025 in range [0.003350, 0.006700]...	solution exists & found.
	Iteration #009: testing norm threshold 0.003799 in range [0.003350, 0.004249]...	no solution exists.
	Iteration #010: testing norm threshold 0.004024 in range [0.003799, 0.004249]...	no solution exists.
	Iteration #011: testing norm threshold 0.004137 in range [0.004024, 0.004249]...	no solution exists.
	Iteration #012: testing norm threshold 0.004193 in range [0.004137, 0.004249]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.0613622594417569, x5 : 2.299026196661865, x6 : 1.0, x7 : 3.0, x8 : 0.0, x9 : 1.2508322840039965, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 1.0596615750228484, x5 : 0.9793243706226349, x6 : 1, x7 : 3, x8 : 0, x9 : 1.249131599585088, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138183 in range [0.000000, 0.276366]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068867 in range [0.000000, 0.137733]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033385 in range [0.000000, 0.066770]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016485 in range [0.000000, 0.032970]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008036 in range [0.000000, 0.016072]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003710 in range [0.000000, 0.007419]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001498 in range [0.000000, 0.002996]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000611 in range [0.000000, 0.001223]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000282 in range [0.000000, 0.000564]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000141 in range [0.000000, 0.000283]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7129721204587166, x5 : -0.19722340198141025, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6321930440718091, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7192197740077972, x5 : -0.21064409613609314, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6372227004238291, x10 : -0.1853000080653353, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000141


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143469 in range [0.000000, 0.286938]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068251 in range [0.000000, 0.136502]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034126 in range [0.000000, 0.068252]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015955 in range [0.000000, 0.031910]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007914 in range [0.000000, 0.015829]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002431 in range [0.000000, 0.004863]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001216 in range [0.000000, 0.002432]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000609 in range [0.000000, 0.001217]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000299 in range [0.000000, 0.000597]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000075 in range [0.000000, 0.000151]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.4797262864811897, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4332819178666184, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.47966139276068104, x5 : -0.3178798871080855, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4334117053076357, x10 : -0.2863383490338839, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000150


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.079236 in range [0.000000, 0.158473]...	solution exists & found.
	Iteration #003: testing norm threshold 0.039619 in range [0.000000, 0.079237]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018515 in range [0.000000, 0.037031]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009258 in range [0.000000, 0.018516]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004630 in range [0.000000, 0.009259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002315 in range [0.000000, 0.004631]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001158 in range [0.000000, 0.002316]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000458 in range [0.000000, 0.000917]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000230 in range [0.000000, 0.000459]...	no solution exists.
	Iteration #011: testing norm threshold 0.000345 in range [0.000230, 0.000459]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000288 in range [0.000230, 0.000346]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 4, x3 : 2, x4 : -0.7754486831312685, x5 : -0.3060635731818079, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6932876513602136, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000345


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.134569 in range [0.000000, 0.269139]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067285 in range [0.000000, 0.134570]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033643 in range [0.000000, 0.067286]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016816 in range [0.000000, 0.033632]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008142 in range [0.000000, 0.016284]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004027 in range [0.000000, 0.008053]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001987 in range [0.000000, 0.003975]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000994 in range [0.000000, 0.001988]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000498 in range [0.000000, 0.000995]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000249 in range [0.000000, 0.000499]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000125 in range [0.000000, 0.000250]...	no solution exists.
	Iteration #013: testing norm threshold 0.000188 in range [0.000125, 0.000250]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.2612872599939229, x5 : -0.2240647955152089, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 1.4630041519562, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.2585723629145646, x5 : -0.19898206503879057, x6 : 0, x7 : 0, x8 : 4, x9 : 1.4320623874664307, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000249


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103505 in range [0.000000, 0.207011]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050777 in range [0.000000, 0.101554]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025389 in range [0.000000, 0.050778]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012695 in range [0.000000, 0.025390]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006348 in range [0.000000, 0.012696]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002895 in range [0.000000, 0.005790]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001448 in range [0.000000, 0.002896]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000418 in range [0.000000, 0.000836]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000210 in range [0.000000, 0.000419]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000105 in range [0.000000, 0.000211]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000053 in range [0.000000, 0.000106]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : -0.3747273409490208, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7392018955706985, x5 : -0.3976904672145278, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6619457240480852, x10 : -0.37472734094902077, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000105


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123625 in range [0.000000, 0.247250]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061624 in range [0.000000, 0.123249]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030813 in range [0.000000, 0.061625]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015213 in range [0.000000, 0.030426]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007313 in range [0.000000, 0.014625]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002351 in range [0.000000, 0.004701]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001176 in range [0.000000, 0.002352]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000354 in range [0.000000, 0.000707]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000177 in range [0.000000, 0.000355]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000089 in range [0.000000, 0.000178]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 1.9277039285011428, x5 : -0.17038200844761156, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 2.072998272318785, x10 : 0.26609285043572184, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 1.9245983205427788, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 4, x9 : 2.080524173708486, x10 : 0.25504422187805176, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000177


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088141 in range [0.000000, 0.176281]...	solution exists & found.
	Iteration #003: testing norm threshold 0.042960 in range [0.000000, 0.085921]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021235 in range [0.000000, 0.042470]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010564 in range [0.000000, 0.021128]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003669 in range [0.000000, 0.007337]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001803 in range [0.000000, 0.003607]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000902 in range [0.000000, 0.001804]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000452 in range [0.000000, 0.000903]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000226 in range [0.000000, 0.000453]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000114 in range [0.000000, 0.000227]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000115]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.125692431336729, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.008938181962211472, x10 : -0.3747273409490208, x11 : 2.0, x12 : 5.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.12620708109135553, x5 : -0.38063958287239075, x6 : 0, x7 : 0, x8 : 2, x9 : -0.009452831716837995, x10 : -0.363164058917897, x11 : 2, x12 : 5, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150377 in range [0.000000, 0.300753]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074996 in range [0.000000, 0.149991]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036022 in range [0.000000, 0.072043]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017850 in range [0.000000, 0.035700]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008614 in range [0.000000, 0.017229]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004308 in range [0.000000, 0.008615]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002154 in range [0.000000, 0.004309]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000985 in range [0.000000, 0.001969]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000493 in range [0.000000, 0.000986]...	no solution exists.
	Iteration #011: testing norm threshold 0.000739 in range [0.000493, 0.000986]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000617 in range [0.000493, 0.000740]...	no solution exists.
	Iteration #013: testing norm threshold 0.000678 in range [0.000617, 0.000740]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 1.0030508009473749, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 1.127065361031878, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.998705517776247, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 1.125587065472961, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000678


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146879 in range [0.000000, 0.293759]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073440 in range [0.000000, 0.146880]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036718 in range [0.000000, 0.073437]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016974 in range [0.000000, 0.033948]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008346 in range [0.000000, 0.016691]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003470 in range [0.000000, 0.006940]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001173 in range [0.000000, 0.002346]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000581 in range [0.000000, 0.001161]...	no solution exists.
	Iteration #010: testing norm threshold 0.000871 in range [0.000581, 0.001161]...	no solution exists.
	Iteration #011: testing norm threshold 0.001016 in range [0.000871, 0.001161]...	no solution exists.
	Iteration #012: testing norm threshold 0.001089 in range [0.001016, 0.001161]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 3.4979482036712795, x5 : 0.3932872557621603, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 3.836676924671477, x10 : 0.5754543221387011, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 3.498113716941416, x5 : -0.04064860753715038, x6 : 0, x7 : 0, x8 : 2, x9 : 3.8351506364353987, x10 : 0.58802922769874, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001160


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100212 in range [0.000000, 0.200425]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050019 in range [0.000000, 0.100038]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025010 in range [0.000000, 0.050020]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012446 in range [0.000000, 0.024892]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006087 in range [0.000000, 0.012173]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002985 in range [0.000000, 0.005970]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001493 in range [0.000000, 0.002986]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000747 in range [0.000000, 0.001494]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000285 in range [0.000000, 0.000571]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000126 in range [0.000000, 0.000251]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000063 in range [0.000000, 0.000127]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.6448518416247442, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.7867063228585515, x10 : 0.02302312266909531, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.641762417038235, x5 : -0.1533942073241356, x6 : 0, x7 : 0, x8 : 3, x9 : 0.7857998616261617, x10 : 0.01197449880419299, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000063


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.123952 in range [0.000000, 0.247905]...	solution exists & found.
	Iteration #003: testing norm threshold 0.061751 in range [0.000000, 0.123501]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030876 in range [0.000000, 0.061752]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015438 in range [0.000000, 0.030877]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007674 in range [0.000000, 0.015348]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003837 in range [0.000000, 0.007675]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001919 in range [0.000000, 0.003838]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000247 in range [0.000000, 0.000493]...	no solution exists.
	Iteration #010: testing norm threshold 0.000370 in range [0.000247, 0.000493]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000309 in range [0.000247, 0.000371]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.7815502850260185, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 3.0763943978427477, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 2.7796380656460506, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 0, x9 : 3.0773505075327314, x10 : -0.37472734094902077, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000370


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184898 in range [0.000000, 0.369796]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089314 in range [0.000000, 0.178629]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043192 in range [0.000000, 0.086383]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020868 in range [0.000000, 0.041736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009993 in range [0.000000, 0.019986]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004632 in range [0.000000, 0.009264]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002257 in range [0.000000, 0.004514]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001129 in range [0.000000, 0.002258]...	no solution exists.
	Iteration #010: testing norm threshold 0.001694 in range [0.001129, 0.002258]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001412 in range [0.001129, 0.001695]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001271 in range [0.001129, 0.001413]...	no solution exists.
	Iteration #013: testing norm threshold 0.001342 in range [0.001271, 0.001413]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.6319815318510638, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.8564061571175772, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.632950024855083, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 1, x9 : 1.6353937983512878, x10 : -0.14076925172532576, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001412


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.175558 in range [0.000000, 0.351117]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083997 in range [0.000000, 0.167994]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040501 in range [0.000000, 0.081002]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020251 in range [0.000000, 0.040502]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008541 in range [0.000000, 0.017082]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003487 in range [0.000000, 0.006975]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001641 in range [0.000000, 0.003282]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000488 in range [0.000000, 0.000976]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000244 in range [0.000000, 0.000489]...	no solution exists.
	Iteration #011: testing norm threshold 0.000367 in range [0.000244, 0.000489]...	no solution exists.
	Iteration #012: testing norm threshold 0.000428 in range [0.000367, 0.000489]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7213023288150568, x5 : -0.3135361072945377, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7358801960945129, x5 : -0.21628464011406412, x6 : 1, x7 : 6, x8 : 0, x9 : -0.660924643278122, x10 : -0.09076970726479919, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000428


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160021 in range [0.000000, 0.320041]...	solution exists & found.
	Iteration #003: testing norm threshold 0.079187 in range [0.000000, 0.158373]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039594 in range [0.000000, 0.079188]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019725 in range [0.000000, 0.039450]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007780 in range [0.000000, 0.015560]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003525 in range [0.000000, 0.007051]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001691 in range [0.000000, 0.003381]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000320 in range [0.000000, 0.000640]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000147 in range [0.000000, 0.000294]...	no solution exists.
	Iteration #011: testing norm threshold 0.000220 in range [0.000147, 0.000294]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6005143076481233, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6366132913208133, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.5942666530609131, x5 : -0.3716924488544464, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6520841419696808, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000293


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138992 in range [0.000000, 0.277985]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068772 in range [0.000000, 0.137545]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034387 in range [0.000000, 0.068773]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017194 in range [0.000000, 0.034388]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008597 in range [0.000000, 0.017195]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004299 in range [0.000000, 0.008598]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001867 in range [0.000000, 0.003735]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000834 in range [0.000000, 0.001668]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000417 in range [0.000000, 0.000835]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000209 in range [0.000000, 0.000418]...	no solution exists.
	Iteration #012: testing norm threshold 0.000314 in range [0.000209, 0.000418]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.6656773625155948, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.8264885480995896, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 0.6656773625155948, x5 : -0.21064409613609314, x6 : 0, x7 : 0, x8 : 6, x9 : 0.8187531200943352, x10 : -0.010122748848516494, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000306


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154083 in range [0.000000, 0.308165]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073452 in range [0.000000, 0.146903]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032940 in range [0.000000, 0.065880]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013479 in range [0.000000, 0.026958]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006707 in range [0.000000, 0.013413]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003347 in range [0.000000, 0.006693]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001599 in range [0.000000, 0.003198]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000475 in range [0.000000, 0.000951]...	no solution exists.
	Iteration #010: testing norm threshold 0.000713 in range [0.000475, 0.000951]...	no solution exists.
	Iteration #011: testing norm threshold 0.000832 in range [0.000713, 0.000951]...	no solution exists.
	Iteration #012: testing norm threshold 0.000891 in range [0.000832, 0.000951]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.5088820157283805, x5 : 0.14276758278003948, x6 : 3.0, x7 : 4.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.10956036520361004, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.49634506740385775, x5 : 0.142725928453665, x6 : 3, x7 : 4, x8 : 0, x9 : -0.6962449643831897, x10 : -0.3420916761567623, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000891


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.180461 in range [0.000000, 0.360921]...	solution exists & found.
	Iteration #003: testing norm threshold 0.087682 in range [0.000000, 0.175365]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041337 in range [0.000000, 0.082673]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020669 in range [0.000000, 0.041338]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008691 in range [0.000000, 0.017381]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003149 in range [0.000000, 0.006299]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001575 in range [0.000000, 0.003150]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000788 in range [0.000000, 0.001576]...	no solution exists.
	Iteration #010: testing norm threshold 0.001182 in range [0.000788, 0.001576]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000986 in range [0.000788, 0.001183]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000879 in range [0.000788, 0.000970]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.6281914249120637, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.7911265701075557, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.6271674198510192, x5 : -0.076609324131816, x6 : 0, x7 : 0, x8 : 0, x9 : 0.7911438370580542, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000879


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129990 in range [0.000000, 0.259980]...	solution exists & found.
	Iteration #003: testing norm threshold 0.064862 in range [0.000000, 0.129723]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032375 in range [0.000000, 0.064750]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015721 in range [0.000000, 0.031442]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007861 in range [0.000000, 0.015722]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003859 in range [0.000000, 0.007719]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001930 in range [0.000000, 0.003860]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000823 in range [0.000000, 0.001646]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000412 in range [0.000000, 0.000824]...	no solution exists.
	Iteration #011: testing norm threshold 0.000618 in range [0.000412, 0.000824]...	no solution exists.
	Iteration #012: testing norm threshold 0.000721 in range [0.000618, 0.000824]...	no solution exists.
	Iteration #013: testing norm threshold 0.000773 in range [0.000721, 0.000824]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.25064555668183275, x5 : -0.3493246320062693, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.14154559943233866, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.25267113456606577, x5 : -0.40748098492622375, x6 : 0, x7 : 5, x8 : 0, x9 : -0.14357117731657168, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000823


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154067 in range [0.000000, 0.308133]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073419 in range [0.000000, 0.146838]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036710 in range [0.000000, 0.073420]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018356 in range [0.000000, 0.036711]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009178 in range [0.000000, 0.018357]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004590 in range [0.000000, 0.009179]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002295 in range [0.000000, 0.004591]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001148 in range [0.000000, 0.002296]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000471 in range [0.000000, 0.000941]...	no solution exists.
	Iteration #011: testing norm threshold 0.000706 in range [0.000471, 0.000941]...	no solution exists.
	Iteration #012: testing norm threshold 0.000824 in range [0.000706, 0.000941]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000765 in range [0.000706, 0.000825]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.558863265866422, x5 : 0.03540200864484483, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.5835703243327625, x10 : 0.7743295539477589, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.6380002200603485, x5 : 0.14118095342681203, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6012513041496277, x10 : 0.7757730249839417, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000824


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.172372 in range [0.000000, 0.344744]...	solution exists & found.
	Iteration #003: testing norm threshold 0.086186 in range [0.000000, 0.172373]...	solution exists & found.
	Iteration #004: testing norm threshold 0.043094 in range [0.000000, 0.086187]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019144 in range [0.000000, 0.038288]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008687 in range [0.000000, 0.017374]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001490 in range [0.000000, 0.002980]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000745 in range [0.000000, 0.001491]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000373 in range [0.000000, 0.000746]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000187 in range [0.000000, 0.000374]...	no solution exists.
	Iteration #011: testing norm threshold 0.000281 in range [0.000187, 0.000374]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 1.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 1, x4 : -0.7754486831312685, x5 : -0.37091022536885304, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6822436730636315, x10 : -0.36289648518693013, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000281


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.105745 in range [0.000000, 0.211491]...	solution exists & found.
	Iteration #003: testing norm threshold 0.046378 in range [0.000000, 0.092756]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023162 in range [0.000000, 0.046323]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011346 in range [0.000000, 0.022693]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005674 in range [0.000000, 0.011347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002174 in range [0.000000, 0.004347]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001047 in range [0.000000, 0.002093]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000524 in range [0.000000, 0.001048]...	no solution exists.
	Iteration #010: testing norm threshold 0.000786 in range [0.000524, 0.001048]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000655 in range [0.000524, 0.000787]...	no solution exists.
	Iteration #012: testing norm threshold 0.000721 in range [0.000655, 0.000787]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4532570494289184, x5 : -0.24195905787107466, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.5833749494043565, x10 : -0.1537548611611785, x11 : 2.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.4556802864916058, x5 : -0.1968504879927741, x6 : 0, x7 : 0, x8 : 6, x9 : 0.47065864503383636, x10 : -0.16480348631739616, x11 : 2, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000786


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.061432 in range [0.000000, 0.122865]...	solution exists & found.
	Iteration #003: testing norm threshold 0.030717 in range [0.000000, 0.061433]...	solution exists & found.
	Iteration #004: testing norm threshold 0.014028 in range [0.000000, 0.028056]...	solution exists & found.
	Iteration #005: testing norm threshold 0.006975 in range [0.000000, 0.013950]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001141 in range [0.000000, 0.002282]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000565 in range [0.000000, 0.001131]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000283 in range [0.000000, 0.000566]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000140 in range [0.000000, 0.000279]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000070 in range [0.000000, 0.000141]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.3880939945614469, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.3271959838905167, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.3880939961688733, x5 : -0.2732740028519547, x6 : 0, x7 : 0, x8 : 6, x9 : -0.32719598549794315, x10 : -0.23177000455783414, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.170644 in range [0.000000, 0.341287]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085322 in range [0.000000, 0.170645]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042239 in range [0.000000, 0.084477]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020072 in range [0.000000, 0.040143]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010036 in range [0.000000, 0.020073]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002626 in range [0.000000, 0.005251]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001223 in range [0.000000, 0.002446]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000612 in range [0.000000, 0.001224]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000306 in range [0.000000, 0.000611]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000151 in range [0.000000, 0.000303]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000076 in range [0.000000, 0.000152]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6629908703206752, x5 : -0.4030074190738666, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : -0.6145120550757922, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6629908703206752, x5 : -0.37314127658362056, x6 : 0, x7 : 0, x8 : 4, x9 : -0.6145120550757922, x10 : -0.3084355970126681, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000076


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.103207 in range [0.000000, 0.206413]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050556 in range [0.000000, 0.101113]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025193 in range [0.000000, 0.050385]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012597 in range [0.000000, 0.025194]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006299 in range [0.000000, 0.012598]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002212 in range [0.000000, 0.004424]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001106 in range [0.000000, 0.002213]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000554 in range [0.000000, 0.001107]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000277 in range [0.000000, 0.000555]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000139 in range [0.000000, 0.000278]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000070 in range [0.000000, 0.000140]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 1.0, x3 : 3.0, x4 : -0.5130471199065506, x5 : -0.30458897611660485, x6 : 1.0, x7 : 1.0, x8 : 0.0, x9 : -0.5261071100957074, x10 : -0.3747273409490208, x11 : 2.0, x12 : 7.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 1, x3 : 3, x4 : -0.5172122418880463, x5 : -0.30590929943550127, x6 : 1, x7 : 1, x8 : 0, x9 : -0.5261071100957074, x10 : -0.3623583853536271, x11 : 2, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135816 in range [0.000000, 0.271633]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067708 in range [0.000000, 0.135417]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033490 in range [0.000000, 0.066980]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015728 in range [0.000000, 0.031456]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007330 in range [0.000000, 0.014659]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002946 in range [0.000000, 0.005893]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001474 in range [0.000000, 0.002947]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000362 in range [0.000000, 0.000725]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.15901326476209, x5 : -0.3582717631842022, x6 : 0.0, x7 : 2.0, x8 : 2.0, x9 : -0.04430015995424538, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.15901326476209, x5 : -0.3773243970017709, x6 : 0, x7 : 2, x8 : 2, x9 : -0.04761534582486525, x10 : -0.2012645429893668, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000078


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141431 in range [0.000000, 0.282862]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070716 in range [0.000000, 0.141432]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035358 in range [0.000000, 0.070717]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016962 in range [0.000000, 0.033924]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007422 in range [0.000000, 0.014844]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003711 in range [0.000000, 0.007423]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001703 in range [0.000000, 0.003406]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000852 in range [0.000000, 0.001704]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000426 in range [0.000000, 0.000853]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000150 in range [0.000000, 0.000300]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000057 in range [0.000000, 0.000113]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.7647578851625282, x5 : -0.42509724063127813, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3634006963416892, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000112


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133940 in range [0.000000, 0.267881]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065291 in range [0.000000, 0.130581]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032646 in range [0.000000, 0.065292]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016323 in range [0.000000, 0.032647]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008162 in range [0.000000, 0.016324]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004082 in range [0.000000, 0.008163]...	no solution exists.
	Iteration #008: testing norm threshold 0.006122 in range [0.004082, 0.008163]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005103 in range [0.004082, 0.006123]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004593 in range [0.004082, 0.005104]...	no solution exists.
	Iteration #011: testing norm threshold 0.004848 in range [0.004593, 0.005104]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004706 in range [0.004593, 0.004820]...	solution exists & found.
	Iteration #013: testing norm threshold 0.004650 in range [0.004593, 0.004707]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.06590236085909677, x5 : 1.3774716853347782, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.3050947476454955, x10 : 1.437246993311286, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : -0.277718722820282, x5 : 1.1336837665389459, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6918663680553436, x10 : 1.4372469635089635, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004706


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143260 in range [0.000000, 0.286520]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071631 in range [0.000000, 0.143261]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035816 in range [0.000000, 0.071632]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016902 in range [0.000000, 0.033803]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008451 in range [0.000000, 0.016903]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004226 in range [0.000000, 0.008452]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002023 in range [0.000000, 0.004045]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001012 in range [0.000000, 0.002024]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000506 in range [0.000000, 0.001013]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000254 in range [0.000000, 0.000507]...	no solution exists.
	Iteration #012: testing norm threshold 0.000381 in range [0.000254, 0.000507]...	no solution exists.
	Iteration #013: testing norm threshold 0.000444 in range [0.000381, 0.000507]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.9489044466311632, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.6938811306294624, x10 : -0.19794935711874695, x11 : 1.0, x12 : 8.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : 0.950782633045935, x5 : -0.2516233784951102, x6 : 0, x7 : 0, x8 : 2, x9 : 0.6673596501350403, x10 : -0.20899797976016998, x11 : 1, x12 : 8, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000444


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.160036 in range [0.000000, 0.320072]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080019 in range [0.000000, 0.160037]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039059 in range [0.000000, 0.078117]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019530 in range [0.000000, 0.039060]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009198 in range [0.000000, 0.018396]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004600 in range [0.000000, 0.009199]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002206 in range [0.000000, 0.004412]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000269 in range [0.000000, 0.000538]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000135 in range [0.000000, 0.000270]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4209016814297324, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7645213690280038, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.691351839589985, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000135


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088800 in range [0.000000, 0.177601]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044283 in range [0.000000, 0.088566]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020291 in range [0.000000, 0.040582]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010146 in range [0.000000, 0.020292]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004449 in range [0.000000, 0.008898]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001757 in range [0.000000, 0.003515]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000844 in range [0.000000, 0.001688]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000385 in range [0.000000, 0.000770]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000193 in range [0.000000, 0.000386]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000194]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : -0.6921465995678661, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 4, x4 : -0.6812442592911517, x5 : -0.3895867168903351, x6 : 1, x7 : 6, x8 : 0, x9 : -0.667555034160614, x10 : -0.1747470539269882, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000193


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.189715 in range [0.000000, 0.379431]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091554 in range [0.000000, 0.183108]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044855 in range [0.000000, 0.089711]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021120 in range [0.000000, 0.042239]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010274 in range [0.000000, 0.020547]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005137 in range [0.000000, 0.010275]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002383 in range [0.000000, 0.004767]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000906 in range [0.000000, 0.001811]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000310 in range [0.000000, 0.000620]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000155 in range [0.000000, 0.000311]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000078 in range [0.000000, 0.000156]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4797262864811897, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4509629068626354, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.48068712550398157, x5 : -0.35923260220699404, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4708540141582489, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000155


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.077338 in range [0.000000, 0.154675]...	solution exists & found.
	Iteration #003: testing norm threshold 0.038669 in range [0.000000, 0.077339]...	solution exists & found.
	Iteration #004: testing norm threshold 0.019318 in range [0.000000, 0.038636]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009590 in range [0.000000, 0.019181]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003356 in range [0.000000, 0.006712]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001494 in range [0.000000, 0.002989]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000640 in range [0.000000, 0.001281]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000284 in range [0.000000, 0.000569]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000143 in range [0.000000, 0.000285]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000072 in range [0.000000, 0.000144]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7546231622404179, x5 : -0.3851131567180008, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7547633178722044, x5 : -0.367078741114849, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6939363526518286, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000072


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148562 in range [0.000000, 0.297125]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074096 in range [0.000000, 0.148193]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037008 in range [0.000000, 0.074016]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018505 in range [0.000000, 0.037009]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009173 in range [0.000000, 0.018347]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001761 in range [0.000000, 0.003522]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000809 in range [0.000000, 0.001617]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000405 in range [0.000000, 0.000810]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000188 in range [0.000000, 0.000376]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000094 in range [0.000000, 0.000189]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.7754486831312685, x5 : -0.3714931523471777, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6984967528068727, x10 : -0.3634794121652548, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000188


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166223 in range [0.000000, 0.332446]...	solution exists & found.
	Iteration #003: testing norm threshold 0.081900 in range [0.000000, 0.163801]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040951 in range [0.000000, 0.081901]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020476 in range [0.000000, 0.040952]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010236 in range [0.000000, 0.020472]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004648 in range [0.000000, 0.009296]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002310 in range [0.000000, 0.004619]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001125 in range [0.000000, 0.002250]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000526 in range [0.000000, 0.001051]...	no solution exists.
	Iteration #011: testing norm threshold 0.000788 in range [0.000526, 0.001051]...	no solution exists.
	Iteration #012: testing norm threshold 0.000920 in range [0.000788, 0.001051]...	no solution exists.
	Iteration #013: testing norm threshold 0.000986 in range [0.000920, 0.001051]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3422778486015755, x5 : -0.3224832384724706, x6 : 0.0, x7 : 3.0, x8 : 0.0, x9 : -0.296254253147487, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.3434184138405589, x5 : -0.2184506649150541, x6 : 0, x7 : 3, x8 : 0, x9 : -0.16692651752373483, x10 : -0.11070093044259341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000986


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.202381 in range [0.000000, 0.404762]...	solution exists & found.
	Iteration #003: testing norm threshold 0.101191 in range [0.000000, 0.202382]...	solution exists & found.
	Iteration #004: testing norm threshold 0.050450 in range [0.000000, 0.100901]...	solution exists & found.
	Iteration #005: testing norm threshold 0.025226 in range [0.000000, 0.050451]...	solution exists & found.
	Iteration #006: testing norm threshold 0.012225 in range [0.000000, 0.024451]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005051 in range [0.000000, 0.010101]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001786 in range [0.000000, 0.003573]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000894 in range [0.000000, 0.001787]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000447 in range [0.000000, 0.000895]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000216 in range [0.000000, 0.000431]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000108 in range [0.000000, 0.000217]...	no solution exists.
	Iteration #013: testing norm threshold 0.000162 in range [0.000108, 0.000217]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4339101405213183, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.3404567256375294, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.44015780091285706, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.3460230629669235, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000216


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118837 in range [0.000000, 0.237674]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059357 in range [0.000000, 0.118713]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027507 in range [0.000000, 0.055014]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013435 in range [0.000000, 0.026870]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006718 in range [0.000000, 0.013436]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003075 in range [0.000000, 0.006151]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001483 in range [0.000000, 0.002965]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000742 in range [0.000000, 0.001484]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000371 in range [0.000000, 0.000743]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000186 in range [0.000000, 0.000372]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000094 in range [0.000000, 0.000187]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7671184747749282, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.3747273409490208, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7536542126746766, x5 : -0.4298488126076653, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6927077767876758, x10 : -0.37472734094902077, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000094


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136412 in range [0.000000, 0.272823]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068206 in range [0.000000, 0.136413]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034104 in range [0.000000, 0.068207]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016859 in range [0.000000, 0.033718]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008430 in range [0.000000, 0.016860]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004216 in range [0.000000, 0.008431]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002102 in range [0.000000, 0.004203]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001051 in range [0.000000, 0.002103]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000499 in range [0.000000, 0.000998]...	no solution exists.
	Iteration #011: testing norm threshold 0.000748 in range [0.000499, 0.000998]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000622 in range [0.000499, 0.000746]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000561 in range [0.000499, 0.000623]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.8989231964931218, x5 : -0.09880495902414847, x6 : 0.0, x7 : 2.0, x8 : 0.0, x9 : 1.0784426412928312, x10 : 0.06721761862666377, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.8984776950741529, x5 : -0.3135361075401306, x6 : 0, x7 : 2, x8 : 0, x9 : 1.0779971398738621, x10 : 0.06508315658776677, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000560


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140757 in range [0.000000, 0.281513]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067716 in range [0.000000, 0.135432]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033859 in range [0.000000, 0.067717]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016850 in range [0.000000, 0.033700]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008426 in range [0.000000, 0.016851]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004186 in range [0.000000, 0.008372]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002073 in range [0.000000, 0.004146]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000924 in range [0.000000, 0.001849]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000313 in range [0.000000, 0.000626]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000157 in range [0.000000, 0.000314]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000079 in range [0.000000, 0.000158]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.5463679533319117, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.4951653793526778, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.5388831299974978, x5 : -0.3505618056396004, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5084261149168015, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000157


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.120956 in range [0.000000, 0.241912]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060477 in range [0.000000, 0.120953]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025970 in range [0.000000, 0.051940]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012969 in range [0.000000, 0.025938]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006099 in range [0.000000, 0.012198]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001430 in range [0.000000, 0.002860]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000269 in range [0.000000, 0.000537]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000135 in range [0.000000, 0.000270]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000068 in range [0.000000, 0.000136]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.6546606619643349, x5 : -0.3851131567180008, x6 : 0.0, x7 : 0.0, x8 : 5.0, x9 : -0.5879905715817667, x10 : -0.2642411010550996, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.656870772390284, x5 : -0.37596344087847344, x6 : 0, x7 : 0, x8 : 5, x9 : -0.5924108326435089, x10 : -0.2664512114810487, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.100119 in range [0.000000, 0.200238]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049693 in range [0.000000, 0.099386]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024847 in range [0.000000, 0.049694]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012378 in range [0.000000, 0.024756]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006164 in range [0.000000, 0.012328]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003082 in range [0.000000, 0.006165]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001542 in range [0.000000, 0.003083]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000771 in range [0.000000, 0.001543]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000376 in range [0.000000, 0.000752]...	no solution exists.
	Iteration #011: testing norm threshold 0.000564 in range [0.000376, 0.000752]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000471 in range [0.000376, 0.000565]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.4157711118253873, x5 : -0.2866947137607391, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.5656939604083395, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.4146866719774018, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 3, x9 : 0.5369623601436615, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000564


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112619 in range [0.000000, 0.225238]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055772 in range [0.000000, 0.111544]...	solution exists & found.
	Iteration #004: testing norm threshold 0.026309 in range [0.000000, 0.052619]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011129 in range [0.000000, 0.022258]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004757 in range [0.000000, 0.009515]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002286 in range [0.000000, 0.004573]...	no solution exists.
	Iteration #008: testing norm threshold 0.003429 in range [0.002286, 0.004573]...	no solution exists.
	Iteration #009: testing norm threshold 0.004001 in range [0.003429, 0.004573]...	no solution exists.
	Iteration #010: testing norm threshold 0.004287 in range [0.004001, 0.004573]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004144 in range [0.004001, 0.004288]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004073 in range [0.004001, 0.004145]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.09237159791136801, x5 : 1.8337753754093555, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : 0.008742807033805483, x10 : -0.08746311722482583, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.44640545547008514, x5 : 1.830834268608068, x6 : 1, x7 : 4, x8 : 0, x9 : 0.34541257226969413, x10 : -0.16480348259210587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004144


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.144279 in range [0.000000, 0.288557]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071958 in range [0.000000, 0.143916]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035918 in range [0.000000, 0.071837]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013871 in range [0.000000, 0.027742]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006904 in range [0.000000, 0.013807]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003186 in range [0.000000, 0.006372]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001380 in range [0.000000, 0.002761]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000691 in range [0.000000, 0.001381]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000346 in range [0.000000, 0.000692]...	no solution exists.
	Iteration #011: testing norm threshold 0.000519 in range [0.000346, 0.000692]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000424 in range [0.000346, 0.000502]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 4.0, x4 : 0.09922319428445776, x5 : -0.15248774609174578, x6 : 2.0, x7 : 5.0, x8 : 0.0, x9 : 0.22975516948401745, x10 : 0.11141211458423222, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 4, x4 : 0.1099444180727005, x5 : -0.30906254053115845, x6 : 2, x7 : 5, x8 : 0, x9 : 0.22528160247504528, x10 : 0.10693854757526006, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000501


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168250 in range [0.000000, 0.336500]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084126 in range [0.000000, 0.168251]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042063 in range [0.000000, 0.084127]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021031 in range [0.000000, 0.042061]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010274 in range [0.000000, 0.020548]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004359 in range [0.000000, 0.008717]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002180 in range [0.000000, 0.004360]...	no solution exists.
	Iteration #009: testing norm threshold 0.003270 in range [0.002180, 0.004360]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002697 in range [0.002180, 0.003215]...	no solution exists.
	Iteration #011: testing norm threshold 0.002956 in range [0.002697, 0.003215]...	no solution exists.
	Iteration #012: testing norm threshold 0.003086 in range [0.002956, 0.003215]...	no solution exists.
	Iteration #013: testing norm threshold 0.003150 in range [0.003086, 0.003215]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.053407048324586384, x5 : 1.3506302918009792, x6 : 1.0, x7 : 1.0, x8 : 1.0, x9 : -0.610091807826788, x10 : 4.022625006829041, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : -0.4484880119562149, x5 : 1.3193153142929077, x6 : 1, x7 : 1, x8 : 1, x9 : -0.6520841419696808, x10 : 4.011574365292328, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003214


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.139705 in range [0.000000, 0.279409]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068603 in range [0.000000, 0.137205]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034302 in range [0.000000, 0.068604]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016221 in range [0.000000, 0.032441]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007680 in range [0.000000, 0.015360]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002687 in range [0.000000, 0.005374]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001344 in range [0.000000, 0.002688]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000621 in range [0.000000, 0.001243]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000185 in range [0.000000, 0.000371]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000086 in range [0.000000, 0.000171]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.6296700368953141, x5 : -0.11669922138001425, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.04326862126725737, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.6442479193210602, x5 : -0.11710945375503141, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6983727363549292, x10 : -0.04347004315049476, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000086


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101069 in range [0.000000, 0.202137]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050535 in range [0.000000, 0.101070]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024436 in range [0.000000, 0.048872]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012204 in range [0.000000, 0.024409]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006030 in range [0.000000, 0.012060]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001749 in range [0.000000, 0.003498]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000775 in range [0.000000, 0.001551]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000388 in range [0.000000, 0.000776]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000171 in range [0.000000, 0.000343]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000081 in range [0.000000, 0.000162]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.7906304878606986, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.9635162128187209, x10 : -0.3747273409490208, x11 : 1.0, x12 : 3.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.7899554476483698, x5 : -0.20102192190582008, x6 : 0, x7 : 0, x8 : 6, x9 : 0.9628411726063921, x10 : -0.3630036684601948, x11 : 1, x12 : 3, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000081


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146310 in range [0.000000, 0.292619]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071704 in range [0.000000, 0.143408]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035853 in range [0.000000, 0.071705]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017927 in range [0.000000, 0.035854]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007631 in range [0.000000, 0.015262]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000273 in range [0.000000, 0.000546]...	no solution exists.
	Iteration #008: testing norm threshold 0.000410 in range [0.000273, 0.000546]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000342 in range [0.000273, 0.000411]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.2688004514048733, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.4421224123646269, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.5567106120262901, x5 : -0.26902996872266943, x6 : 0, x7 : 0, x8 : 6, x9 : -0.44219252605588133, x10 : -0.20892786606891559, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000342


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121071 in range [0.000000, 0.242142]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060134 in range [0.000000, 0.120267]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027880 in range [0.000000, 0.055759]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012593 in range [0.000000, 0.025187]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006297 in range [0.000000, 0.012594]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002655 in range [0.000000, 0.005310]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001066 in range [0.000000, 0.002133]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000534 in range [0.000000, 0.001067]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000267 in range [0.000000, 0.000535]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000134 in range [0.000000, 0.000268]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000066 in range [0.000000, 0.000132]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 1.0, x4 : -0.7546231622404179, x5 : 0.2411860257373012, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : 1.2825662574597962, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 1, x4 : -0.7567057311534882, x5 : 0.23876850990143603, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : 1.281475820594043, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000131


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136119 in range [0.000000, 0.272238]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066890 in range [0.000000, 0.133780]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031840 in range [0.000000, 0.063680]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015889 in range [0.000000, 0.031777]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007259 in range [0.000000, 0.014519]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003517 in range [0.000000, 0.007034]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001759 in range [0.000000, 0.003518]...	no solution exists.
	Iteration #009: testing norm threshold 0.002638 in range [0.001759, 0.003518]...	no solution exists.
	Iteration #010: testing norm threshold 0.003078 in range [0.002638, 0.003518]...	no solution exists.
	Iteration #011: testing norm threshold 0.003298 in range [0.003078, 0.003518]...	solution exists & found.
	Iteration #012: testing norm threshold 0.003189 in range [0.003078, 0.003299]...	solution exists & found.
	Iteration #013: testing norm threshold 0.003134 in range [0.003078, 0.003190]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.2821127808847732, x5 : 1.207476192954053, x6 : 0.0, x7 : 1.0, x8 : 0.0, x9 : 1.4851053882012213, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.2814170326650831, x5 : 1.2067804447343629, x6 : 0, x7 : 1, x8 : 0, x9 : 1.6581907700397585, x10 : 0.07896198887606602, x11 : 0, x12 : 1, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003134


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121937 in range [0.000000, 0.243875]...	solution exists & found.
	Iteration #003: testing norm threshold 0.060336 in range [0.000000, 0.120672]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030020 in range [0.000000, 0.060039]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013994 in range [0.000000, 0.027988]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003390 in range [0.000000, 0.006780]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001087 in range [0.000000, 0.002174]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000544 in range [0.000000, 0.001088]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000273 in range [0.000000, 0.000545]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000084 in range [0.000000, 0.000167]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 4.0, x3 : 2.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 7.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 4, x3 : 2, x4 : -0.7508642583278469, x5 : -0.37657222580566707, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6723814695784464, x10 : -0.35222389342813415, x11 : 1, x12 : 7, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000084


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157376 in range [0.000000, 0.314751]...	solution exists & found.
	Iteration #003: testing norm threshold 0.066880 in range [0.000000, 0.133761]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033441 in range [0.000000, 0.066881]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014826 in range [0.000000, 0.029652]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007169 in range [0.000000, 0.014338]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001360 in range [0.000000, 0.002719]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000680 in range [0.000000, 0.001361]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000341 in range [0.000000, 0.000681]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000153 in range [0.000000, 0.000306]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000077 in range [0.000000, 0.000154]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.7513278898646837, x5 : -0.37082261705201053, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6688953127841272, x10 : -0.3628088768700876, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.148179 in range [0.000000, 0.296358]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073745 in range [0.000000, 0.147491]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036873 in range [0.000000, 0.073746]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008670 in range [0.000000, 0.017340]...	solution exists & found.
	Iteration #006: testing norm threshold 0.001370 in range [0.000000, 0.002740]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000423 in range [0.000000, 0.000846]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000202 in range [0.000000, 0.000404]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000102 in range [0.000000, 0.000203]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000051 in range [0.000000, 0.000103]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3084355970126681, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7591049008373159, x5 : -0.3803229484536629, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6915497336366158, x10 : -0.30827727980330416, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000051


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.133365 in range [0.000000, 0.266729]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065231 in range [0.000000, 0.130462]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030492 in range [0.000000, 0.060983]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015122 in range [0.000000, 0.030245]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004989 in range [0.000000, 0.009978]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002476 in range [0.000000, 0.004952]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001238 in range [0.000000, 0.002477]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000602 in range [0.000000, 0.001203]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000179 in range [0.000000, 0.000358]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000080 in range [0.000000, 0.000161]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5713585784009324, x5 : -0.295641844938672, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.5437880990917243, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5646066047730951, x5 : -0.3269568085670471, x6 : 0, x7 : 5, x8 : 0, x9 : -0.5442924161783704, x10 : -0.05431724339723587, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000160


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169414 in range [0.000000, 0.338829]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083883 in range [0.000000, 0.167767]...	solution exists & found.
	Iteration #004: testing norm threshold 0.041928 in range [0.000000, 0.083855]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020964 in range [0.000000, 0.041929]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008549 in range [0.000000, 0.017099]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003561 in range [0.000000, 0.007122]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001781 in range [0.000000, 0.003562]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000891 in range [0.000000, 0.001782]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000446 in range [0.000000, 0.000892]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000213 in range [0.000000, 0.000427]...	no solution exists.
	Iteration #012: testing norm threshold 0.000320 in range [0.000213, 0.000427]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.20482941072196134, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.092922879693292, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.20608354078371752, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.09996436378490277, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000295


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185817 in range [0.000000, 0.371634]...	solution exists & found.
	Iteration #003: testing norm threshold 0.092641 in range [0.000000, 0.185283]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045930 in range [0.000000, 0.091859]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022752 in range [0.000000, 0.045505]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009369 in range [0.000000, 0.018737]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004685 in range [0.000000, 0.009370]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002343 in range [0.000000, 0.004686]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000947 in range [0.000000, 0.001894]...	no solution exists.
	Iteration #010: testing norm threshold 0.001421 in range [0.000947, 0.001894]...	no solution exists.
	Iteration #011: testing norm threshold 0.001658 in range [0.001421, 0.001894]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001526 in range [0.001421, 0.001631]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001474 in range [0.001421, 0.001527]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.392259098739617, x5 : 0.14276758278003948, x6 : 2.0, x7 : 4.0, x8 : 0.0, x9 : -0.29183400589848274, x10 : -0.3084355970126681, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.392259098739617, x5 : -0.4253752529621124, x6 : 2, x7 : 4, x8 : 0, x9 : -0.29868925113829775, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001526


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.135655 in range [0.000000, 0.271310]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067828 in range [0.000000, 0.135656]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033915 in range [0.000000, 0.067829]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014247 in range [0.000000, 0.028494]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006929 in range [0.000000, 0.013858]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000364 in range [0.000000, 0.000728]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000124 in range [0.000000, 0.000249]...	no solution exists.
	Iteration #009: testing norm threshold 0.000187 in range [0.000124, 0.000249]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.658825766142505, x5 : -0.17932913962554445, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : 0.2439956024569376, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.6713210642337799, x5 : -0.2285383641719818, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6520841717720032, x10 : 0.23983048948467808, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000248


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147671 in range [0.000000, 0.295342]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071673 in range [0.000000, 0.143345]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035821 in range [0.000000, 0.071642]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013096 in range [0.000000, 0.026191]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003959 in range [0.000000, 0.007917]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001980 in range [0.000000, 0.003960]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000990 in range [0.000000, 0.001981]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000489 in range [0.000000, 0.000977]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000123 in range [0.000000, 0.000246]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000062 in range [0.000000, 0.000124]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.7088070162805465, x5 : -0.4119545502517995, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.3305328449914524, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.7129721343517303, x5 : -0.40424651113013566, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6223281940505916, x10 : -0.3162497451589519, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000123


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.185712 in range [0.000000, 0.371424]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091098 in range [0.000000, 0.182196]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045550 in range [0.000000, 0.091099]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022363 in range [0.000000, 0.044725]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011182 in range [0.000000, 0.022364]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004206 in range [0.000000, 0.008412]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002103 in range [0.000000, 0.004207]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001052 in range [0.000000, 0.002104]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000380 in range [0.000000, 0.000759]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000190 in range [0.000000, 0.000381]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000096 in range [0.000000, 0.000191]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 3.0, x4 : -0.15901326476209, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.06640139619926658, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 3, x4 : -0.15901326476209, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 6, x9 : -0.06640139619926658, x10 : -0.2541973135849858, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000190


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.109745 in range [0.000000, 0.219490]...	solution exists & found.
	Iteration #003: testing norm threshold 0.054097 in range [0.000000, 0.108194]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027043 in range [0.000000, 0.054085]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012189 in range [0.000000, 0.024379]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006095 in range [0.000000, 0.012190]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002346 in range [0.000000, 0.004692]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001174 in range [0.000000, 0.002347]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000587 in range [0.000000, 0.001175]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000294 in range [0.000000, 0.000588]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000148 in range [0.000000, 0.000295]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000074 in range [0.000000, 0.000149]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7722012731124823, x5 : -0.415263268618769, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6951217683841651, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000074


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.154411 in range [0.000000, 0.308822]...	solution exists & found.
	Iteration #003: testing norm threshold 0.076360 in range [0.000000, 0.152719]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037937 in range [0.000000, 0.075873]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018957 in range [0.000000, 0.037914]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009217 in range [0.000000, 0.018435]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004609 in range [0.000000, 0.009218]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002305 in range [0.000000, 0.004610]...	no solution exists.
	Iteration #009: testing norm threshold 0.003458 in range [0.002305, 0.004610]...	no solution exists.
	Iteration #010: testing norm threshold 0.004034 in range [0.003458, 0.004610]...	no solution exists.
	Iteration #011: testing norm threshold 0.004322 in range [0.004034, 0.004610]...	solution exists & found.
	Iteration #012: testing norm threshold 0.004178 in range [0.004034, 0.004323]...	solution exists & found.
	Iteration #013: testing norm threshold 0.004107 in range [0.004034, 0.004179]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.7819252822651883, x5 : 5.1531610424224565, x6 : 3.0, x7 : 3.0, x8 : 3.0, x9 : 1.9492313493466664, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 1.780133656908146, x5 : 5.146619949556958, x6 : 3, x7 : 3, x8 : 3, x9 : 1.9474397239896242, x10 : 0.24578721735514245, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004088


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146369 in range [0.000000, 0.292738]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072864 in range [0.000000, 0.145729]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036079 in range [0.000000, 0.072158]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015914 in range [0.000000, 0.031828]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007958 in range [0.000000, 0.015915]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003201 in range [0.000000, 0.006402]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001601 in range [0.000000, 0.003202]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000801 in range [0.000000, 0.001602]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000376 in range [0.000000, 0.000752]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000187 in range [0.000000, 0.000373]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000094 in range [0.000000, 0.000188]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7712835789530984, x5 : -0.4298488126076653, x6 : 5.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7723248511954899, x5 : -0.4030074179172516, x6 : 5, x7 : 6, x8 : 0, x9 : -0.6962866187095642, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000087


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.198535 in range [0.000000, 0.397070]...	solution exists & found.
	Iteration #003: testing norm threshold 0.099268 in range [0.000000, 0.198536]...	solution exists & found.
	Iteration #004: testing norm threshold 0.046361 in range [0.000000, 0.092722]...	solution exists & found.
	Iteration #005: testing norm threshold 0.023181 in range [0.000000, 0.046362]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009972 in range [0.000000, 0.019943]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004956 in range [0.000000, 0.009911]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002423 in range [0.000000, 0.004845]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001212 in range [0.000000, 0.002424]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000604 in range [0.000000, 0.001208]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000303 in range [0.000000, 0.000605]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000152 in range [0.000000, 0.000304]...	solution exists & found.
	Iteration #013: testing norm threshold 0.000076 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : 0.640686737446574, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.1148287410099072, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : 0.6323565244674683, x5 : -0.35937682483243005, x6 : 0, x7 : 0, x8 : 3, x9 : 0.11372367936167929, x10 : -0.2200466050975312, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000056


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.121870 in range [0.000000, 0.243740]...	solution exists & found.
	Iteration #003: testing norm threshold 0.059489 in range [0.000000, 0.118977]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028506 in range [0.000000, 0.057013]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013728 in range [0.000000, 0.027456]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006054 in range [0.000000, 0.012109]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002685 in range [0.000000, 0.005369]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001343 in range [0.000000, 0.002686]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000657 in range [0.000000, 0.001315]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000317 in range [0.000000, 0.000633]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000159 in range [0.000000, 0.000318]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000080 in range [0.000000, 0.000160]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 4.0, x3 : 2.0, x4 : -0.3839288903832768, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.32277573664151243, x10 : -0.13165761318239427, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 4, x3 : 2, x4 : -0.38057371364514375, x5 : -0.33814072312666965, x6 : 0, x7 : 0, x8 : 6, x9 : -0.31907281203287535, x10 : -0.12494725810243679, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.161611 in range [0.000000, 0.323223]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080624 in range [0.000000, 0.161248]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040313 in range [0.000000, 0.080625]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019982 in range [0.000000, 0.039965]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008745 in range [0.000000, 0.017489]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001238 in range [0.000000, 0.002477]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000463 in range [0.000000, 0.000925]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000232 in range [0.000000, 0.000464]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000095 in range [0.000000, 0.000191]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7504580580622477, x5 : -0.376166025540068, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6763955165618515, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7439770917565914, x5 : -0.3985338509082794, x6 : 3, x7 : 6, x8 : 0, x9 : -0.676628846844292, x10 : -0.2642411010550996, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000095


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136839 in range [0.000000, 0.273678]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068420 in range [0.000000, 0.136840]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030644 in range [0.000000, 0.061288]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014676 in range [0.000000, 0.029353]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006967 in range [0.000000, 0.013933]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003484 in range [0.000000, 0.006968]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001510 in range [0.000000, 0.003020]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000755 in range [0.000000, 0.001511]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000339 in range [0.000000, 0.000679]...	no solution exists.
	Iteration #011: testing norm threshold 0.000509 in range [0.000339, 0.000679]...	no solution exists.
	Iteration #012: testing norm threshold 0.000594 in range [0.000509, 0.000679]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.5115685079233001, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 4.0, x9 : 0.6364179163924074, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 0.47200001776218414, x5 : -0.21793781832789597, x6 : 0, x7 : 0, x8 : 4, x9 : 0.6347645045662659, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000594


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.150856 in range [0.000000, 0.301711]...	solution exists & found.
	Iteration #003: testing norm threshold 0.072514 in range [0.000000, 0.145027]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036177 in range [0.000000, 0.072355]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018089 in range [0.000000, 0.036178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009045 in range [0.000000, 0.018090]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002374 in range [0.000000, 0.004747]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001187 in range [0.000000, 0.002375]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000533 in range [0.000000, 0.001067]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000243 in range [0.000000, 0.000485]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000099 in range [0.000000, 0.000198]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000050 in range [0.000000, 0.000100]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7754486831312685, x5 : -0.4298488126076653, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7754486831312685, x5 : -0.42316514253616333, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6940765082836151, x10 : -0.37472734094902077, x11 : 1, x12 : 1, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000041


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143891 in range [0.000000, 0.287782]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071791 in range [0.000000, 0.143582]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033148 in range [0.000000, 0.066297]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015979 in range [0.000000, 0.031959]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007990 in range [0.000000, 0.015980]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003071 in range [0.000000, 0.006142]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001390 in range [0.000000, 0.002781]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000639 in range [0.000000, 0.001278]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7462929538840777, x5 : -0.3672188943621351, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7462929538840777, x5 : -0.3985338509082794, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6940765070048618, x10 : -0.3526300936937332, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000080


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.171459 in range [0.000000, 0.342919]...	solution exists & found.
	Iteration #003: testing norm threshold 0.085730 in range [0.000000, 0.171460]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042866 in range [0.000000, 0.085731]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021268 in range [0.000000, 0.042535]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006948 in range [0.000000, 0.013897]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003062 in range [0.000000, 0.006124]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000061 in range [0.000000, 0.000122]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.758788266418588, x5 : -0.4119545502517995, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6808157638108557, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7608708143234253, x5 : -0.4162199879180784, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6808157638108557, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000061


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.104045 in range [0.000000, 0.208091]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049964 in range [0.000000, 0.099928]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024955 in range [0.000000, 0.049909]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012453 in range [0.000000, 0.024905]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006208 in range [0.000000, 0.012416]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002325 in range [0.000000, 0.004651]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000543 in range [0.000000, 0.001085]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000272 in range [0.000000, 0.000544]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000119 in range [0.000000, 0.000237]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7421278497059075, x5 : -0.3582717631842022, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.19794935711874695, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7442104015402614, x5 : -0.36274532973766327, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6921215150408565, x10 : -0.20899797976016998, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000097


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143167 in range [0.000000, 0.286334]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068753 in range [0.000000, 0.137505]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033462 in range [0.000000, 0.066924]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014927 in range [0.000000, 0.029853]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007464 in range [0.000000, 0.014928]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003732 in range [0.000000, 0.007465]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001867 in range [0.000000, 0.003733]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000878 in range [0.000000, 0.001756]...	no solution exists.
	Iteration #010: testing norm threshold 0.001317 in range [0.000878, 0.001756]...	no solution exists.
	Iteration #011: testing norm threshold 0.001536 in range [0.001317, 0.001756]...	no solution exists.
	Iteration #012: testing norm threshold 0.001646 in range [0.001536, 0.001756]...	solution exists & found.
	Iteration #013: testing norm threshold 0.001592 in range [0.001536, 0.001647]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.3422778486015755, x5 : 0.5006528298973549, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : 0.15560661054180067, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.34676216303729457, x5 : 0.4961685154616359, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6741853952407837, x10 : -0.2973869740962982, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001646


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184872 in range [0.000000, 0.369745]...	solution exists & found.
	Iteration #003: testing norm threshold 0.089060 in range [0.000000, 0.178120]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044502 in range [0.000000, 0.089004]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022251 in range [0.000000, 0.044503]...	solution exists & found.
	Iteration #006: testing norm threshold 0.011126 in range [0.000000, 0.022252]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005139 in range [0.000000, 0.010278]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002480 in range [0.000000, 0.004959]...	no solution exists.
	Iteration #009: testing norm threshold 0.003720 in range [0.002480, 0.004959]...	solution exists & found.
	Iteration #010: testing norm threshold 0.003018 in range [0.002480, 0.003556]...	no solution exists.
	Iteration #011: testing norm threshold 0.003287 in range [0.003018, 0.003556]...	no solution exists.
	Iteration #012: testing norm threshold 0.003421 in range [0.003287, 0.003556]...	no solution exists.
	Iteration #013: testing norm threshold 0.003488 in range [0.003421, 0.003556]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.3547731611360859, x5 : 0.026454877466911945, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.2520517806574446, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7400452792644501, x5 : -0.21858481926357606, x6 : 1, x7 : 6, x8 : 0, x9 : -0.25413436694589675, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.003488


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166355 in range [0.000000, 0.332710]...	solution exists & found.
	Iteration #003: testing norm threshold 0.083178 in range [0.000000, 0.166356]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039846 in range [0.000000, 0.079692]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019924 in range [0.000000, 0.039847]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009962 in range [0.000000, 0.019925]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004982 in range [0.000000, 0.009963]...	no solution exists.
	Iteration #008: testing norm threshold 0.007472 in range [0.004982, 0.009963]...	solution exists & found.
	Iteration #009: testing norm threshold 0.006228 in range [0.004982, 0.007473]...	solution exists & found.
	Iteration #010: testing norm threshold 0.005605 in range [0.004982, 0.006229]...	solution exists & found.
	Iteration #011: testing norm threshold 0.005294 in range [0.004982, 0.005606]...	solution exists & found.
	Iteration #012: testing norm threshold 0.005138 in range [0.004982, 0.005295]...	solution exists & found.
	Iteration #013: testing norm threshold 0.005060 in range [0.004982, 0.005139]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 2.3275539296054752, x5 : 6.235763914952336, x6 : 1.0, x7 : 2.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 2.322743550765078, x5 : 6.230953536111938, x6 : 1, x7 : 2, x8 : 0, x9 : -0.6984967528068727, x10 : -0.07160411314087049, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.005060


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.136156 in range [0.000000, 0.272311]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067986 in range [0.000000, 0.135972]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033093 in range [0.000000, 0.066186]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015868 in range [0.000000, 0.031736]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007911 in range [0.000000, 0.015822]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001923 in range [0.000000, 0.003845]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000899 in range [0.000000, 0.001798]...	no solution exists.
	Iteration #009: testing norm threshold 0.001348 in range [0.000899, 0.001798]...	no solution exists.
	Iteration #010: testing norm threshold 0.001573 in range [0.001348, 0.001798]...	solution exists & found.
	Iteration #011: testing norm threshold 0.001461 in range [0.001348, 0.001574]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001405 in range [0.001348, 0.001462]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.4380752446994884, x5 : 5.07263686182106, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.3404567256375294, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : -0.43610747145818124, x5 : 5.070669088852514, x6 : 1, x7 : 6, x8 : 0, x9 : -0.5548387169837952, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001461


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147703 in range [0.000000, 0.295407]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073495 in range [0.000000, 0.146990]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036130 in range [0.000000, 0.072261]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018066 in range [0.000000, 0.036131]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009033 in range [0.000000, 0.018067]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004511 in range [0.000000, 0.009022]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002248 in range [0.000000, 0.004496]...	no solution exists.
	Iteration #009: testing norm threshold 0.003372 in range [0.002248, 0.004496]...	no solution exists.
	Iteration #010: testing norm threshold 0.003934 in range [0.003372, 0.004496]...	no solution exists.
	Iteration #011: testing norm threshold 0.004215 in range [0.003934, 0.004496]...	no solution exists.
	Iteration #012: testing norm threshold 0.004355 in range [0.004215, 0.004496]...	no solution exists.
	Iteration #013: testing norm threshold 0.004426 in range [0.004355, 0.004496]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 0.2658273614112628, x5 : -0.3493246320062693, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : 0.38888407044817, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : 0.2674524983950863, x5 : -0.38063958287239075, x6 : 0, x7 : 6, x8 : 0, x9 : 0.4668361639415185, x10 : -0.17866000402897572, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004495


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.138562 in range [0.000000, 0.277125]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069282 in range [0.000000, 0.138563]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034641 in range [0.000000, 0.069283]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017321 in range [0.000000, 0.034642]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008407 in range [0.000000, 0.016815]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004204 in range [0.000000, 0.008408]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002103 in range [0.000000, 0.004205]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001052 in range [0.000000, 0.002104]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000519 in range [0.000000, 0.001037]...	no solution exists.
	Iteration #011: testing norm threshold 0.000778 in range [0.000519, 0.001037]...	no solution exists.
	Iteration #012: testing norm threshold 0.000907 in range [0.000778, 0.001037]...	no solution exists.
	Iteration #013: testing norm threshold 0.000972 in range [0.000907, 0.001037]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.4865778828542794, x5 : -0.23301192669314175, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6319976691434032, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.3532945513725281, x5 : -0.3214324965941861, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6264733571705422, x10 : -0.11508467717647104, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001036


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.168529 in range [0.000000, 0.337057]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084265 in range [0.000000, 0.168530]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042133 in range [0.000000, 0.084266]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018944 in range [0.000000, 0.037887]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009417 in range [0.000000, 0.018833]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000634 in range [0.000000, 0.001269]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000308 in range [0.000000, 0.000617]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000137 in range [0.000000, 0.000275]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000065 in range [0.000000, 0.000130]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7004768079242063, x5 : -0.3493246320062693, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6675550220638431, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7037919945126766, x5 : -0.38063958287239075, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6708702086523134, x10 : -0.24545903966478574, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000129


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137132 in range [0.000000, 0.274263]...	solution exists & found.
	Iteration #003: testing norm threshold 0.068566 in range [0.000000, 0.137133]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033229 in range [0.000000, 0.066458]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016615 in range [0.000000, 0.033230]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008308 in range [0.000000, 0.016616]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004086 in range [0.000000, 0.008172]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001997 in range [0.000000, 0.003993]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000999 in range [0.000000, 0.001998]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000349 in range [0.000000, 0.000699]...	no solution exists.
	Iteration #011: testing norm threshold 0.000524 in range [0.000349, 0.000699]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000437 in range [0.000349, 0.000525]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 1.7152836154144666, x5 : -0.19722340198141025, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 1.9403908548486581, x10 : 0.11141211458423222, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : 1.7145715624960653, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 6, x9 : 1.9396788019302569, x10 : 0.11070006166583085, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000524


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147508 in range [0.000000, 0.295017]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070277 in range [0.000000, 0.140554]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035139 in range [0.000000, 0.070278]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015089 in range [0.000000, 0.030178]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007168 in range [0.000000, 0.014336]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003551 in range [0.000000, 0.007101]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001713 in range [0.000000, 0.003425]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000487 in range [0.000000, 0.000973]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000233 in range [0.000000, 0.000466]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000117 in range [0.000000, 0.000234]...	no solution exists.
	Iteration #012: testing norm threshold 0.000175 in range [0.000117, 0.000234]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.7088070162805465, x5 : -0.2866947137607391, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6277727968228048, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.7091859148448599, x5 : -0.3180096745491028, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6075027964678064, x10 : -0.36329981010821016, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000233


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.098165 in range [0.000000, 0.196330]...	solution exists & found.
	Iteration #003: testing norm threshold 0.049083 in range [0.000000, 0.098166]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024174 in range [0.000000, 0.048349]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012046 in range [0.000000, 0.024092]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005067 in range [0.000000, 0.010134]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002534 in range [0.000000, 0.005068]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001209 in range [0.000000, 0.002418]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000605 in range [0.000000, 0.001210]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000303 in range [0.000000, 0.000606]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000152 in range [0.000000, 0.000304]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000077 in range [0.000000, 0.000153]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.24648045250366266, x5 : 0.6885425846339456, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.24648045250366266, x5 : 0.6841916413165605, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6697997976541546, x10 : -0.35932776535513844, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000077


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127940 in range [0.000000, 0.255881]...	solution exists & found.
	Iteration #003: testing norm threshold 0.056855 in range [0.000000, 0.113709]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028360 in range [0.000000, 0.056720]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014127 in range [0.000000, 0.028253]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007064 in range [0.000000, 0.014128]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003405 in range [0.000000, 0.006809]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001611 in range [0.000000, 0.003223]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000806 in range [0.000000, 0.001612]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000404 in range [0.000000, 0.000807]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000157 in range [0.000000, 0.000315]...	no solution exists.
	Iteration #012: testing norm threshold 0.000236 in range [0.000157, 0.000315]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.6115310081993831, x5 : -0.295641844938672, x6 : 0.0, x7 : 4.0, x8 : 0.0, x9 : 0.7469240976175133, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : 0.6025838741814388, x5 : -0.3985338509082794, x6 : 0, x7 : 4, x8 : 0, x9 : 0.7469240976175133, x10 : -0.04326862126725737, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000314


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.118391 in range [0.000000, 0.236781]...	solution exists & found.
	Iteration #003: testing norm threshold 0.058800 in range [0.000000, 0.117599]...	solution exists & found.
	Iteration #004: testing norm threshold 0.028253 in range [0.000000, 0.056505]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013493 in range [0.000000, 0.026986]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006437 in range [0.000000, 0.012874]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002830 in range [0.000000, 0.005660]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000437 in range [0.000000, 0.000873]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000219 in range [0.000000, 0.000438]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000110 in range [0.000000, 0.000220]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000055 in range [0.000000, 0.000111]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.7671184747749282, x5 : -0.3940602878959337, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6896562583088642, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.7671184747749282, x5 : -0.3753157742194455, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6905064999528373, x10 : -0.28718859067785696, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000055


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.137051 in range [0.000000, 0.274103]...	solution exists & found.
	Iteration #003: testing norm threshold 0.067603 in range [0.000000, 0.135207]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033801 in range [0.000000, 0.067601]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015910 in range [0.000000, 0.031821]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007075 in range [0.000000, 0.014150]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001302 in range [0.000000, 0.002604]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000644 in range [0.000000, 0.001288]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000098 in range [0.000000, 0.000195]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7254674329932271, x5 : -0.3314303696504035, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6454537858188218, x10 : -0.2642411010550996, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7265087164727717, x5 : -0.3895867168903351, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6388234198093414, x10 : -0.2652823845346442, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000194


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.112146 in range [0.000000, 0.224291]...	solution exists & found.
	Iteration #003: testing norm threshold 0.055633 in range [0.000000, 0.111266]...	solution exists & found.
	Iteration #004: testing norm threshold 0.027693 in range [0.000000, 0.055385]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013797 in range [0.000000, 0.027594]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006426 in range [0.000000, 0.012853]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002580 in range [0.000000, 0.005160]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001290 in range [0.000000, 0.002581]...	no solution exists.
	Iteration #009: testing norm threshold 0.001936 in range [0.001290, 0.002581]...	solution exists & found.
	Iteration #010: testing norm threshold 0.001609 in range [0.001290, 0.001929]...	no solution exists.
	Iteration #011: testing norm threshold 0.001769 in range [0.001609, 0.001929]...	no solution exists.
	Iteration #012: testing norm threshold 0.001849 in range [0.001769, 0.001929]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : 0.13254402770981874, x5 : -0.3403775008283364, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : 0.2651171474760513, x10 : -0.1537548611611785, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 4, x4 : 0.13063277567133658, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : 0.4681496464180979, x10 : -0.31948421895504, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001849


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.156936 in range [0.000000, 0.313872]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078468 in range [0.000000, 0.156937]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039231 in range [0.000000, 0.078462]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019289 in range [0.000000, 0.038578]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009030 in range [0.000000, 0.018061]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004516 in range [0.000000, 0.009031]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002086 in range [0.000000, 0.004173]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001044 in range [0.000000, 0.002087]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000522 in range [0.000000, 0.001045]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000262 in range [0.000000, 0.000523]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000131 in range [0.000000, 0.000263]...	no solution exists.
	Iteration #013: testing norm threshold 0.000197 in range [0.000131, 0.000263]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : 0.6115310081993831, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6319976691434032, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 3, x4 : 0.6109613807607396, x5 : -0.40748098492622375, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6314280417047596, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000262


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147974 in range [0.000000, 0.295948]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071495 in range [0.000000, 0.142991]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035748 in range [0.000000, 0.071496]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016640 in range [0.000000, 0.033281]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007408 in range [0.000000, 0.014815]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002900 in range [0.000000, 0.005800]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001450 in range [0.000000, 0.002901]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000556 in range [0.000000, 0.001112]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000278 in range [0.000000, 0.000557]...	no solution exists.
	Iteration #011: testing norm threshold 0.000418 in range [0.000278, 0.000557]...	no solution exists.
	Iteration #012: testing norm threshold 0.000487 in range [0.000418, 0.000557]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 1.0, x4 : -0.7004768079242063, x5 : -0.009333647244819604, x6 : 3.0, x7 : 6.0, x8 : 0.0, x9 : -0.6631347748148388, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 1, x4 : -0.7004768079242063, x5 : -0.21959123015403748, x6 : 3, x7 : 6, x8 : 0, x9 : -0.6601233149656076, x10 : 0.022221794356580945, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000556


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.128036 in range [0.000000, 0.256071]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063416 in range [0.000000, 0.126831]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031533 in range [0.000000, 0.063066]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013284 in range [0.000000, 0.026569]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006643 in range [0.000000, 0.013285]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003322 in range [0.000000, 0.006644]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001086 in range [0.000000, 0.002172]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000544 in range [0.000000, 0.001087]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000272 in range [0.000000, 0.000545]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000137 in range [0.000000, 0.000273]...	no solution exists.
	Iteration #012: testing norm threshold 0.000205 in range [0.000137, 0.000273]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.24083673634224206, x5 : -0.3314303696504035, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 0.3712030814521531, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.23993022481754323, x5 : -0.2992088949885153, x6 : 0, x7 : 0, x8 : 6, x9 : 0.37165633721450253, x10 : -0.20899797976016998, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000205


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.141199 in range [0.000000, 0.282399]...	solution exists & found.
	Iteration #003: testing norm threshold 0.070358 in range [0.000000, 0.140715]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033893 in range [0.000000, 0.067786]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016947 in range [0.000000, 0.033894]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008325 in range [0.000000, 0.016650]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004163 in range [0.000000, 0.008326]...	no solution exists.
	Iteration #008: testing norm threshold 0.006245 in range [0.004163, 0.008326]...	no solution exists.
	Iteration #009: testing norm threshold 0.007285 in range [0.006245, 0.008326]...	solution exists & found.
	Iteration #010: testing norm threshold 0.006765 in range [0.006245, 0.007286]...	no solution exists.
	Iteration #011: testing norm threshold 0.007026 in range [0.006765, 0.007286]...	no solution exists.
	Iteration #012: testing norm threshold 0.007156 in range [0.007026, 0.007286]...	solution exists & found.
	Iteration #013: testing norm threshold 0.007092 in range [0.007026, 0.007157]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 2.260912262754753, x5 : 2.4958630825763892, x6 : 0.0, x7 : 0.0, x8 : 1.0, x9 : 1.1138046192848652, x10 : 6.851072748113421, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 2.25897091101366, x5 : -0.29817405477212133, x6 : 0, x7 : 0, x8 : 1, x9 : 1.1118632675437725, x10 : 6.852043423983968, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.007156


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.130733 in range [0.000000, 0.261465]...	solution exists & found.
	Iteration #003: testing norm threshold 0.051855 in range [0.000000, 0.103710]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025927 in range [0.000000, 0.051854]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011970 in range [0.000000, 0.023940]...	solution exists & found.
	Iteration #006: testing norm threshold 0.005986 in range [0.000000, 0.011971]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002993 in range [0.000000, 0.005987]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000524 in range [0.000000, 0.001047]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000262 in range [0.000000, 0.000525]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000132 in range [0.000000, 0.000263]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000066 in range [0.000000, 0.000133]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 2.3233888254273047, x5 : -0.18827627080347734, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 2.550384975211243, x10 : 0.22189835447815334, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 4, x4 : 2.3212011517726463, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 6, x9 : 2.5481973015565846, x10 : 0.21971068082349507, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000066


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.101198 in range [0.000000, 0.202397]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050135 in range [0.000000, 0.100271]...	solution exists & found.
	Iteration #004: testing norm threshold 0.025068 in range [0.000000, 0.050136]...	solution exists & found.
	Iteration #005: testing norm threshold 0.004440 in range [0.000000, 0.008879]...	solution exists & found.
	Iteration #006: testing norm threshold 0.002220 in range [0.000000, 0.004441]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001080 in range [0.000000, 0.002159]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000511 in range [0.000000, 0.001022]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000256 in range [0.000000, 0.000512]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.6421653494298245, x5 : -0.3493246320062693, x6 : 0.0, x7 : 5.0, x8 : 0.0, x9 : -0.592410818830771, x10 : -0.17585210913996274, x11 : 1.0, x12 : 4.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 3, x4 : -0.6504955589771271, x5 : -0.3493246320062693, x6 : 0, x7 : 5, x8 : 0, x9 : -0.5924108257371399, x10 : -0.20899797976016998, x11 : 1, x12 : 4, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000163


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.086692 in range [0.000000, 0.173384]...	solution exists & found.
	Iteration #003: testing norm threshold 0.043315 in range [0.000000, 0.086629]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021426 in range [0.000000, 0.042852]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009579 in range [0.000000, 0.019158]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003894 in range [0.000000, 0.007788]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001911 in range [0.000000, 0.003822]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000956 in range [0.000000, 0.001912]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000451 in range [0.000000, 0.000903]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000226 in range [0.000000, 0.000452]...	no solution exists.
	Iteration #011: testing norm threshold 0.000339 in range [0.000226, 0.000452]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : 0.40744090346904704, x5 : -0.30458897611660485, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.5568534659103311, x10 : -0.0653658692460416, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : 0.4119144704780192, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.5479063318923868, x10 : -0.0653658692460416, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000314


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.090489 in range [0.000000, 0.180977]...	solution exists & found.
	Iteration #003: testing norm threshold 0.045245 in range [0.000000, 0.090490]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021299 in range [0.000000, 0.042599]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010086 in range [0.000000, 0.020173]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004434 in range [0.000000, 0.008867]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002217 in range [0.000000, 0.004435]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001109 in range [0.000000, 0.002218]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000555 in range [0.000000, 0.001110]...	no solution exists.
	Iteration #010: testing norm threshold 0.000833 in range [0.000555, 0.001110]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000694 in range [0.000555, 0.000834]...	no solution exists.
	Iteration #012: testing norm threshold 0.000764 in range [0.000694, 0.000834]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 3.0, x3 : 2.0, x4 : -0.4672309739466792, x5 : -0.3493246320062693, x6 : 0.0, x7 : 4.0, x8 : 1.0, x9 : -0.3713984563805591, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 3, x3 : 2, x4 : -0.46931351721286774, x5 : -0.40748098492622375, x6 : 0, x7 : 4, x8 : 1, x9 : -0.47969451546669006, x10 : -0.1731304984219179, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000764


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.131530 in range [0.000000, 0.263061]...	solution exists & found.
	Iteration #003: testing norm threshold 0.065766 in range [0.000000, 0.131531]...	solution exists & found.
	Iteration #004: testing norm threshold 0.032883 in range [0.000000, 0.065767]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016044 in range [0.000000, 0.032088]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007901 in range [0.000000, 0.015802]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003951 in range [0.000000, 0.007902]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001884 in range [0.000000, 0.003767]...	no solution exists.
	Iteration #009: testing norm threshold 0.002825 in range [0.001884, 0.003767]...	solution exists & found.
	Iteration #010: testing norm threshold 0.002229 in range [0.001884, 0.002575]...	solution exists & found.
	Iteration #011: testing norm threshold 0.002057 in range [0.001884, 0.002230]...	solution exists & found.
	Iteration #012: testing norm threshold 0.001971 in range [0.001884, 0.002058]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : 0.2616622572330927, x5 : 5.582623338963236, x6 : 1.0, x7 : 4.0, x8 : 0.0, x9 : -0.6984967528068727, x10 : -0.3747273409490208, x11 : 1.0, x12 : 1.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : 0.2616622572330927, x5 : 5.582623338963236, x6 : 1, x7 : 4, x8 : 0, x9 : -0.6937821858738519, x10 : -0.36117427583681116, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002057


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124201 in range [0.000000, 0.248403]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037055 in range [0.000000, 0.074109]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017929 in range [0.000000, 0.035858]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008965 in range [0.000000, 0.017930]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003584 in range [0.000000, 0.007167]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000658 in range [0.000000, 0.001316]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000245 in range [0.000000, 0.000491]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 3.0, x4 : -0.758788266418588, x5 : -0.3940602878959337, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6940765055578685, x10 : -0.35263009297023656, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 3, x4 : -0.7608708129605519, x5 : -0.40748098356335044, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6940765069207417, x10 : -0.3636787086725235, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.151326 in range [0.000000, 0.302653]...	solution exists & found.
	Iteration #003: testing norm threshold 0.047910 in range [0.000000, 0.095819]...	solution exists & found.
	Iteration #004: testing norm threshold 0.023955 in range [0.000000, 0.047911]...	solution exists & found.
	Iteration #005: testing norm threshold 0.011947 in range [0.000000, 0.023893]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004402 in range [0.000000, 0.008804]...	solution exists & found.
	Iteration #007: testing norm threshold 0.000271 in range [0.000000, 0.000541]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000136 in range [0.000000, 0.000272]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000068 in range [0.000000, 0.000137]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 2.0, x3 : 2.0, x4 : -0.7504580580622477, x5 : -0.3135361072945377, x6 : 1.0, x7 : 6.0, x8 : 0.0, x9 : -0.6719752693128472, x10 : -0.3747273409490208, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 2, x3 : 2, x4 : -0.7525406181812286, x5 : -0.30563816136974176, x6 : 1, x7 : 6, x8 : 0, x9 : -0.6786056458950043, x10 : -0.37472734094902077, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.153979 in range [0.000000, 0.307958]...	solution exists & found.
	Iteration #003: testing norm threshold 0.074005 in range [0.000000, 0.148009]...	solution exists & found.
	Iteration #004: testing norm threshold 0.037003 in range [0.000000, 0.074006]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018502 in range [0.000000, 0.037004]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008666 in range [0.000000, 0.017332]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004333 in range [0.000000, 0.008667]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002167 in range [0.000000, 0.004334]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001084 in range [0.000000, 0.002168]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000343 in range [0.000000, 0.000685]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000163 in range [0.000000, 0.000327]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000082 in range [0.000000, 0.000164]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.5047169115502104, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : -0.464223648609648, x10 : -0.3747273409490208, x11 : 1.0, x12 : 14.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.5077067735174314, x5 : -0.295641844938672, x6 : 0, x7 : 0, x8 : 6, x9 : -0.46721351057686905, x10 : -0.36068884670530243, x11 : 1, x12 : 14, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000082


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.129715 in range [0.000000, 0.259430]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062548 in range [0.000000, 0.125095]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031042 in range [0.000000, 0.062083]...	solution exists & found.
	Iteration #005: testing norm threshold 0.014796 in range [0.000000, 0.029592]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006207 in range [0.000000, 0.012413]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002468 in range [0.000000, 0.004936]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001125 in range [0.000000, 0.002250]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000360 in range [0.000000, 0.000721]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000181 in range [0.000000, 0.000361]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000091 in range [0.000000, 0.000182]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 4.0, x4 : -0.6963117037460361, x5 : -0.3940602878959337, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.6410335385698176, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 4, x4 : -0.6983942644916552, x5 : -0.40060299966949353, x6 : 0, x7 : 6, x8 : 0, x9 : -0.6146396057926196, x10 : -0.2884209097795029, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000181


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102056 in range [0.000000, 0.204113]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050597 in range [0.000000, 0.101194]...	solution exists & found.
	Iteration #004: testing norm threshold 0.024842 in range [0.000000, 0.049683]...	solution exists & found.
	Iteration #005: testing norm threshold 0.012421 in range [0.000000, 0.024843]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006194 in range [0.000000, 0.012388]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002579 in range [0.000000, 0.005159]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001290 in range [0.000000, 0.002580]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000407 in range [0.000000, 0.000813]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000194 in range [0.000000, 0.000388]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000097 in range [0.000000, 0.000195]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.21168100709505114, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.3491018452071319, x10 : -0.17585210913996274, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.21168100709505114, x5 : -0.3515614213135747, x6 : 0, x7 : 0, x8 : 3, x9 : 0.34686505589982647, x10 : -0.16256669328480045, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000064


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.169573 in range [0.000000, 0.339147]...	solution exists & found.
	Iteration #003: testing norm threshold 0.084648 in range [0.000000, 0.169296]...	solution exists & found.
	Iteration #004: testing norm threshold 0.042325 in range [0.000000, 0.084649]...	solution exists & found.
	Iteration #005: testing norm threshold 0.021034 in range [0.000000, 0.042069]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007299 in range [0.000000, 0.014597]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001985 in range [0.000000, 0.003970]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000579 in range [0.000000, 0.001158]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000206 in range [0.000000, 0.000412]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000070 in range [0.000000, 0.000139]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.4797262864811897, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.4332819178666184, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 1, x3 : 3, x4 : -0.4823567479856431, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : -0.4341702403321129, x10 : -0.2973869740962982, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000070


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146891 in range [0.000000, 0.293782]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069061 in range [0.000000, 0.138122]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034416 in range [0.000000, 0.068832]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017142 in range [0.000000, 0.034284]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008571 in range [0.000000, 0.017143]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004286 in range [0.000000, 0.008572]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001478 in range [0.000000, 0.002955]...	no solution exists.
	Iteration #009: testing norm threshold 0.002216 in range [0.001478, 0.002955]...	no solution exists.
	Iteration #010: testing norm threshold 0.002586 in range [0.002216, 0.002955]...	no solution exists.
	Iteration #011: testing norm threshold 0.002771 in range [0.002586, 0.002955]...	no solution exists.
	Iteration #012: testing norm threshold 0.002863 in range [0.002771, 0.002955]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.6281914249120637, x5 : 0.7153839781677442, x6 : 1.0, x7 : 5.0, x8 : 0.0, x9 : 0.7911265701075557, x10 : 2.4537204003353605, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 4, x4 : 0.6271549682772273, x5 : -0.4030074179172516, x6 : 1, x7 : 5, x8 : 0, x9 : 0.7908361927811002, x10 : 2.453430023008905, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.002863


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.164315 in range [0.000000, 0.328630]...	solution exists & found.
	Iteration #003: testing norm threshold 0.082158 in range [0.000000, 0.164316]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038674 in range [0.000000, 0.077349]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019338 in range [0.000000, 0.038675]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008120 in range [0.000000, 0.016240]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003817 in range [0.000000, 0.007635]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001909 in range [0.000000, 0.003818]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000955 in range [0.000000, 0.001910]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000377 in range [0.000000, 0.000754]...	no solution exists.
	Iteration #011: testing norm threshold 0.000566 in range [0.000377, 0.000754]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000472 in range [0.000377, 0.000567]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : 0.2491669446985823, x5 : -0.2509061890490075, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : 0.3270006089621107, x10 : 0.06721761862666377, x11 : 1.0, x12 : 6.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : 0.19502059370279312, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 3, x9 : 0.31805347494416636, x10 : 0.03700525798225628, x11 : 1, x12 : 6, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000566


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.155356 in range [0.000000, 0.310711]...	solution exists & found.
	Iteration #003: testing norm threshold 0.077678 in range [0.000000, 0.155357]...	solution exists & found.
	Iteration #004: testing norm threshold 0.034504 in range [0.000000, 0.069008]...	solution exists & found.
	Iteration #005: testing norm threshold 0.017253 in range [0.000000, 0.034505]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008203 in range [0.000000, 0.016406]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004102 in range [0.000000, 0.008204]...	no solution exists.
	Iteration #008: testing norm threshold 0.006153 in range [0.004102, 0.008204]...	solution exists & found.
	Iteration #009: testing norm threshold 0.005124 in range [0.004102, 0.006146]...	solution exists & found.
	Iteration #010: testing norm threshold 0.004613 in range [0.004102, 0.005125]...	solution exists & found.
	Iteration #011: testing norm threshold 0.004358 in range [0.004102, 0.004614]...	no solution exists.
	Iteration #012: testing norm threshold 0.004486 in range [0.004358, 0.004614]...	solution exists & found.
	Iteration #013: testing norm threshold 0.004423 in range [0.004358, 0.004487]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 0.0, x2 : 3.0, x3 : 1.0, x4 : 7.192395609708179, x5 : 0.1338204516021066, x6 : 0.0, x7 : 0.0, x8 : 6.0, x9 : 7.757436234538235, x10 : 1.0173992817143855, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 0, x2 : 3, x3 : 1, x4 : 7.186870999749743, x5 : 0.12039975449442863, x6 : 0, x7 : 0, x8 : 6, x9 : 7.751911624579799, x10 : 0.8958644270896912, x11 : 0, x12 : 2, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.004486


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.162636 in range [0.000000, 0.325272]...	solution exists & found.
	Iteration #003: testing norm threshold 0.080978 in range [0.000000, 0.161956]...	solution exists & found.
	Iteration #004: testing norm threshold 0.040489 in range [0.000000, 0.080979]...	solution exists & found.
	Iteration #005: testing norm threshold 0.020245 in range [0.000000, 0.040490]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010123 in range [0.000000, 0.020246]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004312 in range [0.000000, 0.008624]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002156 in range [0.000000, 0.004313]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001079 in range [0.000000, 0.002157]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000540 in range [0.000000, 0.001080]...	no solution exists.
	Iteration #011: testing norm threshold 0.000810 in range [0.000540, 0.001080]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000675 in range [0.000540, 0.000811]...	no solution exists.
	Iteration #013: testing norm threshold 0.000743 in range [0.000675, 0.000811]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.2714710775726833, x5 : 0.4917056987194221, x6 : 1.0, x7 : 0.0, x8 : 5.0, x9 : -0.1945885664203895, x10 : -0.24214385307631545, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.2595170693446833, x5 : 0.2546067237854004, x6 : 1, x7 : 0, x8 : 5, x9 : -0.20029492568269316, x10 : -0.2531924769282341, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000743


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.102218 in range [0.000000, 0.204436]...	solution exists & found.
	Iteration #003: testing norm threshold 0.050573 in range [0.000000, 0.101146]...	solution exists & found.
	Iteration #004: testing norm threshold 0.021753 in range [0.000000, 0.043506]...	solution exists & found.
	Iteration #005: testing norm threshold 0.010419 in range [0.000000, 0.020838]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004226 in range [0.000000, 0.008451]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002113 in range [0.000000, 0.004227]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001014 in range [0.000000, 0.002029]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000478 in range [0.000000, 0.000955]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000239 in range [0.000000, 0.000479]...	no solution exists.
	Iteration #011: testing norm threshold 0.000359 in range [0.000239, 0.000479]...	no solution exists.
	Iteration #012: testing norm threshold 0.000419 in range [0.000359, 0.000479]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.5338726407974013, x5 : -0.215117664337276, x6 : 0.0, x7 : 6.0, x8 : 0.0, x9 : -0.5393678518427201, x10 : -0.13165761318239427, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 3, x4 : -0.5651109218597412, x5 : -0.30906254053115845, x6 : 0, x7 : 6, x8 : 0, x9 : -0.5394342041511411, x10 : -0.13172396549081525, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000419


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.183880 in range [0.000000, 0.367760]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091941 in range [0.000000, 0.183881]...	solution exists & found.
	Iteration #004: testing norm threshold 0.045971 in range [0.000000, 0.091942]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022986 in range [0.000000, 0.045972]...	solution exists & found.
	Iteration #006: testing norm threshold 0.010808 in range [0.000000, 0.021616]...	solution exists & found.
	Iteration #007: testing norm threshold 0.005404 in range [0.000000, 0.010809]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002294 in range [0.000000, 0.004589]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000700 in range [0.000000, 0.001399]...	no solution exists.
	Iteration #010: testing norm threshold 0.001049 in range [0.000700, 0.001399]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000875 in range [0.000700, 0.001050]...	no solution exists.
	Iteration #012: testing norm threshold 0.000963 in range [0.000875, 0.001050]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 2.1817752833695203, x5 : 0.11592618924624082, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 2.4398787939861366, x10 : 0.973204785756817, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 2, x3 : 2, x4 : 2.1823484126275816, x5 : -0.2911682724952698, x6 : 0, x7 : 0, x8 : 0, x9 : 2.440451923244198, x10 : 0.9720585272406942, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001049


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.088050 in range [0.000000, 0.176100]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044026 in range [0.000000, 0.088051]...	solution exists & found.
	Iteration #004: testing norm threshold 0.020348 in range [0.000000, 0.040696]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008756 in range [0.000000, 0.017512]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004306 in range [0.000000, 0.008611]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001356 in range [0.000000, 0.002713]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000671 in range [0.000000, 0.001342]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000336 in range [0.000000, 0.000672]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000168 in range [0.000000, 0.000337]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000085 in range [0.000000, 0.000169]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.6213398285389738, x5 : -0.3940602878959337, x6 : 1.0, x7 : 2.0, x8 : 0.0, x9 : -0.5349476045937159, x10 : -0.2863383490338839, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.6218046908395415, x5 : -0.40748098492622375, x6 : 1, x7 : 2, x8 : 0, x9 : -0.5354124668942836, x10 : -0.2732998790286513, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000085


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.125326 in range [0.000000, 0.250652]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062360 in range [0.000000, 0.124720]...	solution exists & found.
	Iteration #004: testing norm threshold 0.030511 in range [0.000000, 0.061022]...	solution exists & found.
	Iteration #005: testing norm threshold 0.013161 in range [0.000000, 0.026321]...	solution exists & found.
	Iteration #006: testing norm threshold 0.006421 in range [0.000000, 0.012843]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001022 in range [0.000000, 0.002044]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000312 in range [0.000000, 0.000624]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000145 in range [0.000000, 0.000291]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000073 in range [0.000000, 0.000146]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.7114935084754662, x5 : -0.295641844938672, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.8795315150876405, x10 : -0.04326862126725737, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.7104570283291796, x5 : -0.3448510766029358, x6 : 0, x7 : 0, x8 : 0, x9 : 0.8773213922977448, x10 : -0.04275038119411404, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000145


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.075743 in range [0.000000, 0.151485]...	solution exists & found.
	Iteration #003: testing norm threshold 0.037856 in range [0.000000, 0.075712]...	solution exists & found.
	Iteration #004: testing norm threshold 0.018757 in range [0.000000, 0.037515]...	solution exists & found.
	Iteration #005: testing norm threshold 0.009032 in range [0.000000, 0.018064]...	solution exists & found.
	Iteration #006: testing norm threshold 0.004244 in range [0.000000, 0.008488]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002075 in range [0.000000, 0.004150]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000350 in range [0.000000, 0.000700]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000175 in range [0.000000, 0.000351]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000088 in range [0.000000, 0.000176]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : -0.7004768079242063, x5 : -0.295641844938672, x6 : 2.0, x7 : 6.0, x8 : 0.0, x9 : -0.6189323023247965, x10 : -0.04326862126725737, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : -0.7108895480632782, x5 : -0.2799708115945343, x6 : 2, x7 : 6, x8 : 0, x9 : -0.6299829185009003, x10 : -0.04768887192147795, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000175


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.091437 in range [0.000000, 0.182875]...	solution exists & found.
	Iteration #003: testing norm threshold 0.044793 in range [0.000000, 0.089586]...	solution exists & found.
	Iteration #004: testing norm threshold 0.017249 in range [0.000000, 0.034497]...	solution exists & found.
	Iteration #005: testing norm threshold 0.008489 in range [0.000000, 0.016978]...	solution exists & found.
	Iteration #006: testing norm threshold 0.003389 in range [0.000000, 0.006777]...	solution exists & found.
	Iteration #007: testing norm threshold 0.001639 in range [0.000000, 0.003279]...	solution exists & found.
	Iteration #008: testing norm threshold 0.000820 in range [0.000000, 0.001640]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000405 in range [0.000000, 0.000810]...	no solution exists.
	Iteration #010: testing norm threshold 0.000607 in range [0.000405, 0.000810]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000507 in range [0.000405, 0.000608]...	no solution exists.
	Iteration #012: testing norm threshold 0.000557 in range [0.000507, 0.000608]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : -0.3839288903832768, x5 : -0.3493246320062693, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3271959838905167, x10 : -0.2642411010550996, x11 : 1.0, x12 : 12.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : -0.3441890558102418, x5 : -0.3537982106208801, x6 : 0, x7 : 0, x8 : 0, x9 : -0.331532437318518, x10 : -0.3636787086725235, x11 : 1, x12 : 12, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000607


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.166295 in range [0.000000, 0.332590]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078619 in range [0.000000, 0.157238]...	solution exists & found.
	Iteration #004: testing norm threshold 0.039034 in range [0.000000, 0.078069]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018756 in range [0.000000, 0.037512]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009334 in range [0.000000, 0.018669]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004638 in range [0.000000, 0.009276]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001541 in range [0.000000, 0.003082]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000703 in range [0.000000, 0.001406]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000245 in range [0.000000, 0.000490]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000072 in range [0.000000, 0.000145]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.12985753551489912, x5 : -0.3672188943621351, x6 : 0.0, x7 : 0.0, x8 : 3.0, x9 : -0.013358429211215713, x10 : -0.2200466050975312, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.1287391468918213, x5 : -0.36945567160829074, x6 : 0, x7 : 0, x8 : 3, x9 : -0.022198923863470554, x10 : -0.22228338234368686, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000068


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.127484 in range [0.000000, 0.254968]...	solution exists & found.
	Iteration #003: testing norm threshold 0.063742 in range [0.000000, 0.127485]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031872 in range [0.000000, 0.063743]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015936 in range [0.000000, 0.031873]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007969 in range [0.000000, 0.015937]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003985 in range [0.000000, 0.007970]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001993 in range [0.000000, 0.003986]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000595 in range [0.000000, 0.001191]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000298 in range [0.000000, 0.000596]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000150 in range [0.000000, 0.000299]...	no solution exists.
	Iteration #012: testing norm threshold 0.000224 in range [0.000150, 0.000299]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 3.0, x4 : -0.16734347311843026, x5 : -0.15248774609174578, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.05314065445225386, x10 : -0.17585210913996274, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 3, x4 : -0.17775623500347137, x5 : -0.2016969621181488, x6 : 0, x7 : 0, x8 : 2, x9 : -0.053058747491376845, x10 : -0.16463966867035182, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000224


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.184593 in range [0.000000, 0.369186]...	solution exists & found.
	Iteration #003: testing norm threshold 0.091052 in range [0.000000, 0.182104]...	solution exists & found.
	Iteration #004: testing norm threshold 0.044488 in range [0.000000, 0.088976]...	solution exists & found.
	Iteration #005: testing norm threshold 0.022244 in range [0.000000, 0.044489]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009249 in range [0.000000, 0.018498]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004625 in range [0.000000, 0.009250]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002112 in range [0.000000, 0.004224]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001056 in range [0.000000, 0.002113]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000502 in range [0.000000, 0.001003]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000207 in range [0.000000, 0.000414]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000104 in range [0.000000, 0.000208]...	no solution exists.
	Iteration #013: testing norm threshold 0.000156 in range [0.000104, 0.000208]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 3.0, x4 : -0.3880939945614469, x5 : -0.3582717631842022, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.3669782091315548, x10 : -0.24214385307631545, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 3, x4 : -0.39201202653946626, x5 : -0.36721889674663544, x6 : 0, x7 : 0, x8 : 0, x9 : -0.38465920090675354, x10 : -0.24606188505433485, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000156


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.147836 in range [0.000000, 0.295671]...	solution exists & found.
	Iteration #003: testing norm threshold 0.073394 in range [0.000000, 0.146788]...	solution exists & found.
	Iteration #004: testing norm threshold 0.036067 in range [0.000000, 0.072134]...	solution exists & found.
	Iteration #005: testing norm threshold 0.018004 in range [0.000000, 0.036009]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007771 in range [0.000000, 0.015543]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002343 in range [0.000000, 0.004686]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001043 in range [0.000000, 0.002087]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000522 in range [0.000000, 0.001044]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000262 in range [0.000000, 0.000523]...	no solution exists.
	Iteration #011: testing norm threshold 0.000392 in range [0.000262, 0.000523]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000328 in range [0.000262, 0.000393]...	no solution exists.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 3.0, x3 : 2.0, x4 : -0.5880189951136129, x5 : -0.376166025540068, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : -0.6056715605777837, x10 : -0.24214385307631545, x11 : 1.0, x12 : 11.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 3, x3 : 2, x4 : -0.5880189951136129, x5 : -0.35330771262296795, x6 : 0, x7 : 0, x8 : 0, x9 : -0.5455077176774418, x10 : -0.24100813217422795, x11 : 1, x12 : 11, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000392


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.143910 in range [0.000000, 0.287820]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069712 in range [0.000000, 0.139424]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033043 in range [0.000000, 0.066086]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016522 in range [0.000000, 0.033044]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007735 in range [0.000000, 0.015470]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003868 in range [0.000000, 0.007736]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001123 in range [0.000000, 0.002246]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000562 in range [0.000000, 0.001124]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000281 in range [0.000000, 0.000563]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000141 in range [0.000000, 0.000282]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000071 in range [0.000000, 0.000142]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 4.0, x4 : -0.6629908703206752, x5 : -0.3940602878959337, x6 : 0.0, x7 : 0.0, x8 : 2.0, x9 : -0.592410818830771, x10 : -0.2863383490338839, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 4, x4 : -0.6525664589775745, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 2, x9 : -0.5924224455141309, x10 : -0.2863008577695992, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000071


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.157700 in range [0.000000, 0.315400]...	solution exists & found.
	Iteration #003: testing norm threshold 0.078214 in range [0.000000, 0.156427]...	solution exists & found.
	Iteration #004: testing norm threshold 0.038609 in range [0.000000, 0.077219]...	solution exists & found.
	Iteration #005: testing norm threshold 0.019305 in range [0.000000, 0.038610]...	solution exists & found.
	Iteration #006: testing norm threshold 0.009024 in range [0.000000, 0.018049]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004309 in range [0.000000, 0.008619]...	solution exists & found.
	Iteration #008: testing norm threshold 0.002155 in range [0.000000, 0.004310]...	solution exists & found.
	Iteration #009: testing norm threshold 0.001078 in range [0.000000, 0.002156]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000459 in range [0.000000, 0.000918]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000230 in range [0.000000, 0.000460]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000115 in range [0.000000, 0.000231]...	no solution exists.
	Iteration #013: testing norm threshold 0.000173 in range [0.000115, 0.000231]...	solution exists & found.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 1.0, x3 : 3.0, x4 : -0.5172122240847208, x5 : -0.3135361072945377, x6 : 0.0, x7 : 2.0, x8 : 3.0, x9 : -0.4730641431076565, x10 : -0.08746311722482583, x11 : 1.0, x12 : 2.0, x13 : 1.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 1, x3 : 3, x4 : -0.516979988953864, x5 : -0.30859807026944486, x6 : 0, x7 : 2, x8 : 3, x9 : -0.5017957389354706, x10 : -0.08792758748653942, x11 : 1, x12 : 2, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000173


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.140613 in range [0.000000, 0.281226]...	solution exists & found.
	Iteration #003: testing norm threshold 0.069757 in range [0.000000, 0.139514]...	solution exists & found.
	Iteration #004: testing norm threshold 0.033360 in range [0.000000, 0.066719]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016680 in range [0.000000, 0.033361]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008341 in range [0.000000, 0.016681]...	solution exists & found.
	Iteration #007: testing norm threshold 0.004140 in range [0.000000, 0.008281]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001424 in range [0.000000, 0.002849]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000713 in range [0.000000, 0.001425]...	no solution exists.
	Iteration #010: testing norm threshold 0.001069 in range [0.000713, 0.001425]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000891 in range [0.000713, 0.001070]...	no solution exists.
	Iteration #012: testing norm threshold 0.000981 in range [0.000891, 0.001070]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 0.0, x2 : 2.0, x3 : 4.0, x4 : 1.9735200744610144, x5 : 2.299026196661865, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 1.4895256354502255, x10 : 0.02302312266909531, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 1, x1 : 0, x2 : 2, x3 : 4, x4 : 1.9698704023363247, x5 : 1.9858765602111816, x6 : 0, x7 : 0, x8 : 0, x9 : 1.4674243927001953, x10 : 0.05981866605967876, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.001069


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.146792 in range [0.000000, 0.293585]...	solution exists & found.
	Iteration #003: testing norm threshold 0.071524 in range [0.000000, 0.143049]...	solution exists & found.
	Iteration #004: testing norm threshold 0.035763 in range [0.000000, 0.071525]...	solution exists & found.
	Iteration #005: testing norm threshold 0.016258 in range [0.000000, 0.032517]...	solution exists & found.
	Iteration #006: testing norm threshold 0.008130 in range [0.000000, 0.016259]...	solution exists & found.
	Iteration #007: testing norm threshold 0.003828 in range [0.000000, 0.007657]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001915 in range [0.000000, 0.003829]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000797 in range [0.000000, 0.001594]...	no solution exists.
	Iteration #010: testing norm threshold 0.001195 in range [0.000797, 0.001594]...	solution exists & found.
	Iteration #011: testing norm threshold 0.000997 in range [0.000797, 0.001196]...	solution exists & found.
	Iteration #012: testing norm threshold 0.000897 in range [0.000797, 0.000998]...	no solution exists.
	Iteration #013: testing norm threshold 0.000948 in range [0.000897, 0.000998]...	solution exists & found.


Factual sample: 		 {x0 : 0.0, x1 : 1.0, x2 : 2.0, x3 : 2.0, x4 : 0.5990356956648728, x5 : -0.3135361072945377, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.7601848393645261, x10 : -0.10956036520361004, x11 : 0.0, x12 : 0.0, x13 : 0.0, y: True}
Best counterfactual sample: 	 {x0 : 0, x1 : 1, x2 : 2, x3 : 2, x4 : 0.4969906508922577, x5 : -0.3985338509082794, x6 : 0, x7 : 0, x8 : 0, x9 : 0.7541760499632658, x10 : -0.1427062377333641, x11 : 0, x12 : 0, x13 : 0, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000948


====================================================================================================================


Model Symbols:
{'input': {'x0': {'lower_bound': 0, 'symbol': x0, 'upper_bound': 2},
           'x1': {'lower_bound': 0, 'symbol': x1, 'upper_bound': 2},
           'x10': {'lower_bound': -6750487652254187/18014398509481984,
                   'symbol': x10,
                   'upper_bound': 5685178247777755/281474976710656},
           'x11': {'lower_bound': 0, 'symbol': x11, 'upper_bound': 3},
           'x12': {'lower_bound': 0, 'symbol': x12, 'upper_bound': 36},
           'x13': {'lower_bound': 0, 'symbol': x13, 'upper_bound': 2},
           'x2': {'lower_bound': 1, 'symbol': x2, 'upper_bound': 4},
           'x3': {'lower_bound': 1, 'symbol': x3, 'upper_bound': 4},
           'x4': {'lower_bound': -6984620800789845/9007199254740992,
                  'symbol': x4,
                  'upper_bound': 6607075790050369/562949953421312},
           'x5': {'lower_bound': -3871733904571063/9007199254740992,
                  'symbol': x5,
                  'upper_bound': 7756543308401473/281474976710656},
           'x6': {'lower_bound': 0, 'symbol': x6, 'upper_bound': 6},
           'x7': {'lower_bound': 0, 'symbol': x7, 'upper_bound': 6},
           'x8': {'lower_bound': 0, 'symbol': x8, 'upper_bound': 6},
           'x9': {'lower_bound': -6291499431321067/9007199254740992,
                  'symbol': x9,
                  'upper_bound': 866881805661715/70368744177664}},
 'output': {'y': {'symbol': y}}}
Constructing initial formulas: model, counterfactual, distance, plausibility, diversity		done.
Solving (not searching) for closest counterfactual using various distance thresholds...
	Iteration #001: testing norm threshold 0.500000 in range [0.000000, 1.000000]...	solution exists & found.
	Iteration #002: testing norm threshold 0.124578 in range [0.000000, 0.249155]...	solution exists & found.
	Iteration #003: testing norm threshold 0.062179 in range [0.000000, 0.124358]...	solution exists & found.
	Iteration #004: testing norm threshold 0.031090 in range [0.000000, 0.062180]...	solution exists & found.
	Iteration #005: testing norm threshold 0.015460 in range [0.000000, 0.030920]...	solution exists & found.
	Iteration #006: testing norm threshold 0.007559 in range [0.000000, 0.015117]...	solution exists & found.
	Iteration #007: testing norm threshold 0.002820 in range [0.000000, 0.005639]...	solution exists & found.
	Iteration #008: testing norm threshold 0.001154 in range [0.000000, 0.002307]...	solution exists & found.
	Iteration #009: testing norm threshold 0.000459 in range [0.000000, 0.000919]...	solution exists & found.
	Iteration #010: testing norm threshold 0.000219 in range [0.000000, 0.000439]...	no solution exists.
	Iteration #011: testing norm threshold 0.000329 in range [0.000219, 0.000439]...	no solution exists.
	Iteration #012: testing norm threshold 0.000384 in range [0.000329, 0.000439]...	no solution exists.


Factual sample: 		 {x0 : 1.0, x1 : 1.0, x2 : 3.0, x3 : 4.0, x4 : 0.4865778828542794, x5 : -0.3224832384724706, x6 : 0.0, x7 : 0.0, x8 : 0.0, x9 : 0.6408381636414117, x10 : -0.3747273409490208, x11 : 1.0, x12 : 14.0, x13 : 1.0, y: False}
Best counterfactual sample: 	 {x0 : 1, x1 : 1, x2 : 3, x3 : 4, x4 : 0.48657787413843195, x5 : -0.16590843968226582, x6 : 0, x7 : 0, x8 : 0, x9 : 0.6408381549255642, x10 : -0.3636787086725235, x11 : 1, x12 : 14, x13 : 1, y: True} (verified)

Minimum counterfactual distance (by solving the formula):	 0.000438
